<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (86,576 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (40,691 samples, 47.00%)</title><rect x="10.0" y="803.0" width="554.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (40,691 samples, 47.00%)</title><rect x="10.0" y="787.0" width="554.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (40,691 samples, 47.00%)</title><rect x="10.0" y="771.0" width="554.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (24,928 samples, 28.79%)</title><rect x="10.0" y="755.0" width="339.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$AsyncSu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,008 samples, 12.71%)</title><rect x="10.0" y="739.0" width="150.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,263 samples, 9.54%)</title><rect x="10.0" y="723.0" width="112.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/conc..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (57 samples, 0.07%)</title><rect x="10.0" y="707.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.apply (8,206 samples, 9.48%)</title><rect x="10.8" y="707.0" width="111.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.8" y="718.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (8,206 samples, 9.48%)</title><rect x="10.8" y="691.0" width="111.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.8" y="702.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (8,206 samples, 9.48%)</title><rect x="10.8" y="675.0" width="111.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.8" y="686.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.09%)</title><rect x="10.8" y="659.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.09%)</title><rect x="10.8" y="643.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.get$Lambda (47 samples, 0.05%)</title><rect x="10.8" y="627.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$234 (47 samples, 0.05%)</title><rect x="10.8" y="611.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="13.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.get$Lambda (31 samples, 0.04%)</title><rect x="11.4" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (31 samples, 0.04%)</title><rect x="11.4" y="611.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="14.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (116 samples, 0.13%)</title><rect x="11.8" y="659.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (116 samples, 0.13%)</title><rect x="11.8" y="643.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (61 samples, 0.07%)</title><rect x="11.8" y="627.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.06%)</title><rect x="12.7" y="627.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.06%)</title><rect x="12.7" y="611.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.7" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.06%)</title><rect x="12.7" y="595.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="15.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (242 samples, 0.28%)</title><rect x="13.4" y="659.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (242 samples, 0.28%)</title><rect x="13.4" y="643.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (128 samples, 0.15%)</title><rect x="13.4" y="627.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="16.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.13%)</title><rect x="15.2" y="627.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (114 samples, 0.13%)</title><rect x="15.2" y="611.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.13%)</title><rect x="15.2" y="595.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="18.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,484 samples, 8.64%)</title><rect x="16.7" y="659.0" width="102.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.7" y="670.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,484 samples, 8.64%)</title><rect x="16.7" y="643.0" width="102.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.7" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,484 samples, 8.64%)</title><rect x="16.7" y="627.0" width="102.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.7" y="638.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (111 samples, 0.13%)</title><rect x="16.7" y="611.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.7" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (111 samples, 0.13%)</title><rect x="16.7" y="595.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.get$Lambda (35 samples, 0.04%)</title><rect x="16.7" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (35 samples, 0.04%)</title><rect x="16.7" y="563.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="19.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.get$Lambda (40 samples, 0.05%)</title><rect x="17.2" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$138 (40 samples, 0.05%)</title><rect x="17.2" y="563.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="20.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.get$Lambda (36 samples, 0.04%)</title><rect x="17.7" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.7" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$188 (36 samples, 0.04%)</title><rect x="17.7" y="563.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="20.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,304 samples, 6.13%)</title><rect x="18.2" y="611.0" width="72.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.2" y="622.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,304 samples, 6.13%)</title><rect x="18.2" y="595.0" width="72.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.2" y="606.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,248 samples, 6.06%)</title><rect x="18.2" y="579.0" width="71.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.2" y="590.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.apply (5,248 samples, 6.06%)</title><rect x="18.2" y="563.0" width="71.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.2" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,248 samples, 6.06%)</title><rect x="18.2" y="547.0" width="71.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.2" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,248 samples, 6.06%)</title><rect x="18.2" y="531.0" width="71.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.2" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (5,248 samples, 6.06%)</title><rect x="18.2" y="515.0" width="71.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.2" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,248 samples, 6.06%)</title><rect x="18.2" y="499.0" width="71.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.2" y="510.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.05%)</title><rect x="18.2" y="483.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.05%)</title><rect x="18.2" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.get$Lambda (40 samples, 0.05%)</title><rect x="18.2" y="451.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="21.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$232 (39 samples, 0.05%)</title><rect x="18.2" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="21.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (129 samples, 0.15%)</title><rect x="18.8" y="483.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (129 samples, 0.15%)</title><rect x="18.8" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (71 samples, 0.08%)</title><rect x="18.8" y="451.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.06%)</title><rect x="19.9" y="451.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.06%)</title><rect x="19.9" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.06%)</title><rect x="19.9" y="419.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="22.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (119 samples, 0.14%)</title><rect x="20.5" y="483.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (119 samples, 0.14%)</title><rect x="20.5" y="467.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (65 samples, 0.08%)</title><rect x="20.5" y="451.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="23.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.06%)</title><rect x="21.4" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.06%)</title><rect x="21.4" y="435.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.06%)</title><rect x="21.4" y="419.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="24.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,960 samples, 5.73%)</title><rect x="22.2" y="483.0" width="67.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.2" y="494.0">jdk/int..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.05%)</title><rect x="22.2" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.05%)</title><rect x="22.2" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.get$Lambda (20 samples, 0.02%)</title><rect x="22.2" y="435.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$227 (20 samples, 0.02%)</title><rect x="22.2" y="419.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="25.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$230/1829927734.get$Lambda (25 samples, 0.03%)</title><rect x="22.4" y="435.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$230 (25 samples, 0.03%)</title><rect x="22.4" y="419.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="25.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,075 samples, 4.71%)</title><rect x="22.8" y="467.0" width="55.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.8" y="478.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,075 samples, 4.71%)</title><rect x="22.8" y="451.0" width="55.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.8" y="462.0">java/..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (54 samples, 0.06%)</title><rect x="22.8" y="435.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="25.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.apply (3,919 samples, 4.53%)</title><rect x="23.5" y="435.0" width="53.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.5" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,919 samples, 4.53%)</title><rect x="23.5" y="419.0" width="53.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.5" y="430.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.03%)</title><rect x="23.5" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.03%)</title><rect x="23.5" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$245/277218986.get$Lambda (25 samples, 0.03%)</title><rect x="23.5" y="371.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$245 (25 samples, 0.03%)</title><rect x="23.5" y="355.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (124 samples, 0.14%)</title><rect x="23.8" y="403.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (124 samples, 0.14%)</title><rect x="23.8" y="387.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.8" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (72 samples, 0.08%)</title><rect x="23.8" y="371.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="26.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.06%)</title><rect x="24.8" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.06%)</title><rect x="24.8" y="355.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.06%)</title><rect x="24.8" y="339.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.06%)</title><rect x="25.5" y="403.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="28.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (77 samples, 0.09%)</title><rect x="26.3" y="403.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (37 samples, 0.04%)</title><rect x="26.3" y="387.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="29.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (40 samples, 0.05%)</title><rect x="26.8" y="387.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="29.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (40 samples, 0.05%)</title><rect x="26.8" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="29.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (40 samples, 0.05%)</title><rect x="26.8" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (40 samples, 0.05%)</title><rect x="26.8" y="339.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="29.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (40 samples, 0.05%)</title><rect x="26.8" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.8" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (39 samples, 0.05%)</title><rect x="26.8" y="307.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="29.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (118 samples, 0.14%)</title><rect x="27.4" y="403.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (118 samples, 0.14%)</title><rect x="27.4" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="30.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (36 samples, 0.04%)</title><rect x="27.4" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (36 samples, 0.04%)</title><rect x="27.4" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (36 samples, 0.04%)</title><rect x="27.4" y="339.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (36 samples, 0.04%)</title><rect x="27.4" y="323.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="30.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (82 samples, 0.09%)</title><rect x="27.8" y="371.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (82 samples, 0.09%)</title><rect x="27.8" y="355.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="30.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (55 samples, 0.06%)</title><rect x="27.8" y="339.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="30.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (27 samples, 0.03%)</title><rect x="28.6" y="339.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="31.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (27 samples, 0.03%)</title><rect x="28.6" y="323.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="31.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,519 samples, 4.06%)</title><rect x="29.0" y="403.0" width="47.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.0" y="414.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (35 samples, 0.04%)</title><rect x="29.0" y="387.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="32.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (73 samples, 0.08%)</title><rect x="29.4" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="32.4" y="398.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.05%)</title><rect x="29.4" y="371.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="32.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.03%)</title><rect x="30.0" y="371.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="33.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (220 samples, 0.25%)</title><rect x="30.4" y="387.0" width="3.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.4" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (220 samples, 0.25%)</title><rect x="30.4" y="371.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="33.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (220 samples, 0.25%)</title><rect x="30.4" y="355.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="33.4" y="366.0"></text>
</g>
<g>
<title>byte[] (219 samples, 0.25%)</title><rect x="30.4" y="339.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="33.4" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (123 samples, 0.14%)</title><rect x="33.4" y="387.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.4" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (123 samples, 0.14%)</title><rect x="33.4" y="371.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="36.4" y="382.0"></text>
</g>
<g>
<title>byte[] (123 samples, 0.14%)</title><rect x="33.4" y="355.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="36.4" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (258 samples, 0.30%)</title><rect x="35.1" y="387.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (258 samples, 0.30%)</title><rect x="35.1" y="371.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="38.1" y="382.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.05%)</title><rect x="35.1" y="355.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="38.1" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (218 samples, 0.25%)</title><rect x="35.7" y="355.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.7" y="366.0"></text>
</g>
<g>
<title>byte[] (217 samples, 0.25%)</title><rect x="35.7" y="339.0" width="2.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="38.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 0.07%)</title><rect x="38.6" y="387.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (60 samples, 0.07%)</title><rect x="38.6" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.6" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (60 samples, 0.07%)</title><rect x="38.6" y="355.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="41.6" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (34 samples, 0.04%)</title><rect x="39.4" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="42.4" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (34 samples, 0.04%)</title><rect x="39.4" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="42.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,181 samples, 2.52%)</title><rect x="39.9" y="387.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.9" y="398.0">jd..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (49 samples, 0.06%)</title><rect x="39.9" y="371.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.06%)</title><rect x="39.9" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.06%)</title><rect x="39.9" y="339.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.9" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$249/740179033.get$Lambda (49 samples, 0.06%)</title><rect x="39.9" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.9" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$249 (49 samples, 0.06%)</title><rect x="39.9" y="307.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="42.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (112 samples, 0.13%)</title><rect x="40.6" y="371.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.6" y="382.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (112 samples, 0.13%)</title><rect x="40.6" y="355.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.6" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (109 samples, 0.13%)</title><rect x="40.6" y="339.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="43.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,067 samples, 1.23%)</title><rect x="42.1" y="371.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.1" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (634 samples, 0.73%)</title><rect x="42.1" y="355.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.1" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (634 samples, 0.73%)</title><rect x="42.1" y="339.0" width="8.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.1" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (634 samples, 0.73%)</title><rect x="42.1" y="323.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.1" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (634 samples, 0.73%)</title><rect x="42.1" y="307.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.1" y="318.0"></text>
</g>
<g>
<title>byte[] (627 samples, 0.72%)</title><rect x="42.1" y="291.0" width="8.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="45.1" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (110 samples, 0.13%)</title><rect x="50.7" y="355.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.7" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (110 samples, 0.13%)</title><rect x="50.7" y="339.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (110 samples, 0.13%)</title><rect x="50.7" y="323.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.7" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (110 samples, 0.13%)</title><rect x="50.7" y="307.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="53.7" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (95 samples, 0.11%)</title><rect x="52.2" y="355.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.2" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (50 samples, 0.06%)</title><rect x="52.2" y="339.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="55.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (45 samples, 0.05%)</title><rect x="52.9" y="339.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.9" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (45 samples, 0.05%)</title><rect x="52.9" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="55.9" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$249/740179033.test (228 samples, 0.26%)</title><rect x="53.5" y="355.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.5" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (228 samples, 0.26%)</title><rect x="53.5" y="339.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1127224355.test (228 samples, 0.26%)</title><rect x="53.5" y="323.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (228 samples, 0.26%)</title><rect x="53.5" y="307.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="56.5" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/416153648.test (228 samples, 0.26%)</title><rect x="53.5" y="291.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="56.5" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (228 samples, 0.26%)</title><rect x="53.5" y="275.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/815674463.test (228 samples, 0.26%)</title><rect x="53.5" y="259.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (228 samples, 0.26%)</title><rect x="53.5" y="243.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (228 samples, 0.26%)</title><rect x="53.5" y="227.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.5" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (228 samples, 0.26%)</title><rect x="53.5" y="211.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.5" y="222.0"></text>
</g>
<g>
<title>java.lang.String (107 samples, 0.12%)</title><rect x="53.5" y="195.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="56.5" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (119 samples, 0.14%)</title><rect x="55.0" y="195.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="58.0" y="206.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.14%)</title><rect x="55.0" y="179.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="58.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (953 samples, 1.10%)</title><rect x="56.6" y="371.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.6" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (953 samples, 1.10%)</title><rect x="56.6" y="355.0" width="13.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (953 samples, 1.10%)</title><rect x="56.6" y="339.0" width="13.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.04%)</title><rect x="56.9" y="323.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="59.9" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (77 samples, 0.09%)</title><rect x="57.4" y="323.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="60.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.03%)</title><rect x="58.4" y="323.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="61.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="58.8" y="323.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="58.8" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="61.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (43 samples, 0.05%)</title><rect x="58.8" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.8" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (43 samples, 0.05%)</title><rect x="58.8" y="275.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="61.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (48 samples, 0.06%)</title><rect x="59.4" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (47 samples, 0.05%)</title><rect x="59.4" y="307.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.4" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (634 samples, 0.73%)</title><rect x="60.0" y="323.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (634 samples, 0.73%)</title><rect x="60.0" y="307.0" width="8.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="63.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (634 samples, 0.73%)</title><rect x="60.0" y="291.0" width="8.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.14%)</title><rect x="60.0" y="275.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.14%)</title><rect x="60.0" y="259.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (123 samples, 0.14%)</title><rect x="60.0" y="243.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.0" y="254.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (122 samples, 0.14%)</title><rect x="60.0" y="227.0" width="1.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="63.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (88 samples, 0.10%)</title><rect x="61.7" y="275.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (88 samples, 0.10%)</title><rect x="61.7" y="259.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.7" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (88 samples, 0.10%)</title><rect x="61.7" y="243.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.7" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (88 samples, 0.10%)</title><rect x="61.7" y="227.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.7" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (88 samples, 0.10%)</title><rect x="61.7" y="211.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (88 samples, 0.10%)</title><rect x="61.7" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.7" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (88 samples, 0.10%)</title><rect x="61.7" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.7" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (88 samples, 0.10%)</title><rect x="61.7" y="163.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.7" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (88 samples, 0.10%)</title><rect x="61.7" y="147.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="64.7" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (226 samples, 0.26%)</title><rect x="62.9" y="275.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.9" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (226 samples, 0.26%)</title><rect x="62.9" y="259.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="65.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (108 samples, 0.12%)</title><rect x="62.9" y="243.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="65.9" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (108 samples, 0.12%)</title><rect x="62.9" y="227.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="65.9" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.12%)</title><rect x="62.9" y="211.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="65.9" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (118 samples, 0.14%)</title><rect x="64.4" y="243.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.4" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (117 samples, 0.14%)</title><rect x="64.4" y="227.0" width="1.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="67.4" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (197 samples, 0.23%)</title><rect x="66.0" y="275.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.0" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (196 samples, 0.23%)</title><rect x="66.0" y="259.0" width="2.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="69.0" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (72 samples, 0.08%)</title><rect x="68.6" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.6" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (72 samples, 0.08%)</title><rect x="68.6" y="307.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="71.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (154 samples, 0.18%)</title><rect x="69.6" y="387.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (72 samples, 0.08%)</title><rect x="69.6" y="371.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.6" y="382.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.04%)</title><rect x="69.6" y="355.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="72.6" y="366.0"></text>
</g>
<g>
<title>java.lang.String (36 samples, 0.04%)</title><rect x="70.1" y="355.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="73.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.09%)</title><rect x="70.6" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (82 samples, 0.09%)</title><rect x="70.6" y="355.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (82 samples, 0.09%)</title><rect x="70.6" y="339.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.6" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.09%)</title><rect x="70.6" y="323.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.6" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.05%)</title><rect x="70.6" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.6" y="318.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.05%)</title><rect x="70.6" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="73.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (42 samples, 0.05%)</title><rect x="71.2" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (42 samples, 0.05%)</title><rect x="71.2" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.2" y="302.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.05%)</title><rect x="71.2" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="74.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (104 samples, 0.12%)</title><rect x="71.7" y="387.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (104 samples, 0.12%)</title><rect x="71.7" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (104 samples, 0.12%)</title><rect x="71.7" y="355.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.7" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (104 samples, 0.12%)</title><rect x="71.7" y="339.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (104 samples, 0.12%)</title><rect x="71.7" y="323.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (104 samples, 0.12%)</title><rect x="71.7" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (41 samples, 0.05%)</title><rect x="71.7" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.7" y="302.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.05%)</title><rect x="71.7" y="275.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="74.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (63 samples, 0.07%)</title><rect x="72.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (63 samples, 0.07%)</title><rect x="72.3" y="275.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.3" y="286.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.07%)</title><rect x="72.3" y="259.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="75.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (277 samples, 0.32%)</title><rect x="73.1" y="387.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.1" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (76 samples, 0.09%)</title><rect x="73.1" y="371.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="76.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (72 samples, 0.08%)</title><rect x="74.2" y="371.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (72 samples, 0.08%)</title><rect x="74.2" y="355.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="77.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (129 samples, 0.15%)</title><rect x="75.2" y="371.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.2" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (129 samples, 0.15%)</title><rect x="75.2" y="355.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="78.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.12%)</title><rect x="76.9" y="435.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (102 samples, 0.12%)</title><rect x="76.9" y="419.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (102 samples, 0.12%)</title><rect x="76.9" y="403.0" width="1.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="79.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (127 samples, 0.15%)</title><rect x="78.3" y="467.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="81.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.07%)</title><rect x="80.0" y="467.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (656 samples, 0.76%)</title><rect x="80.8" y="467.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.06%)</title><rect x="80.8" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.8" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.06%)</title><rect x="80.8" y="435.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$196/1429407653.get$Lambda (39 samples, 0.05%)</title><rect x="80.8" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$196 (39 samples, 0.05%)</title><rect x="80.8" y="403.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="83.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (77 samples, 0.09%)</title><rect x="81.6" y="451.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="84.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (58 samples, 0.07%)</title><rect x="82.6" y="451.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="85.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (64 samples, 0.07%)</title><rect x="83.4" y="451.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="86.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (188 samples, 0.22%)</title><rect x="84.3" y="451.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (188 samples, 0.22%)</title><rect x="84.3" y="435.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (188 samples, 0.22%)</title><rect x="84.3" y="419.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (188 samples, 0.22%)</title><rect x="84.3" y="403.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (188 samples, 0.22%)</title><rect x="84.3" y="387.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (188 samples, 0.22%)</title><rect x="84.3" y="371.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (188 samples, 0.22%)</title><rect x="84.3" y="355.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="87.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (188 samples, 0.22%)</title><rect x="84.3" y="339.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (188 samples, 0.22%)</title><rect x="84.3" y="323.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.07%)</title><rect x="84.3" y="307.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.07%)</title><rect x="84.3" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/2120086541.get$Lambda (23 samples, 0.03%)</title><rect x="84.3" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (23 samples, 0.03%)</title><rect x="84.3" y="259.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="87.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$208/1751389064.get$Lambda (34 samples, 0.04%)</title><rect x="84.6" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$208 (34 samples, 0.04%)</title><rect x="84.6" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="87.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (52 samples, 0.06%)</title><rect x="85.0" y="307.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="88.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (79 samples, 0.09%)</title><rect x="85.8" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (79 samples, 0.09%)</title><rect x="85.8" y="291.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (33 samples, 0.04%)</title><rect x="85.8" y="275.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="88.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (45 samples, 0.05%)</title><rect x="86.2" y="275.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.2" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (45 samples, 0.05%)</title><rect x="86.2" y="259.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="89.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (163 samples, 0.19%)</title><rect x="86.8" y="451.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.8" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (39 samples, 0.05%)</title><rect x="86.8" y="435.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="89.8" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (78 samples, 0.09%)</title><rect x="87.4" y="435.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="90.4" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="88.4" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.4" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.05%)</title><rect x="88.4" y="419.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.4" y="430.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="88.4" y="403.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="91.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (52 samples, 0.06%)</title><rect x="89.1" y="451.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.06%)</title><rect x="89.1" y="435.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="92.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.06%)</title><rect x="89.8" y="579.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.06%)</title><rect x="89.8" y="563.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.06%)</title><rect x="89.8" y="547.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="92.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (93 samples, 0.11%)</title><rect x="90.5" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="93.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (93 samples, 0.11%)</title><rect x="90.5" y="595.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (43 samples, 0.05%)</title><rect x="90.5" y="579.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="93.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.06%)</title><rect x="91.1" y="579.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.06%)</title><rect x="91.1" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.06%)</title><rect x="91.1" y="547.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="94.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,976 samples, 2.28%)</title><rect x="91.8" y="611.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="94.8" y="622.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.07%)</title><rect x="91.8" y="595.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.07%)</title><rect x="91.8" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/1069587135.get$Lambda (46 samples, 0.05%)</title><rect x="91.8" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$180 (46 samples, 0.05%)</title><rect x="91.8" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="94.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (97 samples, 0.11%)</title><rect x="92.6" y="595.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (97 samples, 0.11%)</title><rect x="92.6" y="579.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/245806305.apply (51 samples, 0.06%)</title><rect x="92.6" y="563.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (51 samples, 0.06%)</title><rect x="92.6" y="547.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (51 samples, 0.06%)</title><rect x="92.6" y="531.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="95.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.06%)</title><rect x="92.6" y="515.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="95.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="93.3" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="96.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="93.3" y="547.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="93.3" y="531.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="96.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (57 samples, 0.07%)</title><rect x="93.9" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (57 samples, 0.07%)</title><rect x="93.9" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.07%)</title><rect x="93.9" y="563.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.07%)</title><rect x="93.9" y="547.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.07%)</title><rect x="93.9" y="531.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="96.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,762 samples, 2.04%)</title><rect x="94.7" y="595.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="97.7" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,762 samples, 2.04%)</title><rect x="94.7" y="579.0" width="24.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.7" y="590.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (123 samples, 0.14%)</title><rect x="94.7" y="563.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="97.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,589 samples, 1.84%)</title><rect x="96.4" y="563.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="574.0">j..</text>
</g>
<g>
<title>java.lang.Object (36 samples, 0.04%)</title><rect x="96.4" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="99.4" y="558.0"></text>
</g>
<g>
<title>java.util.LinkedList (48 samples, 0.06%)</title><rect x="96.9" y="547.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="99.9" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (35 samples, 0.04%)</title><rect x="97.5" y="547.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="100.5" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (78 samples, 0.09%)</title><rect x="98.0" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (78 samples, 0.09%)</title><rect x="98.0" y="531.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="101.0" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (78 samples, 0.09%)</title><rect x="98.0" y="515.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="101.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (43 samples, 0.05%)</title><rect x="99.1" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (43 samples, 0.05%)</title><rect x="99.1" y="531.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="102.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (109 samples, 0.13%)</title><rect x="99.7" y="547.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="102.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (70 samples, 0.08%)</title><rect x="101.2" y="547.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="104.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (84 samples, 0.10%)</title><rect x="102.1" y="547.0" width="1.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="105.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.12%)</title><rect x="103.3" y="547.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="106.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (497 samples, 0.57%)</title><rect x="104.6" y="547.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.6" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (48 samples, 0.06%)</title><rect x="104.6" y="531.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="107.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (25 samples, 0.03%)</title><rect x="105.3" y="531.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="108.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (51 samples, 0.06%)</title><rect x="105.7" y="531.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="108.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (24 samples, 0.03%)</title><rect x="106.3" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="109.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="106.7" y="531.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="109.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="106.7" y="515.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.get$Lambda (27 samples, 0.03%)</title><rect x="106.7" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$176 (26 samples, 0.03%)</title><rect x="106.7" y="483.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="109.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (37 samples, 0.04%)</title><rect x="107.0" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (36 samples, 0.04%)</title><rect x="107.0" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="110.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (39 samples, 0.05%)</title><rect x="107.5" y="531.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="110.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.07%)</title><rect x="108.1" y="531.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="111.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (186 samples, 0.21%)</title><rect x="108.9" y="531.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (41 samples, 0.05%)</title><rect x="108.9" y="515.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="111.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (49 samples, 0.06%)</title><rect x="109.4" y="515.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="112.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (25 samples, 0.03%)</title><rect x="110.1" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.1" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (25 samples, 0.03%)</title><rect x="110.1" y="499.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="113.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (70 samples, 0.08%)</title><rect x="110.5" y="515.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (23 samples, 0.03%)</title><rect x="110.5" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="113.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (25 samples, 0.03%)</title><rect x="110.8" y="499.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="113.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (21 samples, 0.02%)</title><rect x="111.1" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="114.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (309 samples, 0.36%)</title><rect x="111.4" y="547.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (25 samples, 0.03%)</title><rect x="111.4" y="531.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="114.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (19 samples, 0.02%)</title><rect x="111.8" y="531.0" width="0.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="114.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (32 samples, 0.04%)</title><rect x="112.0" y="531.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="115.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (50 samples, 0.06%)</title><rect x="112.5" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (50 samples, 0.06%)</title><rect x="112.5" y="515.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="115.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (182 samples, 0.21%)</title><rect x="113.1" y="531.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (35 samples, 0.04%)</title><rect x="113.1" y="515.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="116.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (49 samples, 0.06%)</title><rect x="113.6" y="515.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="116.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (24 samples, 0.03%)</title><rect x="114.3" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (24 samples, 0.03%)</title><rect x="114.3" y="499.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="117.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (74 samples, 0.09%)</title><rect x="114.6" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (31 samples, 0.04%)</title><rect x="114.6" y="499.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="117.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (23 samples, 0.03%)</title><rect x="115.0" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="118.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (20 samples, 0.02%)</title><rect x="115.4" y="499.0" width="0.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="118.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (42 samples, 0.05%)</title><rect x="115.6" y="547.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (42 samples, 0.05%)</title><rect x="115.6" y="531.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (42 samples, 0.05%)</title><rect x="115.6" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (42 samples, 0.05%)</title><rect x="115.6" y="499.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="118.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (42 samples, 0.05%)</title><rect x="115.6" y="483.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="118.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (42 samples, 0.05%)</title><rect x="115.6" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.05%)</title><rect x="115.6" y="451.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="118.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (135 samples, 0.16%)</title><rect x="116.2" y="547.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (32 samples, 0.04%)</title><rect x="116.2" y="531.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="119.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.04%)</title><rect x="116.2" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="119.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/1042709263.get$Lambda (32 samples, 0.04%)</title><rect x="116.2" y="499.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="119.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$142 (32 samples, 0.04%)</title><rect x="116.2" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="119.2" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (103 samples, 0.12%)</title><rect x="116.6" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/1042709263.run (103 samples, 0.12%)</title><rect x="116.6" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="119.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (103 samples, 0.12%)</title><rect x="116.6" y="499.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="119.6" y="510.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (29 samples, 0.03%)</title><rect x="116.6" y="483.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="119.6" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (74 samples, 0.09%)</title><rect x="117.0" y="483.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.0" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (38 samples, 0.04%)</title><rect x="117.0" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="120.0" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (36 samples, 0.04%)</title><rect x="117.6" y="467.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.6" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (36 samples, 0.04%)</title><rect x="117.6" y="451.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (36 samples, 0.04%)</title><rect x="117.6" y="435.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.6" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (36 samples, 0.04%)</title><rect x="117.6" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="120.6" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (36 samples, 0.04%)</title><rect x="117.6" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="120.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (50 samples, 0.06%)</title><rect x="118.0" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.06%)</title><rect x="118.0" y="547.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="121.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (67 samples, 0.08%)</title><rect x="118.7" y="659.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.7" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (67 samples, 0.08%)</title><rect x="118.7" y="643.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.7" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (67 samples, 0.08%)</title><rect x="118.7" y="627.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.7" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (67 samples, 0.08%)</title><rect x="118.7" y="611.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="121.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (219 samples, 0.25%)</title><rect x="119.6" y="659.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.6" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (136 samples, 0.16%)</title><rect x="119.6" y="643.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="122.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (83 samples, 0.10%)</title><rect x="121.5" y="643.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (83 samples, 0.10%)</title><rect x="121.5" y="627.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.5" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (37 samples, 0.04%)</title><rect x="121.5" y="611.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.5" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (37 samples, 0.04%)</title><rect x="121.5" y="595.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (37 samples, 0.04%)</title><rect x="121.5" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (37 samples, 0.04%)</title><rect x="121.5" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="124.5" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (37 samples, 0.04%)</title><rect x="121.5" y="547.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="124.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="122.0" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.0" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (46 samples, 0.05%)</title><rect x="122.0" y="595.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="122.0" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="125.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="122.0" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.0" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (46 samples, 0.05%)</title><rect x="122.0" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (46 samples, 0.05%)</title><rect x="122.0" y="531.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.0" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (46 samples, 0.05%)</title><rect x="122.0" y="515.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.0" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (46 samples, 0.05%)</title><rect x="122.0" y="499.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.0" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (46 samples, 0.05%)</title><rect x="122.0" y="483.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="125.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,745 samples, 3.17%)</title><rect x="122.6" y="723.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.6" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,745 samples, 3.17%)</title><rect x="122.6" y="707.0" width="37.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="125.6" y="718.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (2,556 samples, 2.95%)</title><rect x="122.6" y="691.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="125.6" y="702.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (2,556 samples, 2.95%)</title><rect x="122.6" y="675.0" width="34.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.6" y="686.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,556 samples, 2.95%)</title><rect x="122.6" y="659.0" width="34.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.6" y="670.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,556 samples, 2.95%)</title><rect x="122.6" y="643.0" width="34.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.6" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,884 samples, 2.18%)</title><rect x="122.6" y="627.0" width="25.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.6" y="638.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,884 samples, 2.18%)</title><rect x="122.6" y="611.0" width="25.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.6" y="622.0">o..</text>
</g>
<g>
<title>byte[] (1,083 samples, 1.25%)</title><rect x="122.6" y="595.0" width="14.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="125.6" y="606.0"></text>
</g>
<g>
<title>byte[] (801 samples, 0.93%)</title><rect x="137.4" y="595.0" width="10.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="140.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (672 samples, 0.78%)</title><rect x="148.3" y="627.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.3" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (669 samples, 0.77%)</title><rect x="148.3" y="611.0" width="9.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="151.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (189 samples, 0.22%)</title><rect x="157.5" y="691.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="160.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (189 samples, 0.22%)</title><rect x="157.5" y="675.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="160.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (189 samples, 0.22%)</title><rect x="157.5" y="659.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (189 samples, 0.22%)</title><rect x="157.5" y="643.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.5" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (189 samples, 0.22%)</title><rect x="157.5" y="627.0" width="2.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="160.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$111/1623904019.get (13,920 samples, 16.08%)</title><rect x="160.0" y="739.0" width="189.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.0" y="750.0">ru/mail/polis/service/dar..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$put$1 (13,920 samples, 16.08%)</title><rect x="160.0" y="723.0" width="189.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.0" y="734.0">ru/mail/polis/service/dar..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,651 samples, 1.91%)</title><rect x="160.0" y="707.0" width="22.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="163.0" y="718.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,651 samples, 1.91%)</title><rect x="160.0" y="691.0" width="22.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.0" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,651 samples, 1.91%)</title><rect x="160.0" y="675.0" width="22.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="163.0" y="686.0">j..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,651 samples, 1.91%)</title><rect x="160.0" y="659.0" width="22.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.0" y="670.0">j..</text>
</g>
<g>
<title>byte[] (1,649 samples, 1.90%)</title><rect x="160.0" y="643.0" width="22.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="163.0" y="654.0">b..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,352 samples, 2.72%)</title><rect x="182.5" y="707.0" width="32.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.5" y="718.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,352 samples, 2.72%)</title><rect x="182.5" y="691.0" width="32.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.5" y="702.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,346 samples, 2.71%)</title><rect x="182.5" y="675.0" width="32.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="185.5" y="686.0">ja..</text>
</g>
<g>
<title>one.nio.http.Response (770 samples, 0.89%)</title><rect x="214.6" y="707.0" width="10.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="217.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,548 samples, 2.94%)</title><rect x="225.2" y="707.0" width="34.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.2" y="718.0">on..</text>
</g>
<g>
<title>byte[] (1,009 samples, 1.17%)</title><rect x="225.2" y="691.0" width="13.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="228.2" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (895 samples, 1.03%)</title><rect x="239.0" y="691.0" width="12.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="242.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (634 samples, 0.73%)</title><rect x="251.2" y="691.0" width="8.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="254.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (6,594 samples, 7.62%)</title><rect x="259.9" y="707.0" width="89.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.9" y="718.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.&lt;init&gt; (966 samples, 1.12%)</title><rect x="259.9" y="691.0" width="13.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.9" y="702.0"></text>
</g>
<g>
<title>byte[] (965 samples, 1.11%)</title><rect x="259.9" y="675.0" width="13.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="262.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampData (3,908 samples, 4.51%)</title><rect x="273.1" y="691.0" width="53.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.1" y="702.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2,822 samples, 3.26%)</title><rect x="273.1" y="675.0" width="38.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.1" y="686.0">jav..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,312 samples, 1.52%)</title><rect x="273.1" y="659.0" width="17.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="276.1" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,507 samples, 1.74%)</title><rect x="291.0" y="659.0" width="20.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.0" y="670.0"></text>
</g>
<g>
<title>byte[] (1,503 samples, 1.74%)</title><rect x="291.0" y="643.0" width="20.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="294.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1,086 samples, 1.25%)</title><rect x="311.5" y="675.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="314.5" y="686.0"></text>
</g>
<g>
<title>byte[] (1,079 samples, 1.25%)</title><rect x="311.5" y="659.0" width="14.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="314.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (788 samples, 0.91%)</title><rect x="326.3" y="691.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.3" y="702.0"></text>
</g>
<g>
<title>byte[] (787 samples, 0.91%)</title><rect x="326.3" y="675.0" width="10.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="329.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (932 samples, 1.08%)</title><rect x="337.1" y="691.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="340.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (932 samples, 1.08%)</title><rect x="337.1" y="675.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="340.1" y="686.0"></text>
</g>
<g>
<title>byte[] (931 samples, 1.08%)</title><rect x="337.1" y="659.0" width="12.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="340.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (5,631 samples, 6.50%)</title><rect x="349.8" y="755.0" width="76.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.8" y="766.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (5,631 samples, 6.50%)</title><rect x="349.8" y="739.0" width="76.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="352.8" y="750.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,843 samples, 2.13%)</title><rect x="349.8" y="723.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.8" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,843 samples, 2.13%)</title><rect x="349.8" y="707.0" width="25.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,843 samples, 2.13%)</title><rect x="349.8" y="691.0" width="25.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,843 samples, 2.13%)</title><rect x="349.8" y="675.0" width="25.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="352.8" y="686.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (1,308 samples, 1.51%)</title><rect x="349.8" y="659.0" width="17.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="352.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (1,308 samples, 1.51%)</title><rect x="349.8" y="643.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,308 samples, 1.51%)</title><rect x="349.8" y="627.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="352.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,308 samples, 1.51%)</title><rect x="349.8" y="611.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (901 samples, 1.04%)</title><rect x="349.8" y="595.0" width="12.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="352.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (901 samples, 1.04%)</title><rect x="349.8" y="579.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.8" y="590.0"></text>
</g>
<g>
<title>byte[] (512 samples, 0.59%)</title><rect x="349.8" y="563.0" width="6.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="352.8" y="574.0"></text>
</g>
<g>
<title>byte[] (389 samples, 0.45%)</title><rect x="356.7" y="563.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="359.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (407 samples, 0.47%)</title><rect x="362.0" y="595.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.0" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (402 samples, 0.46%)</title><rect x="362.0" y="579.0" width="5.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="365.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (535 samples, 0.62%)</title><rect x="367.6" y="659.0" width="7.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (535 samples, 0.62%)</title><rect x="367.6" y="643.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (534 samples, 0.62%)</title><rect x="367.6" y="627.0" width="7.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="370.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (534 samples, 0.62%)</title><rect x="367.6" y="611.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (533 samples, 0.62%)</title><rect x="367.6" y="595.0" width="7.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="370.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$130/712231129.apply (2,451 samples, 2.83%)</title><rect x="374.9" y="723.0" width="33.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="377.9" y="734.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$proxy$4 (2,451 samples, 2.83%)</title><rect x="374.9" y="707.0" width="33.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="377.9" y="718.0">ru..</text>
</g>
<g>
<title>one.nio.http.Response (594 samples, 0.69%)</title><rect x="374.9" y="691.0" width="8.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="377.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,857 samples, 2.14%)</title><rect x="383.0" y="691.0" width="25.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="386.0" y="702.0">o..</text>
</g>
<g>
<title>byte[] (769 samples, 0.89%)</title><rect x="383.0" y="675.0" width="10.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="386.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (636 samples, 0.73%)</title><rect x="393.5" y="675.0" width="8.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="396.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String (450 samples, 0.52%)</title><rect x="402.2" y="675.0" width="6.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="405.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.apply (1,337 samples, 1.54%)</title><rect x="408.3" y="723.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (1,337 samples, 1.54%)</title><rect x="408.3" y="707.0" width="18.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (1,337 samples, 1.54%)</title><rect x="408.3" y="691.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.3" y="702.0"></text>
</g>
<g>
<title>java/util/Collection.stream (944 samples, 1.09%)</title><rect x="408.3" y="675.0" width="12.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (358 samples, 0.41%)</title><rect x="408.3" y="659.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="411.3" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (358 samples, 0.41%)</title><rect x="408.3" y="643.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.3" y="654.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (355 samples, 0.41%)</title><rect x="408.3" y="627.0" width="4.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="411.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (586 samples, 0.68%)</title><rect x="413.2" y="659.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.2" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (516 samples, 0.60%)</title><rect x="413.2" y="643.0" width="7.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="416.2" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (70 samples, 0.08%)</title><rect x="420.2" y="643.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="423.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (393 samples, 0.45%)</title><rect x="421.2" y="675.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (393 samples, 0.45%)</title><rect x="421.2" y="659.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (393 samples, 0.45%)</title><rect x="421.2" y="643.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="424.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (232 samples, 0.27%)</title><rect x="421.2" y="627.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.2" y="638.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (227 samples, 0.26%)</title><rect x="421.2" y="611.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="424.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (161 samples, 0.19%)</title><rect x="424.3" y="627.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.3" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (161 samples, 0.19%)</title><rect x="424.3" y="611.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.3" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (161 samples, 0.19%)</title><rect x="424.3" y="595.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.3" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (157 samples, 0.18%)</title><rect x="424.3" y="579.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="427.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,037 samples, 2.35%)</title><rect x="426.5" y="755.0" width="27.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.5" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,958 samples, 2.26%)</title><rect x="426.5" y="739.0" width="26.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="429.5" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,948 samples, 2.25%)</title><rect x="426.5" y="723.0" width="26.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.5" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,948 samples, 2.25%)</title><rect x="426.5" y="707.0" width="26.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.5" y="718.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,944 samples, 2.25%)</title><rect x="426.5" y="691.0" width="26.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="429.5" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (79 samples, 0.09%)</title><rect x="453.2" y="739.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="456.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (78 samples, 0.09%)</title><rect x="453.2" y="723.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (78 samples, 0.09%)</title><rect x="453.2" y="707.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.2" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (78 samples, 0.09%)</title><rect x="453.2" y="691.0" width="1.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="456.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.run (1,883 samples, 2.17%)</title><rect x="454.3" y="755.0" width="25.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="457.3" y="766.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (1,883 samples, 2.17%)</title><rect x="454.3" y="739.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.3" y="750.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1,883 samples, 2.17%)</title><rect x="454.3" y="723.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="457.3" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1,883 samples, 2.17%)</title><rect x="454.3" y="707.0" width="25.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.3" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,883 samples, 2.17%)</title><rect x="454.3" y="691.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.3" y="702.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1,883 samples, 2.17%)</title><rect x="454.3" y="675.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="457.3" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,883 samples, 2.17%)</title><rect x="454.3" y="659.0" width="25.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.3" y="670.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,883 samples, 2.17%)</title><rect x="454.3" y="643.0" width="25.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="457.3" y="654.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,883 samples, 2.17%)</title><rect x="454.3" y="627.0" width="25.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="457.3" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,883 samples, 2.17%)</title><rect x="454.3" y="611.0" width="25.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.3" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1,883 samples, 2.17%)</title><rect x="454.3" y="595.0" width="25.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.3" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (1,720 samples, 1.99%)</title><rect x="454.3" y="579.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (129 samples, 0.15%)</title><rect x="454.3" y="563.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (129 samples, 0.15%)</title><rect x="454.3" y="547.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/469447818.get$Lambda (42 samples, 0.05%)</title><rect x="454.3" y="531.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.3" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$255 (42 samples, 0.05%)</title><rect x="454.3" y="515.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="457.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$268/870059978.get$Lambda (49 samples, 0.06%)</title><rect x="454.8" y="531.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.8" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$268 (49 samples, 0.06%)</title><rect x="454.8" y="515.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="457.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$269/1114053606.get$Lambda (38 samples, 0.04%)</title><rect x="455.5" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="458.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$269 (38 samples, 0.04%)</title><rect x="455.5" y="515.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="458.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (1,591 samples, 1.84%)</title><rect x="456.0" y="563.0" width="21.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.0" y="574.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (68 samples, 0.08%)</title><rect x="456.0" y="547.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="459.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,523 samples, 1.76%)</title><rect x="457.0" y="547.0" width="20.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1,523 samples, 1.76%)</title><rect x="457.0" y="531.0" width="20.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,523 samples, 1.76%)</title><rect x="457.0" y="515.0" width="20.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (277 samples, 0.32%)</title><rect x="457.0" y="499.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (85 samples, 0.10%)</title><rect x="457.0" y="483.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="460.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/154665854.apply (149 samples, 0.17%)</title><rect x="458.1" y="483.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (149 samples, 0.17%)</title><rect x="458.1" y="467.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (149 samples, 0.17%)</title><rect x="458.1" y="451.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (27 samples, 0.03%)</title><rect x="458.1" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (27 samples, 0.03%)</title><rect x="458.1" y="419.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.03%)</title><rect x="458.1" y="403.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="461.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (122 samples, 0.14%)</title><rect x="458.5" y="435.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="461.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.02%)</title><rect x="458.5" y="419.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.02%)</title><rect x="458.5" y="403.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.get$Lambda (21 samples, 0.02%)</title><rect x="458.5" y="387.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="461.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$270 (21 samples, 0.02%)</title><rect x="458.5" y="371.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (101 samples, 0.12%)</title><rect x="458.8" y="419.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="461.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (101 samples, 0.12%)</title><rect x="458.8" y="403.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.8" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (51 samples, 0.06%)</title><rect x="458.8" y="387.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="461.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.06%)</title><rect x="459.5" y="387.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.06%)</title><rect x="459.5" y="371.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.06%)</title><rect x="459.5" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="462.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (41 samples, 0.05%)</title><rect x="460.1" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (41 samples, 0.05%)</title><rect x="460.1" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (40 samples, 0.05%)</title><rect x="460.2" y="451.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (40 samples, 0.05%)</title><rect x="460.2" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (37 samples, 0.04%)</title><rect x="460.2" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (34 samples, 0.04%)</title><rect x="460.2" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (34 samples, 0.04%)</title><rect x="460.2" y="387.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="463.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (34 samples, 0.04%)</title><rect x="460.2" y="371.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (21 samples, 0.02%)</title><rect x="460.3" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (21 samples, 0.02%)</title><rect x="460.3" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (21 samples, 0.02%)</title><rect x="460.3" y="323.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (21 samples, 0.02%)</title><rect x="460.3" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="463.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (21 samples, 0.02%)</title><rect x="460.3" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="463.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (20 samples, 0.02%)</title><rect x="460.3" y="275.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (20 samples, 0.02%)</title><rect x="460.3" y="259.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (20 samples, 0.02%)</title><rect x="460.3" y="243.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,246 samples, 1.44%)</title><rect x="460.7" y="499.0" width="17.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,246 samples, 1.44%)</title><rect x="460.7" y="483.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.apply (1,244 samples, 1.44%)</title><rect x="460.7" y="467.0" width="17.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1,244 samples, 1.44%)</title><rect x="460.7" y="451.0" width="17.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,244 samples, 1.44%)</title><rect x="460.7" y="435.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.apply (1,244 samples, 1.44%)</title><rect x="460.7" y="419.0" width="17.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="463.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1,244 samples, 1.44%)</title><rect x="460.7" y="403.0" width="17.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.04%)</title><rect x="460.7" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="463.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.04%)</title><rect x="460.7" y="371.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="463.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/154665854.get$Lambda (32 samples, 0.04%)</title><rect x="460.7" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$262 (32 samples, 0.04%)</title><rect x="460.7" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="463.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (91 samples, 0.11%)</title><rect x="461.2" y="387.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (91 samples, 0.11%)</title><rect x="461.2" y="371.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.2" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (44 samples, 0.05%)</title><rect x="461.2" y="355.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="464.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="461.8" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.05%)</title><rect x="461.8" y="339.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="461.8" y="323.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="464.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1,121 samples, 1.29%)</title><rect x="462.4" y="387.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.4" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.06%)</title><rect x="462.4" y="371.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="465.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.06%)</title><rect x="462.4" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$256/1547025833.get$Lambda (30 samples, 0.03%)</title><rect x="462.4" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$256 (30 samples, 0.03%)</title><rect x="462.4" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="465.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/433311816.get$Lambda (23 samples, 0.03%)</title><rect x="462.8" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (23 samples, 0.03%)</title><rect x="462.8" y="323.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="465.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (391 samples, 0.45%)</title><rect x="463.1" y="371.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.1" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (391 samples, 0.45%)</title><rect x="463.1" y="355.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="466.1" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (391 samples, 0.45%)</title><rect x="463.1" y="339.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$256/1547025833.accept (131 samples, 0.15%)</title><rect x="463.1" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (131 samples, 0.15%)</title><rect x="463.1" y="307.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (131 samples, 0.15%)</title><rect x="463.1" y="291.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.04%)</title><rect x="463.1" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.1" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.04%)</title><rect x="463.1" y="259.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="466.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$258/1955549702.get$Lambda (38 samples, 0.04%)</title><rect x="463.1" y="243.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.1" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$258 (38 samples, 0.04%)</title><rect x="463.1" y="227.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="466.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (93 samples, 0.11%)</title><rect x="463.6" y="275.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (93 samples, 0.11%)</title><rect x="463.6" y="259.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.6" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (60 samples, 0.07%)</title><rect x="463.6" y="243.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="466.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="464.5" y="243.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="464.5" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.04%)</title><rect x="464.5" y="211.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="467.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/433311816.accept (168 samples, 0.19%)</title><rect x="464.9" y="323.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (168 samples, 0.19%)</title><rect x="464.9" y="307.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (168 samples, 0.19%)</title><rect x="464.9" y="291.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (168 samples, 0.19%)</title><rect x="464.9" y="275.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (168 samples, 0.19%)</title><rect x="464.9" y="259.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (168 samples, 0.19%)</title><rect x="464.9" y="243.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (168 samples, 0.19%)</title><rect x="464.9" y="227.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (168 samples, 0.19%)</title><rect x="464.9" y="211.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (168 samples, 0.19%)</title><rect x="464.9" y="195.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (168 samples, 0.19%)</title><rect x="464.9" y="179.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="467.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (59 samples, 0.07%)</title><rect x="464.9" y="163.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (59 samples, 0.07%)</title><rect x="464.9" y="147.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (30 samples, 0.03%)</title><rect x="464.9" y="131.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="467.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (29 samples, 0.03%)</title><rect x="465.3" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (29 samples, 0.03%)</title><rect x="465.3" y="115.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.3" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (29 samples, 0.03%)</title><rect x="465.3" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="468.3" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (29 samples, 0.03%)</title><rect x="465.3" y="83.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.3" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (29 samples, 0.03%)</title><rect x="465.3" y="67.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.3" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (28 samples, 0.03%)</title><rect x="465.3" y="51.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="468.3" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (109 samples, 0.13%)</title><rect x="465.7" y="163.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (109 samples, 0.13%)</title><rect x="465.7" y="147.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.7" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (33 samples, 0.04%)</title><rect x="465.7" y="131.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.7" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (33 samples, 0.04%)</title><rect x="465.7" y="115.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="468.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (76 samples, 0.09%)</title><rect x="466.2" y="131.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.2" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (45 samples, 0.05%)</title><rect x="466.2" y="115.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="469.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (31 samples, 0.04%)</title><rect x="466.8" y="115.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.8" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (31 samples, 0.04%)</title><rect x="466.8" y="99.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.8" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (31 samples, 0.04%)</title><rect x="466.8" y="83.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.8" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (31 samples, 0.04%)</title><rect x="466.8" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.8" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (31 samples, 0.04%)</title><rect x="466.8" y="51.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.8" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (31 samples, 0.04%)</title><rect x="466.8" y="35.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="469.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.11%)</title><rect x="467.2" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (92 samples, 0.11%)</title><rect x="467.2" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (91 samples, 0.11%)</title><rect x="467.2" y="291.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="470.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (677 samples, 0.78%)</title><rect x="468.5" y="371.0" width="9.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (56 samples, 0.06%)</title><rect x="468.5" y="355.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="471.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (48 samples, 0.06%)</title><rect x="469.2" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="472.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (48 samples, 0.06%)</title><rect x="469.2" y="339.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.06%)</title><rect x="469.2" y="323.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="472.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (573 samples, 0.66%)</title><rect x="469.9" y="355.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (30 samples, 0.03%)</title><rect x="469.9" y="339.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="472.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (326 samples, 0.38%)</title><rect x="470.3" y="339.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.3" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (57 samples, 0.07%)</title><rect x="470.3" y="323.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.3" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (57 samples, 0.07%)</title><rect x="470.3" y="307.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="473.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (53 samples, 0.06%)</title><rect x="471.1" y="323.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="474.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (216 samples, 0.25%)</title><rect x="471.8" y="323.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (21 samples, 0.02%)</title><rect x="471.8" y="307.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="474.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (28 samples, 0.03%)</title><rect x="472.1" y="307.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="475.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (51 samples, 0.06%)</title><rect x="472.5" y="307.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="475.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (28 samples, 0.03%)</title><rect x="473.1" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.1" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (28 samples, 0.03%)</title><rect x="473.1" y="291.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="476.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (88 samples, 0.10%)</title><rect x="473.5" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.5" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (33 samples, 0.04%)</title><rect x="473.5" y="291.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="476.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (32 samples, 0.04%)</title><rect x="474.0" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="477.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (23 samples, 0.03%)</title><rect x="474.4" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="477.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (217 samples, 0.25%)</title><rect x="474.7" y="339.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.04%)</title><rect x="474.7" y="323.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="477.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (115 samples, 0.13%)</title><rect x="475.2" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="478.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (68 samples, 0.08%)</title><rect x="475.2" y="307.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="478.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (47 samples, 0.05%)</title><rect x="476.1" y="307.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.1" y="318.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="476.1" y="291.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="479.1" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (71 samples, 0.08%)</title><rect x="476.7" y="323.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="479.7" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (71 samples, 0.08%)</title><rect x="476.7" y="307.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.7" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (71 samples, 0.08%)</title><rect x="476.7" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.7" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (71 samples, 0.08%)</title><rect x="476.7" y="275.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="479.7" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (71 samples, 0.08%)</title><rect x="476.7" y="259.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.08%)</title><rect x="476.7" y="243.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="479.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (163 samples, 0.19%)</title><rect x="477.7" y="579.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="480.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (163 samples, 0.19%)</title><rect x="477.7" y="563.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (163 samples, 0.19%)</title><rect x="477.7" y="547.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (163 samples, 0.19%)</title><rect x="477.7" y="531.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (163 samples, 0.19%)</title><rect x="477.7" y="515.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (163 samples, 0.19%)</title><rect x="477.7" y="499.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.7" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (77 samples, 0.09%)</title><rect x="477.7" y="483.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.7" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (77 samples, 0.09%)</title><rect x="477.7" y="467.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="480.7" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (86 samples, 0.10%)</title><rect x="478.8" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (86 samples, 0.10%)</title><rect x="478.8" y="467.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="481.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6,212 samples, 7.18%)</title><rect x="479.9" y="755.0" width="84.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.9" y="766.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,212 samples, 7.18%)</title><rect x="479.9" y="739.0" width="84.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.9" y="750.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,277 samples, 6.10%)</title><rect x="479.9" y="723.0" width="72.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.9" y="734.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (5,277 samples, 6.10%)</title><rect x="479.9" y="707.0" width="72.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.9" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,277 samples, 6.10%)</title><rect x="479.9" y="691.0" width="72.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.9" y="702.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (133 samples, 0.15%)</title><rect x="479.9" y="675.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (133 samples, 0.15%)</title><rect x="479.9" y="659.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (133 samples, 0.15%)</title><rect x="479.9" y="643.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="482.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (133 samples, 0.15%)</title><rect x="479.9" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (63 samples, 0.07%)</title><rect x="479.9" y="611.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (63 samples, 0.07%)</title><rect x="479.9" y="595.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.07%)</title><rect x="479.9" y="579.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (63 samples, 0.07%)</title><rect x="479.9" y="563.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (63 samples, 0.07%)</title><rect x="479.9" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="482.9" y="558.0"></text>
</g>
<g>
<title>byte[] (63 samples, 0.07%)</title><rect x="479.9" y="531.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="482.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (70 samples, 0.08%)</title><rect x="480.8" y="611.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.08%)</title><rect x="480.8" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.08%)</title><rect x="480.8" y="579.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="483.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1595191274.get$Lambda (70 samples, 0.08%)</title><rect x="480.8" y="563.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="483.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (70 samples, 0.08%)</title><rect x="480.8" y="547.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="483.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5,144 samples, 5.94%)</title><rect x="481.7" y="675.0" width="70.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="484.7" y="686.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,144 samples, 5.94%)</title><rect x="481.7" y="659.0" width="70.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.7" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,144 samples, 5.94%)</title><rect x="481.7" y="643.0" width="70.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.7" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,144 samples, 5.94%)</title><rect x="481.7" y="627.0" width="70.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.7" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,406 samples, 2.78%)</title><rect x="481.7" y="611.0" width="32.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.7" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,406 samples, 2.78%)</title><rect x="481.7" y="595.0" width="32.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.7" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,406 samples, 2.78%)</title><rect x="481.7" y="579.0" width="32.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.7" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,406 samples, 2.78%)</title><rect x="481.7" y="563.0" width="32.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.7" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,406 samples, 2.78%)</title><rect x="481.7" y="547.0" width="32.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.7" y="558.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,406 samples, 2.78%)</title><rect x="481.7" y="531.0" width="32.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.7" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,406 samples, 2.78%)</title><rect x="481.7" y="515.0" width="32.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="484.7" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,335 samples, 2.70%)</title><rect x="481.7" y="499.0" width="31.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.7" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,335 samples, 2.70%)</title><rect x="481.7" y="483.0" width="31.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="484.7" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,279 samples, 2.63%)</title><rect x="481.7" y="467.0" width="31.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="484.7" y="478.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (59 samples, 0.07%)</title><rect x="481.7" y="451.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="484.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (2,124 samples, 2.45%)</title><rect x="482.6" y="451.0" width="28.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.6" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,124 samples, 2.45%)</title><rect x="482.6" y="435.0" width="28.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="485.6" y="446.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.05%)</title><rect x="482.6" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.05%)</title><rect x="482.6" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1679545311.get$Lambda (42 samples, 0.05%)</title><rect x="482.6" y="387.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$306 (41 samples, 0.05%)</title><rect x="482.6" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="485.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (109 samples, 0.13%)</title><rect x="483.1" y="419.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (109 samples, 0.13%)</title><rect x="483.1" y="403.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (58 samples, 0.07%)</title><rect x="483.1" y="387.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="486.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.06%)</title><rect x="484.0" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.06%)</title><rect x="484.0" y="371.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="487.0" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.06%)</title><rect x="484.0" y="355.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="487.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,973 samples, 2.28%)</title><rect x="484.6" y="419.0" width="26.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.6" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (105 samples, 0.12%)</title><rect x="484.9" y="403.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="487.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (105 samples, 0.12%)</title><rect x="484.9" y="387.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (63 samples, 0.07%)</title><rect x="484.9" y="371.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="487.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.05%)</title><rect x="485.7" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.05%)</title><rect x="485.7" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.05%)</title><rect x="485.7" y="339.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="488.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,851 samples, 2.14%)</title><rect x="486.3" y="403.0" width="25.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="489.3" y="414.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$118/827371135.apply (122 samples, 0.14%)</title><rect x="486.3" y="387.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.3" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (122 samples, 0.14%)</title><rect x="486.3" y="371.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.3" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (122 samples, 0.14%)</title><rect x="486.3" y="355.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (40 samples, 0.05%)</title><rect x="486.3" y="339.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="489.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (82 samples, 0.09%)</title><rect x="486.8" y="339.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.8" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.04%)</title><rect x="486.8" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="489.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="487.4" y="323.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="490.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,729 samples, 2.00%)</title><rect x="488.0" y="387.0" width="23.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.0" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.06%)</title><rect x="488.0" y="371.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.06%)</title><rect x="488.0" y="355.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.get$Lambda (26 samples, 0.03%)</title><rect x="488.0" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$298 (25 samples, 0.03%)</title><rect x="488.0" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="491.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$301/817366138.get$Lambda (23 samples, 0.03%)</title><rect x="488.3" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$301 (22 samples, 0.03%)</title><rect x="488.3" y="323.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="491.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/518394687.linkToTargetMethod (58 samples, 0.07%)</title><rect x="488.6" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.6" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/801550386.invokeStatic (58 samples, 0.07%)</title><rect x="488.6" y="355.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.get$Lambda (58 samples, 0.07%)</title><rect x="488.6" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="491.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$281 (58 samples, 0.07%)</title><rect x="488.6" y="323.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="491.6" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (354 samples, 0.41%)</title><rect x="489.4" y="371.0" width="4.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.4" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (119 samples, 0.14%)</title><rect x="489.4" y="355.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="492.4" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (53 samples, 0.06%)</title><rect x="489.4" y="339.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.4" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (53 samples, 0.06%)</title><rect x="489.4" y="323.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="492.4" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (66 samples, 0.08%)</title><rect x="490.1" y="339.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.1" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (65 samples, 0.08%)</title><rect x="490.1" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="493.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (122 samples, 0.14%)</title><rect x="491.0" y="355.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (122 samples, 0.14%)</title><rect x="491.0" y="339.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (122 samples, 0.14%)</title><rect x="491.0" y="323.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (47 samples, 0.05%)</title><rect x="491.0" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (47 samples, 0.05%)</title><rect x="491.0" y="291.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (47 samples, 0.05%)</title><rect x="491.0" y="275.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.0" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (46 samples, 0.05%)</title><rect x="491.0" y="259.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="494.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$278/891080694.get (48 samples, 0.06%)</title><rect x="491.7" y="307.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (47 samples, 0.05%)</title><rect x="491.7" y="291.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="494.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (27 samples, 0.03%)</title><rect x="492.3" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (27 samples, 0.03%)</title><rect x="492.3" y="291.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.3" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (27 samples, 0.03%)</title><rect x="492.3" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="495.3" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (27 samples, 0.03%)</title><rect x="492.3" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="495.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (113 samples, 0.13%)</title><rect x="492.7" y="355.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (112 samples, 0.13%)</title><rect x="492.7" y="339.0" width="1.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="495.7" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (212 samples, 0.24%)</title><rect x="494.2" y="371.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (112 samples, 0.13%)</title><rect x="494.2" y="355.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.2" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (61 samples, 0.07%)</title><rect x="494.2" y="339.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="497.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.06%)</title><rect x="495.1" y="339.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.06%)</title><rect x="495.1" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.06%)</title><rect x="495.1" y="307.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="498.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (100 samples, 0.12%)</title><rect x="495.8" y="355.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="498.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (100 samples, 0.12%)</title><rect x="495.8" y="339.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.8" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (55 samples, 0.06%)</title><rect x="495.8" y="323.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="498.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="496.5" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (44 samples, 0.05%)</title><rect x="496.5" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (44 samples, 0.05%)</title><rect x="496.5" y="291.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="499.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (38 samples, 0.04%)</title><rect x="497.1" y="371.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="500.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (45 samples, 0.05%)</title><rect x="497.6" y="371.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="500.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.07%)</title><rect x="498.3" y="371.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="501.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (21 samples, 0.02%)</title><rect x="499.0" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="502.0" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (21 samples, 0.02%)</title><rect x="499.0" y="355.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="502.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (895 samples, 1.03%)</title><rect x="499.3" y="371.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (895 samples, 1.03%)</title><rect x="499.3" y="355.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (895 samples, 1.03%)</title><rect x="499.3" y="339.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (119 samples, 0.14%)</title><rect x="499.3" y="323.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (119 samples, 0.14%)</title><rect x="499.3" y="307.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.get$Lambda (23 samples, 0.03%)</title><rect x="499.3" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$285 (23 samples, 0.03%)</title><rect x="499.3" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="502.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1564007654.get$Lambda (41 samples, 0.05%)</title><rect x="499.6" y="291.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (41 samples, 0.05%)</title><rect x="499.6" y="275.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="502.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$294/923149657.get$Lambda (55 samples, 0.06%)</title><rect x="500.2" y="291.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$294 (55 samples, 0.06%)</title><rect x="500.2" y="275.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="503.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.12%)</title><rect x="500.9" y="323.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (101 samples, 0.12%)</title><rect x="500.9" y="307.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.9" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (54 samples, 0.06%)</title><rect x="500.9" y="291.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="503.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="501.7" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="501.7" y="275.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.7" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="501.7" y="259.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="504.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (67 samples, 0.08%)</title><rect x="502.3" y="323.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="505.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (45 samples, 0.05%)</title><rect x="503.2" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="503.2" y="307.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="506.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (141 samples, 0.16%)</title><rect x="503.8" y="323.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (141 samples, 0.16%)</title><rect x="503.8" y="307.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="503.8" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="503.8" y="275.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$296/1509000023.get$Lambda (27 samples, 0.03%)</title><rect x="503.8" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$296 (26 samples, 0.03%)</title><rect x="503.8" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="506.8" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (114 samples, 0.13%)</title><rect x="504.2" y="291.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="507.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (114 samples, 0.13%)</title><rect x="504.2" y="275.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.2" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (114 samples, 0.13%)</title><rect x="504.2" y="259.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.2" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (64 samples, 0.07%)</title><rect x="504.2" y="243.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="507.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.06%)</title><rect x="505.1" y="243.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.06%)</title><rect x="505.1" y="227.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.06%)</title><rect x="505.1" y="211.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="508.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (161 samples, 0.19%)</title><rect x="505.8" y="323.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (161 samples, 0.19%)</title><rect x="505.8" y="307.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (161 samples, 0.19%)</title><rect x="505.8" y="291.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (161 samples, 0.19%)</title><rect x="505.8" y="275.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (41 samples, 0.05%)</title><rect x="505.8" y="259.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.05%)</title><rect x="505.8" y="243.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="508.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (120 samples, 0.14%)</title><rect x="506.3" y="259.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (120 samples, 0.14%)</title><rect x="506.3" y="243.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.3" y="254.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.14%)</title><rect x="506.3" y="227.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="509.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (261 samples, 0.30%)</title><rect x="508.0" y="323.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (90 samples, 0.10%)</title><rect x="508.0" y="307.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="511.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (171 samples, 0.20%)</title><rect x="509.2" y="307.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.2" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (171 samples, 0.20%)</title><rect x="509.2" y="291.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (171 samples, 0.20%)</title><rect x="509.2" y="275.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.2" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (171 samples, 0.20%)</title><rect x="509.2" y="259.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.2" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (39 samples, 0.05%)</title><rect x="509.2" y="243.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.2" y="254.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.05%)</title><rect x="509.2" y="227.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="512.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (132 samples, 0.15%)</title><rect x="509.7" y="243.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (132 samples, 0.15%)</title><rect x="509.7" y="227.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.7" y="238.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.15%)</title><rect x="509.7" y="211.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="512.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.apply (95 samples, 0.11%)</title><rect x="511.5" y="451.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (95 samples, 0.11%)</title><rect x="511.5" y="435.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="514.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (52 samples, 0.06%)</title><rect x="511.5" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="514.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (52 samples, 0.06%)</title><rect x="511.5" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (52 samples, 0.06%)</title><rect x="511.5" y="387.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.5" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (52 samples, 0.06%)</title><rect x="511.5" y="371.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="514.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (43 samples, 0.05%)</title><rect x="512.2" y="419.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (43 samples, 0.05%)</title><rect x="512.2" y="403.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="515.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (56 samples, 0.06%)</title><rect x="512.8" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (56 samples, 0.06%)</title><rect x="512.8" y="451.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (56 samples, 0.06%)</title><rect x="512.8" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (56 samples, 0.06%)</title><rect x="512.8" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="515.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (56 samples, 0.06%)</title><rect x="512.8" y="403.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.06%)</title><rect x="512.8" y="387.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="515.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.apply (71 samples, 0.08%)</title><rect x="513.6" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="516.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (71 samples, 0.08%)</title><rect x="513.6" y="483.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.6" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (71 samples, 0.08%)</title><rect x="513.6" y="467.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="516.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,738 samples, 3.16%)</title><rect x="514.5" y="611.0" width="37.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.5" y="622.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (176 samples, 0.20%)</title><rect x="514.5" y="595.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (176 samples, 0.20%)</title><rect x="514.5" y="579.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (176 samples, 0.20%)</title><rect x="514.5" y="563.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="517.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (176 samples, 0.20%)</title><rect x="514.5" y="547.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (176 samples, 0.20%)</title><rect x="514.5" y="531.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="517.5" y="542.0"></text>
</g>
<g>
<title>byte[] (176 samples, 0.20%)</title><rect x="514.5" y="515.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="517.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (106 samples, 0.12%)</title><rect x="516.9" y="595.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (106 samples, 0.12%)</title><rect x="516.9" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (106 samples, 0.12%)</title><rect x="516.9" y="563.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.9" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (106 samples, 0.12%)</title><rect x="516.9" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="519.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (106 samples, 0.12%)</title><rect x="516.9" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.9" y="542.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.12%)</title><rect x="516.9" y="515.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="519.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (196 samples, 0.23%)</title><rect x="518.4" y="595.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (30 samples, 0.03%)</title><rect x="518.4" y="579.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="521.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (29 samples, 0.03%)</title><rect x="518.8" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.03%)</title><rect x="518.8" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.8" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.03%)</title><rect x="518.8" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.8" y="558.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.03%)</title><rect x="518.8" y="531.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="521.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (44 samples, 0.05%)</title><rect x="519.2" y="579.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.2" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (44 samples, 0.05%)</title><rect x="519.2" y="563.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.2" y="574.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.05%)</title><rect x="519.2" y="547.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="522.2" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (93 samples, 0.11%)</title><rect x="519.8" y="579.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (93 samples, 0.11%)</title><rect x="519.8" y="563.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (33 samples, 0.04%)</title><rect x="519.8" y="547.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="522.8" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (60 samples, 0.07%)</title><rect x="520.2" y="547.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.2" y="558.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.07%)</title><rect x="520.2" y="531.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="523.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (761 samples, 0.88%)</title><rect x="521.1" y="595.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.1" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (761 samples, 0.88%)</title><rect x="521.1" y="579.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.1" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (761 samples, 0.88%)</title><rect x="521.1" y="563.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.1" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (26 samples, 0.03%)</title><rect x="521.1" y="547.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="524.1" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (36 samples, 0.04%)</title><rect x="521.4" y="547.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="524.4" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (73 samples, 0.08%)</title><rect x="521.9" y="547.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="524.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (21 samples, 0.02%)</title><rect x="522.9" y="547.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="525.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (53 samples, 0.06%)</title><rect x="523.2" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (53 samples, 0.06%)</title><rect x="523.2" y="531.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.2" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (53 samples, 0.06%)</title><rect x="523.2" y="515.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.2" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (53 samples, 0.06%)</title><rect x="523.2" y="499.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="526.2" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (58 samples, 0.07%)</title><rect x="523.9" y="547.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.9" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (58 samples, 0.07%)</title><rect x="523.9" y="531.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="526.9" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (431 samples, 0.50%)</title><rect x="524.7" y="547.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.7" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (431 samples, 0.50%)</title><rect x="524.7" y="531.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.7" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (431 samples, 0.50%)</title><rect x="524.7" y="515.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.08%)</title><rect x="524.7" y="499.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.08%)</title><rect x="524.7" y="483.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (71 samples, 0.08%)</title><rect x="524.7" y="467.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.7" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (71 samples, 0.08%)</title><rect x="524.7" y="451.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="527.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (83 samples, 0.10%)</title><rect x="525.7" y="499.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="528.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (83 samples, 0.10%)</title><rect x="525.7" y="483.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.7" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (83 samples, 0.10%)</title><rect x="525.7" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (83 samples, 0.10%)</title><rect x="525.7" y="451.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (83 samples, 0.10%)</title><rect x="525.7" y="435.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (83 samples, 0.10%)</title><rect x="525.7" y="419.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.7" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (83 samples, 0.10%)</title><rect x="525.7" y="403.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (83 samples, 0.10%)</title><rect x="525.7" y="387.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.7" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (82 samples, 0.09%)</title><rect x="525.7" y="371.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="528.7" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (148 samples, 0.17%)</title><rect x="526.8" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.8" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (148 samples, 0.17%)</title><rect x="526.8" y="483.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (84 samples, 0.10%)</title><rect x="526.8" y="467.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.8" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.10%)</title><rect x="526.8" y="451.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.10%)</title><rect x="526.8" y="435.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="529.8" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (64 samples, 0.07%)</title><rect x="528.0" y="467.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.0" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (64 samples, 0.07%)</title><rect x="528.0" y="451.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="531.0" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (129 samples, 0.15%)</title><rect x="528.8" y="499.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.8" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (129 samples, 0.15%)</title><rect x="528.8" y="483.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="531.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (61 samples, 0.07%)</title><rect x="530.6" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (61 samples, 0.07%)</title><rect x="530.6" y="531.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="533.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,499 samples, 1.73%)</title><rect x="531.4" y="595.0" width="20.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="534.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (64 samples, 0.07%)</title><rect x="531.4" y="579.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="534.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (96 samples, 0.11%)</title><rect x="532.3" y="579.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="535.3" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (96 samples, 0.11%)</title><rect x="532.3" y="563.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="535.3" y="574.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.11%)</title><rect x="532.3" y="547.0" width="1.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="535.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (200 samples, 0.23%)</title><rect x="533.6" y="579.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (200 samples, 0.23%)</title><rect x="533.6" y="563.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (78 samples, 0.09%)</title><rect x="533.6" y="547.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="536.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (122 samples, 0.14%)</title><rect x="534.7" y="547.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.7" y="558.0"></text>
</g>
<g>
<title>byte[] (121 samples, 0.14%)</title><rect x="534.7" y="531.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="537.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,139 samples, 1.32%)</title><rect x="536.3" y="579.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (293 samples, 0.34%)</title><rect x="536.3" y="563.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="539.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (293 samples, 0.34%)</title><rect x="536.3" y="547.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.3" y="558.0"></text>
</g>
<g>
<title>java.lang.String (120 samples, 0.14%)</title><rect x="536.3" y="531.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="539.3" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 0.20%)</title><rect x="538.0" y="531.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.0" y="542.0"></text>
</g>
<g>
<title>byte[] (169 samples, 0.20%)</title><rect x="538.0" y="515.0" width="2.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="541.0" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (196 samples, 0.23%)</title><rect x="540.3" y="563.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (196 samples, 0.23%)</title><rect x="540.3" y="547.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.3" y="558.0"></text>
</g>
<g>
<title>byte[] (120 samples, 0.14%)</title><rect x="540.3" y="531.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="543.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.09%)</title><rect x="542.0" y="531.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="545.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (154 samples, 0.18%)</title><rect x="543.0" y="563.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (154 samples, 0.18%)</title><rect x="543.0" y="547.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (154 samples, 0.18%)</title><rect x="543.0" y="531.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.09%)</title><rect x="543.0" y="515.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="546.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (79 samples, 0.09%)</title><rect x="544.0" y="515.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.0" y="526.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.09%)</title><rect x="544.0" y="499.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="547.0" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (181 samples, 0.21%)</title><rect x="545.1" y="563.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.1" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (181 samples, 0.21%)</title><rect x="545.1" y="547.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (181 samples, 0.21%)</title><rect x="545.1" y="531.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="548.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (181 samples, 0.21%)</title><rect x="545.1" y="515.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.1" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (181 samples, 0.21%)</title><rect x="545.1" y="499.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.1" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (179 samples, 0.21%)</title><rect x="545.1" y="483.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="548.1" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (315 samples, 0.36%)</title><rect x="547.6" y="563.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="550.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (111 samples, 0.13%)</title><rect x="547.6" y="547.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="550.6" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (110 samples, 0.13%)</title><rect x="547.6" y="531.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="550.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (132 samples, 0.15%)</title><rect x="549.1" y="547.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (132 samples, 0.15%)</title><rect x="549.1" y="531.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="552.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$274/1055343799.apply (72 samples, 0.08%)</title><rect x="550.9" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (72 samples, 0.08%)</title><rect x="550.9" y="531.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.9" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (71 samples, 0.08%)</title><rect x="550.9" y="515.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="553.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (935 samples, 1.08%)</title><rect x="551.9" y="723.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (935 samples, 1.08%)</title><rect x="551.9" y="707.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (935 samples, 1.08%)</title><rect x="551.9" y="691.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="554.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (935 samples, 1.08%)</title><rect x="551.9" y="675.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (935 samples, 1.08%)</title><rect x="551.9" y="659.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="554.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (918 samples, 1.06%)</title><rect x="551.9" y="643.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.06%)</title><rect x="551.9" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.06%)</title><rect x="551.9" y="611.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="554.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/2120086541.get$Lambda (24 samples, 0.03%)</title><rect x="551.9" y="595.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (23 samples, 0.03%)</title><rect x="551.9" y="579.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="554.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$208/1751389064.get$Lambda (30 samples, 0.03%)</title><rect x="552.2" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$208 (29 samples, 0.03%)</title><rect x="552.2" y="579.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="555.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (47 samples, 0.05%)</title><rect x="552.6" y="627.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="555.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (49 samples, 0.06%)</title><rect x="553.3" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (49 samples, 0.06%)</title><rect x="553.3" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (34 samples, 0.04%)</title><rect x="553.5" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (33 samples, 0.04%)</title><rect x="553.5" y="579.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="556.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (767 samples, 0.89%)</title><rect x="553.9" y="627.0" width="10.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (767 samples, 0.89%)</title><rect x="553.9" y="611.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (640 samples, 0.74%)</title><rect x="553.9" y="595.0" width="8.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (640 samples, 0.74%)</title><rect x="553.9" y="579.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (640 samples, 0.74%)</title><rect x="553.9" y="563.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="556.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (209 samples, 0.24%)</title><rect x="553.9" y="547.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.9" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (140 samples, 0.16%)</title><rect x="553.9" y="531.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.9" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (45 samples, 0.05%)</title><rect x="553.9" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.9" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (43 samples, 0.05%)</title><rect x="553.9" y="499.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="556.9" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (95 samples, 0.11%)</title><rect x="554.5" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.5" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (93 samples, 0.11%)</title><rect x="554.5" y="499.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="557.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (69 samples, 0.08%)</title><rect x="555.8" y="531.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (69 samples, 0.08%)</title><rect x="555.8" y="515.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (69 samples, 0.08%)</title><rect x="555.8" y="499.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (42 samples, 0.05%)</title><rect x="555.8" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (40 samples, 0.05%)</title><rect x="555.8" y="467.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="558.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (27 samples, 0.03%)</title><rect x="556.4" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="559.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (27 samples, 0.03%)</title><rect x="556.4" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.4" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (27 samples, 0.03%)</title><rect x="556.4" y="451.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="559.4" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (25 samples, 0.03%)</title><rect x="556.4" y="435.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="559.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (431 samples, 0.50%)</title><rect x="556.8" y="547.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="559.8" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (39 samples, 0.05%)</title><rect x="556.8" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.8" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (39 samples, 0.05%)</title><rect x="556.8" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (39 samples, 0.05%)</title><rect x="556.8" y="499.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="559.8" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (39 samples, 0.05%)</title><rect x="556.8" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="559.8" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (38 samples, 0.04%)</title><rect x="556.8" y="467.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="559.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (392 samples, 0.45%)</title><rect x="557.3" y="531.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (147 samples, 0.17%)</title><rect x="557.3" y="515.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="560.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (33 samples, 0.04%)</title><rect x="557.3" y="499.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.3" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (33 samples, 0.04%)</title><rect x="557.3" y="483.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="560.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (33 samples, 0.04%)</title><rect x="557.3" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (33 samples, 0.04%)</title><rect x="557.3" y="451.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="560.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (33 samples, 0.04%)</title><rect x="557.3" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="560.3" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (33 samples, 0.04%)</title><rect x="557.3" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="560.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (36 samples, 0.04%)</title><rect x="557.7" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="560.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (36 samples, 0.04%)</title><rect x="557.7" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (36 samples, 0.04%)</title><rect x="557.7" y="467.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="560.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (36 samples, 0.04%)</title><rect x="557.7" y="451.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (36 samples, 0.04%)</title><rect x="557.7" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.7" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (36 samples, 0.04%)</title><rect x="557.7" y="419.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="560.7" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (39 samples, 0.05%)</title><rect x="558.3" y="499.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (39 samples, 0.05%)</title><rect x="558.3" y="483.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (39 samples, 0.05%)</title><rect x="558.3" y="467.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="561.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (38 samples, 0.04%)</title><rect x="558.8" y="499.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="561.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (67 samples, 0.08%)</title><rect x="559.3" y="515.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (33 samples, 0.04%)</title><rect x="559.3" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (33 samples, 0.04%)</title><rect x="559.3" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (33 samples, 0.04%)</title><rect x="559.3" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.04%)</title><rect x="559.3" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="562.3" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (34 samples, 0.04%)</title><rect x="559.8" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.8" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (34 samples, 0.04%)</title><rect x="559.8" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.8" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (34 samples, 0.04%)</title><rect x="559.8" y="467.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="562.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (178 samples, 0.21%)</title><rect x="560.2" y="515.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (32 samples, 0.04%)</title><rect x="560.2" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="563.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (144 samples, 0.17%)</title><rect x="560.7" y="499.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (48 samples, 0.06%)</title><rect x="560.7" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="563.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (48 samples, 0.06%)</title><rect x="560.7" y="467.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (48 samples, 0.06%)</title><rect x="560.7" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (48 samples, 0.06%)</title><rect x="560.7" y="435.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="563.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (96 samples, 0.11%)</title><rect x="561.3" y="483.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="564.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (96 samples, 0.11%)</title><rect x="561.3" y="467.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (70 samples, 0.08%)</title><rect x="561.3" y="451.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="564.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (25 samples, 0.03%)</title><rect x="562.3" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.3" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (25 samples, 0.03%)</title><rect x="562.3" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="565.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (127 samples, 0.15%)</title><rect x="562.6" y="595.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (127 samples, 0.15%)</title><rect x="562.6" y="579.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (127 samples, 0.15%)</title><rect x="562.6" y="563.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 0.11%)</title><rect x="562.6" y="547.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 0.11%)</title><rect x="562.6" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (97 samples, 0.11%)</title><rect x="562.6" y="515.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (97 samples, 0.11%)</title><rect x="562.6" y="499.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.accept (97 samples, 0.11%)</title><rect x="562.6" y="483.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (97 samples, 0.11%)</title><rect x="562.6" y="467.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 0.11%)</title><rect x="562.6" y="451.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 0.11%)</title><rect x="562.6" y="435.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (97 samples, 0.11%)</title><rect x="562.6" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1679545311.apply (97 samples, 0.11%)</title><rect x="562.6" y="403.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (97 samples, 0.11%)</title><rect x="562.6" y="387.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (97 samples, 0.11%)</title><rect x="562.6" y="371.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="565.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (30 samples, 0.03%)</title><rect x="564.0" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.0" y="558.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.03%)</title><rect x="564.0" y="531.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="567.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (163 samples, 0.19%)</title><rect x="564.6" y="803.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (163 samples, 0.19%)</title><rect x="564.6" y="787.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="567.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (163 samples, 0.19%)</title><rect x="564.6" y="771.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (163 samples, 0.19%)</title><rect x="564.6" y="755.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (163 samples, 0.19%)</title><rect x="564.6" y="739.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (163 samples, 0.19%)</title><rect x="564.6" y="723.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (163 samples, 0.19%)</title><rect x="564.6" y="707.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (163 samples, 0.19%)</title><rect x="564.6" y="691.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (163 samples, 0.19%)</title><rect x="564.6" y="675.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (163 samples, 0.19%)</title><rect x="564.6" y="659.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (163 samples, 0.19%)</title><rect x="564.6" y="643.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (163 samples, 0.19%)</title><rect x="564.6" y="627.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (163 samples, 0.19%)</title><rect x="564.6" y="611.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (163 samples, 0.19%)</title><rect x="564.6" y="595.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="567.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (163 samples, 0.19%)</title><rect x="564.6" y="579.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (163 samples, 0.19%)</title><rect x="564.6" y="563.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (163 samples, 0.19%)</title><rect x="564.6" y="547.0" width="2.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="567.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (4,101 samples, 4.74%)</title><rect x="566.8" y="803.0" width="55.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.8" y="814.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (99 samples, 0.11%)</title><rect x="566.8" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (99 samples, 0.11%)</title><rect x="566.8" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/1594236632.get$Lambda (78 samples, 0.09%)</title><rect x="566.8" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="569.8" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$239 (77 samples, 0.09%)</title><rect x="566.8" y="739.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="569.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/728568398.get$Lambda (21 samples, 0.02%)</title><rect x="567.9" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$243 (21 samples, 0.02%)</title><rect x="567.9" y="739.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="570.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (101 samples, 0.12%)</title><rect x="568.2" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="571.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.12%)</title><rect x="568.2" y="771.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="571.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1196171815.get$Lambda (101 samples, 0.12%)</title><rect x="568.2" y="755.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (100 samples, 0.12%)</title><rect x="568.2" y="739.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (934 samples, 1.08%)</title><rect x="569.6" y="787.0" width="12.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/984556979.accept (752 samples, 0.87%)</title><rect x="569.6" y="771.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (752 samples, 0.87%)</title><rect x="569.6" y="755.0" width="10.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (752 samples, 0.87%)</title><rect x="569.6" y="739.0" width="10.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="572.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (752 samples, 0.87%)</title><rect x="569.6" y="723.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (752 samples, 0.87%)</title><rect x="569.6" y="707.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (752 samples, 0.87%)</title><rect x="569.6" y="691.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (752 samples, 0.87%)</title><rect x="569.6" y="675.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (752 samples, 0.87%)</title><rect x="569.6" y="659.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="572.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (752 samples, 0.87%)</title><rect x="569.6" y="643.0" width="10.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (752 samples, 0.87%)</title><rect x="569.6" y="627.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (752 samples, 0.87%)</title><rect x="569.6" y="611.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="572.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (752 samples, 0.87%)</title><rect x="569.6" y="595.0" width="10.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="572.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (184 samples, 0.21%)</title><rect x="569.6" y="579.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (184 samples, 0.21%)</title><rect x="569.6" y="563.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (184 samples, 0.21%)</title><rect x="569.6" y="547.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="572.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (98 samples, 0.11%)</title><rect x="569.6" y="531.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (98 samples, 0.11%)</title><rect x="569.6" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (98 samples, 0.11%)</title><rect x="569.6" y="499.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="572.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (98 samples, 0.11%)</title><rect x="569.6" y="483.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (98 samples, 0.11%)</title><rect x="569.6" y="467.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="572.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (86 samples, 0.10%)</title><rect x="570.9" y="531.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (86 samples, 0.10%)</title><rect x="570.9" y="515.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (86 samples, 0.10%)</title><rect x="570.9" y="499.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (86 samples, 0.10%)</title><rect x="570.9" y="483.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (86 samples, 0.10%)</title><rect x="570.9" y="467.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (86 samples, 0.10%)</title><rect x="570.9" y="451.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="573.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (68 samples, 0.08%)</title><rect x="572.1" y="579.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.08%)</title><rect x="572.1" y="563.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.08%)</title><rect x="572.1" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1595191274.get$Lambda (68 samples, 0.08%)</title><rect x="572.1" y="531.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (68 samples, 0.08%)</title><rect x="572.1" y="515.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="575.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (496 samples, 0.57%)</title><rect x="573.0" y="579.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (331 samples, 0.38%)</title><rect x="573.0" y="563.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (223 samples, 0.26%)</title><rect x="573.0" y="547.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="576.0" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (223 samples, 0.26%)</title><rect x="573.0" y="531.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="576.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (108 samples, 0.12%)</title><rect x="576.1" y="547.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.1" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (108 samples, 0.12%)</title><rect x="576.1" y="531.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.1" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (108 samples, 0.12%)</title><rect x="576.1" y="515.0" width="1.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="579.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (165 samples, 0.19%)</title><rect x="577.6" y="563.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$151/54997156.get (165 samples, 0.19%)</title><rect x="577.6" y="547.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (165 samples, 0.19%)</title><rect x="577.6" y="531.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="580.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (165 samples, 0.19%)</title><rect x="577.6" y="515.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="580.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (165 samples, 0.19%)</title><rect x="577.6" y="499.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.6" y="510.0"></text>
</g>
<g>
<title>byte[] (163 samples, 0.19%)</title><rect x="577.6" y="483.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1747724333.accept (182 samples, 0.21%)</title><rect x="579.8" y="771.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (182 samples, 0.21%)</title><rect x="579.8" y="755.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1196171815.run (182 samples, 0.21%)</title><rect x="579.8" y="739.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (182 samples, 0.21%)</title><rect x="579.8" y="723.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (182 samples, 0.21%)</title><rect x="579.8" y="707.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (182 samples, 0.21%)</title><rect x="579.8" y="691.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (182 samples, 0.21%)</title><rect x="579.8" y="675.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="582.8" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (180 samples, 0.21%)</title><rect x="579.8" y="659.0" width="2.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="582.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (190 samples, 0.22%)</title><rect x="582.3" y="787.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.3" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (187 samples, 0.22%)</title><rect x="582.3" y="771.0" width="2.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="585.3" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (231 samples, 0.27%)</title><rect x="584.9" y="787.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (103 samples, 0.12%)</title><rect x="584.9" y="771.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (103 samples, 0.12%)</title><rect x="584.9" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (103 samples, 0.12%)</title><rect x="584.9" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (103 samples, 0.12%)</title><rect x="584.9" y="723.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (103 samples, 0.12%)</title><rect x="584.9" y="707.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (103 samples, 0.12%)</title><rect x="584.9" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.9" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (102 samples, 0.12%)</title><rect x="584.9" y="675.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="587.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (128 samples, 0.15%)</title><rect x="586.3" y="771.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="589.3" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (128 samples, 0.15%)</title><rect x="586.3" y="755.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="589.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (720 samples, 0.83%)</title><rect x="588.0" y="787.0" width="9.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/1138953262.run (361 samples, 0.42%)</title><rect x="588.0" y="771.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (361 samples, 0.42%)</title><rect x="588.0" y="755.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (361 samples, 0.42%)</title><rect x="588.0" y="739.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (361 samples, 0.42%)</title><rect x="588.0" y="723.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (361 samples, 0.42%)</title><rect x="588.0" y="707.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (361 samples, 0.42%)</title><rect x="588.0" y="691.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (361 samples, 0.42%)</title><rect x="588.0" y="675.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (361 samples, 0.42%)</title><rect x="588.0" y="659.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (359 samples, 0.41%)</title><rect x="588.0" y="643.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="591.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (359 samples, 0.41%)</title><rect x="588.0" y="627.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (256 samples, 0.30%)</title><rect x="588.0" y="611.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (256 samples, 0.30%)</title><rect x="588.0" y="595.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (256 samples, 0.30%)</title><rect x="588.0" y="579.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (181 samples, 0.21%)</title><rect x="588.0" y="563.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (181 samples, 0.21%)</title><rect x="588.0" y="547.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (181 samples, 0.21%)</title><rect x="588.0" y="531.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (181 samples, 0.21%)</title><rect x="588.0" y="515.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (181 samples, 0.21%)</title><rect x="588.0" y="499.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.0" y="510.0"></text>
</g>
<g>
<title>byte[] (181 samples, 0.21%)</title><rect x="588.0" y="483.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="591.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (75 samples, 0.09%)</title><rect x="590.5" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.5" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.09%)</title><rect x="590.5" y="547.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.09%)</title><rect x="590.5" y="531.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1595191274.get$Lambda (75 samples, 0.09%)</title><rect x="590.5" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (75 samples, 0.09%)</title><rect x="590.5" y="499.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="593.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (103 samples, 0.12%)</title><rect x="591.5" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.12%)</title><rect x="591.5" y="595.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.12%)</title><rect x="591.5" y="579.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (103 samples, 0.12%)</title><rect x="591.5" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (103 samples, 0.12%)</title><rect x="591.5" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (103 samples, 0.12%)</title><rect x="591.5" y="531.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (100 samples, 0.12%)</title><rect x="591.5" y="515.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="594.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$165/1403403797.run (359 samples, 0.41%)</title><rect x="592.9" y="771.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (359 samples, 0.41%)</title><rect x="592.9" y="755.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.15%)</title><rect x="592.9" y="739.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.15%)</title><rect x="592.9" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.get$Lambda (131 samples, 0.15%)</title><rect x="592.9" y="707.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.9" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$248 (127 samples, 0.15%)</title><rect x="592.9" y="691.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="595.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (228 samples, 0.26%)</title><rect x="594.7" y="739.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="597.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (228 samples, 0.26%)</title><rect x="594.7" y="723.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (228 samples, 0.26%)</title><rect x="594.7" y="707.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="597.7" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (223 samples, 0.26%)</title><rect x="594.7" y="691.0" width="3.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="597.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (613 samples, 0.71%)</title><rect x="597.8" y="787.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.8" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (105 samples, 0.12%)</title><rect x="597.8" y="771.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.8" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (105 samples, 0.12%)</title><rect x="597.8" y="755.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.8" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (105 samples, 0.12%)</title><rect x="597.8" y="739.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.8" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (105 samples, 0.12%)</title><rect x="597.8" y="723.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.8" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (101 samples, 0.12%)</title><rect x="597.8" y="707.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="600.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (508 samples, 0.59%)</title><rect x="599.3" y="771.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.08%)</title><rect x="599.3" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.08%)</title><rect x="599.3" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="602.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$311/193299277.get$Lambda (68 samples, 0.08%)</title><rect x="599.3" y="723.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.3" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$311 (65 samples, 0.08%)</title><rect x="599.3" y="707.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="602.3" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (142 samples, 0.16%)</title><rect x="600.2" y="755.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.2" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (137 samples, 0.16%)</title><rect x="600.2" y="739.0" width="1.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="603.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (81 samples, 0.09%)</title><rect x="602.1" y="755.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.1" y="766.0"></text>
</g>
<g>
<title>java/util/Optional.of (81 samples, 0.09%)</title><rect x="602.1" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.1" y="750.0"></text>
</g>
<g>
<title>java.util.Optional (78 samples, 0.09%)</title><rect x="602.1" y="723.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="605.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (217 samples, 0.25%)</title><rect x="603.2" y="755.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.2" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (88 samples, 0.10%)</title><rect x="603.2" y="739.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="606.2" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (125 samples, 0.14%)</title><rect x="604.5" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (125 samples, 0.14%)</title><rect x="604.5" y="723.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.5" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (121 samples, 0.14%)</title><rect x="604.5" y="707.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="607.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (849 samples, 0.98%)</title><rect x="606.2" y="787.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.09%)</title><rect x="606.2" y="771.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.09%)</title><rect x="606.2" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1989239292.get$Lambda (79 samples, 0.09%)</title><rect x="606.2" y="739.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.2" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (79 samples, 0.09%)</title><rect x="606.2" y="723.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="609.2" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (472 samples, 0.55%)</title><rect x="607.3" y="771.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.3" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (185 samples, 0.21%)</title><rect x="607.3" y="755.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.3" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (184 samples, 0.21%)</title><rect x="607.3" y="739.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="610.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (287 samples, 0.33%)</title><rect x="609.8" y="755.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.8" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (286 samples, 0.33%)</title><rect x="609.8" y="739.0" width="3.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="612.8" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (298 samples, 0.34%)</title><rect x="613.7" y="771.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.7" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (295 samples, 0.34%)</title><rect x="613.7" y="755.0" width="4.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="616.7" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (200 samples, 0.23%)</title><rect x="617.8" y="787.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (200 samples, 0.23%)</title><rect x="617.8" y="771.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.8" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (200 samples, 0.23%)</title><rect x="617.8" y="755.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.8" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (200 samples, 0.23%)</title><rect x="617.8" y="739.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.8" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (67 samples, 0.08%)</title><rect x="617.8" y="723.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.8" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (65 samples, 0.08%)</title><rect x="617.8" y="707.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="620.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (133 samples, 0.15%)</title><rect x="618.7" y="723.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="621.7" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (133 samples, 0.15%)</title><rect x="618.7" y="707.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.7" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (133 samples, 0.15%)</title><rect x="618.7" y="691.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (133 samples, 0.15%)</title><rect x="618.7" y="675.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.7" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (133 samples, 0.15%)</title><rect x="618.7" y="659.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.7" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (130 samples, 0.15%)</title><rect x="618.7" y="643.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="621.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (98 samples, 0.11%)</title><rect x="620.5" y="787.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (98 samples, 0.11%)</title><rect x="620.5" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (98 samples, 0.11%)</title><rect x="620.5" y="755.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (98 samples, 0.11%)</title><rect x="620.5" y="739.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="623.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (86 samples, 0.10%)</title><rect x="620.5" y="723.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="623.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (85 samples, 0.10%)</title><rect x="620.5" y="707.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="623.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (66 samples, 0.08%)</title><rect x="621.8" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (66 samples, 0.08%)</title><rect x="621.8" y="771.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="624.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (66 samples, 0.08%)</title><rect x="621.8" y="755.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (64 samples, 0.07%)</title><rect x="621.8" y="739.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="624.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41,621 samples, 48.07%)</title><rect x="622.7" y="803.0" width="567.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.7" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,495 samples, 1.73%)</title><rect x="622.7" y="787.0" width="20.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.7" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,494 samples, 1.73%)</title><rect x="622.7" y="771.0" width="20.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="625.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40,126 samples, 46.35%)</title><rect x="643.1" y="787.0" width="546.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40,126 samples, 46.35%)</title><rect x="643.1" y="771.0" width="546.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.1" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (40,126 samples, 46.35%)</title><rect x="643.1" y="755.0" width="546.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="646.1" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20,948 samples, 24.20%)</title><rect x="643.1" y="739.0" width="285.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.1" y="750.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20,948 samples, 24.20%)</title><rect x="643.1" y="723.0" width="285.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.1" y="734.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (19,962 samples, 23.06%)</title><rect x="643.1" y="707.0" width="272.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.1" y="718.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (699 samples, 0.81%)</title><rect x="643.1" y="691.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (699 samples, 0.81%)</title><rect x="643.1" y="675.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (699 samples, 0.81%)</title><rect x="643.1" y="659.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (699 samples, 0.81%)</title><rect x="643.1" y="643.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="646.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String (375 samples, 0.43%)</title><rect x="643.1" y="627.0" width="5.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="646.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (318 samples, 0.37%)</title><rect x="648.3" y="627.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.3" y="638.0"></text>
</g>
<g>
<title>byte[] (314 samples, 0.36%)</title><rect x="648.3" y="611.0" width="4.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="651.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (19,263 samples, 22.25%)</title><rect x="652.6" y="691.0" width="262.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.6" y="702.0">ru/mail/polis/service/dariagap/Clus..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,321 samples, 2.68%)</title><rect x="652.6" y="675.0" width="31.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.6" y="686.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (2,321 samples, 2.68%)</title><rect x="652.6" y="659.0" width="31.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.6" y="670.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,321 samples, 2.68%)</title><rect x="652.6" y="643.0" width="31.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.6" y="654.0">ja..</text>
</g>
<g>
<title>java.lang.String (607 samples, 0.70%)</title><rect x="652.6" y="627.0" width="8.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="655.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,708 samples, 1.97%)</title><rect x="661.0" y="627.0" width="23.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.0" y="638.0">j..</text>
</g>
<g>
<title>byte[] (1,703 samples, 1.97%)</title><rect x="661.0" y="611.0" width="23.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="664.0" y="622.0">b..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.sendResponseFromFuture (1,192 samples, 1.38%)</title><rect x="684.3" y="675.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="687.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (246 samples, 0.28%)</title><rect x="684.3" y="659.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (246 samples, 0.28%)</title><rect x="684.3" y="643.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.get$Lambda (246 samples, 0.28%)</title><rect x="684.3" y="627.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$135 (241 samples, 0.28%)</title><rect x="684.3" y="611.0" width="3.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="687.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (946 samples, 1.09%)</title><rect x="687.6" y="659.0" width="12.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (946 samples, 1.09%)</title><rect x="687.6" y="643.0" width="12.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="690.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (649 samples, 0.75%)</title><rect x="687.6" y="627.0" width="8.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="690.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (286 samples, 0.33%)</title><rect x="696.5" y="627.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (283 samples, 0.33%)</title><rect x="696.5" y="611.0" width="3.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="699.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (571 samples, 0.66%)</title><rect x="700.5" y="675.0" width="7.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="703.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (571 samples, 0.66%)</title><rect x="700.5" y="659.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="703.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (75 samples, 0.09%)</title><rect x="700.5" y="643.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="703.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (75 samples, 0.09%)</title><rect x="700.5" y="627.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="703.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$111/1623904019.get$Lambda (75 samples, 0.09%)</title><rect x="700.5" y="611.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.5" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$111 (71 samples, 0.08%)</title><rect x="700.5" y="595.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="703.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (496 samples, 0.57%)</title><rect x="701.5" y="643.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="704.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (496 samples, 0.57%)</title><rect x="701.5" y="627.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (50 samples, 0.06%)</title><rect x="701.5" y="611.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="704.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (436 samples, 0.50%)</title><rect x="702.3" y="611.0" width="5.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="705.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (15,179 samples, 17.53%)</title><rect x="708.3" y="675.0" width="206.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="711.3" y="686.0">ru/mail/polis/service/daria..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.04%)</title><rect x="708.3" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.04%)</title><rect x="708.3" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.get$Lambda (37 samples, 0.04%)</title><rect x="708.3" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.3" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.ClusterServiceImpl$$Lambda$133 (36 samples, 0.04%)</title><rect x="708.3" y="611.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="711.3" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (117 samples, 0.14%)</title><rect x="708.8" y="659.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (117 samples, 0.14%)</title><rect x="708.8" y="643.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (117 samples, 0.14%)</title><rect x="708.8" y="627.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (117 samples, 0.14%)</title><rect x="708.8" y="611.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.8" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.14%)</title><rect x="708.8" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.8" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.14%)</title><rect x="708.8" y="579.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="711.8" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (82 samples, 0.09%)</title><rect x="710.4" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (58 samples, 0.07%)</title><rect x="710.4" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.4" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (58 samples, 0.07%)</title><rect x="710.4" y="627.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="713.4" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (24 samples, 0.03%)</title><rect x="711.2" y="643.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.2" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (24 samples, 0.03%)</title><rect x="711.2" y="627.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="714.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (94 samples, 0.11%)</title><rect x="711.5" y="659.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (94 samples, 0.11%)</title><rect x="711.5" y="643.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.5" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (55 samples, 0.06%)</title><rect x="711.5" y="627.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="714.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (38 samples, 0.04%)</title><rect x="712.3" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="715.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (37 samples, 0.04%)</title><rect x="712.3" y="611.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="715.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (101 samples, 0.12%)</title><rect x="712.8" y="659.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (101 samples, 0.12%)</title><rect x="712.8" y="643.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (49 samples, 0.06%)</title><rect x="712.8" y="627.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="715.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (51 samples, 0.06%)</title><rect x="713.5" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="716.5" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (49 samples, 0.06%)</title><rect x="713.5" y="611.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="716.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (12,364 samples, 14.28%)</title><rect x="714.2" y="659.0" width="168.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.2" y="670.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.07%)</title><rect x="714.2" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="717.2" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.07%)</title><rect x="714.2" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$130/712231129.get$Lambda (63 samples, 0.07%)</title><rect x="714.2" y="611.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.2" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$130 (62 samples, 0.07%)</title><rect x="714.2" y="595.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="717.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (268 samples, 0.31%)</title><rect x="715.0" y="643.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (268 samples, 0.31%)</title><rect x="715.0" y="627.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.0" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (140 samples, 0.16%)</title><rect x="715.0" y="611.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="718.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (124 samples, 0.14%)</title><rect x="717.0" y="611.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (124 samples, 0.14%)</title><rect x="717.0" y="595.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.0" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (122 samples, 0.14%)</title><rect x="717.0" y="579.0" width="1.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="720.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (7,494 samples, 8.66%)</title><rect x="718.7" y="643.0" width="102.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.7" y="654.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,494 samples, 8.66%)</title><rect x="718.7" y="627.0" width="102.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.7" y="638.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,494 samples, 8.66%)</title><rect x="718.7" y="611.0" width="102.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.7" y="622.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,494 samples, 8.66%)</title><rect x="718.7" y="595.0" width="102.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.7" y="606.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.05%)</title><rect x="718.7" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.05%)</title><rect x="718.7" y="563.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$127/484048613.get$Lambda (43 samples, 0.05%)</title><rect x="718.7" y="547.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$127 (42 samples, 0.05%)</title><rect x="718.7" y="531.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="721.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (248 samples, 0.29%)</title><rect x="719.3" y="579.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (248 samples, 0.29%)</title><rect x="719.3" y="563.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (115 samples, 0.13%)</title><rect x="719.3" y="547.0" width="1.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="722.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (129 samples, 0.15%)</title><rect x="720.9" y="547.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="723.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (129 samples, 0.15%)</title><rect x="720.9" y="531.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (127 samples, 0.15%)</title><rect x="720.9" y="515.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="723.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (274 samples, 0.32%)</title><rect x="722.6" y="579.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (274 samples, 0.32%)</title><rect x="722.6" y="563.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.6" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (147 samples, 0.17%)</title><rect x="722.6" y="547.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="725.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.14%)</title><rect x="724.7" y="547.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (125 samples, 0.14%)</title><rect x="724.7" y="531.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (124 samples, 0.14%)</title><rect x="724.7" y="515.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="727.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (181 samples, 0.21%)</title><rect x="726.4" y="579.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="729.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (441 samples, 0.51%)</title><rect x="728.9" y="579.0" width="6.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="731.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,428 samples, 3.96%)</title><rect x="734.9" y="579.0" width="46.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.9" y="590.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (358 samples, 0.41%)</title><rect x="734.9" y="563.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="737.9" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (295 samples, 0.34%)</title><rect x="734.9" y="547.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="737.9" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (110 samples, 0.13%)</title><rect x="734.9" y="531.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.9" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (109 samples, 0.13%)</title><rect x="734.9" y="515.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="737.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (185 samples, 0.21%)</title><rect x="736.4" y="531.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.4" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (185 samples, 0.21%)</title><rect x="736.4" y="515.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="739.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (63 samples, 0.07%)</title><rect x="738.9" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (63 samples, 0.07%)</title><rect x="738.9" y="531.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="741.9" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (63 samples, 0.07%)</title><rect x="738.9" y="515.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.9" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (63 samples, 0.07%)</title><rect x="738.9" y="499.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.9" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (63 samples, 0.07%)</title><rect x="738.9" y="483.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="741.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,567 samples, 1.81%)</title><rect x="739.8" y="563.0" width="21.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="742.8" y="574.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,567 samples, 1.81%)</title><rect x="739.8" y="547.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="742.8" y="558.0">j..</text>
</g>
<g>
<title>java.net.http.HttpHeaders (71 samples, 0.08%)</title><rect x="739.8" y="531.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="742.8" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (70 samples, 0.08%)</title><rect x="740.7" y="531.0" width="1.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="743.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (192 samples, 0.22%)</title><rect x="741.7" y="531.0" width="2.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="744.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (64 samples, 0.07%)</title><rect x="744.4" y="531.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="747.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.14%)</title><rect x="745.3" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="748.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.14%)</title><rect x="745.3" y="515.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (120 samples, 0.14%)</title><rect x="745.3" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.3" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (118 samples, 0.14%)</title><rect x="745.3" y="483.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="748.3" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (749 samples, 0.87%)</title><rect x="746.9" y="531.0" width="10.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (749 samples, 0.87%)</title><rect x="746.9" y="515.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.9" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (749 samples, 0.87%)</title><rect x="746.9" y="499.0" width="10.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="749.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (749 samples, 0.87%)</title><rect x="746.9" y="483.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.9" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (359 samples, 0.41%)</title><rect x="746.9" y="467.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="749.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (276 samples, 0.32%)</title><rect x="746.9" y="451.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (276 samples, 0.32%)</title><rect x="746.9" y="435.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (276 samples, 0.32%)</title><rect x="746.9" y="419.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="749.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (276 samples, 0.32%)</title><rect x="746.9" y="403.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="749.9" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (276 samples, 0.32%)</title><rect x="746.9" y="387.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (276 samples, 0.32%)</title><rect x="746.9" y="371.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.9" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (276 samples, 0.32%)</title><rect x="746.9" y="355.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="749.9" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (274 samples, 0.32%)</title><rect x="746.9" y="339.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="749.9" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (83 samples, 0.10%)</title><rect x="750.7" y="451.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.7" y="462.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (81 samples, 0.09%)</title><rect x="750.7" y="435.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="753.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.14%)</title><rect x="751.8" y="467.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.14%)</title><rect x="751.8" y="451.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (118 samples, 0.14%)</title><rect x="751.8" y="435.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.8" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (116 samples, 0.13%)</title><rect x="751.8" y="419.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="754.8" y="430.0"></text>
</g>
<g>
<title>java/util/List.copyOf (150 samples, 0.17%)</title><rect x="753.4" y="467.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.4" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (150 samples, 0.17%)</title><rect x="753.4" y="451.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.4" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (81 samples, 0.09%)</title><rect x="753.4" y="435.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (81 samples, 0.09%)</title><rect x="753.4" y="419.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (80 samples, 0.09%)</title><rect x="753.4" y="403.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="756.4" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (69 samples, 0.08%)</title><rect x="754.5" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.5" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (68 samples, 0.08%)</title><rect x="754.5" y="419.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="757.5" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (122 samples, 0.14%)</title><rect x="755.4" y="467.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="758.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (120 samples, 0.14%)</title><rect x="755.4" y="451.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="758.4" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (144 samples, 0.17%)</title><rect x="757.1" y="531.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.1" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (143 samples, 0.17%)</title><rect x="757.1" y="515.0" width="2.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="760.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (150 samples, 0.17%)</title><rect x="759.1" y="531.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (148 samples, 0.17%)</title><rect x="759.1" y="515.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="762.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (57 samples, 0.07%)</title><rect x="761.1" y="563.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="764.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,018 samples, 1.18%)</title><rect x="761.9" y="563.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="764.9" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,018 samples, 1.18%)</title><rect x="761.9" y="547.0" width="13.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.9" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (873 samples, 1.01%)</title><rect x="761.9" y="531.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.9" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (873 samples, 1.01%)</title><rect x="761.9" y="515.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="764.9" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (873 samples, 1.01%)</title><rect x="761.9" y="499.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="764.9" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (221 samples, 0.26%)</title><rect x="761.9" y="483.0" width="3.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="764.9" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (297 samples, 0.34%)</title><rect x="764.9" y="483.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.9" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (297 samples, 0.34%)</title><rect x="764.9" y="467.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.9" y="478.0"></text>
</g>
<g>
<title>byte[] (296 samples, 0.34%)</title><rect x="764.9" y="451.0" width="4.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="767.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (355 samples, 0.41%)</title><rect x="769.0" y="483.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (355 samples, 0.41%)</title><rect x="769.0" y="467.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (355 samples, 0.41%)</title><rect x="769.0" y="451.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="772.0" y="462.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.41%)</title><rect x="769.0" y="435.0" width="4.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="772.0" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (145 samples, 0.17%)</title><rect x="773.8" y="531.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="776.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (175 samples, 0.20%)</title><rect x="775.8" y="563.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (174 samples, 0.20%)</title><rect x="775.8" y="547.0" width="2.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="778.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (252 samples, 0.29%)</title><rect x="778.2" y="563.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="781.2" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (63 samples, 0.07%)</title><rect x="778.2" y="547.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="781.2" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (90 samples, 0.10%)</title><rect x="779.0" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="782.0" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (89 samples, 0.10%)</title><rect x="779.0" y="531.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (99 samples, 0.11%)</title><rect x="780.3" y="547.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="783.3" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (99 samples, 0.11%)</title><rect x="780.3" y="531.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="783.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,943 samples, 2.24%)</title><rect x="781.6" y="579.0" width="26.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="784.6" y="590.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (67 samples, 0.08%)</title><rect x="781.6" y="563.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="784.6" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.map (158 samples, 0.18%)</title><rect x="782.5" y="563.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="785.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$121/2034500691.apply (158 samples, 0.18%)</title><rect x="782.5" y="547.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="785.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (77 samples, 0.09%)</title><rect x="782.5" y="531.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="785.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (81 samples, 0.09%)</title><rect x="783.6" y="531.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (81 samples, 0.09%)</title><rect x="783.6" y="515.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="786.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (304 samples, 0.35%)</title><rect x="784.7" y="563.0" width="4.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="787.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (65 samples, 0.08%)</title><rect x="788.8" y="563.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (65 samples, 0.08%)</title><rect x="788.8" y="547.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="791.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (52 samples, 0.06%)</title><rect x="789.7" y="563.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.7" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (52 samples, 0.06%)</title><rect x="789.7" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.7" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (52 samples, 0.06%)</title><rect x="789.7" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="792.7" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (52 samples, 0.06%)</title><rect x="789.7" y="515.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="792.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,296 samples, 1.50%)</title><rect x="790.4" y="563.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,296 samples, 1.50%)</title><rect x="790.4" y="547.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (107 samples, 0.12%)</title><rect x="790.4" y="531.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="793.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.13%)</title><rect x="791.9" y="531.0" width="1.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="794.9" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (111 samples, 0.13%)</title><rect x="793.4" y="531.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="796.4" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (618 samples, 0.71%)</title><rect x="795.0" y="531.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (618 samples, 0.71%)</title><rect x="795.0" y="515.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.0" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (618 samples, 0.71%)</title><rect x="795.0" y="499.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.0" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (618 samples, 0.71%)</title><rect x="795.0" y="483.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.0" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (615 samples, 0.71%)</title><rect x="795.0" y="467.0" width="8.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.0" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (140 samples, 0.16%)</title><rect x="803.4" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (140 samples, 0.16%)</title><rect x="803.4" y="515.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (44 samples, 0.05%)</title><rect x="803.4" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (44 samples, 0.05%)</title><rect x="803.4" y="483.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="806.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (96 samples, 0.11%)</title><rect x="804.0" y="499.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (95 samples, 0.11%)</title><rect x="804.0" y="483.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="807.0" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (205 samples, 0.24%)</title><rect x="805.3" y="531.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.3" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (205 samples, 0.24%)</title><rect x="805.3" y="515.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.3" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (202 samples, 0.23%)</title><rect x="805.3" y="499.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="808.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (934 samples, 1.08%)</title><rect x="808.1" y="579.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (215 samples, 0.25%)</title><rect x="808.1" y="563.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (114 samples, 0.13%)</title><rect x="808.1" y="547.0" width="1.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="811.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (100 samples, 0.12%)</title><rect x="809.7" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (100 samples, 0.12%)</title><rect x="809.7" y="531.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (98 samples, 0.11%)</title><rect x="809.7" y="515.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="812.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (127 samples, 0.15%)</title><rect x="811.0" y="563.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="814.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (591 samples, 0.68%)</title><rect x="812.8" y="563.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="815.8" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.09%)</title><rect x="812.8" y="547.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.09%)</title><rect x="812.8" y="531.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="815.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.get$Lambda (52 samples, 0.06%)</title><rect x="812.8" y="515.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.8" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$123 (52 samples, 0.06%)</title><rect x="812.8" y="499.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="815.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.get$Lambda (29 samples, 0.03%)</title><rect x="813.5" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$125 (29 samples, 0.03%)</title><rect x="813.5" y="499.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="816.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (510 samples, 0.59%)</title><rect x="813.9" y="547.0" width="6.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (510 samples, 0.59%)</title><rect x="813.9" y="531.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="816.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (284 samples, 0.33%)</title><rect x="813.9" y="515.0" width="3.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="816.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.26%)</title><rect x="817.7" y="515.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (225 samples, 0.26%)</title><rect x="817.7" y="499.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="820.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (225 samples, 0.26%)</title><rect x="817.7" y="483.0" width="3.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="820.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (4,539 samples, 5.24%)</title><rect x="820.8" y="643.0" width="61.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.8" y="654.0">ru/mai..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (168 samples, 0.19%)</title><rect x="820.8" y="627.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (165 samples, 0.19%)</title><rect x="820.8" y="611.0" width="2.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="823.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,706 samples, 1.97%)</title><rect x="823.1" y="627.0" width="23.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.1" y="638.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (125 samples, 0.14%)</title><rect x="823.1" y="611.0" width="1.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="826.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,580 samples, 1.82%)</title><rect x="824.8" y="611.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.8" y="622.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,438 samples, 1.66%)</title><rect x="824.8" y="595.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="827.8" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,438 samples, 1.66%)</title><rect x="824.8" y="579.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="827.8" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (76 samples, 0.09%)</title><rect x="824.8" y="563.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="827.8" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (111 samples, 0.13%)</title><rect x="825.9" y="563.0" width="1.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="828.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (142 samples, 0.16%)</title><rect x="827.4" y="563.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="830.4" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (66 samples, 0.08%)</title><rect x="829.4" y="563.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="832.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (127 samples, 0.15%)</title><rect x="830.3" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="833.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (127 samples, 0.15%)</title><rect x="830.3" y="547.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (127 samples, 0.15%)</title><rect x="830.3" y="531.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.3" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (126 samples, 0.15%)</title><rect x="830.3" y="515.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="833.3" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (129 samples, 0.15%)</title><rect x="832.0" y="563.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.0" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (127 samples, 0.15%)</title><rect x="832.0" y="547.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="835.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (602 samples, 0.70%)</title><rect x="833.8" y="563.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (602 samples, 0.70%)</title><rect x="833.8" y="547.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.8" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (602 samples, 0.70%)</title><rect x="833.8" y="531.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.08%)</title><rect x="833.8" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.8" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.08%)</title><rect x="833.8" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (70 samples, 0.08%)</title><rect x="833.8" y="483.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.8" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (69 samples, 0.08%)</title><rect x="833.8" y="467.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="836.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (202 samples, 0.23%)</title><rect x="834.7" y="515.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (202 samples, 0.23%)</title><rect x="834.7" y="499.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="837.7" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (202 samples, 0.23%)</title><rect x="834.7" y="483.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="837.7" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (202 samples, 0.23%)</title><rect x="834.7" y="467.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.7" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (202 samples, 0.23%)</title><rect x="834.7" y="451.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.7" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (202 samples, 0.23%)</title><rect x="834.7" y="435.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (202 samples, 0.23%)</title><rect x="834.7" y="419.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="837.7" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (202 samples, 0.23%)</title><rect x="834.7" y="403.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (201 samples, 0.23%)</title><rect x="834.7" y="387.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="837.7" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (157 samples, 0.18%)</title><rect x="837.5" y="515.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.5" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (157 samples, 0.18%)</title><rect x="837.5" y="499.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.5" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (80 samples, 0.09%)</title><rect x="837.5" y="483.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="840.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (80 samples, 0.09%)</title><rect x="837.5" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (79 samples, 0.09%)</title><rect x="837.5" y="451.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="840.5" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (77 samples, 0.09%)</title><rect x="838.6" y="483.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="841.6" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (76 samples, 0.09%)</title><rect x="838.6" y="467.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="841.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (173 samples, 0.20%)</title><rect x="839.6" y="515.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (172 samples, 0.20%)</title><rect x="839.6" y="499.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="842.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (180 samples, 0.21%)</title><rect x="842.0" y="563.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.0" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (179 samples, 0.21%)</title><rect x="842.0" y="547.0" width="2.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="845.0" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (142 samples, 0.16%)</title><rect x="844.4" y="595.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.4" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (142 samples, 0.16%)</title><rect x="844.4" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="847.4" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (137 samples, 0.16%)</title><rect x="844.4" y="563.0" width="1.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="847.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (161 samples, 0.19%)</title><rect x="846.4" y="627.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (161 samples, 0.19%)</title><rect x="846.4" y="611.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="849.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (161 samples, 0.19%)</title><rect x="846.4" y="595.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.4" y="606.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.06%)</title><rect x="846.4" y="579.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="849.4" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (103 samples, 0.12%)</title><rect x="847.1" y="579.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.1" y="590.0"></text>
</g>
<g>
<title>byte[] (101 samples, 0.12%)</title><rect x="847.1" y="563.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="850.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (2,504 samples, 2.89%)</title><rect x="848.6" y="627.0" width="34.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="851.6" y="638.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (300 samples, 0.35%)</title><rect x="848.6" y="611.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (300 samples, 0.35%)</title><rect x="848.6" y="595.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (300 samples, 0.35%)</title><rect x="848.6" y="579.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.6" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (300 samples, 0.35%)</title><rect x="848.6" y="563.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (92 samples, 0.11%)</title><rect x="848.6" y="547.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String (90 samples, 0.10%)</title><rect x="848.6" y="531.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="851.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (208 samples, 0.24%)</title><rect x="849.8" y="547.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (208 samples, 0.24%)</title><rect x="849.8" y="531.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.8" y="542.0"></text>
</g>
<g>
<title>byte[] (206 samples, 0.24%)</title><rect x="849.8" y="515.0" width="2.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="852.8" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (1,586 samples, 1.83%)</title><rect x="852.6" y="611.0" width="21.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="855.6" y="622.0">j..</text>
</g>
<g>
<title>java.net.URI (266 samples, 0.31%)</title><rect x="852.6" y="595.0" width="3.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="855.6" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,318 samples, 1.52%)</title><rect x="856.3" y="595.0" width="18.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.3" y="606.0"></text>
</g>
<g>
<title>java.net.URI$Parser (107 samples, 0.12%)</title><rect x="856.3" y="579.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="859.3" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1,208 samples, 1.40%)</title><rect x="857.8" y="579.0" width="16.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.8" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (219 samples, 0.25%)</title><rect x="857.8" y="563.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (219 samples, 0.25%)</title><rect x="857.8" y="547.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.13%)</title><rect x="857.8" y="531.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="860.8" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (107 samples, 0.12%)</title><rect x="859.3" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.3" y="542.0"></text>
</g>
<g>
<title>byte[] (103 samples, 0.12%)</title><rect x="859.3" y="515.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="862.3" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (989 samples, 1.14%)</title><rect x="860.8" y="563.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.8" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (462 samples, 0.53%)</title><rect x="860.8" y="547.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="863.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (462 samples, 0.53%)</title><rect x="860.8" y="531.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="863.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (217 samples, 0.25%)</title><rect x="860.8" y="515.0" width="2.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="863.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (237 samples, 0.27%)</title><rect x="863.8" y="515.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.8" y="526.0"></text>
</g>
<g>
<title>byte[] (228 samples, 0.26%)</title><rect x="863.8" y="499.0" width="3.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="866.8" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (527 samples, 0.61%)</title><rect x="867.1" y="547.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.1" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (308 samples, 0.36%)</title><rect x="867.1" y="531.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="870.1" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (308 samples, 0.36%)</title><rect x="867.1" y="515.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="870.1" y="526.0"></text>
</g>
<g>
<title>java.lang.String (161 samples, 0.19%)</title><rect x="867.1" y="499.0" width="2.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="870.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (142 samples, 0.16%)</title><rect x="869.3" y="499.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="872.3" y="510.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.16%)</title><rect x="869.3" y="483.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="872.3" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (219 samples, 0.25%)</title><rect x="871.3" y="531.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.3" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (219 samples, 0.25%)</title><rect x="871.3" y="515.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (219 samples, 0.25%)</title><rect x="871.3" y="499.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="874.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (219 samples, 0.25%)</title><rect x="871.3" y="483.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="874.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (72 samples, 0.08%)</title><rect x="871.3" y="467.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="874.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.17%)</title><rect x="872.3" y="467.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="875.3" y="478.0"></text>
</g>
<g>
<title>byte[] (139 samples, 0.16%)</title><rect x="872.3" y="451.0" width="1.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="875.3" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (323 samples, 0.37%)</title><rect x="874.3" y="611.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (118 samples, 0.14%)</title><rect x="874.3" y="595.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="877.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (203 samples, 0.23%)</title><rect x="875.9" y="595.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (44 samples, 0.05%)</title><rect x="875.9" y="579.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="878.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (157 samples, 0.18%)</title><rect x="876.5" y="579.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="879.5" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (154 samples, 0.18%)</title><rect x="876.5" y="563.0" width="2.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="879.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (295 samples, 0.34%)</title><rect x="878.7" y="611.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (295 samples, 0.34%)</title><rect x="878.7" y="595.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="881.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (295 samples, 0.34%)</title><rect x="878.7" y="579.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="881.7" y="590.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (295 samples, 0.34%)</title><rect x="878.7" y="563.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (133 samples, 0.15%)</title><rect x="878.7" y="547.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (129 samples, 0.15%)</title><rect x="878.7" y="531.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="881.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$112/1281322474.apply (162 samples, 0.19%)</title><rect x="880.5" y="547.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (162 samples, 0.19%)</title><rect x="880.5" y="531.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (83 samples, 0.10%)</title><rect x="880.5" y="515.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="883.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (76 samples, 0.09%)</title><rect x="881.6" y="515.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.6" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (73 samples, 0.08%)</title><rect x="881.6" y="499.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="884.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (141 samples, 0.16%)</title><rect x="882.7" y="659.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (141 samples, 0.16%)</title><rect x="882.7" y="643.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="885.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.05%)</title><rect x="882.7" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.05%)</title><rect x="882.7" y="611.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$111/1623904019.get$Lambda (40 samples, 0.05%)</title><rect x="882.7" y="595.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.7" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$111 (40 samples, 0.05%)</title><rect x="882.7" y="579.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="885.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (101 samples, 0.12%)</title><rect x="883.2" y="627.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (101 samples, 0.12%)</title><rect x="883.2" y="611.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.2" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (62 samples, 0.07%)</title><rect x="883.2" y="595.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="886.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (39 samples, 0.05%)</title><rect x="884.1" y="595.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="887.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (786 samples, 0.91%)</title><rect x="884.6" y="659.0" width="10.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="887.6" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (54 samples, 0.06%)</title><rect x="884.6" y="643.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="887.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (42 samples, 0.05%)</title><rect x="885.4" y="643.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="888.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (56 samples, 0.06%)</title><rect x="886.0" y="643.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="889.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (553 samples, 0.64%)</title><rect x="886.8" y="643.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$131/220516475.accept (553 samples, 0.64%)</title><rect x="886.8" y="627.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (553 samples, 0.64%)</title><rect x="886.8" y="611.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (177 samples, 0.20%)</title><rect x="886.8" y="595.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (177 samples, 0.20%)</title><rect x="886.8" y="579.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.get$Lambda (177 samples, 0.20%)</title><rect x="886.8" y="563.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="889.8" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.Futures$$Lambda$132 (172 samples, 0.20%)</title><rect x="886.8" y="547.0" width="2.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="889.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (376 samples, 0.43%)</title><rect x="889.2" y="595.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="892.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (376 samples, 0.43%)</title><rect x="889.2" y="579.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.2" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (203 samples, 0.23%)</title><rect x="889.2" y="563.0" width="2.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="892.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (33 samples, 0.04%)</title><rect x="892.0" y="563.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (31 samples, 0.04%)</title><rect x="892.0" y="547.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="895.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (135 samples, 0.16%)</title><rect x="892.5" y="563.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (135 samples, 0.16%)</title><rect x="892.5" y="547.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (132 samples, 0.15%)</title><rect x="892.5" y="531.0" width="1.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="895.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (73 samples, 0.08%)</title><rect x="894.3" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="897.3" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.03%)</title><rect x="894.3" y="627.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="897.3" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (47 samples, 0.05%)</title><rect x="894.6" y="627.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="897.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (1,457 samples, 1.68%)</title><rect x="895.3" y="659.0" width="19.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="898.3" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap (75 samples, 0.09%)</title><rect x="895.3" y="643.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="898.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashSet (29 samples, 0.03%)</title><rect x="896.3" y="643.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="899.3" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (96 samples, 0.11%)</title><rect x="896.7" y="643.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="899.7" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (95 samples, 0.11%)</title><rect x="896.7" y="627.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="899.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (241 samples, 0.28%)</title><rect x="898.0" y="643.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="901.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (241 samples, 0.28%)</title><rect x="898.0" y="627.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="901.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (241 samples, 0.28%)</title><rect x="898.0" y="611.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (241 samples, 0.28%)</title><rect x="898.0" y="595.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="901.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (241 samples, 0.28%)</title><rect x="898.0" y="579.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="901.0" y="590.0"></text>
</g>
<g>
<title>byte[] (240 samples, 0.28%)</title><rect x="898.0" y="563.0" width="3.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="901.0" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (148 samples, 0.17%)</title><rect x="901.3" y="643.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.3" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.09%)</title><rect x="901.3" y="627.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="904.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (74 samples, 0.09%)</title><rect x="902.3" y="627.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.3" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (74 samples, 0.09%)</title><rect x="902.3" y="611.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="905.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (29 samples, 0.03%)</title><rect x="903.3" y="643.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (28 samples, 0.03%)</title><rect x="903.3" y="627.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="906.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (322 samples, 0.37%)</title><rect x="903.7" y="643.0" width="4.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (322 samples, 0.37%)</title><rect x="903.7" y="627.0" width="4.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="906.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (193 samples, 0.22%)</title><rect x="903.7" y="611.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.7" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (193 samples, 0.22%)</title><rect x="903.7" y="595.0" width="2.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="906.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (129 samples, 0.15%)</title><rect x="906.4" y="611.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="909.4" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (129 samples, 0.15%)</title><rect x="906.4" y="595.0" width="1.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="909.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (83 samples, 0.10%)</title><rect x="908.1" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.1" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (83 samples, 0.10%)</title><rect x="908.1" y="627.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="911.1" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (318 samples, 0.37%)</title><rect x="909.3" y="643.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="912.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (318 samples, 0.37%)</title><rect x="909.3" y="627.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="912.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (318 samples, 0.37%)</title><rect x="909.3" y="611.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="912.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (152 samples, 0.18%)</title><rect x="909.3" y="595.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (152 samples, 0.18%)</title><rect x="909.3" y="579.0" width="2.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="912.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (166 samples, 0.19%)</title><rect x="911.3" y="595.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="914.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (166 samples, 0.19%)</title><rect x="911.3" y="579.0" width="2.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="914.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (116 samples, 0.13%)</title><rect x="913.6" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (116 samples, 0.13%)</title><rect x="913.6" y="627.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.6" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (116 samples, 0.13%)</title><rect x="913.6" y="611.0" width="1.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="916.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (986 samples, 1.14%)</title><rect x="915.2" y="707.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (986 samples, 1.14%)</title><rect x="915.2" y="691.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (986 samples, 1.14%)</title><rect x="915.2" y="675.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.2" y="686.0"></text>
</g>
<g>
<title>java.lang.String (761 samples, 0.88%)</title><rect x="915.2" y="659.0" width="10.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="918.2" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (220 samples, 0.25%)</title><rect x="925.6" y="659.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.6" y="670.0"></text>
</g>
<g>
<title>byte[] (215 samples, 0.25%)</title><rect x="925.6" y="643.0" width="2.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="928.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,642 samples, 6.52%)</title><rect x="928.6" y="739.0" width="76.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.6" y="750.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.Request (485 samples, 0.56%)</title><rect x="928.6" y="723.0" width="6.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="931.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,459 samples, 1.69%)</title><rect x="935.2" y="723.0" width="19.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.2" y="734.0"></text>
</g>
<g>
<title>java.lang.String[] (553 samples, 0.64%)</title><rect x="935.2" y="707.0" width="7.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="938.2" y="718.0"></text>
</g>
<g>
<title>java.lang.String[] (906 samples, 1.05%)</title><rect x="942.8" y="707.0" width="12.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.8" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,696 samples, 4.27%)</title><rect x="955.1" y="723.0" width="50.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="958.1" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,696 samples, 4.27%)</title><rect x="955.1" y="707.0" width="50.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.1" y="718.0">one/n..</text>
</g>
<g>
<title>char[] (983 samples, 1.14%)</title><rect x="955.1" y="691.0" width="13.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="958.1" y="702.0"></text>
</g>
<g>
<title>char[] (236 samples, 0.27%)</title><rect x="968.5" y="691.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="971.5" y="702.0"></text>
</g>
<g>
<title>java.lang.String (1,413 samples, 1.63%)</title><rect x="971.7" y="691.0" width="19.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="974.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,062 samples, 1.23%)</title><rect x="991.0" y="691.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="994.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,062 samples, 1.23%)</title><rect x="991.0" y="675.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,062 samples, 1.23%)</title><rect x="991.0" y="659.0" width="14.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.0" y="670.0"></text>
</g>
<g>
<title>byte[] (1,059 samples, 1.22%)</title><rect x="991.0" y="643.0" width="14.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="994.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (667 samples, 0.77%)</title><rect x="1005.5" y="739.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.5" y="750.0"></text>
</g>
<g>
<title>byte[] (662 samples, 0.76%)</title><rect x="1005.5" y="723.0" width="9.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1008.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (560 samples, 0.65%)</title><rect x="1014.6" y="739.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1017.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (560 samples, 0.65%)</title><rect x="1014.6" y="723.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1017.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (560 samples, 0.65%)</title><rect x="1014.6" y="707.0" width="7.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1017.6" y="718.0"></text>
</g>
<g>
<title>java.lang.String (350 samples, 0.40%)</title><rect x="1014.6" y="691.0" width="4.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1017.6" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (204 samples, 0.24%)</title><rect x="1019.5" y="691.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.5" y="702.0"></text>
</g>
<g>
<title>byte[] (199 samples, 0.23%)</title><rect x="1019.5" y="675.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1022.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,309 samples, 14.22%)</title><rect x="1022.2" y="739.0" width="167.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1025.2" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (12,309 samples, 14.22%)</title><rect x="1022.2" y="723.0" width="167.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1025.2" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (4,634 samples, 5.35%)</title><rect x="1022.2" y="707.0" width="63.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1025.2" y="718.0">char[]</text>
</g>
<g>
<title>char[] (567 samples, 0.65%)</title><rect x="1085.4" y="707.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1088.4" y="718.0"></text>
</g>
<g>
<title>java.lang.String (3,448 samples, 3.98%)</title><rect x="1093.1" y="707.0" width="47.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1096.1" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,643 samples, 4.21%)</title><rect x="1140.3" y="707.0" width="49.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1143.3" y="718.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,643 samples, 4.21%)</title><rect x="1140.3" y="691.0" width="49.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.3" y="702.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,643 samples, 4.21%)</title><rect x="1140.3" y="675.0" width="49.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.3" y="686.0">java/..</text>
</g>
<g>
<title>byte[] (3,563 samples, 4.12%)</title><rect x="1140.3" y="659.0" width="48.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1143.3" y="670.0">byte[]</text>
</g>
<g>
<title>byte[] (80 samples, 0.09%)</title><rect x="1188.9" y="659.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.9" y="670.0"></text>
</g>
</g>
</svg>
