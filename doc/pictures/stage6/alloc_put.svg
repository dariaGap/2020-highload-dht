<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (33,648 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (18,910 samples, 56.20%)</title><rect x="10.0" y="803.0" width="663.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,910 samples, 56.20%)</title><rect x="10.0" y="787.0" width="663.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,910 samples, 56.20%)</title><rect x="10.0" y="771.0" width="663.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,654 samples, 37.61%)</title><rect x="10.0" y="755.0" width="443.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,981 samples, 14.80%)</title><rect x="10.0" y="739.0" width="174.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/concurrent/C..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,251 samples, 6.69%)</title><rect x="10.0" y="723.0" width="79.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (12 samples, 0.04%)</title><rect x="10.0" y="707.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.apply (2,239 samples, 6.65%)</title><rect x="10.5" y="707.0" width="78.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.5" y="718.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,239 samples, 6.65%)</title><rect x="10.5" y="691.0" width="78.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,239 samples, 6.65%)</title><rect x="10.5" y="675.0" width="78.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.5" y="686.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.07%)</title><rect x="10.5" y="659.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.07%)</title><rect x="10.5" y="643.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.get$Lambda (14 samples, 0.04%)</title><rect x="10.5" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$243 (14 samples, 0.04%)</title><rect x="10.5" y="611.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.get$Lambda (10 samples, 0.03%)</title><rect x="10.9" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$245 (10 samples, 0.03%)</title><rect x="10.9" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="13.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (43 samples, 0.13%)</title><rect x="11.3" y="659.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (43 samples, 0.13%)</title><rect x="11.3" y="643.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.3" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (20 samples, 0.06%)</title><rect x="11.3" y="627.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="14.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="12.0" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="12.0" y="611.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="12.0" y="595.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="15.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (70 samples, 0.21%)</title><rect x="12.8" y="659.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="15.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (70 samples, 0.21%)</title><rect x="12.8" y="643.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (34 samples, 0.10%)</title><rect x="12.8" y="627.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="15.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.11%)</title><rect x="14.0" y="627.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (36 samples, 0.11%)</title><rect x="14.0" y="611.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (36 samples, 0.11%)</title><rect x="14.0" y="595.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="17.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,026 samples, 6.02%)</title><rect x="15.3" y="659.0" width="71.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="670.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,026 samples, 6.02%)</title><rect x="15.3" y="643.0" width="71.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.3" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,026 samples, 6.02%)</title><rect x="15.3" y="627.0" width="71.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.3" y="638.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.10%)</title><rect x="15.3" y="611.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="18.3" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.10%)</title><rect x="15.3" y="595.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.get$Lambda (11 samples, 0.03%)</title><rect x="15.3" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="18.3" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$140 (11 samples, 0.03%)</title><rect x="15.3" y="563.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="18.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.get$Lambda (13 samples, 0.04%)</title><rect x="15.6" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$143 (13 samples, 0.04%)</title><rect x="15.6" y="563.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.get$Lambda (9 samples, 0.03%)</title><rect x="16.1" y="579.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$210 (9 samples, 0.03%)</title><rect x="16.1" y="563.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="19.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,397 samples, 4.15%)</title><rect x="16.4" y="611.0" width="49.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.4" y="622.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,397 samples, 4.15%)</title><rect x="16.4" y="595.0" width="49.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.4" y="606.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,384 samples, 4.11%)</title><rect x="16.4" y="579.0" width="48.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.4" y="590.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.apply (1,384 samples, 4.11%)</title><rect x="16.4" y="563.0" width="48.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.4" y="574.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,384 samples, 4.11%)</title><rect x="16.4" y="547.0" width="48.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.4" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,384 samples, 4.11%)</title><rect x="16.4" y="531.0" width="48.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.4" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (1,384 samples, 4.11%)</title><rect x="16.4" y="515.0" width="48.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="19.4" y="526.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,384 samples, 4.11%)</title><rect x="16.4" y="499.0" width="48.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="19.4" y="510.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="16.4" y="483.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="16.4" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1550627049.get$Lambda (12 samples, 0.04%)</title><rect x="16.4" y="451.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$241 (12 samples, 0.04%)</title><rect x="16.4" y="435.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (40 samples, 0.12%)</title><rect x="16.8" y="483.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="19.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (40 samples, 0.12%)</title><rect x="16.8" y="467.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (16 samples, 0.05%)</title><rect x="16.8" y="451.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="19.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="17.6" y="451.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="17.6" y="435.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="17.6" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="20.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (34 samples, 0.10%)</title><rect x="18.2" y="483.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (34 samples, 0.10%)</title><rect x="18.2" y="467.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (23 samples, 0.07%)</title><rect x="18.2" y="451.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="21.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="19.0" y="451.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (11 samples, 0.03%)</title><rect x="19.0" y="435.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (11 samples, 0.03%)</title><rect x="19.0" y="419.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="22.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,298 samples, 3.86%)</title><rect x="19.4" y="483.0" width="45.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.4" y="494.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="19.4" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.4" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="19.4" y="451.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$238/349903448.get$Lambda (8 samples, 0.02%)</title><rect x="19.6" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$238 (8 samples, 0.02%)</title><rect x="19.6" y="419.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="22.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,070 samples, 3.18%)</title><rect x="19.9" y="467.0" width="37.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.9" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,070 samples, 3.18%)</title><rect x="19.9" y="451.0" width="37.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="22.9" y="462.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (14 samples, 0.04%)</title><rect x="19.9" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="22.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (1,029 samples, 3.06%)</title><rect x="20.3" y="435.0" width="36.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.3" y="446.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,029 samples, 3.06%)</title><rect x="20.3" y="419.0" width="36.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.3" y="430.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.11%)</title><rect x="20.6" y="403.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.11%)</title><rect x="20.6" y="387.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.07%)</title><rect x="20.6" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="23.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="21.4" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="24.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="21.4" y="355.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.4" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="21.4" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="24.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="21.8" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="24.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (25 samples, 0.07%)</title><rect x="22.3" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (8 samples, 0.02%)</title><rect x="22.3" y="387.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="25.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (17 samples, 0.05%)</title><rect x="22.6" y="387.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (16 samples, 0.05%)</title><rect x="22.6" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (16 samples, 0.05%)</title><rect x="22.6" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (16 samples, 0.05%)</title><rect x="22.6" y="339.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (16 samples, 0.05%)</title><rect x="22.6" y="323.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.6" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.05%)</title><rect x="22.6" y="307.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="25.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (48 samples, 0.14%)</title><rect x="23.2" y="403.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (48 samples, 0.14%)</title><rect x="23.2" y="387.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (17 samples, 0.05%)</title><rect x="23.2" y="371.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (17 samples, 0.05%)</title><rect x="23.2" y="355.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.05%)</title><rect x="23.2" y="339.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (17 samples, 0.05%)</title><rect x="23.2" y="323.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="26.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (31 samples, 0.09%)</title><rect x="23.8" y="371.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (31 samples, 0.09%)</title><rect x="23.8" y="355.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="26.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (24 samples, 0.07%)</title><rect x="23.8" y="339.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="26.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (900 samples, 2.67%)</title><rect x="24.9" y="403.0" width="31.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.9" y="414.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (16 samples, 0.05%)</title><rect x="24.9" y="387.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="27.9" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (26 samples, 0.08%)</title><rect x="25.4" y="387.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.4" y="398.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.04%)</title><rect x="25.4" y="371.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="28.4" y="382.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="25.9" y="371.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="28.9" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (64 samples, 0.19%)</title><rect x="26.3" y="387.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="29.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (64 samples, 0.19%)</title><rect x="26.3" y="371.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="29.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (64 samples, 0.19%)</title><rect x="26.3" y="355.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="29.3" y="366.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.19%)</title><rect x="26.3" y="339.0" width="2.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.3" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (29 samples, 0.09%)</title><rect x="28.6" y="387.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.6" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (29 samples, 0.09%)</title><rect x="28.6" y="371.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.6" y="382.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="28.6" y="355.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="31.6" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (60 samples, 0.18%)</title><rect x="29.6" y="387.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.6" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (60 samples, 0.18%)</title><rect x="29.6" y="371.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (60 samples, 0.18%)</title><rect x="29.6" y="355.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.6" y="366.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.18%)</title><rect x="29.6" y="339.0" width="2.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="32.6" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.07%)</title><rect x="31.7" y="387.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (24 samples, 0.07%)</title><rect x="31.7" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.7" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (24 samples, 0.07%)</title><rect x="31.7" y="355.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="34.7" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (8 samples, 0.02%)</title><rect x="32.5" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="35.5" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (8 samples, 0.02%)</title><rect x="32.5" y="371.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="35.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (539 samples, 1.60%)</title><rect x="32.8" y="387.0" width="18.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.8" y="398.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (10 samples, 0.03%)</title><rect x="32.8" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="32.8" y="355.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="32.8" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="35.8" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/792662632.get$Lambda (10 samples, 0.03%)</title><rect x="32.8" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.8" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$255 (10 samples, 0.03%)</title><rect x="32.8" y="307.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="35.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (284 samples, 0.84%)</title><rect x="33.2" y="371.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (175 samples, 0.52%)</title><rect x="33.2" y="355.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.2" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (175 samples, 0.52%)</title><rect x="33.2" y="339.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.2" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (175 samples, 0.52%)</title><rect x="33.2" y="323.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.2" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (175 samples, 0.52%)</title><rect x="33.2" y="307.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.2" y="318.0"></text>
</g>
<g>
<title>byte[] (175 samples, 0.52%)</title><rect x="33.2" y="291.0" width="6.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="36.2" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (17 samples, 0.05%)</title><rect x="39.3" y="355.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.3" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (17 samples, 0.05%)</title><rect x="39.3" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (17 samples, 0.05%)</title><rect x="39.3" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="42.3" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (17 samples, 0.05%)</title><rect x="39.3" y="307.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="42.3" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (29 samples, 0.09%)</title><rect x="39.9" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.9" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (17 samples, 0.05%)</title><rect x="39.9" y="339.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="42.9" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (12 samples, 0.04%)</title><rect x="40.5" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.5" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (12 samples, 0.04%)</title><rect x="40.5" y="323.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="43.5" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/792662632.test (63 samples, 0.19%)</title><rect x="40.9" y="355.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.9" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (63 samples, 0.19%)</title><rect x="40.9" y="339.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1127224355.test (63 samples, 0.19%)</title><rect x="40.9" y="323.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (63 samples, 0.19%)</title><rect x="40.9" y="307.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.9" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/416153648.test (63 samples, 0.19%)</title><rect x="40.9" y="291.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.9" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (63 samples, 0.19%)</title><rect x="40.9" y="275.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/815674463.test (63 samples, 0.19%)</title><rect x="40.9" y="259.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (63 samples, 0.19%)</title><rect x="40.9" y="243.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.9" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (63 samples, 0.19%)</title><rect x="40.9" y="227.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (63 samples, 0.19%)</title><rect x="40.9" y="211.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.09%)</title><rect x="40.9" y="195.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="43.9" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.10%)</title><rect x="42.0" y="195.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.0" y="206.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.10%)</title><rect x="42.0" y="179.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="45.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (245 samples, 0.73%)</title><rect x="43.1" y="371.0" width="8.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (245 samples, 0.73%)</title><rect x="43.1" y="355.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (245 samples, 0.73%)</title><rect x="43.1" y="339.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.1" y="350.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (8 samples, 0.02%)</title><rect x="43.1" y="323.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="46.1" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.05%)</title><rect x="43.4" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="46.4" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (21 samples, 0.06%)</title><rect x="44.0" y="323.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="47.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.05%)</title><rect x="44.8" y="323.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.05%)</title><rect x="44.8" y="307.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (18 samples, 0.05%)</title><rect x="44.8" y="291.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.8" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (18 samples, 0.05%)</title><rect x="44.8" y="275.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="47.8" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (16 samples, 0.05%)</title><rect x="45.5" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.5" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (16 samples, 0.05%)</title><rect x="45.5" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="48.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (137 samples, 0.41%)</title><rect x="46.0" y="323.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.0" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (137 samples, 0.41%)</title><rect x="46.0" y="307.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="49.0" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (137 samples, 0.41%)</title><rect x="46.0" y="291.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.0" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (22 samples, 0.07%)</title><rect x="46.0" y="275.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.0" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (22 samples, 0.07%)</title><rect x="46.0" y="259.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.0" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (22 samples, 0.07%)</title><rect x="46.0" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.0" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.07%)</title><rect x="46.0" y="227.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.0" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (22 samples, 0.07%)</title><rect x="46.0" y="211.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.0" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.07%)</title><rect x="46.0" y="195.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.0" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (22 samples, 0.07%)</title><rect x="46.0" y="179.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (22 samples, 0.07%)</title><rect x="46.0" y="163.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (22 samples, 0.07%)</title><rect x="46.0" y="147.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="49.0" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (72 samples, 0.21%)</title><rect x="46.8" y="275.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.8" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (72 samples, 0.21%)</title><rect x="46.8" y="259.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="49.8" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (34 samples, 0.10%)</title><rect x="46.8" y="243.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.8" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.10%)</title><rect x="46.8" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.10%)</title><rect x="46.8" y="211.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="49.8" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (38 samples, 0.11%)</title><rect x="48.0" y="243.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.0" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (38 samples, 0.11%)</title><rect x="48.0" y="227.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="51.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (43 samples, 0.13%)</title><rect x="49.3" y="275.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.3" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (43 samples, 0.13%)</title><rect x="49.3" y="259.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="52.3" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (26 samples, 0.08%)</title><rect x="50.8" y="323.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.8" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (26 samples, 0.08%)</title><rect x="50.8" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="53.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (37 samples, 0.11%)</title><rect x="51.7" y="387.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.09%)</title><rect x="51.9" y="371.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="54.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (31 samples, 0.09%)</title><rect x="51.9" y="355.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (31 samples, 0.09%)</title><rect x="51.9" y="339.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.9" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.09%)</title><rect x="51.9" y="323.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.9" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.04%)</title><rect x="51.9" y="307.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.9" y="318.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="51.9" y="291.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="54.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.05%)</title><rect x="52.4" y="307.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.05%)</title><rect x="52.4" y="291.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.4" y="302.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="52.4" y="275.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="55.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (13 samples, 0.04%)</title><rect x="53.0" y="387.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (13 samples, 0.04%)</title><rect x="53.0" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="56.0" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="53.0" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (13 samples, 0.04%)</title><rect x="53.0" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (13 samples, 0.04%)</title><rect x="53.0" y="323.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="53.0" y="307.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.04%)</title><rect x="53.0" y="291.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.04%)</title><rect x="53.0" y="275.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.0" y="286.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="53.0" y="259.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="56.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (84 samples, 0.25%)</title><rect x="53.5" y="387.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (21 samples, 0.06%)</title><rect x="53.5" y="371.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="56.5" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (24 samples, 0.07%)</title><rect x="54.2" y="371.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.2" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.07%)</title><rect x="54.2" y="355.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="57.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (39 samples, 0.12%)</title><rect x="55.1" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="58.1" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (39 samples, 0.12%)</title><rect x="55.1" y="355.0" width="1.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="58.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.08%)</title><rect x="56.4" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.08%)</title><rect x="56.4" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.08%)</title><rect x="56.4" y="403.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="59.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (45 samples, 0.13%)</title><rect x="57.4" y="467.0" width="1.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="60.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="59.0" y="467.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="62.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (162 samples, 0.48%)</title><rect x="59.3" y="467.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.06%)</title><rect x="59.3" y="451.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.06%)</title><rect x="59.3" y="435.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/952689076.get$Lambda (13 samples, 0.04%)</title><rect x="59.3" y="419.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (13 samples, 0.04%)</title><rect x="59.3" y="403.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="62.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (19 samples, 0.06%)</title><rect x="60.0" y="451.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="63.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (12 samples, 0.04%)</title><rect x="60.6" y="451.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="63.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (12 samples, 0.04%)</title><rect x="61.1" y="451.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="64.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (45 samples, 0.13%)</title><rect x="61.5" y="451.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 0.13%)</title><rect x="61.5" y="435.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (45 samples, 0.13%)</title><rect x="61.5" y="419.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (45 samples, 0.13%)</title><rect x="61.5" y="403.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (45 samples, 0.13%)</title><rect x="61.5" y="387.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (45 samples, 0.13%)</title><rect x="61.5" y="371.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (45 samples, 0.13%)</title><rect x="61.5" y="355.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (45 samples, 0.13%)</title><rect x="61.5" y="339.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (45 samples, 0.13%)</title><rect x="61.5" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="61.5" y="307.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="61.5" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$220/1029944311.get$Lambda (8 samples, 0.02%)</title><rect x="61.6" y="275.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.6" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$220 (8 samples, 0.02%)</title><rect x="61.6" y="259.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="64.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (13 samples, 0.04%)</title><rect x="61.9" y="307.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="64.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (21 samples, 0.06%)</title><rect x="62.3" y="307.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (21 samples, 0.06%)</title><rect x="62.3" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.3" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (8 samples, 0.02%)</title><rect x="62.3" y="275.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="65.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (13 samples, 0.04%)</title><rect x="62.6" y="275.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (13 samples, 0.04%)</title><rect x="62.6" y="259.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="65.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (41 samples, 0.12%)</title><rect x="63.1" y="451.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.1" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (12 samples, 0.04%)</title><rect x="63.1" y="435.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="66.1" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (18 samples, 0.05%)</title><rect x="63.5" y="435.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="66.5" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.03%)</title><rect x="64.1" y="435.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.03%)</title><rect x="64.1" y="419.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.1" y="430.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="64.1" y="403.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="67.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (13 samples, 0.04%)</title><rect x="64.5" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="64.5" y="435.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="67.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="65.0" y="579.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="65.0" y="563.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="65.0" y="547.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="68.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (23 samples, 0.07%)</title><rect x="65.4" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (23 samples, 0.07%)</title><rect x="65.4" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (10 samples, 0.03%)</title><rect x="65.4" y="579.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="68.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="65.8" y="579.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="65.8" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="65.8" y="547.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="68.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (573 samples, 1.70%)</title><rect x="66.2" y="611.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.06%)</title><rect x="66.2" y="595.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title><rect x="66.2" y="579.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1480893218.get$Lambda (13 samples, 0.04%)</title><rect x="66.2" y="563.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.2" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$205 (13 samples, 0.04%)</title><rect x="66.2" y="547.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="69.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (30 samples, 0.09%)</title><rect x="66.9" y="595.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (30 samples, 0.09%)</title><rect x="66.9" y="579.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/575256480.apply (15 samples, 0.04%)</title><rect x="66.9" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (15 samples, 0.04%)</title><rect x="66.9" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (15 samples, 0.04%)</title><rect x="66.9" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="66.9" y="515.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="69.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.04%)</title><rect x="67.4" y="563.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.04%)</title><rect x="67.4" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="67.4" y="531.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="70.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (14 samples, 0.04%)</title><rect x="67.9" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (14 samples, 0.04%)</title><rect x="67.9" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="67.9" y="563.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="67.9" y="547.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="67.9" y="531.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="70.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (510 samples, 1.52%)</title><rect x="68.4" y="595.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (510 samples, 1.52%)</title><rect x="68.4" y="579.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (44 samples, 0.13%)</title><rect x="68.4" y="563.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="71.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (454 samples, 1.35%)</title><rect x="70.0" y="563.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.0" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (17 samples, 0.05%)</title><rect x="70.2" y="547.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="73.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (13 samples, 0.04%)</title><rect x="70.8" y="547.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="73.8" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (27 samples, 0.08%)</title><rect x="71.2" y="547.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.2" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (27 samples, 0.08%)</title><rect x="71.2" y="531.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.2" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.08%)</title><rect x="71.2" y="515.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="74.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (11 samples, 0.03%)</title><rect x="72.2" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.2" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.03%)</title><rect x="72.2" y="531.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="75.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (26 samples, 0.08%)</title><rect x="72.6" y="547.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="75.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (16 samples, 0.05%)</title><rect x="73.5" y="547.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="76.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (17 samples, 0.05%)</title><rect x="74.0" y="547.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="77.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.10%)</title><rect x="74.6" y="547.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="77.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (131 samples, 0.39%)</title><rect x="75.8" y="547.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.8" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (12 samples, 0.04%)</title><rect x="75.8" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="78.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.03%)</title><rect x="76.4" y="531.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="79.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (8 samples, 0.02%)</title><rect x="76.7" y="531.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="79.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (15 samples, 0.04%)</title><rect x="77.2" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.04%)</title><rect x="77.2" y="515.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="80.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="77.9" y="531.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="80.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (52 samples, 0.15%)</title><rect x="78.6" y="531.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (10 samples, 0.03%)</title><rect x="78.6" y="515.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="81.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (14 samples, 0.04%)</title><rect x="78.9" y="515.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (21 samples, 0.06%)</title><rect x="79.7" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (9 samples, 0.03%)</title><rect x="80.1" y="499.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="83.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (94 samples, 0.28%)</title><rect x="80.4" y="547.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (14 samples, 0.04%)</title><rect x="80.4" y="531.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="83.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (10 samples, 0.03%)</title><rect x="80.9" y="531.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="83.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (13 samples, 0.04%)</title><rect x="81.3" y="531.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="84.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (10 samples, 0.03%)</title><rect x="81.7" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (10 samples, 0.03%)</title><rect x="81.7" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="84.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (47 samples, 0.14%)</title><rect x="82.1" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (9 samples, 0.03%)</title><rect x="82.1" y="515.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="85.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (17 samples, 0.05%)</title><rect x="82.4" y="515.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="85.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (15 samples, 0.04%)</title><rect x="83.2" y="515.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="86.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.02%)</title><rect x="83.2" y="499.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="86.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (20 samples, 0.06%)</title><rect x="84.0" y="547.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (20 samples, 0.06%)</title><rect x="84.0" y="531.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (10 samples, 0.03%)</title><rect x="84.0" y="515.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="87.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (10 samples, 0.03%)</title><rect x="84.3" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="87.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.03%)</title><rect x="84.3" y="499.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (10 samples, 0.03%)</title><rect x="84.3" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (10 samples, 0.03%)</title><rect x="84.3" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (10 samples, 0.03%)</title><rect x="84.3" y="451.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="87.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (35 samples, 0.10%)</title><rect x="84.7" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (10 samples, 0.03%)</title><rect x="84.7" y="531.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="84.7" y="515.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1183055826.get$Lambda (10 samples, 0.03%)</title><rect x="84.7" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$153 (10 samples, 0.03%)</title><rect x="84.7" y="483.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="87.7" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (25 samples, 0.07%)</title><rect x="85.0" y="531.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1183055826.run (25 samples, 0.07%)</title><rect x="85.0" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (25 samples, 0.07%)</title><rect x="85.0" y="499.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="510.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (19 samples, 0.06%)</title><rect x="85.2" y="483.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.2" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (9 samples, 0.03%)</title><rect x="85.2" y="467.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="88.2" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.03%)</title><rect x="85.5" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.5" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.03%)</title><rect x="85.5" y="451.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.5" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.03%)</title><rect x="85.5" y="435.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.5" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (10 samples, 0.03%)</title><rect x="85.5" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="88.5" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (10 samples, 0.03%)</title><rect x="85.5" y="403.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="88.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (12 samples, 0.04%)</title><rect x="85.9" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="85.9" y="547.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="88.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (32 samples, 0.10%)</title><rect x="86.3" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="89.3" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (32 samples, 0.10%)</title><rect x="86.3" y="643.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.10%)</title><rect x="86.3" y="627.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="89.3" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (32 samples, 0.10%)</title><rect x="86.3" y="611.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="89.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (44 samples, 0.13%)</title><rect x="87.4" y="659.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="90.4" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (38 samples, 0.11%)</title><rect x="87.4" y="643.0" width="1.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="90.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2,730 samples, 8.11%)</title><rect x="89.0" y="723.0" width="95.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.0" y="734.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2,730 samples, 8.11%)</title><rect x="89.0" y="707.0" width="95.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.0" y="718.0">java/util/c..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (85 samples, 0.25%)</title><rect x="89.0" y="691.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (85 samples, 0.25%)</title><rect x="89.0" y="675.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (85 samples, 0.25%)</title><rect x="89.0" y="659.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (85 samples, 0.25%)</title><rect x="89.0" y="643.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.0" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (85 samples, 0.25%)</title><rect x="89.0" y="627.0" width="3.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="92.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (2,645 samples, 7.86%)</title><rect x="92.0" y="691.0" width="92.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.0" y="702.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (2,645 samples, 7.86%)</title><rect x="92.0" y="675.0" width="92.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.0" y="686.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,645 samples, 7.86%)</title><rect x="92.0" y="659.0" width="92.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.0" y="670.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,645 samples, 7.86%)</title><rect x="92.0" y="643.0" width="92.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.0" y="654.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,826 samples, 5.43%)</title><rect x="92.0" y="627.0" width="64.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.0" y="638.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,826 samples, 5.43%)</title><rect x="92.0" y="611.0" width="64.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.0" y="622.0">one/nio..</text>
</g>
<g>
<title>byte[] (1,602 samples, 4.76%)</title><rect x="92.0" y="595.0" width="56.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="95.0" y="606.0">byte[]</text>
</g>
<g>
<title>byte[] (224 samples, 0.67%)</title><rect x="148.1" y="595.0" width="7.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="151.1" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (819 samples, 2.43%)</title><rect x="156.0" y="627.0" width="28.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="159.0" y="638.0">on..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (819 samples, 2.43%)</title><rect x="156.0" y="611.0" width="28.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="159.0" y="622.0">on..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$110/1500935830.get (7,673 samples, 22.80%)</title><rect x="184.7" y="739.0" width="269.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="187.7" y="750.0">ru/mail/polis/service/dariagap/Basic..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$put$1 (7,673 samples, 22.80%)</title><rect x="184.7" y="723.0" width="269.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.7" y="734.0">ru/mail/polis/service/dariagap/Basic..</text>
</g>
<g>
<title>java/lang/String.getBytes (839 samples, 2.49%)</title><rect x="184.7" y="707.0" width="29.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.7" y="718.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (839 samples, 2.49%)</title><rect x="184.7" y="691.0" width="29.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.7" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (839 samples, 2.49%)</title><rect x="184.7" y="675.0" width="29.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="187.7" y="686.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (839 samples, 2.49%)</title><rect x="184.7" y="659.0" width="29.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="187.7" y="670.0">ja..</text>
</g>
<g>
<title>byte[] (839 samples, 2.49%)</title><rect x="184.7" y="643.0" width="29.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="187.7" y="654.0">by..</text>
</g>
<g>
<title>one.nio.http.Response (564 samples, 1.68%)</title><rect x="214.1" y="707.0" width="19.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="217.1" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,330 samples, 6.92%)</title><rect x="233.9" y="707.0" width="81.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.9" y="718.0">one/nio/h..</text>
</g>
<g>
<title>byte[] (997 samples, 2.96%)</title><rect x="233.9" y="691.0" width="35.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="236.9" y="702.0">by..</text>
</g>
<g>
<title>java.lang.String[] (730 samples, 2.17%)</title><rect x="268.9" y="691.0" width="25.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="271.9" y="702.0">j..</text>
</g>
<g>
<title>java.lang.String (603 samples, 1.79%)</title><rect x="294.5" y="691.0" width="21.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="297.5" y="702.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (3,940 samples, 11.71%)</title><rect x="315.6" y="707.0" width="138.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.6" y="718.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.&lt;init&gt; (726 samples, 2.16%)</title><rect x="315.6" y="691.0" width="25.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.6" y="702.0">r..</text>
</g>
<g>
<title>byte[] (726 samples, 2.16%)</title><rect x="315.6" y="675.0" width="25.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="318.6" y="686.0">b..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampData (1,918 samples, 5.70%)</title><rect x="341.1" y="691.0" width="67.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.1" y="702.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (955 samples, 2.84%)</title><rect x="341.1" y="675.0" width="33.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.1" y="686.0">ja..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (955 samples, 2.84%)</title><rect x="341.1" y="659.0" width="33.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="344.1" y="670.0">ja..</text>
</g>
<g>
<title>byte[] (955 samples, 2.84%)</title><rect x="341.1" y="643.0" width="33.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="344.1" y="654.0">by..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (963 samples, 2.86%)</title><rect x="374.6" y="675.0" width="33.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="377.6" y="686.0">ru..</text>
</g>
<g>
<title>byte[] (963 samples, 2.86%)</title><rect x="374.6" y="659.0" width="33.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="377.6" y="670.0">by..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (791 samples, 2.35%)</title><rect x="408.3" y="691.0" width="27.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="411.3" y="702.0">r..</text>
</g>
<g>
<title>byte[] (791 samples, 2.35%)</title><rect x="408.3" y="675.0" width="27.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="411.3" y="686.0">b..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (505 samples, 1.50%)</title><rect x="436.1" y="691.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (505 samples, 1.50%)</title><rect x="436.1" y="675.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.1" y="686.0"></text>
</g>
<g>
<title>byte[] (505 samples, 1.50%)</title><rect x="436.1" y="659.0" width="17.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="439.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,818 samples, 8.37%)</title><rect x="453.8" y="755.0" width="98.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="456.8" y="766.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,818 samples, 8.37%)</title><rect x="453.8" y="739.0" width="98.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.8" y="750.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (768 samples, 2.28%)</title><rect x="453.8" y="723.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.8" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (768 samples, 2.28%)</title><rect x="453.8" y="707.0" width="26.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.8" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (768 samples, 2.28%)</title><rect x="453.8" y="691.0" width="26.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.8" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (768 samples, 2.28%)</title><rect x="453.8" y="675.0" width="26.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="456.8" y="686.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (257 samples, 0.76%)</title><rect x="453.8" y="659.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (257 samples, 0.76%)</title><rect x="453.8" y="643.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (256 samples, 0.76%)</title><rect x="453.8" y="627.0" width="9.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (256 samples, 0.76%)</title><rect x="453.8" y="611.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (256 samples, 0.76%)</title><rect x="453.8" y="595.0" width="9.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="456.8" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (511 samples, 1.52%)</title><rect x="462.8" y="659.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (511 samples, 1.52%)</title><rect x="462.8" y="643.0" width="17.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="465.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (511 samples, 1.52%)</title><rect x="462.8" y="627.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (511 samples, 1.52%)</title><rect x="462.8" y="611.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (336 samples, 1.00%)</title><rect x="462.8" y="595.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="465.8" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (336 samples, 1.00%)</title><rect x="462.8" y="579.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.8" y="590.0"></text>
</g>
<g>
<title>byte[] (336 samples, 1.00%)</title><rect x="462.8" y="563.0" width="11.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="465.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (175 samples, 0.52%)</title><rect x="474.6" y="595.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.6" y="606.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (175 samples, 0.52%)</title><rect x="474.6" y="579.0" width="6.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="477.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$136/2054529164.apply (1,026 samples, 3.05%)</title><rect x="480.7" y="723.0" width="36.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.7" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$proxy$3 (1,026 samples, 3.05%)</title><rect x="480.7" y="707.0" width="36.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.7" y="718.0">ru/..</text>
</g>
<g>
<title>one.nio.http.Response (196 samples, 0.58%)</title><rect x="480.7" y="691.0" width="6.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="483.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (830 samples, 2.47%)</title><rect x="487.6" y="691.0" width="29.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.6" y="702.0">on..</text>
</g>
<g>
<title>byte[] (344 samples, 1.02%)</title><rect x="487.6" y="675.0" width="12.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="490.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (258 samples, 0.77%)</title><rect x="499.7" y="675.0" width="9.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="502.7" y="686.0"></text>
</g>
<g>
<title>java.lang.String (228 samples, 0.68%)</title><rect x="508.7" y="675.0" width="8.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="511.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$145/1854348690.apply (1,024 samples, 3.04%)</title><rect x="516.7" y="723.0" width="35.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.7" y="734.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (1,024 samples, 3.04%)</title><rect x="516.7" y="707.0" width="35.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.7" y="718.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (1,024 samples, 3.04%)</title><rect x="516.7" y="691.0" width="35.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.7" y="702.0">ru/..</text>
</g>
<g>
<title>java/util/Collection.stream (387 samples, 1.15%)</title><rect x="516.7" y="675.0" width="13.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (135 samples, 0.40%)</title><rect x="516.7" y="659.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.7" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (135 samples, 0.40%)</title><rect x="516.7" y="643.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.7" y="654.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (135 samples, 0.40%)</title><rect x="516.7" y="627.0" width="4.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="519.7" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (252 samples, 0.75%)</title><rect x="521.4" y="659.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.4" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (252 samples, 0.75%)</title><rect x="521.4" y="643.0" width="8.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="524.4" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (151 samples, 0.45%)</title><rect x="530.3" y="675.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.3" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (151 samples, 0.45%)</title><rect x="530.3" y="659.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (151 samples, 0.45%)</title><rect x="530.3" y="643.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.3" y="654.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (89 samples, 0.26%)</title><rect x="530.3" y="627.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.3" y="638.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (89 samples, 0.26%)</title><rect x="530.3" y="611.0" width="3.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="533.3" y="622.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (62 samples, 0.18%)</title><rect x="533.4" y="627.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.4" y="638.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (62 samples, 0.18%)</title><rect x="533.4" y="611.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="536.4" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (62 samples, 0.18%)</title><rect x="533.4" y="595.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.4" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (62 samples, 0.18%)</title><rect x="533.4" y="579.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="536.4" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (87 samples, 0.26%)</title><rect x="535.6" y="675.0" width="3.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="538.6" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (399 samples, 1.19%)</title><rect x="538.6" y="675.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.6" y="686.0"></text>
</g>
<g>
<title>byte[] (174 samples, 0.52%)</title><rect x="538.6" y="659.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="541.6" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (130 samples, 0.39%)</title><rect x="544.7" y="659.0" width="4.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="547.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (95 samples, 0.28%)</title><rect x="549.3" y="659.0" width="3.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="552.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,028 samples, 3.06%)</title><rect x="552.6" y="755.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.6" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,012 samples, 3.01%)</title><rect x="552.6" y="739.0" width="35.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.6" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,009 samples, 3.00%)</title><rect x="552.6" y="723.0" width="35.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.6" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1,009 samples, 3.00%)</title><rect x="552.6" y="707.0" width="35.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.6" y="718.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1,009 samples, 3.00%)</title><rect x="552.6" y="691.0" width="35.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="555.6" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.05%)</title><rect x="588.1" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.05%)</title><rect x="588.1" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="591.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (16 samples, 0.05%)</title><rect x="588.1" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="591.1" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (16 samples, 0.05%)</title><rect x="588.1" y="691.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="591.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (564 samples, 1.68%)</title><rect x="588.7" y="755.0" width="19.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (564 samples, 1.68%)</title><rect x="588.7" y="739.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (564 samples, 1.68%)</title><rect x="588.7" y="723.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="591.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (564 samples, 1.68%)</title><rect x="588.7" y="707.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (564 samples, 1.68%)</title><rect x="588.7" y="691.0" width="19.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="591.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (564 samples, 1.68%)</title><rect x="588.7" y="675.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (564 samples, 1.68%)</title><rect x="588.7" y="659.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (564 samples, 1.68%)</title><rect x="588.7" y="643.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (564 samples, 1.68%)</title><rect x="588.7" y="627.0" width="19.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (564 samples, 1.68%)</title><rect x="588.7" y="611.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (564 samples, 1.68%)</title><rect x="588.7" y="595.0" width="19.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (525 samples, 1.56%)</title><rect x="588.7" y="579.0" width="18.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.09%)</title><rect x="588.7" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.09%)</title><rect x="588.7" y="547.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$266/287580851.get$Lambda (13 samples, 0.04%)</title><rect x="588.9" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$266 (13 samples, 0.04%)</title><rect x="588.9" y="515.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="591.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$269/996253719.get$Lambda (11 samples, 0.03%)</title><rect x="589.4" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="592.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$269 (11 samples, 0.03%)</title><rect x="589.4" y="515.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="592.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (494 samples, 1.47%)</title><rect x="589.8" y="563.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.8" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (19 samples, 0.06%)</title><rect x="589.8" y="547.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="592.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (475 samples, 1.41%)</title><rect x="590.4" y="547.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (475 samples, 1.41%)</title><rect x="590.4" y="531.0" width="16.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (475 samples, 1.41%)</title><rect x="590.4" y="515.0" width="16.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (85 samples, 0.25%)</title><rect x="590.4" y="499.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.4" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (26 samples, 0.08%)</title><rect x="590.4" y="483.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="593.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/2129579493.apply (45 samples, 0.13%)</title><rect x="591.3" y="483.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (45 samples, 0.13%)</title><rect x="591.3" y="467.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (45 samples, 0.13%)</title><rect x="591.3" y="451.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (40 samples, 0.12%)</title><rect x="591.5" y="435.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (36 samples, 0.11%)</title><rect x="591.7" y="419.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (36 samples, 0.11%)</title><rect x="591.7" y="403.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (12 samples, 0.04%)</title><rect x="591.7" y="387.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="594.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.07%)</title><rect x="592.1" y="387.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (24 samples, 0.07%)</title><rect x="592.1" y="371.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="595.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.07%)</title><rect x="592.1" y="355.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="595.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (13 samples, 0.04%)</title><rect x="592.9" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (13 samples, 0.04%)</title><rect x="592.9" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="595.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (13 samples, 0.04%)</title><rect x="592.9" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (13 samples, 0.04%)</title><rect x="592.9" y="435.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="595.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13 samples, 0.04%)</title><rect x="592.9" y="419.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.03%)</title><rect x="593.0" y="403.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (11 samples, 0.03%)</title><rect x="593.0" y="387.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (11 samples, 0.03%)</title><rect x="593.0" y="371.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (390 samples, 1.16%)</title><rect x="593.4" y="499.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (390 samples, 1.16%)</title><rect x="593.4" y="483.0" width="13.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="596.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1550627049.apply (390 samples, 1.16%)</title><rect x="593.4" y="467.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (390 samples, 1.16%)</title><rect x="593.4" y="451.0" width="13.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (390 samples, 1.16%)</title><rect x="593.4" y="435.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.apply (390 samples, 1.16%)</title><rect x="593.4" y="419.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (390 samples, 1.16%)</title><rect x="593.4" y="403.0" width="13.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (45 samples, 0.13%)</title><rect x="593.6" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="596.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (45 samples, 0.13%)</title><rect x="593.6" y="371.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (24 samples, 0.07%)</title><rect x="593.6" y="355.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="596.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.06%)</title><rect x="594.5" y="355.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.06%)</title><rect x="594.5" y="339.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.06%)</title><rect x="594.5" y="323.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="597.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (339 samples, 1.01%)</title><rect x="595.2" y="387.0" width="11.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="595.2" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="598.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="595.2" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (120 samples, 0.36%)</title><rect x="595.5" y="371.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (120 samples, 0.36%)</title><rect x="595.5" y="355.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (120 samples, 0.36%)</title><rect x="595.5" y="339.0" width="4.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$259/982857775.accept (39 samples, 0.12%)</title><rect x="595.5" y="323.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (39 samples, 0.12%)</title><rect x="595.5" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (39 samples, 0.12%)</title><rect x="595.5" y="291.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="595.5" y="275.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="595.5" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/1951795600.get$Lambda (14 samples, 0.04%)</title><rect x="595.5" y="243.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$260 (14 samples, 0.04%)</title><rect x="595.5" y="227.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="598.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (25 samples, 0.07%)</title><rect x="596.0" y="275.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (25 samples, 0.07%)</title><rect x="596.0" y="259.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (16 samples, 0.05%)</title><rect x="596.0" y="243.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="599.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="596.6" y="243.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="599.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="596.6" y="227.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="596.6" y="211.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="599.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$261/1839865896.accept (56 samples, 0.17%)</title><rect x="596.9" y="323.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (56 samples, 0.17%)</title><rect x="596.9" y="307.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (56 samples, 0.17%)</title><rect x="596.9" y="291.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (56 samples, 0.17%)</title><rect x="596.9" y="275.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (56 samples, 0.17%)</title><rect x="596.9" y="259.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.17%)</title><rect x="596.9" y="243.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.17%)</title><rect x="596.9" y="227.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="599.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (56 samples, 0.17%)</title><rect x="596.9" y="211.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (56 samples, 0.17%)</title><rect x="596.9" y="195.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (56 samples, 0.17%)</title><rect x="596.9" y="179.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="599.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (19 samples, 0.06%)</title><rect x="596.9" y="163.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="599.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (19 samples, 0.06%)</title><rect x="596.9" y="147.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="599.9" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (8 samples, 0.02%)</title><rect x="596.9" y="131.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="599.9" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.03%)</title><rect x="597.2" y="131.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (11 samples, 0.03%)</title><rect x="597.2" y="115.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.2" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (11 samples, 0.03%)</title><rect x="597.2" y="99.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="600.2" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (11 samples, 0.03%)</title><rect x="597.2" y="83.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.2" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (11 samples, 0.03%)</title><rect x="597.2" y="67.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.2" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.03%)</title><rect x="597.2" y="51.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="600.2" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (37 samples, 0.11%)</title><rect x="597.6" y="163.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (37 samples, 0.11%)</title><rect x="597.6" y="147.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="600.6" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (13 samples, 0.04%)</title><rect x="597.6" y="131.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.6" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (13 samples, 0.04%)</title><rect x="597.6" y="115.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="600.6" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (24 samples, 0.07%)</title><rect x="598.0" y="131.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.0" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (12 samples, 0.04%)</title><rect x="598.0" y="115.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="601.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.04%)</title><rect x="598.5" y="115.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.5" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (12 samples, 0.04%)</title><rect x="598.5" y="99.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.5" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (12 samples, 0.04%)</title><rect x="598.5" y="83.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.5" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (12 samples, 0.04%)</title><rect x="598.5" y="67.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.5" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (12 samples, 0.04%)</title><rect x="598.5" y="51.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.5" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (12 samples, 0.04%)</title><rect x="598.5" y="35.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="601.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.07%)</title><rect x="598.9" y="323.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.07%)</title><rect x="598.9" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.9" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.07%)</title><rect x="598.9" y="291.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="601.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (209 samples, 0.62%)</title><rect x="599.8" y="371.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (22 samples, 0.07%)</title><rect x="599.8" y="355.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="602.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (15 samples, 0.04%)</title><rect x="600.5" y="355.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (15 samples, 0.04%)</title><rect x="600.5" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="600.5" y="323.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="603.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (172 samples, 0.51%)</title><rect x="601.1" y="355.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.1" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (17 samples, 0.05%)</title><rect x="601.1" y="339.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="604.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (86 samples, 0.26%)</title><rect x="601.6" y="339.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (13 samples, 0.04%)</title><rect x="601.6" y="323.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.6" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (13 samples, 0.04%)</title><rect x="601.6" y="307.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="604.6" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (20 samples, 0.06%)</title><rect x="602.1" y="323.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="605.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (53 samples, 0.16%)</title><rect x="602.8" y="323.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="605.8" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (18 samples, 0.05%)</title><rect x="603.1" y="307.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (19 samples, 0.06%)</title><rect x="604.0" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (8 samples, 0.02%)</title><rect x="604.2" y="291.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="607.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (69 samples, 0.21%)</title><rect x="604.7" y="339.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (14 samples, 0.04%)</title><rect x="604.7" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="607.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (36 samples, 0.11%)</title><rect x="605.2" y="323.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (20 samples, 0.06%)</title><rect x="605.2" y="307.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="608.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (16 samples, 0.05%)</title><rect x="605.9" y="307.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="608.9" y="318.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="605.9" y="291.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="608.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (19 samples, 0.06%)</title><rect x="606.4" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="609.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (19 samples, 0.06%)</title><rect x="606.4" y="307.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (19 samples, 0.06%)</title><rect x="606.4" y="291.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.4" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (19 samples, 0.06%)</title><rect x="606.4" y="275.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.4" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (19 samples, 0.06%)</title><rect x="606.4" y="259.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.4" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (19 samples, 0.06%)</title><rect x="606.4" y="243.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="609.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (39 samples, 0.12%)</title><rect x="607.1" y="579.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (39 samples, 0.12%)</title><rect x="607.1" y="563.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="610.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (39 samples, 0.12%)</title><rect x="607.1" y="547.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="610.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (39 samples, 0.12%)</title><rect x="607.1" y="531.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="610.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (39 samples, 0.12%)</title><rect x="607.1" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.1" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (39 samples, 0.12%)</title><rect x="607.1" y="499.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="610.1" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (21 samples, 0.06%)</title><rect x="607.1" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.1" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (21 samples, 0.06%)</title><rect x="607.1" y="467.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="610.1" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (18 samples, 0.05%)</title><rect x="607.8" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.8" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (18 samples, 0.05%)</title><rect x="607.8" y="467.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="610.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1,846 samples, 5.49%)</title><rect x="608.5" y="755.0" width="64.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.5" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,846 samples, 5.49%)</title><rect x="608.5" y="739.0" width="64.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.5" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,530 samples, 4.55%)</title><rect x="608.5" y="723.0" width="53.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="611.5" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (1,530 samples, 4.55%)</title><rect x="608.5" y="707.0" width="53.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="611.5" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,530 samples, 4.55%)</title><rect x="608.5" y="691.0" width="53.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.5" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (27 samples, 0.08%)</title><rect x="608.5" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (27 samples, 0.08%)</title><rect x="608.5" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="611.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (27 samples, 0.08%)</title><rect x="608.5" y="643.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (27 samples, 0.08%)</title><rect x="608.5" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (16 samples, 0.05%)</title><rect x="608.5" y="611.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (16 samples, 0.05%)</title><rect x="608.5" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="611.5" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="608.5" y="579.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (16 samples, 0.05%)</title><rect x="608.5" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (16 samples, 0.05%)</title><rect x="608.5" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.5" y="558.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="608.5" y="531.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="611.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (11 samples, 0.03%)</title><rect x="609.0" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (11 samples, 0.03%)</title><rect x="609.0" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.03%)</title><rect x="609.0" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257/324408259.get$Lambda (11 samples, 0.03%)</title><rect x="609.0" y="563.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257 (11 samples, 0.03%)</title><rect x="609.0" y="547.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="612.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,503 samples, 4.47%)</title><rect x="609.4" y="675.0" width="52.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.4" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,503 samples, 4.47%)</title><rect x="609.4" y="659.0" width="52.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.4" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,503 samples, 4.47%)</title><rect x="609.4" y="643.0" width="52.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.4" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,503 samples, 4.47%)</title><rect x="609.4" y="627.0" width="52.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.4" y="638.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (731 samples, 2.17%)</title><rect x="609.4" y="611.0" width="25.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.4" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (731 samples, 2.17%)</title><rect x="609.4" y="595.0" width="25.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.4" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (731 samples, 2.17%)</title><rect x="609.4" y="579.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.4" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (731 samples, 2.17%)</title><rect x="609.4" y="563.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.4" y="574.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (731 samples, 2.17%)</title><rect x="609.4" y="547.0" width="25.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="612.4" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (731 samples, 2.17%)</title><rect x="609.4" y="531.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.4" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (731 samples, 2.17%)</title><rect x="609.4" y="515.0" width="25.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.4" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (698 samples, 2.07%)</title><rect x="609.4" y="499.0" width="24.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.4" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (698 samples, 2.07%)</title><rect x="609.4" y="483.0" width="24.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (683 samples, 2.03%)</title><rect x="609.4" y="467.0" width="24.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.4" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (8 samples, 0.02%)</title><rect x="609.4" y="451.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (647 samples, 1.92%)</title><rect x="609.7" y="451.0" width="22.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.7" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (647 samples, 1.92%)</title><rect x="609.7" y="435.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.7" y="446.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="609.7" y="419.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="609.7" y="403.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$293/843397805.get$Lambda (13 samples, 0.04%)</title><rect x="609.7" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$293 (13 samples, 0.04%)</title><rect x="609.7" y="371.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="612.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (35 samples, 0.10%)</title><rect x="610.1" y="419.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (35 samples, 0.10%)</title><rect x="610.1" y="403.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.1" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (22 samples, 0.07%)</title><rect x="610.1" y="387.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="613.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="610.9" y="387.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="613.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="610.9" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="610.9" y="355.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="613.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (599 samples, 1.78%)</title><rect x="611.4" y="419.0" width="21.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (37 samples, 0.11%)</title><rect x="611.6" y="403.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (37 samples, 0.11%)</title><rect x="611.6" y="387.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="614.6" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (22 samples, 0.07%)</title><rect x="611.6" y="371.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="614.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.04%)</title><rect x="612.3" y="371.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (15 samples, 0.04%)</title><rect x="612.3" y="355.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="612.3" y="339.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="615.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (556 samples, 1.65%)</title><rect x="612.9" y="403.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$117/247522936.apply (53 samples, 0.16%)</title><rect x="612.9" y="387.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (53 samples, 0.16%)</title><rect x="612.9" y="371.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.9" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (53 samples, 0.16%)</title><rect x="612.9" y="355.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (20 samples, 0.06%)</title><rect x="612.9" y="339.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="615.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (33 samples, 0.10%)</title><rect x="613.6" y="339.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.6" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (10 samples, 0.03%)</title><rect x="613.6" y="323.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="616.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="613.9" y="323.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="616.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (503 samples, 1.49%)</title><rect x="614.7" y="387.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="614.7" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.7" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="614.7" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1864376279.get$Lambda (8 samples, 0.02%)</title><rect x="614.7" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$289 (8 samples, 0.02%)</title><rect x="614.7" y="323.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="617.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/934677432.linkToTargetMethod (21 samples, 0.06%)</title><rect x="615.2" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1618996908.invokeStatic (21 samples, 0.06%)</title><rect x="615.2" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="618.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.get$Lambda (21 samples, 0.06%)</title><rect x="615.2" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="618.2" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$281 (21 samples, 0.06%)</title><rect x="615.2" y="323.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="618.2" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (98 samples, 0.29%)</title><rect x="616.0" y="371.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (38 samples, 0.11%)</title><rect x="616.0" y="355.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (8 samples, 0.02%)</title><rect x="616.0" y="339.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.0" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (8 samples, 0.02%)</title><rect x="616.0" y="323.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="619.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (30 samples, 0.09%)</title><rect x="616.2" y="339.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.2" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (30 samples, 0.09%)</title><rect x="616.2" y="323.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="619.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (28 samples, 0.08%)</title><rect x="617.3" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.3" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (28 samples, 0.08%)</title><rect x="617.3" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.3" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (28 samples, 0.08%)</title><rect x="617.3" y="323.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.3" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.03%)</title><rect x="617.3" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.3" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (11 samples, 0.03%)</title><rect x="617.3" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (11 samples, 0.03%)</title><rect x="617.3" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.3" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (11 samples, 0.03%)</title><rect x="617.3" y="259.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="620.3" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$278/242831709.get (8 samples, 0.02%)</title><rect x="617.7" y="307.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.7" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (8 samples, 0.02%)</title><rect x="617.7" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="620.7" y="302.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="618.0" y="307.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="618.0" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.0" y="302.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (9 samples, 0.03%)</title><rect x="618.0" y="275.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="621.0" y="286.0"></text>
</g>
<g>
<title>java.util.OptionalLong (9 samples, 0.03%)</title><rect x="618.0" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="621.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (32 samples, 0.10%)</title><rect x="618.3" y="355.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="621.3" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (32 samples, 0.10%)</title><rect x="618.3" y="339.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="621.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (62 samples, 0.18%)</title><rect x="619.4" y="371.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (31 samples, 0.09%)</title><rect x="619.4" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="622.4" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.05%)</title><rect x="619.4" y="339.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="622.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="620.0" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="620.0" y="323.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="623.0" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="620.0" y="307.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="623.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (31 samples, 0.09%)</title><rect x="620.5" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (31 samples, 0.09%)</title><rect x="620.5" y="339.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.5" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.05%)</title><rect x="620.5" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="623.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="621.1" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="621.1" y="307.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="621.1" y="291.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="624.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (9 samples, 0.03%)</title><rect x="621.6" y="371.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="624.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (14 samples, 0.04%)</title><rect x="621.9" y="371.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="624.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="622.4" y="371.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="625.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (255 samples, 0.76%)</title><rect x="623.4" y="371.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (255 samples, 0.76%)</title><rect x="623.4" y="355.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (255 samples, 0.76%)</title><rect x="623.4" y="339.0" width="9.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="626.4" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.08%)</title><rect x="623.4" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="626.4" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.08%)</title><rect x="623.4" y="307.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1373007332.get$Lambda (14 samples, 0.04%)</title><rect x="623.5" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (14 samples, 0.04%)</title><rect x="623.5" y="275.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="626.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1327209964.get$Lambda (9 samples, 0.03%)</title><rect x="624.0" y="291.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$285 (9 samples, 0.03%)</title><rect x="624.0" y="275.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="627.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.08%)</title><rect x="624.3" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.08%)</title><rect x="624.3" y="307.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.05%)</title><rect x="624.3" y="291.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="627.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="624.9" y="291.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="624.9" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (9 samples, 0.03%)</title><rect x="624.9" y="259.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="627.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (27 samples, 0.08%)</title><rect x="625.2" y="323.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="628.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (15 samples, 0.04%)</title><rect x="626.2" y="323.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.2" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="626.2" y="307.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="629.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (39 samples, 0.12%)</title><rect x="626.7" y="323.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="629.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (39 samples, 0.12%)</title><rect x="626.7" y="307.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="626.7" y="291.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="626.7" y="275.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="629.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$287/731272226.get$Lambda (9 samples, 0.03%)</title><rect x="626.7" y="259.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$287 (9 samples, 0.03%)</title><rect x="626.7" y="243.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="629.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.09%)</title><rect x="627.0" y="291.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (30 samples, 0.09%)</title><rect x="627.0" y="275.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (30 samples, 0.09%)</title><rect x="627.0" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.0" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (17 samples, 0.05%)</title><rect x="627.0" y="243.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="630.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="627.6" y="243.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="630.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="627.6" y="227.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="630.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="627.6" y="211.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="630.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (47 samples, 0.14%)</title><rect x="628.1" y="323.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.1" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.14%)</title><rect x="628.1" y="307.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.1" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (47 samples, 0.14%)</title><rect x="628.1" y="291.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.14%)</title><rect x="628.1" y="275.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.1" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.04%)</title><rect x="628.1" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="628.1" y="243.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="631.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (34 samples, 0.10%)</title><rect x="628.5" y="259.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="631.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (34 samples, 0.10%)</title><rect x="628.5" y="243.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.5" y="254.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.10%)</title><rect x="628.5" y="227.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="631.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (75 samples, 0.22%)</title><rect x="629.7" y="323.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.7" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (23 samples, 0.07%)</title><rect x="629.7" y="307.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="632.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (52 samples, 0.15%)</title><rect x="630.5" y="307.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.15%)</title><rect x="630.5" y="291.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (52 samples, 0.15%)</title><rect x="630.5" y="275.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.15%)</title><rect x="630.5" y="259.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (14 samples, 0.04%)</title><rect x="630.5" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (14 samples, 0.04%)</title><rect x="630.5" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="633.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (38 samples, 0.11%)</title><rect x="631.0" y="243.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="634.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (38 samples, 0.11%)</title><rect x="631.0" y="227.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="634.0" y="238.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.11%)</title><rect x="631.0" y="211.0" width="1.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="634.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (28 samples, 0.08%)</title><rect x="632.4" y="451.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (28 samples, 0.08%)</title><rect x="632.4" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (12 samples, 0.04%)</title><rect x="632.4" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.4" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (12 samples, 0.04%)</title><rect x="632.4" y="403.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (12 samples, 0.04%)</title><rect x="632.4" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (12 samples, 0.04%)</title><rect x="632.4" y="371.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="635.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (16 samples, 0.05%)</title><rect x="632.8" y="419.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="632.8" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="635.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.04%)</title><rect x="633.4" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.04%)</title><rect x="633.4" y="451.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (15 samples, 0.04%)</title><rect x="633.4" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (15 samples, 0.04%)</title><rect x="633.4" y="419.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (15 samples, 0.04%)</title><rect x="633.4" y="403.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="633.4" y="387.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="636.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/403338419.apply (33 samples, 0.10%)</title><rect x="633.9" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (33 samples, 0.10%)</title><rect x="633.9" y="483.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (33 samples, 0.10%)</title><rect x="633.9" y="467.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="636.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (772 samples, 2.29%)</title><rect x="635.0" y="611.0" width="27.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.0" y="622.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (44 samples, 0.13%)</title><rect x="635.0" y="595.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (44 samples, 0.13%)</title><rect x="635.0" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.0" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (44 samples, 0.13%)</title><rect x="635.0" y="563.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.0" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (44 samples, 0.13%)</title><rect x="635.0" y="547.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.13%)</title><rect x="635.0" y="531.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.0" y="542.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.13%)</title><rect x="635.0" y="515.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="638.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (36 samples, 0.11%)</title><rect x="636.6" y="595.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (36 samples, 0.11%)</title><rect x="636.6" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="639.6" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (36 samples, 0.11%)</title><rect x="636.6" y="563.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.6" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (36 samples, 0.11%)</title><rect x="636.6" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="639.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.11%)</title><rect x="636.6" y="531.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.6" y="542.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.11%)</title><rect x="636.6" y="515.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="639.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (53 samples, 0.16%)</title><rect x="637.8" y="595.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.8" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.03%)</title><rect x="637.8" y="579.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="640.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (13 samples, 0.04%)</title><rect x="638.5" y="579.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.5" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (13 samples, 0.04%)</title><rect x="638.5" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.5" y="574.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="638.5" y="547.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="641.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (22 samples, 0.07%)</title><rect x="638.9" y="579.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.07%)</title><rect x="638.9" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="638.9" y="547.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="641.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (11 samples, 0.03%)</title><rect x="639.3" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.3" y="558.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="639.3" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="642.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (204 samples, 0.61%)</title><rect x="639.7" y="595.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.7" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (204 samples, 0.61%)</title><rect x="639.7" y="579.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (204 samples, 0.61%)</title><rect x="639.7" y="563.0" width="7.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.7" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.02%)</title><rect x="639.9" y="547.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="642.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (14 samples, 0.04%)</title><rect x="640.2" y="547.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="643.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeSet (10 samples, 0.03%)</title><rect x="640.7" y="547.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="643.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="641.0" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="641.0" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.0" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (14 samples, 0.04%)</title><rect x="641.0" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.0" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (14 samples, 0.04%)</title><rect x="641.0" y="499.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="644.0" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (16 samples, 0.05%)</title><rect x="641.5" y="547.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.5" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (16 samples, 0.05%)</title><rect x="641.5" y="531.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="644.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (108 samples, 0.32%)</title><rect x="642.1" y="547.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (108 samples, 0.32%)</title><rect x="642.1" y="531.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (108 samples, 0.32%)</title><rect x="642.1" y="515.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (33 samples, 0.10%)</title><rect x="642.1" y="499.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (33 samples, 0.10%)</title><rect x="642.1" y="483.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (33 samples, 0.10%)</title><rect x="642.1" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="645.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (33 samples, 0.10%)</title><rect x="642.1" y="451.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (33 samples, 0.10%)</title><rect x="642.1" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.1" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (33 samples, 0.10%)</title><rect x="642.1" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (33 samples, 0.10%)</title><rect x="642.1" y="403.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.1" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.10%)</title><rect x="642.1" y="387.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.1" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.10%)</title><rect x="642.1" y="371.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="645.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (43 samples, 0.13%)</title><rect x="643.2" y="499.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.2" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (43 samples, 0.13%)</title><rect x="643.2" y="483.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="646.2" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.04%)</title><rect x="643.2" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.2" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.04%)</title><rect x="643.2" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.2" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="643.2" y="435.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="646.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (29 samples, 0.09%)</title><rect x="643.7" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="646.7" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (29 samples, 0.09%)</title><rect x="643.7" y="451.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="646.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (32 samples, 0.10%)</title><rect x="644.7" y="499.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (32 samples, 0.10%)</title><rect x="644.7" y="483.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="647.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.08%)</title><rect x="645.9" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="648.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.08%)</title><rect x="645.9" y="531.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="648.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (435 samples, 1.29%)</title><rect x="646.9" y="595.0" width="15.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="649.9" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.05%)</title><rect x="646.9" y="579.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="649.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (28 samples, 0.08%)</title><rect x="647.4" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="650.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (28 samples, 0.08%)</title><rect x="647.4" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.4" y="574.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.08%)</title><rect x="647.4" y="547.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="650.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (51 samples, 0.15%)</title><rect x="648.4" y="579.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="651.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.15%)</title><rect x="648.4" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.4" y="574.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.05%)</title><rect x="648.4" y="547.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="651.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (34 samples, 0.10%)</title><rect x="649.0" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.0" y="558.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.10%)</title><rect x="649.0" y="531.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="652.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (339 samples, 1.01%)</title><rect x="650.2" y="579.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.2" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (104 samples, 0.31%)</title><rect x="650.2" y="563.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="653.2" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (104 samples, 0.31%)</title><rect x="650.2" y="547.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.2" y="558.0"></text>
</g>
<g>
<title>java.lang.String (45 samples, 0.13%)</title><rect x="650.2" y="531.0" width="1.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="653.2" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.18%)</title><rect x="651.8" y="531.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.8" y="542.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.18%)</title><rect x="651.8" y="515.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="654.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (55 samples, 0.16%)</title><rect x="653.9" y="563.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (55 samples, 0.16%)</title><rect x="653.9" y="547.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.9" y="558.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.07%)</title><rect x="653.9" y="531.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="656.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (31 samples, 0.09%)</title><rect x="654.7" y="531.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="657.7" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (42 samples, 0.12%)</title><rect x="655.8" y="563.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (42 samples, 0.12%)</title><rect x="655.8" y="547.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.8" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.12%)</title><rect x="655.8" y="531.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.8" y="542.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.05%)</title><rect x="655.8" y="515.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="658.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (24 samples, 0.07%)</title><rect x="656.4" y="515.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.4" y="526.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.07%)</title><rect x="656.4" y="499.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="659.4" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.17%)</title><rect x="657.3" y="563.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.3" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.17%)</title><rect x="657.3" y="547.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.17%)</title><rect x="657.3" y="531.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.17%)</title><rect x="657.3" y="515.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.17%)</title><rect x="657.3" y="499.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.17%)</title><rect x="657.3" y="483.0" width="2.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="660.3" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (80 samples, 0.24%)</title><rect x="659.3" y="563.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (33 samples, 0.10%)</title><rect x="659.3" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (33 samples, 0.10%)</title><rect x="659.3" y="531.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="662.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (32 samples, 0.10%)</title><rect x="660.5" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (32 samples, 0.10%)</title><rect x="660.5" y="531.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="663.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$274/408419182.apply (15 samples, 0.04%)</title><rect x="661.6" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (15 samples, 0.04%)</title><rect x="661.6" y="531.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.6" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (15 samples, 0.04%)</title><rect x="661.6" y="515.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="664.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (316 samples, 0.94%)</title><rect x="662.1" y="723.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (316 samples, 0.94%)</title><rect x="662.1" y="707.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (316 samples, 0.94%)</title><rect x="662.1" y="691.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (316 samples, 0.94%)</title><rect x="662.1" y="675.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (316 samples, 0.94%)</title><rect x="662.1" y="659.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (306 samples, 0.91%)</title><rect x="662.1" y="643.0" width="10.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="665.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.06%)</title><rect x="662.1" y="627.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="665.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.06%)</title><rect x="662.1" y="611.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1348959580.get$Lambda (9 samples, 0.03%)</title><rect x="662.1" y="595.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.1" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$216 (9 samples, 0.03%)</title><rect x="662.1" y="579.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="665.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$220/1029944311.get$Lambda (11 samples, 0.03%)</title><rect x="662.4" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$220 (11 samples, 0.03%)</title><rect x="662.4" y="579.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="665.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (18 samples, 0.05%)</title><rect x="662.8" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="665.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (25 samples, 0.07%)</title><rect x="663.4" y="627.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (25 samples, 0.07%)</title><rect x="663.4" y="611.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.4" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (9 samples, 0.03%)</title><rect x="663.4" y="595.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="666.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (16 samples, 0.05%)</title><rect x="663.8" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.8" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (16 samples, 0.05%)</title><rect x="663.8" y="579.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="666.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (243 samples, 0.72%)</title><rect x="664.3" y="627.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="667.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (243 samples, 0.72%)</title><rect x="664.3" y="611.0" width="8.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (199 samples, 0.59%)</title><rect x="664.3" y="595.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (199 samples, 0.59%)</title><rect x="664.3" y="579.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (199 samples, 0.59%)</title><rect x="664.3" y="563.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (58 samples, 0.17%)</title><rect x="664.3" y="547.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.3" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (42 samples, 0.12%)</title><rect x="664.3" y="531.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="667.3" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (15 samples, 0.04%)</title><rect x="664.3" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="667.3" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (15 samples, 0.04%)</title><rect x="664.3" y="499.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="667.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (27 samples, 0.08%)</title><rect x="664.8" y="515.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="667.8" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (27 samples, 0.08%)</title><rect x="664.8" y="499.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="667.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (16 samples, 0.05%)</title><rect x="665.8" y="531.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (16 samples, 0.05%)</title><rect x="665.8" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (16 samples, 0.05%)</title><rect x="665.8" y="499.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="668.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (11 samples, 0.03%)</title><rect x="665.8" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="668.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (11 samples, 0.03%)</title><rect x="665.8" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="668.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (141 samples, 0.42%)</title><rect x="666.4" y="547.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="669.4" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.03%)</title><rect x="666.4" y="531.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.4" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.03%)</title><rect x="666.4" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.4" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="666.4" y="499.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.4" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="666.4" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="669.4" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="666.4" y="467.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="669.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (131 samples, 0.39%)</title><rect x="666.7" y="531.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (41 samples, 0.12%)</title><rect x="666.7" y="515.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (12 samples, 0.04%)</title><rect x="666.9" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.9" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (12 samples, 0.04%)</title><rect x="666.9" y="483.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.9" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.04%)</title><rect x="666.9" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="669.9" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.04%)</title><rect x="666.9" y="451.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.9" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.04%)</title><rect x="666.9" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.9" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (12 samples, 0.04%)</title><rect x="666.9" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="669.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (11 samples, 0.03%)</title><rect x="667.3" y="499.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="670.3" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (11 samples, 0.03%)</title><rect x="667.3" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.3" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (11 samples, 0.03%)</title><rect x="667.3" y="467.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="670.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (12 samples, 0.04%)</title><rect x="667.7" y="499.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="670.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (28 samples, 0.08%)</title><rect x="668.1" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.04%)</title><rect x="668.1" y="499.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="671.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (14 samples, 0.04%)</title><rect x="668.1" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (14 samples, 0.04%)</title><rect x="668.1" y="467.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="668.1" y="451.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="671.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (9 samples, 0.03%)</title><rect x="668.8" y="499.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.8" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (9 samples, 0.03%)</title><rect x="668.8" y="483.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="671.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (62 samples, 0.18%)</title><rect x="669.1" y="515.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (19 samples, 0.06%)</title><rect x="669.1" y="499.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="672.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (43 samples, 0.13%)</title><rect x="669.8" y="499.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (11 samples, 0.03%)</title><rect x="669.8" y="483.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (11 samples, 0.03%)</title><rect x="669.8" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11 samples, 0.03%)</title><rect x="669.8" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (11 samples, 0.03%)</title><rect x="669.8" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="672.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (32 samples, 0.10%)</title><rect x="670.2" y="483.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (32 samples, 0.10%)</title><rect x="670.2" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (19 samples, 0.06%)</title><rect x="670.2" y="451.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="673.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (13 samples, 0.04%)</title><rect x="670.8" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (13 samples, 0.04%)</title><rect x="670.8" y="435.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="673.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (44 samples, 0.13%)</title><rect x="671.3" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (44 samples, 0.13%)</title><rect x="671.3" y="579.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="674.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (44 samples, 0.13%)</title><rect x="671.3" y="563.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (33 samples, 0.10%)</title><rect x="671.3" y="547.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="674.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 0.10%)</title><rect x="671.3" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (33 samples, 0.10%)</title><rect x="671.3" y="515.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (33 samples, 0.10%)</title><rect x="671.3" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1864376279.accept (33 samples, 0.10%)</title><rect x="671.3" y="483.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="674.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (33 samples, 0.10%)</title><rect x="671.3" y="467.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (33 samples, 0.10%)</title><rect x="671.3" y="451.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (33 samples, 0.10%)</title><rect x="671.3" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (33 samples, 0.10%)</title><rect x="671.3" y="419.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="674.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$293/843397805.apply (33 samples, 0.10%)</title><rect x="671.3" y="403.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (33 samples, 0.10%)</title><rect x="671.3" y="387.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (33 samples, 0.10%)</title><rect x="671.3" y="371.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="674.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (11 samples, 0.03%)</title><rect x="672.5" y="547.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.5" y="558.0"></text>
</g>
<g>
<title>byte[] (11 samples, 0.03%)</title><rect x="672.5" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="675.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (10 samples, 0.03%)</title><rect x="672.8" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="675.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (10 samples, 0.03%)</title><rect x="672.8" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10 samples, 0.03%)</title><rect x="672.8" y="611.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (10 samples, 0.03%)</title><rect x="672.8" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (60 samples, 0.18%)</title><rect x="673.2" y="803.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="676.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (60 samples, 0.18%)</title><rect x="673.2" y="787.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (60 samples, 0.18%)</title><rect x="673.2" y="771.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (60 samples, 0.18%)</title><rect x="673.2" y="755.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (60 samples, 0.18%)</title><rect x="673.2" y="739.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (60 samples, 0.18%)</title><rect x="673.2" y="723.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (60 samples, 0.18%)</title><rect x="673.2" y="707.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="676.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (60 samples, 0.18%)</title><rect x="673.2" y="691.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="676.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 0.18%)</title><rect x="673.2" y="675.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (60 samples, 0.18%)</title><rect x="673.2" y="659.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="676.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (60 samples, 0.18%)</title><rect x="673.2" y="643.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (60 samples, 0.18%)</title><rect x="673.2" y="627.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (60 samples, 0.18%)</title><rect x="673.2" y="611.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (60 samples, 0.18%)</title><rect x="673.2" y="595.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (60 samples, 0.18%)</title><rect x="673.2" y="579.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (60 samples, 0.18%)</title><rect x="673.2" y="563.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.2" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (60 samples, 0.18%)</title><rect x="673.2" y="547.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="676.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,197 samples, 3.56%)</title><rect x="675.3" y="803.0" width="42.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.3" y="814.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.08%)</title><rect x="675.3" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.08%)</title><rect x="675.3" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1354189177.get$Lambda (17 samples, 0.05%)</title><rect x="675.3" y="755.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.3" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$248 (17 samples, 0.05%)</title><rect x="675.3" y="739.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="678.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$252/1905917865.get$Lambda (9 samples, 0.03%)</title><rect x="675.9" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="678.9" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$252 (9 samples, 0.03%)</title><rect x="675.9" y="739.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="678.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (21 samples, 0.06%)</title><rect x="676.2" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.06%)</title><rect x="676.2" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/526911886.get$Lambda (21 samples, 0.06%)</title><rect x="676.2" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$249 (21 samples, 0.06%)</title><rect x="676.2" y="739.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="679.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (334 samples, 0.99%)</title><rect x="676.9" y="787.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="679.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1514835762.accept (280 samples, 0.83%)</title><rect x="676.9" y="771.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (280 samples, 0.83%)</title><rect x="676.9" y="755.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (280 samples, 0.83%)</title><rect x="676.9" y="739.0" width="9.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (280 samples, 0.83%)</title><rect x="676.9" y="723.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="679.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (280 samples, 0.83%)</title><rect x="676.9" y="707.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (280 samples, 0.83%)</title><rect x="676.9" y="691.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (280 samples, 0.83%)</title><rect x="676.9" y="675.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="679.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (280 samples, 0.83%)</title><rect x="676.9" y="659.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (280 samples, 0.83%)</title><rect x="676.9" y="643.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (280 samples, 0.83%)</title><rect x="676.9" y="627.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (280 samples, 0.83%)</title><rect x="676.9" y="611.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (280 samples, 0.83%)</title><rect x="676.9" y="595.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (59 samples, 0.18%)</title><rect x="676.9" y="579.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (59 samples, 0.18%)</title><rect x="676.9" y="563.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (59 samples, 0.18%)</title><rect x="676.9" y="547.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (33 samples, 0.10%)</title><rect x="676.9" y="531.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (33 samples, 0.10%)</title><rect x="676.9" y="515.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (33 samples, 0.10%)</title><rect x="676.9" y="499.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (33 samples, 0.10%)</title><rect x="676.9" y="483.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.10%)</title><rect x="676.9" y="467.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="679.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.08%)</title><rect x="678.1" y="531.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.08%)</title><rect x="678.1" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="681.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.08%)</title><rect x="678.1" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.08%)</title><rect x="678.1" y="483.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.08%)</title><rect x="678.1" y="467.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (26 samples, 0.08%)</title><rect x="678.1" y="451.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="681.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.08%)</title><rect x="679.0" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.0" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.08%)</title><rect x="679.0" y="563.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.08%)</title><rect x="679.0" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="682.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257/324408259.get$Lambda (27 samples, 0.08%)</title><rect x="679.0" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257 (27 samples, 0.08%)</title><rect x="679.0" y="515.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="682.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (194 samples, 0.58%)</title><rect x="680.0" y="579.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (97 samples, 0.29%)</title><rect x="680.0" y="563.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="683.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (61 samples, 0.18%)</title><rect x="680.0" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.0" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (61 samples, 0.18%)</title><rect x="680.0" y="531.0" width="2.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="683.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (36 samples, 0.11%)</title><rect x="682.1" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.1" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (36 samples, 0.11%)</title><rect x="682.1" y="531.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.1" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (36 samples, 0.11%)</title><rect x="682.1" y="515.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="685.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (97 samples, 0.29%)</title><rect x="683.4" y="563.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/874025876.get (97 samples, 0.29%)</title><rect x="683.4" y="547.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (97 samples, 0.29%)</title><rect x="683.4" y="531.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (97 samples, 0.29%)</title><rect x="683.4" y="515.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (97 samples, 0.29%)</title><rect x="683.4" y="499.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="686.4" y="510.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.27%)</title><rect x="683.6" y="483.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="686.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/2133118391.accept (54 samples, 0.16%)</title><rect x="686.8" y="771.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (54 samples, 0.16%)</title><rect x="686.8" y="755.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/526911886.run (54 samples, 0.16%)</title><rect x="686.8" y="739.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (54 samples, 0.16%)</title><rect x="686.8" y="723.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (54 samples, 0.16%)</title><rect x="686.8" y="707.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.8" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (54 samples, 0.16%)</title><rect x="686.8" y="691.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.8" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (54 samples, 0.16%)</title><rect x="686.8" y="675.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.8" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (54 samples, 0.16%)</title><rect x="686.8" y="659.0" width="1.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="689.8" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (86 samples, 0.26%)</title><rect x="688.7" y="787.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="691.7" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (86 samples, 0.26%)</title><rect x="688.7" y="771.0" width="3.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="691.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (72 samples, 0.21%)</title><rect x="691.7" y="787.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.10%)</title><rect x="691.7" y="771.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (34 samples, 0.10%)</title><rect x="691.7" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="694.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (34 samples, 0.10%)</title><rect x="691.7" y="739.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.7" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (34 samples, 0.10%)</title><rect x="691.7" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="694.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (34 samples, 0.10%)</title><rect x="691.7" y="707.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.7" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (34 samples, 0.10%)</title><rect x="691.7" y="691.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="694.7" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (34 samples, 0.10%)</title><rect x="691.7" y="675.0" width="1.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="694.7" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (38 samples, 0.11%)</title><rect x="692.9" y="771.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="695.9" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (38 samples, 0.11%)</title><rect x="692.9" y="755.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="695.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (195 samples, 0.58%)</title><rect x="694.2" y="787.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/856242411.run (103 samples, 0.31%)</title><rect x="694.2" y="771.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (103 samples, 0.31%)</title><rect x="694.2" y="755.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.31%)</title><rect x="694.2" y="739.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.31%)</title><rect x="694.2" y="723.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (103 samples, 0.31%)</title><rect x="694.2" y="707.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (103 samples, 0.31%)</title><rect x="694.2" y="691.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (103 samples, 0.31%)</title><rect x="694.2" y="675.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (103 samples, 0.31%)</title><rect x="694.2" y="659.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="697.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (103 samples, 0.31%)</title><rect x="694.2" y="643.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (103 samples, 0.31%)</title><rect x="694.2" y="627.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (68 samples, 0.20%)</title><rect x="694.2" y="611.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (68 samples, 0.20%)</title><rect x="694.2" y="595.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="697.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (68 samples, 0.20%)</title><rect x="694.2" y="579.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (54 samples, 0.16%)</title><rect x="694.2" y="563.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (54 samples, 0.16%)</title><rect x="694.2" y="547.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.16%)</title><rect x="694.2" y="531.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="697.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (54 samples, 0.16%)</title><rect x="694.2" y="515.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (54 samples, 0.16%)</title><rect x="694.2" y="499.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.2" y="510.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.16%)</title><rect x="694.2" y="483.0" width="1.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="697.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (14 samples, 0.04%)</title><rect x="696.1" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="699.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="696.1" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.1" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="696.1" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="699.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257/324408259.get$Lambda (14 samples, 0.04%)</title><rect x="696.1" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="699.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257 (14 samples, 0.04%)</title><rect x="696.1" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="699.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (35 samples, 0.10%)</title><rect x="696.6" y="611.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="699.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.10%)</title><rect x="696.6" y="595.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="699.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.10%)</title><rect x="696.6" y="579.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (35 samples, 0.10%)</title><rect x="696.6" y="563.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 0.10%)</title><rect x="696.6" y="547.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="699.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (35 samples, 0.10%)</title><rect x="696.6" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.6" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (35 samples, 0.10%)</title><rect x="696.6" y="515.0" width="1.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="699.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/2094894093.run (92 samples, 0.27%)</title><rect x="697.8" y="771.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (92 samples, 0.27%)</title><rect x="697.8" y="755.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.12%)</title><rect x="697.8" y="739.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="700.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.12%)</title><rect x="697.8" y="723.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.get$Lambda (42 samples, 0.12%)</title><rect x="697.8" y="707.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.8" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$256 (42 samples, 0.12%)</title><rect x="697.8" y="691.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="700.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (50 samples, 0.15%)</title><rect x="699.3" y="739.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (50 samples, 0.15%)</title><rect x="699.3" y="723.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (50 samples, 0.15%)</title><rect x="699.3" y="707.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (50 samples, 0.15%)</title><rect x="699.3" y="691.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="702.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (123 samples, 0.37%)</title><rect x="701.0" y="787.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.0" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (31 samples, 0.09%)</title><rect x="701.0" y="771.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.0" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (31 samples, 0.09%)</title><rect x="701.0" y="755.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.0" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (31 samples, 0.09%)</title><rect x="701.0" y="739.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.0" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (31 samples, 0.09%)</title><rect x="701.0" y="723.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.0" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (31 samples, 0.09%)</title><rect x="701.0" y="707.0" width="1.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="704.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (92 samples, 0.27%)</title><rect x="702.1" y="771.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="705.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.05%)</title><rect x="702.1" y="755.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.05%)</title><rect x="702.1" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$296/1401189718.get$Lambda (18 samples, 0.05%)</title><rect x="702.1" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.1" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$296 (18 samples, 0.05%)</title><rect x="702.1" y="707.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="705.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (74 samples, 0.22%)</title><rect x="702.8" y="755.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (31 samples, 0.09%)</title><rect x="702.8" y="739.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="705.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (43 samples, 0.13%)</title><rect x="703.8" y="739.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.8" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (43 samples, 0.13%)</title><rect x="703.8" y="723.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.8" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (43 samples, 0.13%)</title><rect x="703.8" y="707.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="706.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (223 samples, 0.66%)</title><rect x="705.3" y="787.0" width="7.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="705.3" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="705.3" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$247/1379068579.get$Lambda (16 samples, 0.05%)</title><rect x="705.3" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.3" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$247 (16 samples, 0.05%)</title><rect x="705.3" y="723.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="708.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (115 samples, 0.34%)</title><rect x="705.9" y="771.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="708.9" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (49 samples, 0.15%)</title><rect x="705.9" y="755.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.9" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (49 samples, 0.15%)</title><rect x="705.9" y="739.0" width="1.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="708.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (66 samples, 0.20%)</title><rect x="707.6" y="755.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="710.6" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (66 samples, 0.20%)</title><rect x="707.6" y="739.0" width="2.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="710.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (92 samples, 0.27%)</title><rect x="709.9" y="771.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.9" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (92 samples, 0.27%)</title><rect x="709.9" y="755.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="712.9" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (63 samples, 0.19%)</title><rect x="713.2" y="787.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (63 samples, 0.19%)</title><rect x="713.2" y="771.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.2" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (63 samples, 0.19%)</title><rect x="713.2" y="755.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="716.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (63 samples, 0.19%)</title><rect x="713.2" y="739.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="716.2" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (22 samples, 0.07%)</title><rect x="713.2" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.2" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (22 samples, 0.07%)</title><rect x="713.2" y="707.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="716.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (41 samples, 0.12%)</title><rect x="713.9" y="723.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (41 samples, 0.12%)</title><rect x="713.9" y="707.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (41 samples, 0.12%)</title><rect x="713.9" y="691.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (41 samples, 0.12%)</title><rect x="713.9" y="675.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="716.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (41 samples, 0.12%)</title><rect x="713.9" y="659.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (41 samples, 0.12%)</title><rect x="713.9" y="643.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="716.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (21 samples, 0.06%)</title><rect x="715.4" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (21 samples, 0.06%)</title><rect x="715.4" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (21 samples, 0.06%)</title><rect x="715.4" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.4" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (21 samples, 0.06%)</title><rect x="715.4" y="739.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="718.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (21 samples, 0.06%)</title><rect x="715.4" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.4" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (21 samples, 0.06%)</title><rect x="715.4" y="707.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="718.4" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (33 samples, 0.10%)</title><rect x="716.1" y="787.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (33 samples, 0.10%)</title><rect x="716.1" y="771.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (33 samples, 0.10%)</title><rect x="716.1" y="755.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.1" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (33 samples, 0.10%)</title><rect x="716.1" y="739.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="719.1" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,480 samples, 40.06%)</title><rect x="717.3" y="803.0" width="472.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.3" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (137 samples, 0.41%)</title><rect x="717.3" y="787.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.3" y="798.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (137 samples, 0.41%)</title><rect x="717.3" y="771.0" width="4.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="720.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,343 samples, 39.65%)</title><rect x="722.1" y="787.0" width="467.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.1" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,343 samples, 39.65%)</title><rect x="722.1" y="771.0" width="467.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.1" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,343 samples, 39.65%)</title><rect x="722.1" y="755.0" width="467.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.1" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6,431 samples, 19.11%)</title><rect x="722.1" y="739.0" width="225.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.1" y="750.0">one/nio/http/HttpSession.handl..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6,431 samples, 19.11%)</title><rect x="722.1" y="723.0" width="225.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="725.1" y="734.0">one/nio/http/HttpServer.handle..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (6,016 samples, 17.88%)</title><rect x="722.1" y="707.0" width="210.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="718.0">RequestHandler1_entity.handl..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (290 samples, 0.86%)</title><rect x="722.1" y="691.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (290 samples, 0.86%)</title><rect x="722.1" y="675.0" width="10.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="725.1" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (290 samples, 0.86%)</title><rect x="722.1" y="659.0" width="10.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="725.1" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (290 samples, 0.86%)</title><rect x="722.1" y="643.0" width="10.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.1" y="654.0"></text>
</g>
<g>
<title>java.lang.String (154 samples, 0.46%)</title><rect x="722.1" y="627.0" width="5.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="725.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (136 samples, 0.40%)</title><rect x="727.5" y="627.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.5" y="638.0"></text>
</g>
<g>
<title>byte[] (136 samples, 0.40%)</title><rect x="727.5" y="611.0" width="4.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="730.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (5,726 samples, 17.02%)</title><rect x="732.2" y="691.0" width="200.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.2" y="702.0">ru/mail/polis/service/dari..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (392 samples, 1.17%)</title><rect x="732.2" y="675.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.substring (392 samples, 1.17%)</title><rect x="732.2" y="659.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (392 samples, 1.17%)</title><rect x="732.2" y="643.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.2" y="654.0"></text>
</g>
<g>
<title>java.lang.String (179 samples, 0.53%)</title><rect x="732.2" y="627.0" width="6.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="735.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (213 samples, 0.63%)</title><rect x="738.5" y="627.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.5" y="638.0"></text>
</g>
<g>
<title>byte[] (213 samples, 0.63%)</title><rect x="738.5" y="611.0" width="7.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="741.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (564 samples, 1.68%)</title><rect x="746.0" y="675.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (564 samples, 1.68%)</title><rect x="746.0" y="659.0" width="19.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="749.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (189 samples, 0.56%)</title><rect x="746.0" y="643.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="749.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (189 samples, 0.56%)</title><rect x="746.0" y="627.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$110/1500935830.get$Lambda (189 samples, 0.56%)</title><rect x="746.0" y="611.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.0" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$110 (189 samples, 0.56%)</title><rect x="746.0" y="595.0" width="6.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="749.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (375 samples, 1.11%)</title><rect x="752.6" y="643.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (375 samples, 1.11%)</title><rect x="752.6" y="627.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.6" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (207 samples, 0.62%)</title><rect x="752.6" y="611.0" width="7.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="755.6" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (166 samples, 0.49%)</title><rect x="759.9" y="611.0" width="5.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="762.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (4,090 samples, 12.16%)</title><rect x="765.8" y="675.0" width="143.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.8" y="686.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java.util.ArrayList (11 samples, 0.03%)</title><rect x="765.8" y="659.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="768.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="766.2" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="766.2" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$145/1854348690.get$Lambda (13 samples, 0.04%)</title><rect x="766.2" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="769.2" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.ClusterServiceImpl$$Lambda$145 (13 samples, 0.04%)</title><rect x="766.2" y="611.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="769.2" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.06%)</title><rect x="766.6" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (21 samples, 0.06%)</title><rect x="766.6" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.06%)</title><rect x="766.6" y="627.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.6" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (21 samples, 0.06%)</title><rect x="766.6" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.6" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (21 samples, 0.06%)</title><rect x="766.6" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.6" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.06%)</title><rect x="766.6" y="579.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="769.6" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (31 samples, 0.09%)</title><rect x="767.3" y="659.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="770.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (25 samples, 0.07%)</title><rect x="767.3" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="770.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (25 samples, 0.07%)</title><rect x="767.3" y="627.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="770.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (33 samples, 0.10%)</title><rect x="768.4" y="659.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (33 samples, 0.10%)</title><rect x="768.4" y="643.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.4" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (21 samples, 0.06%)</title><rect x="768.4" y="627.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="771.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="769.2" y="627.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (12 samples, 0.04%)</title><rect x="769.2" y="611.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="772.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (28 samples, 0.08%)</title><rect x="769.6" y="659.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="772.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (28 samples, 0.08%)</title><rect x="769.6" y="643.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (18 samples, 0.05%)</title><rect x="769.6" y="627.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="772.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="770.2" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="773.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (10 samples, 0.03%)</title><rect x="770.2" y="611.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="773.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (3,331 samples, 9.90%)</title><rect x="770.6" y="659.0" width="116.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.6" y="670.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="770.6" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="770.6" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$136/2054529164.get$Lambda (17 samples, 0.05%)</title><rect x="770.6" y="611.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.6" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$136 (17 samples, 0.05%)</title><rect x="770.6" y="595.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="773.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (56 samples, 0.17%)</title><rect x="771.2" y="643.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="774.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (56 samples, 0.17%)</title><rect x="771.2" y="627.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="774.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (42 samples, 0.12%)</title><rect x="771.2" y="611.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="774.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="772.6" y="611.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.04%)</title><rect x="772.6" y="595.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="772.6" y="579.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="775.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2,107 samples, 6.26%)</title><rect x="773.1" y="643.0" width="73.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.1" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,107 samples, 6.26%)</title><rect x="773.1" y="627.0" width="73.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.1" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,107 samples, 6.26%)</title><rect x="773.1" y="611.0" width="73.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="776.1" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,107 samples, 6.26%)</title><rect x="773.1" y="595.0" width="73.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="776.1" y="606.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="773.1" y="579.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="773.1" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/478252441.get$Lambda (9 samples, 0.03%)</title><rect x="773.1" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$133 (9 samples, 0.03%)</title><rect x="773.1" y="531.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="776.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (63 samples, 0.19%)</title><rect x="773.5" y="579.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (63 samples, 0.19%)</title><rect x="773.5" y="563.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="776.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (37 samples, 0.11%)</title><rect x="773.5" y="547.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="776.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.08%)</title><rect x="774.7" y="547.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="777.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.08%)</title><rect x="774.7" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="777.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.08%)</title><rect x="774.7" y="515.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="777.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (69 samples, 0.21%)</title><rect x="775.7" y="579.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (69 samples, 0.21%)</title><rect x="775.7" y="563.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="778.7" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.08%)</title><rect x="775.7" y="547.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="778.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.12%)</title><rect x="776.6" y="547.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.12%)</title><rect x="776.6" y="531.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.12%)</title><rect x="776.6" y="515.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="779.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (56 samples, 0.17%)</title><rect x="778.1" y="579.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="781.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (119 samples, 0.35%)</title><rect x="780.0" y="579.0" width="4.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="783.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (907 samples, 2.70%)</title><rect x="784.2" y="579.0" width="31.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="787.2" y="590.0">jd..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (109 samples, 0.32%)</title><rect x="784.2" y="563.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="787.2" y="574.0"></text>
</g>
<g>
<title>java/util/Collection.stream (92 samples, 0.27%)</title><rect x="784.2" y="547.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="787.2" y="558.0"></text>
</g>
<g>
<title>java/util/List.spliterator (39 samples, 0.12%)</title><rect x="784.2" y="531.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.2" y="542.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (39 samples, 0.12%)</title><rect x="784.2" y="515.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="787.2" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (53 samples, 0.16%)</title><rect x="785.6" y="531.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.6" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (53 samples, 0.16%)</title><rect x="785.6" y="515.0" width="1.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="788.6" y="526.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (17 samples, 0.05%)</title><rect x="787.4" y="547.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.4" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.05%)</title><rect x="787.4" y="531.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="790.4" y="542.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (17 samples, 0.05%)</title><rect x="787.4" y="515.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.4" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (17 samples, 0.05%)</title><rect x="787.4" y="499.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.4" y="510.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (17 samples, 0.05%)</title><rect x="787.4" y="483.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="790.4" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (368 samples, 1.09%)</title><rect x="788.0" y="563.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.0" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (368 samples, 1.09%)</title><rect x="788.0" y="547.0" width="12.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.0" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.07%)</title><rect x="788.3" y="531.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="791.3" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (57 samples, 0.17%)</title><rect x="789.1" y="531.0" width="2.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="792.1" y="542.0"></text>
</g>
<g>
<title>java.util.TreeSet (16 samples, 0.05%)</title><rect x="791.1" y="531.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="794.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.09%)</title><rect x="791.7" y="531.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.09%)</title><rect x="791.7" y="515.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.7" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (31 samples, 0.09%)</title><rect x="791.7" y="499.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.7" y="510.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (31 samples, 0.09%)</title><rect x="791.7" y="483.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="794.7" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (136 samples, 0.40%)</title><rect x="792.8" y="531.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (136 samples, 0.40%)</title><rect x="792.8" y="515.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.8" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (136 samples, 0.40%)</title><rect x="792.8" y="499.0" width="4.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="795.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (136 samples, 0.40%)</title><rect x="792.8" y="483.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (58 samples, 0.17%)</title><rect x="792.8" y="467.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.8" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (58 samples, 0.17%)</title><rect x="792.8" y="451.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (58 samples, 0.17%)</title><rect x="792.8" y="435.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="795.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.17%)</title><rect x="792.8" y="419.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (58 samples, 0.17%)</title><rect x="792.8" y="403.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.8" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.17%)</title><rect x="792.8" y="387.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (58 samples, 0.17%)</title><rect x="792.8" y="371.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="795.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (58 samples, 0.17%)</title><rect x="792.8" y="355.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="795.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (58 samples, 0.17%)</title><rect x="792.8" y="339.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="795.8" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (40 samples, 0.12%)</title><rect x="794.8" y="467.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.8" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (40 samples, 0.12%)</title><rect x="794.8" y="451.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (14 samples, 0.04%)</title><rect x="794.8" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (14 samples, 0.04%)</title><rect x="794.8" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="797.8" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="794.8" y="403.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="797.8" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (26 samples, 0.08%)</title><rect x="795.3" y="435.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.3" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (26 samples, 0.08%)</title><rect x="795.3" y="419.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="798.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (38 samples, 0.11%)</title><rect x="796.2" y="467.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.2" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (38 samples, 0.11%)</title><rect x="796.2" y="451.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="799.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (32 samples, 0.10%)</title><rect x="797.5" y="531.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.5" y="542.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (32 samples, 0.10%)</title><rect x="797.5" y="515.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="800.5" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (65 samples, 0.19%)</title><rect x="798.7" y="531.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (65 samples, 0.19%)</title><rect x="798.7" y="515.0" width="2.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="801.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (12 samples, 0.04%)</title><rect x="800.9" y="563.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="803.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (300 samples, 0.89%)</title><rect x="801.4" y="563.0" width="10.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.4" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (300 samples, 0.89%)</title><rect x="801.4" y="547.0" width="10.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.4" y="558.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (276 samples, 0.82%)</title><rect x="801.4" y="531.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.4" y="542.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (276 samples, 0.82%)</title><rect x="801.4" y="515.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.4" y="526.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (276 samples, 0.82%)</title><rect x="801.4" y="499.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.4" y="510.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (60 samples, 0.18%)</title><rect x="801.4" y="483.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="804.4" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (77 samples, 0.23%)</title><rect x="803.5" y="483.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.5" y="494.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (77 samples, 0.23%)</title><rect x="803.5" y="467.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="806.5" y="478.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.23%)</title><rect x="803.5" y="451.0" width="2.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="806.5" y="462.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (139 samples, 0.41%)</title><rect x="806.2" y="483.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.2" y="494.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (139 samples, 0.41%)</title><rect x="806.2" y="467.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.2" y="478.0"></text>
</g>
<g>
<title>java.lang.String (64 samples, 0.19%)</title><rect x="806.2" y="451.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="809.2" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.22%)</title><rect x="808.4" y="451.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.4" y="462.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.22%)</title><rect x="808.4" y="435.0" width="2.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="811.4" y="446.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (24 samples, 0.07%)</title><rect x="811.0" y="531.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="814.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (51 samples, 0.15%)</title><rect x="811.9" y="563.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (51 samples, 0.15%)</title><rect x="811.9" y="547.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="814.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (67 samples, 0.20%)</title><rect x="813.7" y="563.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.7" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (20 samples, 0.06%)</title><rect x="813.7" y="547.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="816.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (9 samples, 0.03%)</title><rect x="814.4" y="547.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.4" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="814.4" y="531.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="817.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (38 samples, 0.11%)</title><rect x="814.7" y="547.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.7" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (38 samples, 0.11%)</title><rect x="814.7" y="531.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="817.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (611 samples, 1.82%)</title><rect x="816.0" y="579.0" width="21.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.0" y="590.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (16 samples, 0.05%)</title><rect x="816.0" y="563.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="819.0" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.map (55 samples, 0.16%)</title><rect x="816.6" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/889968472.apply (55 samples, 0.16%)</title><rect x="816.6" y="547.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="819.6" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (31 samples, 0.09%)</title><rect x="816.6" y="531.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="819.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (24 samples, 0.07%)</title><rect x="817.7" y="531.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (24 samples, 0.07%)</title><rect x="817.7" y="515.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="820.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (89 samples, 0.26%)</title><rect x="818.5" y="563.0" width="3.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="821.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (14 samples, 0.04%)</title><rect x="821.6" y="563.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (14 samples, 0.04%)</title><rect x="821.6" y="547.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="824.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (20 samples, 0.06%)</title><rect x="822.1" y="563.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="825.1" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (20 samples, 0.06%)</title><rect x="822.1" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.1" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (20 samples, 0.06%)</title><rect x="822.1" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.1" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (20 samples, 0.06%)</title><rect x="822.1" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="825.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (417 samples, 1.24%)</title><rect x="822.8" y="563.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (417 samples, 1.24%)</title><rect x="822.8" y="547.0" width="14.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.8" y="558.0"></text>
</g>
<g>
<title>java.lang.Class[] (46 samples, 0.14%)</title><rect x="822.8" y="531.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="825.8" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (49 samples, 0.15%)</title><rect x="824.4" y="531.0" width="1.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="827.4" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList (37 samples, 0.11%)</title><rect x="826.2" y="531.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="829.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (177 samples, 0.53%)</title><rect x="827.5" y="531.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (177 samples, 0.53%)</title><rect x="827.5" y="515.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.5" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (177 samples, 0.53%)</title><rect x="827.5" y="499.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.5" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (177 samples, 0.53%)</title><rect x="827.5" y="483.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.5" y="494.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (177 samples, 0.53%)</title><rect x="827.5" y="467.0" width="6.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="830.5" y="478.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (59 samples, 0.18%)</title><rect x="833.7" y="531.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (59 samples, 0.18%)</title><rect x="833.7" y="515.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="836.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (42 samples, 0.12%)</title><rect x="833.7" y="499.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="836.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (42 samples, 0.12%)</title><rect x="833.7" y="483.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="836.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (17 samples, 0.05%)</title><rect x="835.1" y="499.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (17 samples, 0.05%)</title><rect x="835.1" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="838.1" y="494.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (49 samples, 0.15%)</title><rect x="835.7" y="531.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="838.7" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (49 samples, 0.15%)</title><rect x="835.7" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="838.7" y="526.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (49 samples, 0.15%)</title><rect x="835.7" y="499.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="838.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (273 samples, 0.81%)</title><rect x="837.5" y="579.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (52 samples, 0.15%)</title><rect x="837.5" y="563.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="840.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (27 samples, 0.08%)</title><rect x="837.5" y="547.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="840.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.07%)</title><rect x="838.4" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.07%)</title><rect x="838.4" y="531.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (25 samples, 0.07%)</title><rect x="838.4" y="515.0" width="0.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="841.4" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.09%)</title><rect x="839.3" y="563.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="842.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (191 samples, 0.57%)</title><rect x="840.3" y="563.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.13%)</title><rect x="840.3" y="547.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.13%)</title><rect x="840.3" y="531.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.get$Lambda (21 samples, 0.06%)</title><rect x="840.3" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="843.3" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$127 (21 samples, 0.06%)</title><rect x="840.3" y="499.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="843.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.get$Lambda (23 samples, 0.07%)</title><rect x="841.1" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (23 samples, 0.07%)</title><rect x="841.1" y="499.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="844.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (147 samples, 0.44%)</title><rect x="841.9" y="547.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="844.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (147 samples, 0.44%)</title><rect x="841.9" y="531.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="844.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (95 samples, 0.28%)</title><rect x="841.9" y="515.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="844.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.15%)</title><rect x="845.2" y="515.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (52 samples, 0.15%)</title><rect x="845.2" y="499.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.15%)</title><rect x="845.2" y="483.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="848.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (1,151 samples, 3.42%)</title><rect x="847.0" y="643.0" width="40.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="850.0" y="654.0">ru/..</text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (31 samples, 0.09%)</title><rect x="847.0" y="627.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.0" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (31 samples, 0.09%)</title><rect x="847.0" y="611.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="850.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (495 samples, 1.47%)</title><rect x="848.1" y="627.0" width="17.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.1" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (40 samples, 0.12%)</title><rect x="848.1" y="611.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="851.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (455 samples, 1.35%)</title><rect x="849.5" y="611.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="852.5" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (424 samples, 1.26%)</title><rect x="849.5" y="595.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.5" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (424 samples, 1.26%)</title><rect x="849.5" y="579.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="852.5" y="590.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (31 samples, 0.09%)</title><rect x="849.5" y="563.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="852.5" y="574.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.10%)</title><rect x="850.6" y="563.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="853.6" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (48 samples, 0.14%)</title><rect x="851.8" y="563.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="854.8" y="574.0"></text>
</g>
<g>
<title>java.util.TreeSet (18 samples, 0.05%)</title><rect x="853.4" y="563.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="856.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.10%)</title><rect x="854.1" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="857.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.10%)</title><rect x="854.1" y="547.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.1" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (32 samples, 0.10%)</title><rect x="854.1" y="531.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.1" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (32 samples, 0.10%)</title><rect x="854.1" y="515.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="857.1" y="526.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (31 samples, 0.09%)</title><rect x="855.2" y="563.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.2" y="574.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (31 samples, 0.09%)</title><rect x="855.2" y="547.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="858.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (160 samples, 0.48%)</title><rect x="856.3" y="563.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (160 samples, 0.48%)</title><rect x="856.3" y="547.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.3" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (160 samples, 0.48%)</title><rect x="856.3" y="531.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (70 samples, 0.21%)</title><rect x="856.3" y="515.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.3" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (70 samples, 0.21%)</title><rect x="856.3" y="499.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (70 samples, 0.21%)</title><rect x="856.3" y="483.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="859.3" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (70 samples, 0.21%)</title><rect x="856.3" y="467.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="859.3" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (70 samples, 0.21%)</title><rect x="856.3" y="451.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.3" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.21%)</title><rect x="856.3" y="435.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.3" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (70 samples, 0.21%)</title><rect x="856.3" y="419.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.3" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (70 samples, 0.21%)</title><rect x="856.3" y="403.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (70 samples, 0.21%)</title><rect x="856.3" y="387.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="859.3" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (43 samples, 0.13%)</title><rect x="858.7" y="515.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.7" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (43 samples, 0.13%)</title><rect x="858.7" y="499.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (24 samples, 0.07%)</title><rect x="858.7" y="483.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.7" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.07%)</title><rect x="858.7" y="467.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.07%)</title><rect x="858.7" y="451.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="861.7" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (19 samples, 0.06%)</title><rect x="859.6" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="862.6" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (19 samples, 0.06%)</title><rect x="859.6" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="862.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (47 samples, 0.14%)</title><rect x="860.2" y="515.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.2" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (47 samples, 0.14%)</title><rect x="860.2" y="499.0" width="1.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="863.2" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (71 samples, 0.21%)</title><rect x="861.9" y="563.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="864.9" y="574.0"></text>
</g>
<g>
<title>java.util.TreeMap (71 samples, 0.21%)</title><rect x="861.9" y="547.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="864.9" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (31 samples, 0.09%)</title><rect x="864.4" y="595.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.4" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (31 samples, 0.09%)</title><rect x="864.4" y="579.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.4" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (31 samples, 0.09%)</title><rect x="864.4" y="563.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="867.4" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (39 samples, 0.12%)</title><rect x="865.5" y="627.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (39 samples, 0.12%)</title><rect x="865.5" y="611.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (39 samples, 0.12%)</title><rect x="865.5" y="595.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="868.5" y="606.0"></text>
</g>
<g>
<title>java.lang.String (24 samples, 0.07%)</title><rect x="865.5" y="579.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="868.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.04%)</title><rect x="866.3" y="579.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.3" y="590.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="866.3" y="563.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (586 samples, 1.74%)</title><rect x="866.8" y="627.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.8" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.21%)</title><rect x="866.8" y="611.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="869.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (70 samples, 0.21%)</title><rect x="866.8" y="595.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (70 samples, 0.21%)</title><rect x="866.8" y="579.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="869.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.21%)</title><rect x="866.8" y="563.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="869.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (18 samples, 0.05%)</title><rect x="866.8" y="547.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.8" y="558.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.05%)</title><rect x="866.8" y="531.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="869.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (52 samples, 0.15%)</title><rect x="867.5" y="547.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (52 samples, 0.15%)</title><rect x="867.5" y="531.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.5" y="542.0"></text>
</g>
<g>
<title>byte[] (52 samples, 0.15%)</title><rect x="867.5" y="515.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="870.5" y="526.0"></text>
</g>
<g>
<title>java/net/URI.create (336 samples, 1.00%)</title><rect x="869.3" y="611.0" width="11.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="872.3" y="622.0"></text>
</g>
<g>
<title>java.net.URI (64 samples, 0.19%)</title><rect x="869.3" y="595.0" width="2.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="872.3" y="606.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (272 samples, 0.81%)</title><rect x="871.5" y="595.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.5" y="606.0"></text>
</g>
<g>
<title>java.net.URI$Parser (28 samples, 0.08%)</title><rect x="871.5" y="579.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="874.5" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (244 samples, 0.73%)</title><rect x="872.5" y="579.0" width="8.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (43 samples, 0.13%)</title><rect x="872.5" y="563.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (43 samples, 0.13%)</title><rect x="872.5" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.08%)</title><rect x="872.5" y="531.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="875.5" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (17 samples, 0.05%)</title><rect x="873.4" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="876.4" y="542.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="873.4" y="515.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="876.4" y="526.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (201 samples, 0.60%)</title><rect x="874.0" y="563.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.0" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (97 samples, 0.29%)</title><rect x="874.0" y="547.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.0" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (97 samples, 0.29%)</title><rect x="874.0" y="531.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.13%)</title><rect x="874.0" y="515.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="877.0" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (54 samples, 0.16%)</title><rect x="875.5" y="515.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="878.5" y="526.0"></text>
</g>
<g>
<title>byte[] (54 samples, 0.16%)</title><rect x="875.5" y="499.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="878.5" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (104 samples, 0.31%)</title><rect x="877.4" y="547.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="880.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (53 samples, 0.16%)</title><rect x="877.4" y="531.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="880.4" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (53 samples, 0.16%)</title><rect x="877.4" y="515.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="880.4" y="526.0"></text>
</g>
<g>
<title>java.lang.String (25 samples, 0.07%)</title><rect x="877.4" y="499.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="880.4" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (28 samples, 0.08%)</title><rect x="878.3" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="881.3" y="510.0"></text>
</g>
<g>
<title>byte[] (28 samples, 0.08%)</title><rect x="878.3" y="483.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="881.3" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (51 samples, 0.15%)</title><rect x="879.3" y="531.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="882.3" y="542.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (51 samples, 0.15%)</title><rect x="879.3" y="515.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.3" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (51 samples, 0.15%)</title><rect x="879.3" y="499.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.3" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (51 samples, 0.15%)</title><rect x="879.3" y="483.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="882.3" y="494.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.06%)</title><rect x="879.3" y="467.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="882.3" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (30 samples, 0.09%)</title><rect x="880.0" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="883.0" y="478.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.09%)</title><rect x="880.0" y="451.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="883.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (101 samples, 0.30%)</title><rect x="881.1" y="611.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.1" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (34 samples, 0.10%)</title><rect x="881.1" y="595.0" width="1.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="884.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (67 samples, 0.20%)</title><rect x="882.3" y="595.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.3" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (18 samples, 0.05%)</title><rect x="882.3" y="579.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="885.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (49 samples, 0.15%)</title><rect x="882.9" y="579.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.9" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (49 samples, 0.15%)</title><rect x="882.9" y="563.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="885.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (79 samples, 0.23%)</title><rect x="884.6" y="611.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (79 samples, 0.23%)</title><rect x="884.6" y="595.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (79 samples, 0.23%)</title><rect x="884.6" y="579.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.6" y="590.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (79 samples, 0.23%)</title><rect x="884.6" y="563.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (25 samples, 0.07%)</title><rect x="884.6" y="547.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="887.6" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (25 samples, 0.07%)</title><rect x="884.6" y="531.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="887.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$111/596646507.apply (54 samples, 0.16%)</title><rect x="885.5" y="547.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (54 samples, 0.16%)</title><rect x="885.5" y="531.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="888.5" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.07%)</title><rect x="885.5" y="515.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="888.5" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (30 samples, 0.09%)</title><rect x="886.3" y="515.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.3" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.09%)</title><rect x="886.3" y="499.0" width="1.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="889.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (39 samples, 0.12%)</title><rect x="887.4" y="659.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="890.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (39 samples, 0.12%)</title><rect x="887.4" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.06%)</title><rect x="887.4" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.06%)</title><rect x="887.4" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$110/1500935830.get$Lambda (19 samples, 0.06%)</title><rect x="887.4" y="595.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.4" y="606.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$110 (19 samples, 0.06%)</title><rect x="887.4" y="579.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="890.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (20 samples, 0.06%)</title><rect x="888.1" y="627.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="891.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (20 samples, 0.06%)</title><rect x="888.1" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (13 samples, 0.04%)</title><rect x="888.3" y="595.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="891.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (204 samples, 0.61%)</title><rect x="888.8" y="659.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (13 samples, 0.04%)</title><rect x="888.8" y="643.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="891.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (17 samples, 0.05%)</title><rect x="889.5" y="643.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="892.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="890.1" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="890.1" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.get$Lambda (10 samples, 0.03%)</title><rect x="890.1" y="611.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="893.1" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.Futures$$Lambda$142 (10 samples, 0.03%)</title><rect x="890.1" y="595.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="893.1" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (140 samples, 0.42%)</title><rect x="890.4" y="643.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.accept (140 samples, 0.42%)</title><rect x="890.4" y="627.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (140 samples, 0.42%)</title><rect x="890.4" y="611.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.4" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.12%)</title><rect x="890.4" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.12%)</title><rect x="890.4" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.get$Lambda (39 samples, 0.12%)</title><rect x="890.4" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.4" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.Futures$$Lambda$144 (39 samples, 0.12%)</title><rect x="890.4" y="547.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="893.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (101 samples, 0.30%)</title><rect x="891.8" y="595.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (101 samples, 0.30%)</title><rect x="891.8" y="579.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.8" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 0.17%)</title><rect x="891.8" y="563.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="894.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.11%)</title><rect x="894.0" y="563.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.11%)</title><rect x="894.0" y="547.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="897.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.11%)</title><rect x="894.0" y="531.0" width="1.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="897.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (17 samples, 0.05%)</title><rect x="895.3" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.3" y="654.0"></text>
</g>
<g>
<title>java.lang.Object (13 samples, 0.04%)</title><rect x="895.5" y="627.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="898.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (379 samples, 1.13%)</title><rect x="895.9" y="659.0" width="13.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap (33 samples, 0.10%)</title><rect x="895.9" y="643.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="898.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashSet (8 samples, 0.02%)</title><rect x="897.1" y="643.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="900.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (17 samples, 0.05%)</title><rect x="897.3" y="643.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.3" y="654.0"></text>
</g>
<g>
<title>java.lang.Integer (17 samples, 0.05%)</title><rect x="897.3" y="627.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="900.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (58 samples, 0.17%)</title><rect x="897.9" y="643.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="900.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (58 samples, 0.17%)</title><rect x="897.9" y="627.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (58 samples, 0.17%)</title><rect x="897.9" y="611.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="900.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (58 samples, 0.17%)</title><rect x="897.9" y="595.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="900.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (58 samples, 0.17%)</title><rect x="897.9" y="579.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.9" y="590.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.17%)</title><rect x="897.9" y="563.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="900.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (39 samples, 0.12%)</title><rect x="900.0" y="643.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="903.0" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.06%)</title><rect x="900.0" y="627.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="903.0" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (18 samples, 0.05%)</title><rect x="900.7" y="627.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="903.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (18 samples, 0.05%)</title><rect x="900.7" y="611.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="903.7" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (9 samples, 0.03%)</title><rect x="901.3" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="904.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (9 samples, 0.03%)</title><rect x="901.3" y="627.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="904.3" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.put (87 samples, 0.26%)</title><rect x="901.7" y="643.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (87 samples, 0.26%)</title><rect x="901.7" y="627.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (49 samples, 0.15%)</title><rect x="901.7" y="611.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="904.7" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (49 samples, 0.15%)</title><rect x="901.7" y="595.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="904.7" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (38 samples, 0.11%)</title><rect x="903.4" y="611.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.4" y="622.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (38 samples, 0.11%)</title><rect x="903.4" y="595.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="906.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (23 samples, 0.07%)</title><rect x="904.7" y="643.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="907.7" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap (23 samples, 0.07%)</title><rect x="904.7" y="627.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="907.7" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (91 samples, 0.27%)</title><rect x="905.5" y="643.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (91 samples, 0.27%)</title><rect x="905.5" y="627.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (91 samples, 0.27%)</title><rect x="905.5" y="611.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (50 samples, 0.15%)</title><rect x="905.5" y="595.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.5" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (50 samples, 0.15%)</title><rect x="905.5" y="579.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="908.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (41 samples, 0.12%)</title><rect x="907.3" y="595.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.3" y="606.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (41 samples, 0.12%)</title><rect x="907.3" y="579.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="910.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (14 samples, 0.04%)</title><rect x="908.7" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="911.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (14 samples, 0.04%)</title><rect x="908.7" y="627.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="911.7" y="638.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (14 samples, 0.04%)</title><rect x="908.7" y="611.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="911.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.sendResponseFromFuture (680 samples, 2.02%)</title><rect x="909.2" y="675.0" width="23.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.2" y="686.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (165 samples, 0.49%)</title><rect x="909.2" y="659.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (165 samples, 0.49%)</title><rect x="909.2" y="643.0" width="5.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.get$Lambda (165 samples, 0.49%)</title><rect x="909.2" y="627.0" width="5.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.2" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$148 (165 samples, 0.49%)</title><rect x="909.2" y="611.0" width="5.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="912.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (515 samples, 1.53%)</title><rect x="915.0" y="659.0" width="18.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="918.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (515 samples, 1.53%)</title><rect x="915.0" y="643.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.0" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (349 samples, 1.04%)</title><rect x="915.0" y="627.0" width="12.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="918.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (163 samples, 0.48%)</title><rect x="927.2" y="627.0" width="5.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.2" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (163 samples, 0.48%)</title><rect x="927.2" y="611.0" width="5.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="930.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (415 samples, 1.23%)</title><rect x="933.0" y="707.0" width="14.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="936.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (415 samples, 1.23%)</title><rect x="933.0" y="691.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="936.0" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (415 samples, 1.23%)</title><rect x="933.0" y="675.0" width="14.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="936.0" y="686.0"></text>
</g>
<g>
<title>java.lang.String (130 samples, 0.39%)</title><rect x="933.0" y="659.0" width="4.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="936.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (285 samples, 0.85%)</title><rect x="937.6" y="659.0" width="10.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.6" y="670.0"></text>
</g>
<g>
<title>byte[] (285 samples, 0.85%)</title><rect x="937.6" y="643.0" width="10.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="940.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,133 samples, 6.34%)</title><rect x="947.6" y="739.0" width="74.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.6" y="750.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.Request (299 samples, 0.89%)</title><rect x="947.6" y="723.0" width="10.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="950.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (712 samples, 2.12%)</title><rect x="958.1" y="723.0" width="25.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.1" y="734.0">o..</text>
</g>
<g>
<title>java.lang.String[] (712 samples, 2.12%)</title><rect x="958.1" y="707.0" width="25.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="961.1" y="718.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,122 samples, 3.33%)</title><rect x="983.1" y="723.0" width="39.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.1" y="734.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,122 samples, 3.33%)</title><rect x="983.1" y="707.0" width="39.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="986.1" y="718.0">one..</text>
</g>
<g>
<title>char[] (708 samples, 2.10%)</title><rect x="983.1" y="691.0" width="24.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="986.1" y="702.0">c..</text>
</g>
<g>
<title>java.lang.String (159 samples, 0.47%)</title><rect x="1007.9" y="691.0" width="5.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1010.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (255 samples, 0.76%)</title><rect x="1013.5" y="691.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (255 samples, 0.76%)</title><rect x="1013.5" y="675.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (255 samples, 0.76%)</title><rect x="1013.5" y="659.0" width="8.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.5" y="670.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.76%)</title><rect x="1013.5" y="643.0" width="8.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1016.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (329 samples, 0.98%)</title><rect x="1022.4" y="739.0" width="11.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1025.4" y="750.0"></text>
</g>
<g>
<title>byte[] (329 samples, 0.98%)</title><rect x="1022.4" y="723.0" width="11.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1025.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (417 samples, 1.24%)</title><rect x="1033.9" y="739.0" width="14.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1036.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (417 samples, 1.24%)</title><rect x="1033.9" y="723.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1036.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (417 samples, 1.24%)</title><rect x="1033.9" y="707.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.9" y="718.0"></text>
</g>
<g>
<title>java.lang.String (205 samples, 0.61%)</title><rect x="1033.9" y="691.0" width="7.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1036.9" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (212 samples, 0.63%)</title><rect x="1041.1" y="691.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.1" y="702.0"></text>
</g>
<g>
<title>byte[] (212 samples, 0.63%)</title><rect x="1041.1" y="675.0" width="7.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1044.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,033 samples, 11.99%)</title><rect x="1048.6" y="739.0" width="141.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1051.6" y="750.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,033 samples, 11.99%)</title><rect x="1048.6" y="723.0" width="141.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1051.6" y="734.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (2,080 samples, 6.18%)</title><rect x="1048.6" y="707.0" width="72.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1051.6" y="718.0">char[]</text>
</g>
<g>
<title>java.lang.String (749 samples, 2.23%)</title><rect x="1121.5" y="707.0" width="26.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1124.5" y="718.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,204 samples, 3.58%)</title><rect x="1147.8" y="707.0" width="42.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.8" y="718.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,204 samples, 3.58%)</title><rect x="1147.8" y="691.0" width="42.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.8" y="702.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,204 samples, 3.58%)</title><rect x="1147.8" y="675.0" width="42.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1150.8" y="686.0">java..</text>
</g>
<g>
<title>byte[] (1,204 samples, 3.58%)</title><rect x="1147.8" y="659.0" width="42.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1150.8" y="670.0">byte[]</text>
</g>
</g>
</svg>
