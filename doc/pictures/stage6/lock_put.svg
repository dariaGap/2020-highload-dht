<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (23,393 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (17,109 samples, 73.14%)</title><rect x="10.0" y="851.0" width="863.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17,109 samples, 73.14%)</title><rect x="10.0" y="835.0" width="863.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17,109 samples, 73.14%)</title><rect x="10.0" y="819.0" width="863.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (6,459 samples, 27.61%)</title><rect x="10.0" y="803.0" width="325.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFuture$Async..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6,459 samples, 27.61%)</title><rect x="10.0" y="787.0" width="325.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFuture.postC..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (6,449 samples, 27.57%)</title><rect x="10.0" y="771.0" width="325.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/CompletableFuture$UniCo..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.apply (6,448 samples, 27.56%)</title><rect x="10.0" y="755.0" width="325.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange$$Lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (6,448 samples, 27.56%)</title><rect x="10.0" y="739.0" width="325.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange.lambda$r..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (6,448 samples, 27.56%)</title><rect x="10.0" y="723.0" width="325.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiExchange.response..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,738 samples, 15.98%)</title><rect x="10.0" y="707.0" width="188.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http/Ex..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,738 samples, 15.98%)</title><rect x="10.0" y="691.0" width="188.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http/Ex..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,738 samples, 15.98%)</title><rect x="10.0" y="675.0" width="188.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/Ex..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,657 samples, 11.36%)</title><rect x="10.0" y="659.0" width="134.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,657 samples, 11.36%)</title><rect x="10.0" y="643.0" width="134.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,657 samples, 11.36%)</title><rect x="10.0" y="627.0" width="134.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.apply (2,657 samples, 11.36%)</title><rect x="10.0" y="611.0" width="134.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,657 samples, 11.36%)</title><rect x="10.0" y="595.0" width="134.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,657 samples, 11.36%)</title><rect x="10.0" y="579.0" width="134.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (2,657 samples, 11.36%)</title><rect x="10.0" y="563.0" width="134.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,657 samples, 11.36%)</title><rect x="10.0" y="547.0" width="134.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,657 samples, 11.36%)</title><rect x="10.0" y="531.0" width="134.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2,657 samples, 11.36%)</title><rect x="10.0" y="515.0" width="134.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2,657 samples, 11.36%)</title><rect x="10.0" y="499.0" width="134.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.apply (2,657 samples, 11.36%)</title><rect x="10.0" y="483.0" width="134.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (2,657 samples, 11.36%)</title><rect x="10.0" y="467.0" width="134.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (2,657 samples, 11.36%)</title><rect x="10.0" y="451.0" width="134.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2,657 samples, 11.36%)</title><rect x="10.0" y="435.0" width="134.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (281 samples, 1.20%)</title><rect x="10.0" y="419.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (281 samples, 1.20%)</title><rect x="10.0" y="403.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (281 samples, 1.20%)</title><rect x="10.0" y="387.0" width="14.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (281 samples, 1.20%)</title><rect x="10.0" y="371.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (281 samples, 1.20%)</title><rect x="10.0" y="355.0" width="14.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (156 samples, 0.67%)</title><rect x="10.0" y="339.0" width="7.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (125 samples, 0.53%)</title><rect x="17.9" y="339.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (125 samples, 0.53%)</title><rect x="17.9" y="323.0" width="6.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="20.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,376 samples, 10.16%)</title><rect x="24.2" y="419.0" width="119.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.2" y="430.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,376 samples, 10.16%)</title><rect x="24.2" y="403.0" width="119.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.2" y="414.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,376 samples, 10.16%)</title><rect x="24.2" y="387.0" width="119.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.2" y="398.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,376 samples, 10.16%)</title><rect x="24.2" y="371.0" width="119.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.2" y="382.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,376 samples, 10.16%)</title><rect x="24.2" y="355.0" width="119.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.2" y="366.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,996 samples, 8.53%)</title><rect x="24.2" y="339.0" width="100.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="27.2" y="350.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (380 samples, 1.62%)</title><rect x="124.9" y="339.0" width="19.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="127.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (380 samples, 1.62%)</title><rect x="124.9" y="323.0" width="19.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="127.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,081 samples, 4.62%)</title><rect x="144.0" y="659.0" width="54.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.0" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,081 samples, 4.62%)</title><rect x="144.0" y="643.0" width="54.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.0" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,081 samples, 4.62%)</title><rect x="144.0" y="627.0" width="54.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.0" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,081 samples, 4.62%)</title><rect x="144.0" y="611.0" width="54.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.0" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,081 samples, 4.62%)</title><rect x="144.0" y="595.0" width="54.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.0" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,081 samples, 4.62%)</title><rect x="144.0" y="579.0" width="54.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.0" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,081 samples, 4.62%)</title><rect x="144.0" y="563.0" width="54.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="147.0" y="574.0">jdk.i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (2,579 samples, 11.02%)</title><rect x="198.6" y="707.0" width="130.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.6" y="718.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,876 samples, 8.02%)</title><rect x="198.6" y="691.0" width="94.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="201.6" y="702.0">jdk.interna..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (703 samples, 3.01%)</title><rect x="293.2" y="691.0" width="35.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="296.2" y="702.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (703 samples, 3.01%)</title><rect x="293.2" y="675.0" width="35.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.2" y="686.0">sun..</text>
</g>
<g>
<title>java.lang.Object (703 samples, 3.01%)</title><rect x="293.2" y="659.0" width="35.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="296.2" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (131 samples, 0.56%)</title><rect x="328.6" y="707.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (131 samples, 0.56%)</title><rect x="328.6" y="691.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (6 samples, 0.03%)</title><rect x="328.6" y="675.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter$Cache (6 samples, 0.03%)</title><rect x="328.6" y="659.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="331.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (125 samples, 0.53%)</title><rect x="328.9" y="675.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.9" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (125 samples, 0.53%)</title><rect x="328.9" y="659.0" width="6.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="331.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.04%)</title><rect x="335.3" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.04%)</title><rect x="335.3" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (10 samples, 0.04%)</title><rect x="335.3" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (10 samples, 0.04%)</title><rect x="335.3" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10 samples, 0.04%)</title><rect x="335.3" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.3" y="718.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (10 samples, 0.04%)</title><rect x="335.3" y="691.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="338.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (63 samples, 0.27%)</title><rect x="335.8" y="803.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (63 samples, 0.27%)</title><rect x="335.8" y="787.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (63 samples, 0.27%)</title><rect x="335.8" y="771.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (63 samples, 0.27%)</title><rect x="335.8" y="755.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (63 samples, 0.27%)</title><rect x="335.8" y="739.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (63 samples, 0.27%)</title><rect x="335.8" y="723.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (63 samples, 0.27%)</title><rect x="335.8" y="707.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="338.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (63 samples, 0.27%)</title><rect x="335.8" y="691.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (55 samples, 0.24%)</title><rect x="335.8" y="675.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 0.24%)</title><rect x="335.8" y="659.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (55 samples, 0.24%)</title><rect x="335.8" y="643.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (55 samples, 0.24%)</title><rect x="335.8" y="627.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (55 samples, 0.24%)</title><rect x="335.8" y="611.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (55 samples, 0.24%)</title><rect x="335.8" y="595.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (55 samples, 0.24%)</title><rect x="335.8" y="579.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (55 samples, 0.24%)</title><rect x="335.8" y="563.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (55 samples, 0.24%)</title><rect x="335.8" y="547.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (55 samples, 0.24%)</title><rect x="335.8" y="531.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (55 samples, 0.24%)</title><rect x="335.8" y="515.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (55 samples, 0.24%)</title><rect x="335.8" y="499.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (55 samples, 0.24%)</title><rect x="335.8" y="483.0" width="2.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="338.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (8 samples, 0.03%)</title><rect x="338.6" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.6" y="686.0"></text>
</g>
<g>
<title>java.lang.Object (8 samples, 0.03%)</title><rect x="338.6" y="659.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="341.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,591 samples, 6.80%)</title><rect x="339.0" y="803.0" width="80.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.0" y="814.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (645 samples, 2.76%)</title><rect x="339.0" y="787.0" width="32.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="342.0" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (191 samples, 0.82%)</title><rect x="339.0" y="771.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="342.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (191 samples, 0.82%)</title><rect x="339.0" y="755.0" width="9.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (191 samples, 0.82%)</title><rect x="339.0" y="739.0" width="9.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (191 samples, 0.82%)</title><rect x="339.0" y="723.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (191 samples, 0.82%)</title><rect x="339.0" y="707.0" width="9.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="342.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (191 samples, 0.82%)</title><rect x="339.0" y="691.0" width="9.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="342.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (454 samples, 1.94%)</title><rect x="348.6" y="771.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.6" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (454 samples, 1.94%)</title><rect x="348.6" y="755.0" width="22.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.6" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (454 samples, 1.94%)</title><rect x="348.6" y="739.0" width="22.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.6" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (454 samples, 1.94%)</title><rect x="348.6" y="723.0" width="22.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="351.6" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (454 samples, 1.94%)</title><rect x="348.6" y="707.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.6" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (454 samples, 1.94%)</title><rect x="348.6" y="691.0" width="22.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.6" y="702.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (454 samples, 1.94%)</title><rect x="348.6" y="675.0" width="22.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="351.6" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (946 samples, 4.04%)</title><rect x="371.5" y="787.0" width="47.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="374.5" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 0.50%)</title><rect x="371.5" y="771.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (118 samples, 0.50%)</title><rect x="371.5" y="755.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (118 samples, 0.50%)</title><rect x="371.5" y="739.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (118 samples, 0.50%)</title><rect x="371.5" y="723.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="374.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (118 samples, 0.50%)</title><rect x="371.5" y="707.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.5" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (118 samples, 0.50%)</title><rect x="371.5" y="691.0" width="6.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="374.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (828 samples, 3.54%)</title><rect x="377.5" y="771.0" width="41.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.5" y="782.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (828 samples, 3.54%)</title><rect x="377.5" y="755.0" width="41.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="380.5" y="766.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (828 samples, 3.54%)</title><rect x="377.5" y="739.0" width="41.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.5" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (828 samples, 3.54%)</title><rect x="377.5" y="723.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.5" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (828 samples, 3.54%)</title><rect x="377.5" y="707.0" width="41.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.5" y="718.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (828 samples, 3.54%)</title><rect x="377.5" y="691.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.5" y="702.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (828 samples, 3.54%)</title><rect x="377.5" y="675.0" width="41.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="380.5" y="686.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.run (42 samples, 0.18%)</title><rect x="419.2" y="803.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (42 samples, 0.18%)</title><rect x="419.2" y="787.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (42 samples, 0.18%)</title><rect x="419.2" y="771.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (42 samples, 0.18%)</title><rect x="419.2" y="755.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.18%)</title><rect x="419.2" y="739.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.18%)</title><rect x="419.2" y="723.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.18%)</title><rect x="419.2" y="707.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (42 samples, 0.18%)</title><rect x="419.2" y="691.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (42 samples, 0.18%)</title><rect x="419.2" y="675.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42 samples, 0.18%)</title><rect x="419.2" y="659.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (42 samples, 0.18%)</title><rect x="419.2" y="643.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (42 samples, 0.18%)</title><rect x="419.2" y="627.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (42 samples, 0.18%)</title><rect x="419.2" y="611.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.18%)</title><rect x="419.2" y="595.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (42 samples, 0.18%)</title><rect x="419.2" y="579.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (42 samples, 0.18%)</title><rect x="419.2" y="563.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (33 samples, 0.14%)</title><rect x="419.2" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (31 samples, 0.13%)</title><rect x="419.2" y="531.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (31 samples, 0.13%)</title><rect x="419.2" y="515.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (31 samples, 0.13%)</title><rect x="419.2" y="499.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (31 samples, 0.13%)</title><rect x="419.2" y="483.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (31 samples, 0.13%)</title><rect x="419.2" y="467.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="422.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (31 samples, 0.13%)</title><rect x="419.2" y="451.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (31 samples, 0.13%)</title><rect x="419.2" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (31 samples, 0.13%)</title><rect x="419.2" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (31 samples, 0.13%)</title><rect x="419.2" y="403.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.13%)</title><rect x="419.2" y="387.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (31 samples, 0.13%)</title><rect x="419.2" y="371.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31 samples, 0.13%)</title><rect x="419.2" y="355.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (31 samples, 0.13%)</title><rect x="419.2" y="339.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="422.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (31 samples, 0.13%)</title><rect x="419.2" y="323.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (31 samples, 0.13%)</title><rect x="419.2" y="307.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="422.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (31 samples, 0.13%)</title><rect x="419.2" y="291.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="422.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (31 samples, 0.13%)</title><rect x="419.2" y="275.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (31 samples, 0.13%)</title><rect x="419.2" y="259.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (31 samples, 0.13%)</title><rect x="419.2" y="243.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (31 samples, 0.13%)</title><rect x="419.2" y="227.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (31 samples, 0.13%)</title><rect x="419.2" y="211.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="422.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (31 samples, 0.13%)</title><rect x="419.2" y="195.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (31 samples, 0.13%)</title><rect x="419.2" y="179.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (31 samples, 0.13%)</title><rect x="419.2" y="163.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5 samples, 0.02%)</title><rect x="419.2" y="147.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="422.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (26 samples, 0.11%)</title><rect x="419.5" y="147.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (26 samples, 0.11%)</title><rect x="419.5" y="131.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (25 samples, 0.11%)</title><rect x="419.5" y="115.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (25 samples, 0.11%)</title><rect x="419.5" y="99.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (25 samples, 0.11%)</title><rect x="419.5" y="83.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="422.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (25 samples, 0.11%)</title><rect x="419.5" y="67.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="422.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (25 samples, 0.11%)</title><rect x="419.5" y="51.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.5" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (23 samples, 0.10%)</title><rect x="419.5" y="35.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="422.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.04%)</title><rect x="420.9" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="423.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.04%)</title><rect x="420.9" y="531.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="423.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (9 samples, 0.04%)</title><rect x="420.9" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (9 samples, 0.04%)</title><rect x="420.9" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (9 samples, 0.04%)</title><rect x="420.9" y="483.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (9 samples, 0.04%)</title><rect x="420.9" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="423.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (9 samples, 0.04%)</title><rect x="420.9" y="451.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="423.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8,954 samples, 38.28%)</title><rect x="421.4" y="803.0" width="451.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="424.4" y="814.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTa..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8,954 samples, 38.28%)</title><rect x="421.4" y="787.0" width="451.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="798.0">jdk/internal/net/http/common/SequentialScheduler$CompleteResta..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3,599 samples, 15.38%)</title><rect x="421.4" y="771.0" width="181.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.4" y="782.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (3,599 samples, 15.38%)</title><rect x="421.4" y="755.0" width="181.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="766.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3,599 samples, 15.38%)</title><rect x="421.4" y="739.0" width="181.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.4" y="750.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (2,663 samples, 11.38%)</title><rect x="421.4" y="723.0" width="134.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.4" y="734.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2,663 samples, 11.38%)</title><rect x="421.4" y="707.0" width="134.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="424.4" y="718.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2,663 samples, 11.38%)</title><rect x="421.4" y="691.0" width="134.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.4" y="702.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2,663 samples, 11.38%)</title><rect x="421.4" y="675.0" width="134.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.4" y="686.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2,663 samples, 11.38%)</title><rect x="421.4" y="659.0" width="134.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.4" y="670.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2,663 samples, 11.38%)</title><rect x="421.4" y="643.0" width="134.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="424.4" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2,663 samples, 11.38%)</title><rect x="421.4" y="627.0" width="134.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.4" y="638.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2,663 samples, 11.38%)</title><rect x="421.4" y="611.0" width="134.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.4" y="622.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,663 samples, 11.38%)</title><rect x="421.4" y="595.0" width="134.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.4" y="606.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,250 samples, 9.62%)</title><rect x="421.4" y="579.0" width="113.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="424.4" y="590.0">jdk.internal.n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (413 samples, 1.77%)</title><rect x="534.9" y="579.0" width="20.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.9" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (413 samples, 1.77%)</title><rect x="534.9" y="563.0" width="20.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="537.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (936 samples, 4.00%)</title><rect x="555.7" y="723.0" width="47.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.7" y="734.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (936 samples, 4.00%)</title><rect x="555.7" y="707.0" width="47.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.7" y="718.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (936 samples, 4.00%)</title><rect x="555.7" y="691.0" width="47.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.7" y="702.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (936 samples, 4.00%)</title><rect x="555.7" y="675.0" width="47.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.7" y="686.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (936 samples, 4.00%)</title><rect x="555.7" y="659.0" width="47.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.7" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (936 samples, 4.00%)</title><rect x="555.7" y="643.0" width="47.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.7" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (936 samples, 4.00%)</title><rect x="555.7" y="627.0" width="47.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.7" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (936 samples, 4.00%)</title><rect x="555.7" y="611.0" width="47.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.7" y="622.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (936 samples, 4.00%)</title><rect x="555.7" y="595.0" width="47.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.7" y="606.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (936 samples, 4.00%)</title><rect x="555.7" y="579.0" width="47.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.7" y="590.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (936 samples, 4.00%)</title><rect x="555.7" y="563.0" width="47.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.7" y="574.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (936 samples, 4.00%)</title><rect x="555.7" y="547.0" width="47.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.7" y="558.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (936 samples, 4.00%)</title><rect x="555.7" y="531.0" width="47.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="558.7" y="542.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (139 samples, 0.59%)</title><rect x="555.7" y="515.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.apply (139 samples, 0.59%)</title><rect x="555.7" y="499.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="558.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (139 samples, 0.59%)</title><rect x="555.7" y="483.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (139 samples, 0.59%)</title><rect x="555.7" y="467.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (139 samples, 0.59%)</title><rect x="555.7" y="451.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (139 samples, 0.59%)</title><rect x="555.7" y="435.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="558.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (139 samples, 0.59%)</title><rect x="555.7" y="419.0" width="7.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="558.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (797 samples, 3.41%)</title><rect x="562.7" y="515.0" width="40.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.7" y="526.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (797 samples, 3.41%)</title><rect x="562.7" y="499.0" width="40.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.7" y="510.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (797 samples, 3.41%)</title><rect x="562.7" y="483.0" width="40.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.7" y="494.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (797 samples, 3.41%)</title><rect x="562.7" y="467.0" width="40.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.7" y="478.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (797 samples, 3.41%)</title><rect x="562.7" y="451.0" width="40.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.7" y="462.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (797 samples, 3.41%)</title><rect x="562.7" y="435.0" width="40.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.7" y="446.0">jdk..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (797 samples, 3.41%)</title><rect x="562.7" y="419.0" width="40.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="565.7" y="430.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (5,355 samples, 22.89%)</title><rect x="602.9" y="771.0" width="270.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.9" y="782.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5,355 samples, 22.89%)</title><rect x="602.9" y="755.0" width="270.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="605.9" y="766.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,355 samples, 22.89%)</title><rect x="602.9" y="739.0" width="270.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.9" y="750.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (5,355 samples, 22.89%)</title><rect x="602.9" y="723.0" width="270.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.9" y="734.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,355 samples, 22.89%)</title><rect x="602.9" y="707.0" width="270.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="605.9" y="718.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5,343 samples, 22.84%)</title><rect x="602.9" y="691.0" width="269.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.9" y="702.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5,343 samples, 22.84%)</title><rect x="602.9" y="675.0" width="269.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.9" y="686.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5,343 samples, 22.84%)</title><rect x="602.9" y="659.0" width="269.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="605.9" y="670.0">jdk/internal/net/http/ResponseConten..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (5,343 samples, 22.84%)</title><rect x="602.9" y="643.0" width="269.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.9" y="654.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,343 samples, 22.84%)</title><rect x="602.9" y="627.0" width="269.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.9" y="638.0">jdk/internal/net/http/Http1Response...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,343 samples, 22.84%)</title><rect x="602.9" y="611.0" width="269.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.9" y="622.0">jdk/internal/net/http/HttpConnection..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,343 samples, 22.84%)</title><rect x="602.9" y="595.0" width="269.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="605.9" y="606.0">jdk/internal/net/http/ConnectionPool..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,343 samples, 22.84%)</title><rect x="602.9" y="579.0" width="269.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.9" y="590.0">jdk/internal/net/http/ConnectionPool..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,789 samples, 7.65%)</title><rect x="602.9" y="563.0" width="90.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="605.9" y="574.0">jdk.intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3,554 samples, 15.19%)</title><rect x="693.1" y="563.0" width="179.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.1" y="574.0">jdk/internal/net/http/C..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,554 samples, 15.19%)</title><rect x="693.1" y="547.0" width="179.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="696.1" y="558.0">jdk/internal/net/http/S..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (359 samples, 1.53%)</title><rect x="693.1" y="531.0" width="18.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (359 samples, 1.53%)</title><rect x="693.1" y="515.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (359 samples, 1.53%)</title><rect x="693.1" y="499.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="696.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (359 samples, 1.53%)</title><rect x="693.1" y="483.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (359 samples, 1.53%)</title><rect x="693.1" y="467.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.1" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (270 samples, 1.15%)</title><rect x="693.1" y="451.0" width="13.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="696.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (89 samples, 0.38%)</title><rect x="706.8" y="451.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.8" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (89 samples, 0.38%)</title><rect x="706.8" y="435.0" width="4.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="709.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3,195 samples, 13.66%)</title><rect x="711.3" y="531.0" width="161.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.3" y="542.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3,195 samples, 13.66%)</title><rect x="711.3" y="515.0" width="161.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.3" y="526.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3,195 samples, 13.66%)</title><rect x="711.3" y="499.0" width="161.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.3" y="510.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3,195 samples, 13.66%)</title><rect x="711.3" y="483.0" width="161.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.3" y="494.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,195 samples, 13.66%)</title><rect x="711.3" y="467.0" width="161.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.3" y="478.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,796 samples, 11.95%)</title><rect x="711.3" y="451.0" width="141.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="714.3" y="462.0">jdk.internal.net.h..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (399 samples, 1.71%)</title><rect x="852.3" y="451.0" width="20.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (399 samples, 1.71%)</title><rect x="852.3" y="435.0" width="20.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="855.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (12 samples, 0.05%)</title><rect x="872.4" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (12 samples, 0.05%)</title><rect x="872.4" y="675.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12 samples, 0.05%)</title><rect x="872.4" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (12 samples, 0.05%)</title><rect x="872.4" y="643.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.05%)</title><rect x="872.4" y="627.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.05%)</title><rect x="872.4" y="611.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="875.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 0.05%)</title><rect x="872.4" y="595.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.05%)</title><rect x="872.4" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.05%)</title><rect x="872.4" y="563.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (12 samples, 0.05%)</title><rect x="872.4" y="547.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12 samples, 0.05%)</title><rect x="872.4" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 0.05%)</title><rect x="872.4" y="515.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.05%)</title><rect x="872.4" y="499.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (11 samples, 0.05%)</title><rect x="872.5" y="483.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (11 samples, 0.05%)</title><rect x="872.5" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="875.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (11 samples, 0.05%)</title><rect x="872.5" y="451.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="875.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (11 samples, 0.05%)</title><rect x="872.5" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (11 samples, 0.05%)</title><rect x="872.5" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (11 samples, 0.05%)</title><rect x="872.5" y="403.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (11 samples, 0.05%)</title><rect x="872.5" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="875.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (172 samples, 0.74%)</title><rect x="873.0" y="851.0" width="8.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (172 samples, 0.74%)</title><rect x="873.0" y="835.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (172 samples, 0.74%)</title><rect x="873.0" y="819.0" width="8.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="876.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (172 samples, 0.74%)</title><rect x="873.0" y="803.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (172 samples, 0.74%)</title><rect x="873.0" y="787.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (172 samples, 0.74%)</title><rect x="873.0" y="771.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (172 samples, 0.74%)</title><rect x="873.0" y="755.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="876.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (172 samples, 0.74%)</title><rect x="873.0" y="739.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (172 samples, 0.74%)</title><rect x="873.0" y="723.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (172 samples, 0.74%)</title><rect x="873.0" y="707.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (172 samples, 0.74%)</title><rect x="873.0" y="691.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="876.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (172 samples, 0.74%)</title><rect x="873.0" y="675.0" width="8.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="876.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (172 samples, 0.74%)</title><rect x="873.0" y="659.0" width="8.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (172 samples, 0.74%)</title><rect x="873.0" y="643.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (172 samples, 0.74%)</title><rect x="873.0" y="627.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="876.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (172 samples, 0.74%)</title><rect x="873.0" y="611.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="876.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (172 samples, 0.74%)</title><rect x="873.0" y="595.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (172 samples, 0.74%)</title><rect x="873.0" y="579.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (172 samples, 0.74%)</title><rect x="873.0" y="563.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="876.0" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (172 samples, 0.74%)</title><rect x="873.0" y="547.0" width="8.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="876.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (5,679 samples, 24.28%)</title><rect x="881.7" y="851.0" width="286.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.7" y="862.0">jdk/internal/net/http/HttpClientImpl$S..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (20 samples, 0.09%)</title><rect x="881.7" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/984556979.accept (20 samples, 0.09%)</title><rect x="881.7" y="819.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (20 samples, 0.09%)</title><rect x="881.7" y="803.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (20 samples, 0.09%)</title><rect x="881.7" y="787.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (20 samples, 0.09%)</title><rect x="881.7" y="771.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (20 samples, 0.09%)</title><rect x="881.7" y="755.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (20 samples, 0.09%)</title><rect x="881.7" y="739.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.09%)</title><rect x="881.7" y="723.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.09%)</title><rect x="881.7" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (20 samples, 0.09%)</title><rect x="881.7" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (20 samples, 0.09%)</title><rect x="881.7" y="675.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="884.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (20 samples, 0.09%)</title><rect x="881.7" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="884.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (20 samples, 0.09%)</title><rect x="881.7" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (20 samples, 0.09%)</title><rect x="881.7" y="627.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="884.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (20 samples, 0.09%)</title><rect x="881.7" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (20 samples, 0.09%)</title><rect x="881.7" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.09%)</title><rect x="881.7" y="579.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="884.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (20 samples, 0.09%)</title><rect x="881.7" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.09%)</title><rect x="881.7" y="547.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="884.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.09%)</title><rect x="881.7" y="531.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.09%)</title><rect x="881.7" y="515.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="884.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (19 samples, 0.08%)</title><rect x="881.7" y="499.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (19 samples, 0.08%)</title><rect x="881.7" y="483.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (19 samples, 0.08%)</title><rect x="881.7" y="467.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (19 samples, 0.08%)</title><rect x="881.7" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="884.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (19 samples, 0.08%)</title><rect x="881.7" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.08%)</title><rect x="881.7" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.08%)</title><rect x="881.7" y="403.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="884.7" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (19 samples, 0.08%)</title><rect x="881.7" y="387.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="884.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (3,111 samples, 13.30%)</title><rect x="882.7" y="835.0" width="156.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="885.7" y="846.0">jdk.internal.net.htt..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (28 samples, 0.12%)</title><rect x="1039.6" y="835.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/1138953262.run (9 samples, 0.04%)</title><rect x="1039.6" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1042.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (9 samples, 0.04%)</title><rect x="1039.6" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1042.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.04%)</title><rect x="1039.6" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.04%)</title><rect x="1039.6" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1042.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (9 samples, 0.04%)</title><rect x="1039.6" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (9 samples, 0.04%)</title><rect x="1039.6" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1042.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (9 samples, 0.04%)</title><rect x="1039.6" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1042.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (9 samples, 0.04%)</title><rect x="1039.6" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (9 samples, 0.04%)</title><rect x="1039.6" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (9 samples, 0.04%)</title><rect x="1039.6" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1042.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (9 samples, 0.04%)</title><rect x="1039.6" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1042.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.04%)</title><rect x="1039.6" y="643.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.04%)</title><rect x="1039.6" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1042.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.04%)</title><rect x="1039.6" y="611.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1042.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.04%)</title><rect x="1039.6" y="595.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1042.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.04%)</title><rect x="1039.6" y="579.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1042.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.03%)</title><rect x="1039.6" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.03%)</title><rect x="1039.6" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.03%)</title><rect x="1039.6" y="531.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1042.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (7 samples, 0.03%)</title><rect x="1039.6" y="515.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1042.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.03%)</title><rect x="1039.6" y="499.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1042.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.03%)</title><rect x="1039.6" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1042.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.03%)</title><rect x="1039.6" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.6" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (7 samples, 0.03%)</title><rect x="1039.6" y="451.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1042.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$165/1403403797.run (19 samples, 0.08%)</title><rect x="1040.1" y="819.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (19 samples, 0.08%)</title><rect x="1040.1" y="803.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.08%)</title><rect x="1040.1" y="787.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (19 samples, 0.08%)</title><rect x="1040.1" y="771.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (19 samples, 0.08%)</title><rect x="1040.1" y="755.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1043.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 0.07%)</title><rect x="1040.1" y="739.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (16 samples, 0.07%)</title><rect x="1040.1" y="723.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1043.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (16 samples, 0.07%)</title><rect x="1040.1" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (16 samples, 0.07%)</title><rect x="1040.1" y="691.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (16 samples, 0.07%)</title><rect x="1040.1" y="675.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1043.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.07%)</title><rect x="1040.1" y="659.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.07%)</title><rect x="1040.1" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1043.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (16 samples, 0.07%)</title><rect x="1040.1" y="627.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1043.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (878 samples, 3.75%)</title><rect x="1041.0" y="835.0" width="44.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1044.0" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (878 samples, 3.75%)</title><rect x="1041.0" y="819.0" width="44.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1044.0" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (878 samples, 3.75%)</title><rect x="1041.0" y="803.0" width="44.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1044.0" y="814.0">jdk...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1,313 samples, 5.61%)</title><rect x="1085.3" y="835.0" width="66.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.3" y="846.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,313 samples, 5.61%)</title><rect x="1085.3" y="819.0" width="66.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1088.3" y="830.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (310 samples, 1.33%)</title><rect x="1151.6" y="835.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1154.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (310 samples, 1.33%)</title><rect x="1151.6" y="819.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1154.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (310 samples, 1.33%)</title><rect x="1151.6" y="803.0" width="15.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1154.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (310 samples, 1.33%)</title><rect x="1151.6" y="787.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1154.6" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (310 samples, 1.33%)</title><rect x="1151.6" y="771.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.6" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (310 samples, 1.33%)</title><rect x="1151.6" y="755.0" width="15.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1154.6" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (19 samples, 0.08%)</title><rect x="1167.2" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.2" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 0.08%)</title><rect x="1167.2" y="819.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1170.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (19 samples, 0.08%)</title><rect x="1167.2" y="803.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1170.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (19 samples, 0.08%)</title><rect x="1167.2" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1170.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (19 samples, 0.08%)</title><rect x="1167.2" y="771.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1170.2" y="782.0"></text>
</g>
<g>
<title>java.lang.Object (19 samples, 0.08%)</title><rect x="1167.2" y="755.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1170.2" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (433 samples, 1.85%)</title><rect x="1168.2" y="851.0" width="21.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.2" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (433 samples, 1.85%)</title><rect x="1168.2" y="835.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.2" y="846.0">o..</text>
</g>
<g>
<title>one.nio.http.HttpSession (98 samples, 0.42%)</title><rect x="1168.2" y="819.0" width="4.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1171.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (335 samples, 1.43%)</title><rect x="1173.1" y="819.0" width="16.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1176.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (335 samples, 1.43%)</title><rect x="1173.1" y="803.0" width="16.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1176.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (335 samples, 1.43%)</title><rect x="1173.1" y="787.0" width="16.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1176.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (335 samples, 1.43%)</title><rect x="1173.1" y="771.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.1" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (335 samples, 1.43%)</title><rect x="1173.1" y="755.0" width="16.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1176.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (335 samples, 1.43%)</title><rect x="1173.1" y="739.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1176.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (92 samples, 0.39%)</title><rect x="1173.1" y="723.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1176.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (92 samples, 0.39%)</title><rect x="1173.1" y="707.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (92 samples, 0.39%)</title><rect x="1173.1" y="691.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1176.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (92 samples, 0.39%)</title><rect x="1173.1" y="675.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1176.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (92 samples, 0.39%)</title><rect x="1173.1" y="659.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1176.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (92 samples, 0.39%)</title><rect x="1173.1" y="643.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (92 samples, 0.39%)</title><rect x="1173.1" y="627.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1176.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (92 samples, 0.39%)</title><rect x="1173.1" y="611.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1176.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (92 samples, 0.39%)</title><rect x="1173.1" y="595.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1176.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (92 samples, 0.39%)</title><rect x="1173.1" y="579.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1176.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (92 samples, 0.39%)</title><rect x="1173.1" y="563.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1176.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (92 samples, 0.39%)</title><rect x="1173.1" y="547.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1176.1" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (92 samples, 0.39%)</title><rect x="1173.1" y="531.0" width="4.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="1176.1" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (243 samples, 1.04%)</title><rect x="1177.7" y="723.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1180.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (51 samples, 0.22%)</title><rect x="1177.7" y="707.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1180.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (51 samples, 0.22%)</title><rect x="1177.7" y="691.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1180.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (51 samples, 0.22%)</title><rect x="1177.7" y="675.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1180.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (51 samples, 0.22%)</title><rect x="1177.7" y="659.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1180.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (51 samples, 0.22%)</title><rect x="1177.7" y="643.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (51 samples, 0.22%)</title><rect x="1177.7" y="627.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (51 samples, 0.22%)</title><rect x="1177.7" y="611.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1180.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (51 samples, 0.22%)</title><rect x="1177.7" y="595.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (51 samples, 0.22%)</title><rect x="1177.7" y="579.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1180.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.06%)</title><rect x="1177.7" y="563.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.06%)</title><rect x="1177.7" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1180.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.06%)</title><rect x="1177.7" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.06%)</title><rect x="1177.7" y="515.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1180.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.06%)</title><rect x="1177.7" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1180.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.06%)</title><rect x="1177.7" y="483.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1180.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.06%)</title><rect x="1177.7" y="467.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.7" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (13 samples, 0.06%)</title><rect x="1177.7" y="451.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1180.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (38 samples, 0.16%)</title><rect x="1178.4" y="563.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1181.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (38 samples, 0.16%)</title><rect x="1178.4" y="547.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1181.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.16%)</title><rect x="1178.4" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (38 samples, 0.16%)</title><rect x="1178.4" y="515.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1181.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.16%)</title><rect x="1178.4" y="499.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1181.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.16%)</title><rect x="1178.4" y="483.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1181.4" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (38 samples, 0.16%)</title><rect x="1178.4" y="467.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1181.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (192 samples, 0.82%)</title><rect x="1180.3" y="707.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (192 samples, 0.82%)</title><rect x="1180.3" y="691.0" width="9.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (192 samples, 0.82%)</title><rect x="1180.3" y="675.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (192 samples, 0.82%)</title><rect x="1180.3" y="659.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (192 samples, 0.82%)</title><rect x="1180.3" y="643.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (192 samples, 0.82%)</title><rect x="1180.3" y="627.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (192 samples, 0.82%)</title><rect x="1180.3" y="611.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (192 samples, 0.82%)</title><rect x="1180.3" y="595.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (192 samples, 0.82%)</title><rect x="1180.3" y="579.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1183.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (192 samples, 0.82%)</title><rect x="1180.3" y="563.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (192 samples, 0.82%)</title><rect x="1180.3" y="547.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1183.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (192 samples, 0.82%)</title><rect x="1180.3" y="531.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (192 samples, 0.82%)</title><rect x="1180.3" y="515.0" width="9.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1183.3" y="526.0"></text>
</g>
</g>
</svg>
