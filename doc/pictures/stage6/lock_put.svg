<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="901"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="901"> </text>
<g id="frames">
<g>
<title>all (121,331 samples, 100.00%)</title><rect x="10.0" y="867.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="878.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (76,346 samples, 62.92%)</title><rect x="10.0" y="851.0" width="742.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (76,346 samples, 62.92%)</title><rect x="10.0" y="835.0" width="742.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (76,346 samples, 62.92%)</title><rect x="10.0" y="819.0" width="742.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (28,780 samples, 23.72%)</title><rect x="10.0" y="803.0" width="279.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (28,780 samples, 23.72%)</title><rect x="10.0" y="787.0" width="279.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (28,771 samples, 23.71%)</title><rect x="10.0" y="771.0" width="279.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.apply (28,770 samples, 23.71%)</title><rect x="10.0" y="755.0" width="279.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/MultiExchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (28,770 samples, 23.71%)</title><rect x="10.0" y="739.0" width="279.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/MultiExchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (28,770 samples, 23.71%)</title><rect x="10.0" y="723.0" width="279.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/MultiExchange.r..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (20,963 samples, 17.28%)</title><rect x="10.0" y="707.0" width="203.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="718.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (20,963 samples, 17.28%)</title><rect x="10.0" y="691.0" width="203.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="702.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (20,963 samples, 17.28%)</title><rect x="10.0" y="675.0" width="203.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/http/Excha..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (15,590 samples, 12.85%)</title><rect x="10.0" y="659.0" width="151.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (15,590 samples, 12.85%)</title><rect x="10.0" y="643.0" width="151.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15,590 samples, 12.85%)</title><rect x="10.0" y="627.0" width="151.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.apply (15,590 samples, 12.85%)</title><rect x="10.0" y="611.0" width="151.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (15,590 samples, 12.85%)</title><rect x="10.0" y="595.0" width="151.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (15,590 samples, 12.85%)</title><rect x="10.0" y="579.0" width="151.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (15,590 samples, 12.85%)</title><rect x="10.0" y="563.0" width="151.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="574.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (15,590 samples, 12.85%)</title><rect x="10.0" y="547.0" width="151.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (15,590 samples, 12.85%)</title><rect x="10.0" y="531.0" width="151.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (15,590 samples, 12.85%)</title><rect x="10.0" y="515.0" width="151.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (15,590 samples, 12.85%)</title><rect x="10.0" y="499.0" width="151.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurren..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (15,590 samples, 12.85%)</title><rect x="10.0" y="483.0" width="151.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (15,590 samples, 12.85%)</title><rect x="10.0" y="467.0" width="151.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (15,590 samples, 12.85%)</title><rect x="10.0" y="451.0" width="151.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (15,590 samples, 12.85%)</title><rect x="10.0" y="435.0" width="151.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,983 samples, 1.63%)</title><rect x="10.0" y="419.0" width="19.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,983 samples, 1.63%)</title><rect x="10.0" y="403.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,983 samples, 1.63%)</title><rect x="10.0" y="387.0" width="19.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,983 samples, 1.63%)</title><rect x="10.0" y="371.0" width="19.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,983 samples, 1.63%)</title><rect x="10.0" y="355.0" width="19.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,593 samples, 1.31%)</title><rect x="10.0" y="339.0" width="15.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (390 samples, 0.32%)</title><rect x="25.5" y="339.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.5" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (390 samples, 0.32%)</title><rect x="25.5" y="323.0" width="3.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="28.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (13,607 samples, 11.21%)</title><rect x="29.3" y="419.0" width="132.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="32.3" y="430.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (13,607 samples, 11.21%)</title><rect x="29.3" y="403.0" width="132.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.3" y="414.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (13,607 samples, 11.21%)</title><rect x="29.3" y="387.0" width="132.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.3" y="398.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (13,607 samples, 11.21%)</title><rect x="29.3" y="371.0" width="132.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.3" y="382.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13,607 samples, 11.21%)</title><rect x="29.3" y="355.0" width="132.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.3" y="366.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,683 samples, 10.45%)</title><rect x="29.3" y="339.0" width="123.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="32.3" y="350.0">jdk.internal.ne..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (924 samples, 0.76%)</title><rect x="152.6" y="339.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.6" y="350.0"></text>
</g>
<g>
<title>java.lang.Object (924 samples, 0.76%)</title><rect x="152.6" y="323.0" width="9.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="155.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (5,373 samples, 4.43%)</title><rect x="161.6" y="659.0" width="52.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.6" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (5,373 samples, 4.43%)</title><rect x="161.6" y="643.0" width="52.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.6" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (5,373 samples, 4.43%)</title><rect x="161.6" y="627.0" width="52.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="164.6" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (5,373 samples, 4.43%)</title><rect x="161.6" y="611.0" width="52.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.6" y="622.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (5,372 samples, 4.43%)</title><rect x="161.6" y="595.0" width="52.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.6" y="606.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (5,372 samples, 4.43%)</title><rect x="161.6" y="579.0" width="52.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.6" y="590.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5,372 samples, 4.43%)</title><rect x="161.6" y="563.0" width="52.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="164.6" y="574.0">jdk.i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (7,401 samples, 6.10%)</title><rect x="213.9" y="707.0" width="72.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.9" y="718.0">jdk/inte..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (5,256 samples, 4.33%)</title><rect x="213.9" y="691.0" width="51.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="216.9" y="702.0">jdk.i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (2,145 samples, 1.77%)</title><rect x="265.0" y="691.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.0" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2,145 samples, 1.77%)</title><rect x="265.0" y="675.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.0" y="686.0"></text>
</g>
<g>
<title>java.lang.Object (2,145 samples, 1.77%)</title><rect x="265.0" y="659.0" width="20.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="268.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (406 samples, 0.33%)</title><rect x="285.9" y="707.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (406 samples, 0.33%)</title><rect x="285.9" y="691.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (30 samples, 0.02%)</title><rect x="285.9" y="675.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.9" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter$Cache (30 samples, 0.02%)</title><rect x="285.9" y="659.0" width="0.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="288.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (376 samples, 0.31%)</title><rect x="286.1" y="675.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.1" y="686.0"></text>
</g>
<g>
<title>java.lang.Class (376 samples, 0.31%)</title><rect x="286.1" y="659.0" width="3.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="289.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (170 samples, 0.14%)</title><rect x="289.9" y="803.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (170 samples, 0.14%)</title><rect x="289.9" y="787.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (170 samples, 0.14%)</title><rect x="289.9" y="771.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (170 samples, 0.14%)</title><rect x="289.9" y="755.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (170 samples, 0.14%)</title><rect x="289.9" y="739.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (170 samples, 0.14%)</title><rect x="289.9" y="723.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (170 samples, 0.14%)</title><rect x="289.9" y="707.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (170 samples, 0.14%)</title><rect x="289.9" y="691.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (165 samples, 0.14%)</title><rect x="289.9" y="675.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (165 samples, 0.14%)</title><rect x="289.9" y="659.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (165 samples, 0.14%)</title><rect x="289.9" y="643.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="292.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (165 samples, 0.14%)</title><rect x="289.9" y="627.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (165 samples, 0.14%)</title><rect x="289.9" y="611.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (165 samples, 0.14%)</title><rect x="289.9" y="595.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (165 samples, 0.14%)</title><rect x="289.9" y="579.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (165 samples, 0.14%)</title><rect x="289.9" y="563.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (165 samples, 0.14%)</title><rect x="289.9" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (165 samples, 0.14%)</title><rect x="289.9" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (165 samples, 0.14%)</title><rect x="289.9" y="515.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="292.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (165 samples, 0.14%)</title><rect x="289.9" y="499.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="292.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (165 samples, 0.14%)</title><rect x="289.9" y="483.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="292.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,328 samples, 1.92%)</title><rect x="291.6" y="803.0" width="22.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.6" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,243 samples, 1.02%)</title><rect x="291.6" y="787.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (379 samples, 0.31%)</title><rect x="291.6" y="771.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (379 samples, 0.31%)</title><rect x="291.6" y="755.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (379 samples, 0.31%)</title><rect x="291.6" y="739.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (379 samples, 0.31%)</title><rect x="291.6" y="723.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (379 samples, 0.31%)</title><rect x="291.6" y="707.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (379 samples, 0.31%)</title><rect x="291.6" y="691.0" width="3.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="294.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (864 samples, 0.71%)</title><rect x="295.2" y="771.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (864 samples, 0.71%)</title><rect x="295.2" y="755.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (864 samples, 0.71%)</title><rect x="295.2" y="739.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (864 samples, 0.71%)</title><rect x="295.2" y="723.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (864 samples, 0.71%)</title><rect x="295.2" y="707.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (864 samples, 0.71%)</title><rect x="295.2" y="691.0" width="8.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.2" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (864 samples, 0.71%)</title><rect x="295.2" y="675.0" width="8.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="298.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,085 samples, 0.89%)</title><rect x="303.6" y="787.0" width="10.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (134 samples, 0.11%)</title><rect x="303.6" y="771.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (134 samples, 0.11%)</title><rect x="303.6" y="755.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (134 samples, 0.11%)</title><rect x="303.6" y="739.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (134 samples, 0.11%)</title><rect x="303.6" y="723.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (134 samples, 0.11%)</title><rect x="303.6" y="707.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.6" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (134 samples, 0.11%)</title><rect x="303.6" y="691.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="306.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (951 samples, 0.78%)</title><rect x="304.9" y="771.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (951 samples, 0.78%)</title><rect x="304.9" y="755.0" width="9.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (951 samples, 0.78%)</title><rect x="304.9" y="739.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (951 samples, 0.78%)</title><rect x="304.9" y="723.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (951 samples, 0.78%)</title><rect x="304.9" y="707.0" width="9.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="307.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (951 samples, 0.78%)</title><rect x="304.9" y="691.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="307.9" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (951 samples, 0.78%)</title><rect x="304.9" y="675.0" width="9.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="307.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (118 samples, 0.10%)</title><rect x="314.2" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (118 samples, 0.10%)</title><rect x="314.2" y="787.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (118 samples, 0.10%)</title><rect x="314.2" y="771.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (118 samples, 0.10%)</title><rect x="314.2" y="755.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.10%)</title><rect x="314.2" y="739.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (118 samples, 0.10%)</title><rect x="314.2" y="723.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (118 samples, 0.10%)</title><rect x="314.2" y="707.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (118 samples, 0.10%)</title><rect x="314.2" y="691.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (118 samples, 0.10%)</title><rect x="314.2" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (118 samples, 0.10%)</title><rect x="314.2" y="659.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (118 samples, 0.10%)</title><rect x="314.2" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (118 samples, 0.10%)</title><rect x="314.2" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (118 samples, 0.10%)</title><rect x="314.2" y="611.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (118 samples, 0.10%)</title><rect x="314.2" y="595.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (118 samples, 0.10%)</title><rect x="314.2" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (118 samples, 0.10%)</title><rect x="314.2" y="563.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (100 samples, 0.08%)</title><rect x="314.2" y="547.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (96 samples, 0.08%)</title><rect x="314.2" y="531.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="317.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (96 samples, 0.08%)</title><rect x="314.2" y="515.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (96 samples, 0.08%)</title><rect x="314.2" y="499.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="317.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (96 samples, 0.08%)</title><rect x="314.2" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (96 samples, 0.08%)</title><rect x="314.2" y="467.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (96 samples, 0.08%)</title><rect x="314.2" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (96 samples, 0.08%)</title><rect x="314.2" y="435.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (96 samples, 0.08%)</title><rect x="314.2" y="419.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (96 samples, 0.08%)</title><rect x="314.2" y="403.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (96 samples, 0.08%)</title><rect x="314.2" y="387.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (96 samples, 0.08%)</title><rect x="314.2" y="371.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="317.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (96 samples, 0.08%)</title><rect x="314.2" y="355.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (96 samples, 0.08%)</title><rect x="314.2" y="339.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (96 samples, 0.08%)</title><rect x="314.2" y="323.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (96 samples, 0.08%)</title><rect x="314.2" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (96 samples, 0.08%)</title><rect x="314.2" y="291.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (96 samples, 0.08%)</title><rect x="314.2" y="275.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (96 samples, 0.08%)</title><rect x="314.2" y="259.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (96 samples, 0.08%)</title><rect x="314.2" y="243.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (96 samples, 0.08%)</title><rect x="314.2" y="227.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (96 samples, 0.08%)</title><rect x="314.2" y="211.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (96 samples, 0.08%)</title><rect x="314.2" y="195.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="317.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (96 samples, 0.08%)</title><rect x="314.2" y="179.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (96 samples, 0.08%)</title><rect x="314.2" y="163.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (26 samples, 0.02%)</title><rect x="314.2" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="317.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (70 samples, 0.06%)</title><rect x="314.5" y="147.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="317.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (70 samples, 0.06%)</title><rect x="314.5" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="317.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (62 samples, 0.05%)</title><rect x="314.5" y="115.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (62 samples, 0.05%)</title><rect x="314.5" y="99.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (62 samples, 0.05%)</title><rect x="314.5" y="83.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (62 samples, 0.05%)</title><rect x="314.5" y="67.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="317.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (62 samples, 0.05%)</title><rect x="314.5" y="51.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="317.5" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (59 samples, 0.05%)</title><rect x="314.5" y="35.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="317.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (44,950 samples, 37.05%)</title><rect x="315.3" y="803.0" width="437.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.3" y="814.0">jdk/internal/net/http/common/SequentialScheduler$Schedulable..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (44,950 samples, 37.05%)</title><rect x="315.3" y="787.0" width="437.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.3" y="798.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRes..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (17,270 samples, 14.23%)</title><rect x="315.3" y="771.0" width="168.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.3" y="782.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (17,270 samples, 14.23%)</title><rect x="315.3" y="755.0" width="168.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.3" y="766.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (17,270 samples, 14.23%)</title><rect x="315.3" y="739.0" width="168.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.3" y="750.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (13,399 samples, 11.04%)</title><rect x="315.3" y="723.0" width="130.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.3" y="734.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (13,399 samples, 11.04%)</title><rect x="315.3" y="707.0" width="130.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="318.3" y="718.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (13,399 samples, 11.04%)</title><rect x="315.3" y="691.0" width="130.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.3" y="702.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13,399 samples, 11.04%)</title><rect x="315.3" y="675.0" width="130.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="318.3" y="686.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (13,399 samples, 11.04%)</title><rect x="315.3" y="659.0" width="130.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="318.3" y="670.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (13,399 samples, 11.04%)</title><rect x="315.3" y="643.0" width="130.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="318.3" y="654.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13,399 samples, 11.04%)</title><rect x="315.3" y="627.0" width="130.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.3" y="638.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (13,399 samples, 11.04%)</title><rect x="315.3" y="611.0" width="130.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.3" y="622.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (13,399 samples, 11.04%)</title><rect x="315.3" y="595.0" width="130.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.3" y="606.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (12,398 samples, 10.22%)</title><rect x="315.3" y="579.0" width="120.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="318.3" y="590.0">jdk.internal.ne..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,001 samples, 0.83%)</title><rect x="435.9" y="579.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.9" y="590.0"></text>
</g>
<g>
<title>java.lang.Object (1,001 samples, 0.83%)</title><rect x="435.9" y="563.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="438.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3,871 samples, 3.19%)</title><rect x="445.7" y="723.0" width="37.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.7" y="734.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3,871 samples, 3.19%)</title><rect x="445.7" y="707.0" width="37.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="448.7" y="718.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3,871 samples, 3.19%)</title><rect x="445.7" y="691.0" width="37.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.7" y="702.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3,871 samples, 3.19%)</title><rect x="445.7" y="675.0" width="37.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.7" y="686.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,871 samples, 3.19%)</title><rect x="445.7" y="659.0" width="37.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="448.7" y="670.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,871 samples, 3.19%)</title><rect x="445.7" y="643.0" width="37.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="448.7" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,871 samples, 3.19%)</title><rect x="445.7" y="627.0" width="37.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.7" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,871 samples, 3.19%)</title><rect x="445.7" y="611.0" width="37.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.7" y="622.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,871 samples, 3.19%)</title><rect x="445.7" y="595.0" width="37.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="448.7" y="606.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3,871 samples, 3.19%)</title><rect x="445.7" y="579.0" width="37.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.7" y="590.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,871 samples, 3.19%)</title><rect x="445.7" y="563.0" width="37.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.7" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,871 samples, 3.19%)</title><rect x="445.7" y="547.0" width="37.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.7" y="558.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,871 samples, 3.19%)</title><rect x="445.7" y="531.0" width="37.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.7" y="542.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (525 samples, 0.43%)</title><rect x="445.7" y="515.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="448.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (525 samples, 0.43%)</title><rect x="445.7" y="499.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (525 samples, 0.43%)</title><rect x="445.7" y="483.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="448.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (525 samples, 0.43%)</title><rect x="445.7" y="467.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="448.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (525 samples, 0.43%)</title><rect x="445.7" y="451.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (525 samples, 0.43%)</title><rect x="445.7" y="435.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="448.7" y="446.0"></text>
</g>
<g>
<title>java.lang.Class (525 samples, 0.43%)</title><rect x="445.7" y="419.0" width="5.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="448.7" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3,346 samples, 2.76%)</title><rect x="450.8" y="515.0" width="32.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.8" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,346 samples, 2.76%)</title><rect x="450.8" y="499.0" width="32.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.8" y="510.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (3,346 samples, 2.76%)</title><rect x="450.8" y="483.0" width="32.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.8" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (3,346 samples, 2.76%)</title><rect x="450.8" y="467.0" width="32.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="453.8" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (3,346 samples, 2.76%)</title><rect x="450.8" y="451.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.8" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (3,346 samples, 2.76%)</title><rect x="450.8" y="435.0" width="32.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="453.8" y="446.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,346 samples, 2.76%)</title><rect x="450.8" y="419.0" width="32.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="453.8" y="430.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (27,680 samples, 22.81%)</title><rect x="483.3" y="771.0" width="269.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.3" y="782.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (27,680 samples, 22.81%)</title><rect x="483.3" y="755.0" width="269.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.3" y="766.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (27,680 samples, 22.81%)</title><rect x="483.3" y="739.0" width="269.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.3" y="750.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (27,680 samples, 22.81%)</title><rect x="483.3" y="723.0" width="269.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="486.3" y="734.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (27,680 samples, 22.81%)</title><rect x="483.3" y="707.0" width="269.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.3" y="718.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (27,516 samples, 22.68%)</title><rect x="483.3" y="691.0" width="267.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.3" y="702.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (27,516 samples, 22.68%)</title><rect x="483.3" y="675.0" width="267.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.3" y="686.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (27,516 samples, 22.68%)</title><rect x="483.3" y="659.0" width="267.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.3" y="670.0">jdk/internal/net/http/ResponseConten..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (27,516 samples, 22.68%)</title><rect x="483.3" y="643.0" width="267.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.3" y="654.0">jdk/internal/net/http/Http1Response$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (27,516 samples, 22.68%)</title><rect x="483.3" y="627.0" width="267.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.3" y="638.0">jdk/internal/net/http/Http1Response...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (27,516 samples, 22.68%)</title><rect x="483.3" y="611.0" width="267.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.3" y="622.0">jdk/internal/net/http/HttpConnection..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (27,516 samples, 22.68%)</title><rect x="483.3" y="595.0" width="267.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.3" y="606.0">jdk/internal/net/http/ConnectionPool..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (27,516 samples, 22.68%)</title><rect x="483.3" y="579.0" width="267.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.3" y="590.0">jdk/internal/net/http/ConnectionPool..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (7,777 samples, 6.41%)</title><rect x="483.3" y="563.0" width="75.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="486.3" y="574.0">jdk.inte..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (19,739 samples, 16.27%)</title><rect x="558.9" y="563.0" width="192.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.9" y="574.0">jdk/internal/net/http/Con..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (19,739 samples, 16.27%)</title><rect x="558.9" y="547.0" width="192.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.9" y="558.0">jdk/internal/net/http/Soc..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2,644 samples, 2.18%)</title><rect x="558.9" y="531.0" width="25.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.9" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,644 samples, 2.18%)</title><rect x="558.9" y="515.0" width="25.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.9" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,644 samples, 2.18%)</title><rect x="558.9" y="499.0" width="25.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.9" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,644 samples, 2.18%)</title><rect x="558.9" y="483.0" width="25.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.9" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,644 samples, 2.18%)</title><rect x="558.9" y="467.0" width="25.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.9" y="478.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,296 samples, 1.89%)</title><rect x="558.9" y="451.0" width="22.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="561.9" y="462.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (348 samples, 0.29%)</title><rect x="581.3" y="451.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (348 samples, 0.29%)</title><rect x="581.3" y="435.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="584.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (17,095 samples, 14.09%)</title><rect x="584.6" y="531.0" width="166.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.6" y="542.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (17,095 samples, 14.09%)</title><rect x="584.6" y="515.0" width="166.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="587.6" y="526.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17,095 samples, 14.09%)</title><rect x="584.6" y="499.0" width="166.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="587.6" y="510.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17,095 samples, 14.09%)</title><rect x="584.6" y="483.0" width="166.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="587.6" y="494.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17,095 samples, 14.09%)</title><rect x="584.6" y="467.0" width="166.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.6" y="478.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (16,210 samples, 13.36%)</title><rect x="584.6" y="451.0" width="157.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="587.6" y="462.0">jdk.internal.net.htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (885 samples, 0.73%)</title><rect x="742.3" y="451.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.3" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (885 samples, 0.73%)</title><rect x="742.3" y="435.0" width="8.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="745.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (164 samples, 0.14%)</title><rect x="750.9" y="691.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (164 samples, 0.14%)</title><rect x="750.9" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (164 samples, 0.14%)</title><rect x="750.9" y="659.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (164 samples, 0.14%)</title><rect x="750.9" y="643.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (164 samples, 0.14%)</title><rect x="750.9" y="627.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (164 samples, 0.14%)</title><rect x="750.9" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (164 samples, 0.14%)</title><rect x="750.9" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="753.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (164 samples, 0.14%)</title><rect x="750.9" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (164 samples, 0.14%)</title><rect x="750.9" y="563.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="753.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (164 samples, 0.14%)</title><rect x="750.9" y="547.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (164 samples, 0.14%)</title><rect x="750.9" y="531.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="753.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (164 samples, 0.14%)</title><rect x="750.9" y="515.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (164 samples, 0.14%)</title><rect x="750.9" y="499.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (148 samples, 0.12%)</title><rect x="751.1" y="483.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (148 samples, 0.12%)</title><rect x="751.1" y="467.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (148 samples, 0.12%)</title><rect x="751.1" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (148 samples, 0.12%)</title><rect x="751.1" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (148 samples, 0.12%)</title><rect x="751.1" y="419.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (148 samples, 0.12%)</title><rect x="751.1" y="403.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (148 samples, 0.12%)</title><rect x="751.1" y="387.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="754.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (520 samples, 0.43%)</title><rect x="752.5" y="851.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (520 samples, 0.43%)</title><rect x="752.5" y="835.0" width="5.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (520 samples, 0.43%)</title><rect x="752.5" y="819.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (520 samples, 0.43%)</title><rect x="752.5" y="803.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (520 samples, 0.43%)</title><rect x="752.5" y="787.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (520 samples, 0.43%)</title><rect x="752.5" y="771.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (520 samples, 0.43%)</title><rect x="752.5" y="755.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (520 samples, 0.43%)</title><rect x="752.5" y="739.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (520 samples, 0.43%)</title><rect x="752.5" y="723.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (520 samples, 0.43%)</title><rect x="752.5" y="707.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (520 samples, 0.43%)</title><rect x="752.5" y="691.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (520 samples, 0.43%)</title><rect x="752.5" y="675.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (520 samples, 0.43%)</title><rect x="752.5" y="659.0" width="5.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (520 samples, 0.43%)</title><rect x="752.5" y="643.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="755.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (520 samples, 0.43%)</title><rect x="752.5" y="627.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="755.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (520 samples, 0.43%)</title><rect x="752.5" y="611.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="755.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (520 samples, 0.43%)</title><rect x="752.5" y="595.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (520 samples, 0.43%)</title><rect x="752.5" y="579.0" width="5.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="755.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (520 samples, 0.43%)</title><rect x="752.5" y="563.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (520 samples, 0.43%)</title><rect x="752.5" y="547.0" width="5.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="755.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (42,967 samples, 35.41%)</title><rect x="757.6" y="851.0" width="417.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.6" y="862.0">jdk/internal/net/http/HttpClientImpl$SelectorManager.run</text>
</g>
<g>
<title>java/util/ArrayList.forEach (30 samples, 0.02%)</title><rect x="757.6" y="835.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1514835762.accept (30 samples, 0.02%)</title><rect x="757.6" y="819.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (30 samples, 0.02%)</title><rect x="757.6" y="803.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="760.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (30 samples, 0.02%)</title><rect x="757.6" y="787.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (30 samples, 0.02%)</title><rect x="757.6" y="771.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (30 samples, 0.02%)</title><rect x="757.6" y="755.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="760.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (30 samples, 0.02%)</title><rect x="757.6" y="739.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.02%)</title><rect x="757.6" y="723.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.02%)</title><rect x="757.6" y="707.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (30 samples, 0.02%)</title><rect x="757.6" y="691.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (30 samples, 0.02%)</title><rect x="757.6" y="675.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (30 samples, 0.02%)</title><rect x="757.6" y="659.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (30 samples, 0.02%)</title><rect x="757.6" y="643.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="760.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (26 samples, 0.02%)</title><rect x="757.6" y="627.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="760.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (26 samples, 0.02%)</title><rect x="757.6" y="611.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (26 samples, 0.02%)</title><rect x="757.6" y="595.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.02%)</title><rect x="757.6" y="579.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.02%)</title><rect x="757.6" y="563.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="760.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.02%)</title><rect x="757.6" y="547.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.02%)</title><rect x="757.6" y="531.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="760.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.02%)</title><rect x="757.6" y="515.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.6" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (20,683 samples, 17.05%)</title><rect x="757.8" y="835.0" width="201.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="760.8" y="846.0">jdk.internal.net.http.Http..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (41 samples, 0.03%)</title><rect x="959.0" y="835.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/2094894093.run (27 samples, 0.02%)</title><rect x="959.1" y="819.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="962.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (27 samples, 0.02%)</title><rect x="959.1" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.02%)</title><rect x="959.1" y="787.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (27 samples, 0.02%)</title><rect x="959.1" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (27 samples, 0.02%)</title><rect x="959.1" y="755.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5,209 samples, 4.29%)</title><rect x="959.4" y="835.0" width="50.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.4" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5,209 samples, 4.29%)</title><rect x="959.4" y="819.0" width="50.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="962.4" y="830.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5,209 samples, 4.29%)</title><rect x="959.4" y="803.0" width="50.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="962.4" y="814.0">jdk.i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5,493 samples, 4.53%)</title><rect x="1010.1" y="835.0" width="53.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.1" y="846.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (5,493 samples, 4.53%)</title><rect x="1010.1" y="819.0" width="53.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1013.1" y="830.0">jdk.i..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (11,488 samples, 9.47%)</title><rect x="1063.5" y="835.0" width="111.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1066.5" y="846.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (11,488 samples, 9.47%)</title><rect x="1063.5" y="819.0" width="111.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1066.5" y="830.0">sun/nio/ch/Se..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (11,488 samples, 9.47%)</title><rect x="1063.5" y="803.0" width="111.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.5" y="814.0">sun/nio/ch/EP..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (11,488 samples, 9.47%)</title><rect x="1063.5" y="787.0" width="111.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1066.5" y="798.0">sun/nio/ch/EP..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11,488 samples, 9.47%)</title><rect x="1063.5" y="771.0" width="111.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1066.5" y="782.0">sun/nio/ch/EP..</text>
</g>
<g>
<title>java.lang.Object (11,488 samples, 9.47%)</title><rect x="1063.5" y="755.0" width="111.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1066.5" y="766.0">java.lang.Obj..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,498 samples, 1.23%)</title><rect x="1175.4" y="851.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1178.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,498 samples, 1.23%)</title><rect x="1175.4" y="835.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1178.4" y="846.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (931 samples, 0.77%)</title><rect x="1175.4" y="819.0" width="9.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1178.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (567 samples, 0.47%)</title><rect x="1184.5" y="819.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1187.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (567 samples, 0.47%)</title><rect x="1184.5" y="803.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1187.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (567 samples, 0.47%)</title><rect x="1184.5" y="787.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (567 samples, 0.47%)</title><rect x="1184.5" y="771.0" width="5.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1187.5" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (567 samples, 0.47%)</title><rect x="1184.5" y="755.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1187.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (567 samples, 0.47%)</title><rect x="1184.5" y="739.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (132 samples, 0.11%)</title><rect x="1184.5" y="723.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (132 samples, 0.11%)</title><rect x="1184.5" y="707.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (132 samples, 0.11%)</title><rect x="1184.5" y="691.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1187.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (132 samples, 0.11%)</title><rect x="1184.5" y="675.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1187.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (132 samples, 0.11%)</title><rect x="1184.5" y="659.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (132 samples, 0.11%)</title><rect x="1184.5" y="643.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (132 samples, 0.11%)</title><rect x="1184.5" y="627.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1187.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (132 samples, 0.11%)</title><rect x="1184.5" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1187.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (132 samples, 0.11%)</title><rect x="1184.5" y="595.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (132 samples, 0.11%)</title><rect x="1184.5" y="579.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (132 samples, 0.11%)</title><rect x="1184.5" y="563.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1187.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (132 samples, 0.11%)</title><rect x="1184.5" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (132 samples, 0.11%)</title><rect x="1184.5" y="531.0" width="1.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1187.5" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (435 samples, 0.36%)</title><rect x="1185.8" y="723.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (121 samples, 0.10%)</title><rect x="1185.8" y="707.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1188.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (121 samples, 0.10%)</title><rect x="1185.8" y="691.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1188.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (121 samples, 0.10%)</title><rect x="1185.8" y="675.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (121 samples, 0.10%)</title><rect x="1185.8" y="659.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (121 samples, 0.10%)</title><rect x="1185.8" y="643.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (121 samples, 0.10%)</title><rect x="1185.8" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (121 samples, 0.10%)</title><rect x="1185.8" y="611.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (121 samples, 0.10%)</title><rect x="1185.8" y="595.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1188.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (121 samples, 0.10%)</title><rect x="1185.8" y="579.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (40 samples, 0.03%)</title><rect x="1185.8" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (40 samples, 0.03%)</title><rect x="1185.8" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1188.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (40 samples, 0.03%)</title><rect x="1185.8" y="531.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1188.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (40 samples, 0.03%)</title><rect x="1185.8" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1188.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (40 samples, 0.03%)</title><rect x="1185.8" y="499.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1188.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.03%)</title><rect x="1185.8" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.03%)</title><rect x="1185.8" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1188.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (40 samples, 0.03%)</title><rect x="1185.8" y="451.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1188.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (81 samples, 0.07%)</title><rect x="1186.2" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (81 samples, 0.07%)</title><rect x="1186.2" y="547.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (81 samples, 0.07%)</title><rect x="1186.2" y="531.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1189.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (81 samples, 0.07%)</title><rect x="1186.2" y="515.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1189.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 0.07%)</title><rect x="1186.2" y="499.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1189.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 0.07%)</title><rect x="1186.2" y="483.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1189.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (81 samples, 0.07%)</title><rect x="1186.2" y="467.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1189.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (314 samples, 0.26%)</title><rect x="1186.9" y="707.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1189.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (314 samples, 0.26%)</title><rect x="1186.9" y="691.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (314 samples, 0.26%)</title><rect x="1186.9" y="675.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1189.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (314 samples, 0.26%)</title><rect x="1186.9" y="659.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1189.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (314 samples, 0.26%)</title><rect x="1186.9" y="643.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1189.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (314 samples, 0.26%)</title><rect x="1186.9" y="627.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1189.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (314 samples, 0.26%)</title><rect x="1186.9" y="611.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1189.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (314 samples, 0.26%)</title><rect x="1186.9" y="595.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1189.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (314 samples, 0.26%)</title><rect x="1186.9" y="579.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1189.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (314 samples, 0.26%)</title><rect x="1186.9" y="563.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (314 samples, 0.26%)</title><rect x="1186.9" y="547.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (314 samples, 0.26%)</title><rect x="1186.9" y="531.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1189.9" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (314 samples, 0.26%)</title><rect x="1186.9" y="515.0" width="3.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1189.9" y="526.0"></text>
</g>
</g>
</svg>
