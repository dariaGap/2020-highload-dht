<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (83,945 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (54,542 samples, 64.97%)</title><rect x="10.0" y="899.0" width="766.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (54,542 samples, 64.97%)</title><rect x="10.0" y="883.0" width="766.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (54,542 samples, 64.97%)</title><rect x="10.0" y="867.0" width="766.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19,989 samples, 23.81%)</title><rect x="10.0" y="851.0" width="281.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19,934 samples, 23.75%)</title><rect x="10.0" y="835.0" width="280.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/CompletableFuture..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19,919 samples, 23.73%)</title><rect x="10.0" y="819.0" width="280.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="830.0">java/util/concurrent/CompletableFutur..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.apply (19,918 samples, 23.73%)</title><rect x="10.0" y="803.0" width="280.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="814.0">jdk/internal/net/http/MultiExchange$$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (19,918 samples, 23.73%)</title><rect x="10.0" y="787.0" width="280.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="798.0">jdk/internal/net/http/MultiExchange.l..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (19,918 samples, 23.73%)</title><rect x="10.0" y="771.0" width="280.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="782.0">jdk/internal/net/http/MultiExchange.r..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (13,771 samples, 16.40%)</title><rect x="10.0" y="755.0" width="193.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (13,771 samples, 16.40%)</title><rect x="10.0" y="739.0" width="193.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (13,771 samples, 16.40%)</title><rect x="10.0" y="723.0" width="193.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="734.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (10,066 samples, 11.99%)</title><rect x="10.0" y="707.0" width="141.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (10,066 samples, 11.99%)</title><rect x="10.0" y="691.0" width="141.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10,066 samples, 11.99%)</title><rect x="10.0" y="675.0" width="141.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.apply (10,066 samples, 11.99%)</title><rect x="10.0" y="659.0" width="141.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="670.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (10,066 samples, 11.99%)</title><rect x="10.0" y="643.0" width="141.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="654.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (10,066 samples, 11.99%)</title><rect x="10.0" y="627.0" width="141.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (10,066 samples, 11.99%)</title><rect x="10.0" y="611.0" width="141.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (10,066 samples, 11.99%)</title><rect x="10.0" y="595.0" width="141.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (10,066 samples, 11.99%)</title><rect x="10.0" y="579.0" width="141.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="590.0">jdk/internal/net/h..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (10,066 samples, 11.99%)</title><rect x="10.0" y="563.0" width="141.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (10,066 samples, 11.99%)</title><rect x="10.0" y="547.0" width="141.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurre..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (10,066 samples, 11.99%)</title><rect x="10.0" y="531.0" width="141.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (10,066 samples, 11.99%)</title><rect x="10.0" y="515.0" width="141.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="526.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (10,066 samples, 11.99%)</title><rect x="10.0" y="499.0" width="141.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (10,066 samples, 11.99%)</title><rect x="10.0" y="483.0" width="141.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="494.0">jdk/internal/net/h..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1,119 samples, 1.33%)</title><rect x="10.0" y="467.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,119 samples, 1.33%)</title><rect x="10.0" y="451.0" width="15.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,119 samples, 1.33%)</title><rect x="10.0" y="435.0" width="15.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,119 samples, 1.33%)</title><rect x="10.0" y="419.0" width="15.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,119 samples, 1.33%)</title><rect x="10.0" y="403.0" width="15.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (851 samples, 1.01%)</title><rect x="10.0" y="387.0" width="12.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (268 samples, 0.32%)</title><rect x="22.0" y="387.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.0" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (268 samples, 0.32%)</title><rect x="22.0" y="371.0" width="3.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="25.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8,947 samples, 10.66%)</title><rect x="25.7" y="467.0" width="125.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.7" y="478.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8,947 samples, 10.66%)</title><rect x="25.7" y="451.0" width="125.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.7" y="462.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (8,947 samples, 10.66%)</title><rect x="25.7" y="435.0" width="125.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.7" y="446.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8,947 samples, 10.66%)</title><rect x="25.7" y="419.0" width="125.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="28.7" y="430.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8,947 samples, 10.66%)</title><rect x="25.7" y="403.0" width="125.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.7" y="414.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (8,071 samples, 9.61%)</title><rect x="25.7" y="387.0" width="113.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.7" y="398.0">jdk.internal.n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (876 samples, 1.04%)</title><rect x="139.2" y="387.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="142.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (876 samples, 1.04%)</title><rect x="139.2" y="371.0" width="12.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="142.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (3,705 samples, 4.41%)</title><rect x="151.5" y="707.0" width="52.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.5" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (3,705 samples, 4.41%)</title><rect x="151.5" y="691.0" width="52.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.5" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (3,705 samples, 4.41%)</title><rect x="151.5" y="675.0" width="52.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.5" y="686.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (3,705 samples, 4.41%)</title><rect x="151.5" y="659.0" width="52.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.5" y="670.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (3,704 samples, 4.41%)</title><rect x="151.5" y="643.0" width="52.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.5" y="654.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (3,704 samples, 4.41%)</title><rect x="151.5" y="627.0" width="52.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.5" y="638.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (3,704 samples, 4.41%)</title><rect x="151.5" y="611.0" width="52.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="154.5" y="622.0">jdk.i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (5,892 samples, 7.02%)</title><rect x="203.6" y="755.0" width="82.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.6" y="766.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (4,195 samples, 5.00%)</title><rect x="203.6" y="739.0" width="58.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="206.6" y="750.0">jdk.in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1,697 samples, 2.02%)</title><rect x="262.5" y="739.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.5" y="750.0">j..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,697 samples, 2.02%)</title><rect x="262.5" y="723.0" width="23.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.5" y="734.0">s..</text>
</g>
<g>
<title>java.lang.Object (1,697 samples, 2.02%)</title><rect x="262.5" y="707.0" width="23.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="265.5" y="718.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (255 samples, 0.30%)</title><rect x="286.4" y="755.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (255 samples, 0.30%)</title><rect x="286.4" y="739.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (22 samples, 0.03%)</title><rect x="286.4" y="723.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.4" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter$Cache (22 samples, 0.03%)</title><rect x="286.4" y="707.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="289.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (233 samples, 0.28%)</title><rect x="286.7" y="723.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.7" y="734.0"></text>
</g>
<g>
<title>java.lang.Class (233 samples, 0.28%)</title><rect x="286.7" y="707.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="289.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$297/247412214.get (55 samples, 0.07%)</title><rect x="290.2" y="835.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$get$0 (55 samples, 0.07%)</title><rect x="290.2" y="819.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.2" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (55 samples, 0.07%)</title><rect x="290.2" y="803.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="293.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (55 samples, 0.07%)</title><rect x="290.2" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.2" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (55 samples, 0.07%)</title><rect x="290.2" y="771.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.2" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.2" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="739.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="293.2" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="723.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="293.2" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="707.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="293.2" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="293.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="675.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.2" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (55 samples, 0.07%)</title><rect x="290.2" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (55 samples, 0.07%)</title><rect x="290.2" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="293.2" y="654.0"></text>
</g>
<g>
<title>java.lang.Object (55 samples, 0.07%)</title><rect x="290.2" y="627.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="293.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (160 samples, 0.19%)</title><rect x="291.0" y="851.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (160 samples, 0.19%)</title><rect x="291.0" y="835.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="294.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (160 samples, 0.19%)</title><rect x="291.0" y="819.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (160 samples, 0.19%)</title><rect x="291.0" y="803.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (160 samples, 0.19%)</title><rect x="291.0" y="787.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (160 samples, 0.19%)</title><rect x="291.0" y="771.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="294.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (160 samples, 0.19%)</title><rect x="291.0" y="755.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (160 samples, 0.19%)</title><rect x="291.0" y="739.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (151 samples, 0.18%)</title><rect x="291.0" y="723.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (151 samples, 0.18%)</title><rect x="291.0" y="707.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (151 samples, 0.18%)</title><rect x="291.0" y="691.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (151 samples, 0.18%)</title><rect x="291.0" y="675.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (151 samples, 0.18%)</title><rect x="291.0" y="659.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (151 samples, 0.18%)</title><rect x="291.0" y="643.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (151 samples, 0.18%)</title><rect x="291.0" y="627.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (151 samples, 0.18%)</title><rect x="291.0" y="611.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (151 samples, 0.18%)</title><rect x="291.0" y="595.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (151 samples, 0.18%)</title><rect x="291.0" y="579.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (151 samples, 0.18%)</title><rect x="291.0" y="563.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (151 samples, 0.18%)</title><rect x="291.0" y="547.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (151 samples, 0.18%)</title><rect x="291.0" y="531.0" width="2.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="294.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,846 samples, 3.39%)</title><rect x="293.2" y="851.0" width="40.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.2" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1,423 samples, 1.70%)</title><rect x="293.2" y="835.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (381 samples, 0.45%)</title><rect x="293.2" y="819.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (381 samples, 0.45%)</title><rect x="293.2" y="803.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (381 samples, 0.45%)</title><rect x="293.2" y="787.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (381 samples, 0.45%)</title><rect x="293.2" y="771.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (381 samples, 0.45%)</title><rect x="293.2" y="755.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="296.2" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (381 samples, 0.45%)</title><rect x="293.2" y="739.0" width="5.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="296.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,042 samples, 1.24%)</title><rect x="298.6" y="819.0" width="14.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,042 samples, 1.24%)</title><rect x="298.6" y="803.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,042 samples, 1.24%)</title><rect x="298.6" y="787.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,042 samples, 1.24%)</title><rect x="298.6" y="771.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,042 samples, 1.24%)</title><rect x="298.6" y="755.0" width="14.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="301.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,042 samples, 1.24%)</title><rect x="298.6" y="739.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.6" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,042 samples, 1.24%)</title><rect x="298.6" y="723.0" width="14.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="301.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,423 samples, 1.70%)</title><rect x="313.2" y="835.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="316.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (189 samples, 0.23%)</title><rect x="313.2" y="819.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (189 samples, 0.23%)</title><rect x="313.2" y="803.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="316.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (189 samples, 0.23%)</title><rect x="313.2" y="787.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="316.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (189 samples, 0.23%)</title><rect x="313.2" y="771.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (189 samples, 0.23%)</title><rect x="313.2" y="755.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="316.2" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (189 samples, 0.23%)</title><rect x="313.2" y="739.0" width="2.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="316.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1,234 samples, 1.47%)</title><rect x="315.9" y="819.0" width="17.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="318.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1,234 samples, 1.47%)</title><rect x="315.9" y="803.0" width="17.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="318.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1,234 samples, 1.47%)</title><rect x="315.9" y="787.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,234 samples, 1.47%)</title><rect x="315.9" y="771.0" width="17.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="318.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,234 samples, 1.47%)</title><rect x="315.9" y="755.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,234 samples, 1.47%)</title><rect x="315.9" y="739.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.9" y="750.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,234 samples, 1.47%)</title><rect x="315.9" y="723.0" width="17.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="318.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (317 samples, 0.38%)</title><rect x="333.2" y="851.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="336.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (317 samples, 0.38%)</title><rect x="333.2" y="835.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (317 samples, 0.38%)</title><rect x="333.2" y="819.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (317 samples, 0.38%)</title><rect x="333.2" y="803.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (317 samples, 0.38%)</title><rect x="333.2" y="787.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (317 samples, 0.38%)</title><rect x="333.2" y="771.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (317 samples, 0.38%)</title><rect x="333.2" y="755.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="336.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (317 samples, 0.38%)</title><rect x="333.2" y="739.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (317 samples, 0.38%)</title><rect x="333.2" y="723.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (317 samples, 0.38%)</title><rect x="333.2" y="707.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (317 samples, 0.38%)</title><rect x="333.2" y="691.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (317 samples, 0.38%)</title><rect x="333.2" y="675.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (317 samples, 0.38%)</title><rect x="333.2" y="659.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (317 samples, 0.38%)</title><rect x="333.2" y="643.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (317 samples, 0.38%)</title><rect x="333.2" y="627.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="336.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (317 samples, 0.38%)</title><rect x="333.2" y="611.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (282 samples, 0.34%)</title><rect x="333.2" y="595.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (275 samples, 0.33%)</title><rect x="333.2" y="579.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (275 samples, 0.33%)</title><rect x="333.2" y="563.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (275 samples, 0.33%)</title><rect x="333.2" y="547.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="336.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (275 samples, 0.33%)</title><rect x="333.2" y="531.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (275 samples, 0.33%)</title><rect x="333.2" y="515.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (275 samples, 0.33%)</title><rect x="333.2" y="499.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (275 samples, 0.33%)</title><rect x="333.2" y="483.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="336.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (275 samples, 0.33%)</title><rect x="333.2" y="467.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (275 samples, 0.33%)</title><rect x="333.2" y="451.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (275 samples, 0.33%)</title><rect x="333.2" y="435.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (275 samples, 0.33%)</title><rect x="333.2" y="419.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (275 samples, 0.33%)</title><rect x="333.2" y="403.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (275 samples, 0.33%)</title><rect x="333.2" y="387.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (275 samples, 0.33%)</title><rect x="333.2" y="371.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (275 samples, 0.33%)</title><rect x="333.2" y="355.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (275 samples, 0.33%)</title><rect x="333.2" y="339.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="336.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (275 samples, 0.33%)</title><rect x="333.2" y="323.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (275 samples, 0.33%)</title><rect x="333.2" y="307.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (275 samples, 0.33%)</title><rect x="333.2" y="291.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (275 samples, 0.33%)</title><rect x="333.2" y="275.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="336.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (275 samples, 0.33%)</title><rect x="333.2" y="259.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="336.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (275 samples, 0.33%)</title><rect x="333.2" y="243.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (275 samples, 0.33%)</title><rect x="333.2" y="227.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (275 samples, 0.33%)</title><rect x="333.2" y="211.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (275 samples, 0.33%)</title><rect x="333.2" y="195.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="336.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (275 samples, 0.33%)</title><rect x="333.2" y="179.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (275 samples, 0.33%)</title><rect x="333.2" y="163.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="336.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (74 samples, 0.09%)</title><rect x="333.2" y="147.0" width="1.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="336.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (201 samples, 0.24%)</title><rect x="334.3" y="147.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.3" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (201 samples, 0.24%)</title><rect x="334.3" y="131.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="337.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (188 samples, 0.22%)</title><rect x="334.5" y="115.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.5" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (188 samples, 0.22%)</title><rect x="334.5" y="99.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="337.5" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (188 samples, 0.22%)</title><rect x="334.5" y="83.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.5" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (188 samples, 0.22%)</title><rect x="334.5" y="67.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.5" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (188 samples, 0.22%)</title><rect x="334.5" y="51.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="337.5" y="62.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (179 samples, 0.21%)</title><rect x="334.5" y="35.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="337.5" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (35 samples, 0.04%)</title><rect x="337.2" y="595.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (35 samples, 0.04%)</title><rect x="337.2" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (35 samples, 0.04%)</title><rect x="337.2" y="563.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (35 samples, 0.04%)</title><rect x="337.2" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="340.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (35 samples, 0.04%)</title><rect x="337.2" y="531.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (35 samples, 0.04%)</title><rect x="337.2" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (35 samples, 0.04%)</title><rect x="337.2" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="340.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (31,230 samples, 37.20%)</title><rect x="337.7" y="851.0" width="439.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="340.7" y="862.0">jdk/internal/net/http/common/SequentialScheduler$Schedulable..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (31,230 samples, 37.20%)</title><rect x="337.7" y="835.0" width="439.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.7" y="846.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRes..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (12,234 samples, 14.57%)</title><rect x="337.7" y="819.0" width="172.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="340.7" y="830.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (12,234 samples, 14.57%)</title><rect x="337.7" y="803.0" width="172.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.7" y="814.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (12,234 samples, 14.57%)</title><rect x="337.7" y="787.0" width="172.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="340.7" y="798.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (9,762 samples, 11.63%)</title><rect x="337.7" y="771.0" width="137.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="340.7" y="782.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (9,762 samples, 11.63%)</title><rect x="337.7" y="755.0" width="137.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="340.7" y="766.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (9,762 samples, 11.63%)</title><rect x="337.7" y="739.0" width="137.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.7" y="750.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (9,762 samples, 11.63%)</title><rect x="337.7" y="723.0" width="137.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="340.7" y="734.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9,762 samples, 11.63%)</title><rect x="337.7" y="707.0" width="137.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="340.7" y="718.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9,762 samples, 11.63%)</title><rect x="337.7" y="691.0" width="137.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="340.7" y="702.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (9,762 samples, 11.63%)</title><rect x="337.7" y="675.0" width="137.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.7" y="686.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (9,762 samples, 11.63%)</title><rect x="337.7" y="659.0" width="137.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="340.7" y="670.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (9,762 samples, 11.63%)</title><rect x="337.7" y="643.0" width="137.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.7" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (8,826 samples, 10.51%)</title><rect x="337.7" y="627.0" width="124.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="340.7" y="638.0">jdk.internal.ne..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (936 samples, 1.12%)</title><rect x="461.8" y="627.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.8" y="638.0"></text>
</g>
<g>
<title>java.lang.Object (936 samples, 1.12%)</title><rect x="461.8" y="611.0" width="13.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="464.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,472 samples, 2.94%)</title><rect x="474.9" y="771.0" width="34.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.9" y="782.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,472 samples, 2.94%)</title><rect x="474.9" y="755.0" width="34.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.9" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,472 samples, 2.94%)</title><rect x="474.9" y="739.0" width="34.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.9" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,472 samples, 2.94%)</title><rect x="474.9" y="723.0" width="34.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.9" y="734.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,472 samples, 2.94%)</title><rect x="474.9" y="707.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.9" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,472 samples, 2.94%)</title><rect x="474.9" y="691.0" width="34.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.9" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,472 samples, 2.94%)</title><rect x="474.9" y="675.0" width="34.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.9" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,472 samples, 2.94%)</title><rect x="474.9" y="659.0" width="34.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.9" y="670.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,472 samples, 2.94%)</title><rect x="474.9" y="643.0" width="34.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.9" y="654.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,472 samples, 2.94%)</title><rect x="474.9" y="627.0" width="34.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.9" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,472 samples, 2.94%)</title><rect x="474.9" y="611.0" width="34.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.9" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,472 samples, 2.94%)</title><rect x="474.9" y="595.0" width="34.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.9" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,472 samples, 2.94%)</title><rect x="474.9" y="579.0" width="34.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.9" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (377 samples, 0.45%)</title><rect x="474.9" y="563.0" width="5.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (377 samples, 0.45%)</title><rect x="474.9" y="547.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (377 samples, 0.45%)</title><rect x="474.9" y="531.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (377 samples, 0.45%)</title><rect x="474.9" y="515.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (377 samples, 0.45%)</title><rect x="474.9" y="499.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (377 samples, 0.45%)</title><rect x="474.9" y="483.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.9" y="494.0"></text>
</g>
<g>
<title>java.lang.Class (377 samples, 0.45%)</title><rect x="474.9" y="467.0" width="5.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="477.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2,095 samples, 2.50%)</title><rect x="480.2" y="563.0" width="29.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.2" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,095 samples, 2.50%)</title><rect x="480.2" y="547.0" width="29.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="483.2" y="558.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (2,095 samples, 2.50%)</title><rect x="480.2" y="531.0" width="29.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="483.2" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2,095 samples, 2.50%)</title><rect x="480.2" y="515.0" width="29.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.2" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2,095 samples, 2.50%)</title><rect x="480.2" y="499.0" width="29.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.2" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2,095 samples, 2.50%)</title><rect x="480.2" y="483.0" width="29.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.2" y="494.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (2,095 samples, 2.50%)</title><rect x="480.2" y="467.0" width="29.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="483.2" y="478.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (18,996 samples, 22.63%)</title><rect x="509.7" y="819.0" width="267.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.7" y="830.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (18,996 samples, 22.63%)</title><rect x="509.7" y="803.0" width="267.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="512.7" y="814.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (18,996 samples, 22.63%)</title><rect x="509.7" y="787.0" width="267.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="512.7" y="798.0">jdk/internal/net/http/common/Sequent..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (18,996 samples, 22.63%)</title><rect x="509.7" y="771.0" width="267.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="512.7" y="782.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (18,996 samples, 22.63%)</title><rect x="509.7" y="755.0" width="267.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.7" y="766.0">jdk/internal/net/http/Http1AsyncRece..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (18,911 samples, 22.53%)</title><rect x="509.7" y="739.0" width="265.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.7" y="750.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (18,911 samples, 22.53%)</title><rect x="509.7" y="723.0" width="265.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.7" y="734.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (18,911 samples, 22.53%)</title><rect x="509.7" y="707.0" width="265.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.7" y="718.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (18,911 samples, 22.53%)</title><rect x="509.7" y="691.0" width="265.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="512.7" y="702.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (18,911 samples, 22.53%)</title><rect x="509.7" y="675.0" width="265.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.7" y="686.0">jdk/internal/net/http/ResponseConte..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (18,911 samples, 22.53%)</title><rect x="509.7" y="659.0" width="265.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.7" y="670.0">jdk/internal/net/http/ResponseConte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (18,911 samples, 22.53%)</title><rect x="509.7" y="643.0" width="265.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="512.7" y="654.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (18,911 samples, 22.53%)</title><rect x="509.7" y="627.0" width="265.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.7" y="638.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (18,911 samples, 22.53%)</title><rect x="509.7" y="611.0" width="265.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="512.7" y="622.0">jdk/internal/net/http/HttpConnectio..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (18,911 samples, 22.53%)</title><rect x="509.7" y="595.0" width="265.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.7" y="606.0">jdk/internal/net/http/ConnectionPoo..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (18,911 samples, 22.53%)</title><rect x="509.7" y="579.0" width="265.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.7" y="590.0">jdk/internal/net/http/ConnectionPoo..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5,714 samples, 6.81%)</title><rect x="509.7" y="563.0" width="80.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="512.7" y="574.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (13,197 samples, 15.72%)</title><rect x="590.0" y="563.0" width="185.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.0" y="574.0">jdk/internal/net/http/Co..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (13,197 samples, 15.72%)</title><rect x="590.0" y="547.0" width="185.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.0" y="558.0">jdk/internal/net/http/So..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1,552 samples, 1.85%)</title><rect x="590.0" y="531.0" width="21.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.0" y="542.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1,552 samples, 1.85%)</title><rect x="590.0" y="515.0" width="21.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.0" y="526.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1,552 samples, 1.85%)</title><rect x="590.0" y="499.0" width="21.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.0" y="510.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1,552 samples, 1.85%)</title><rect x="590.0" y="483.0" width="21.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.0" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1,552 samples, 1.85%)</title><rect x="590.0" y="467.0" width="21.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.0" y="478.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (1,311 samples, 1.56%)</title><rect x="590.0" y="451.0" width="18.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="593.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (241 samples, 0.29%)</title><rect x="608.4" y="451.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="611.4" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (241 samples, 0.29%)</title><rect x="608.4" y="435.0" width="3.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="611.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (11,645 samples, 13.87%)</title><rect x="611.8" y="531.0" width="163.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.8" y="542.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (11,645 samples, 13.87%)</title><rect x="611.8" y="515.0" width="163.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.8" y="526.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (11,645 samples, 13.87%)</title><rect x="611.8" y="499.0" width="163.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.8" y="510.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (11,645 samples, 13.87%)</title><rect x="611.8" y="483.0" width="163.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="614.8" y="494.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (11,645 samples, 13.87%)</title><rect x="611.8" y="467.0" width="163.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.8" y="478.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (10,730 samples, 12.78%)</title><rect x="611.8" y="451.0" width="150.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="614.8" y="462.0">jdk.internal.net.ht..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (915 samples, 1.09%)</title><rect x="762.6" y="451.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="765.6" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (915 samples, 1.09%)</title><rect x="762.6" y="435.0" width="12.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="765.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (85 samples, 0.10%)</title><rect x="775.5" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (85 samples, 0.10%)</title><rect x="775.5" y="723.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (85 samples, 0.10%)</title><rect x="775.5" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="778.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (85 samples, 0.10%)</title><rect x="775.5" y="691.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (85 samples, 0.10%)</title><rect x="775.5" y="675.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (85 samples, 0.10%)</title><rect x="775.5" y="659.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="778.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (85 samples, 0.10%)</title><rect x="775.5" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="778.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (85 samples, 0.10%)</title><rect x="775.5" y="627.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (85 samples, 0.10%)</title><rect x="775.5" y="611.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (85 samples, 0.10%)</title><rect x="775.5" y="595.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="778.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (85 samples, 0.10%)</title><rect x="775.5" y="579.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (85 samples, 0.10%)</title><rect x="775.5" y="563.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (85 samples, 0.10%)</title><rect x="775.5" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="778.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (75 samples, 0.09%)</title><rect x="775.6" y="531.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (75 samples, 0.09%)</title><rect x="775.6" y="515.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (75 samples, 0.09%)</title><rect x="775.6" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (75 samples, 0.09%)</title><rect x="775.6" y="483.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="778.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (75 samples, 0.09%)</title><rect x="775.6" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (75 samples, 0.09%)</title><rect x="775.6" y="451.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (75 samples, 0.09%)</title><rect x="775.6" y="435.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="778.6" y="446.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (109 samples, 0.13%)</title><rect x="776.7" y="899.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="779.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (105 samples, 0.13%)</title><rect x="776.7" y="883.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.7" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (105 samples, 0.13%)</title><rect x="776.7" y="867.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.7" y="878.0"></text>
</g>
<g>
<title>java.lang.ref.ReferenceQueue$Lock (105 samples, 0.13%)</title><rect x="776.7" y="851.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="779.7" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (90 samples, 0.11%)</title><rect x="778.2" y="899.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="781.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (90 samples, 0.11%)</title><rect x="778.2" y="883.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (90 samples, 0.11%)</title><rect x="778.2" y="867.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.2" y="878.0"></text>
</g>
<g>
<title>java.lang.ref.ReferenceQueue$Lock (90 samples, 0.11%)</title><rect x="778.2" y="851.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="781.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (401 samples, 0.48%)</title><rect x="779.5" y="899.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (401 samples, 0.48%)</title><rect x="779.5" y="883.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (401 samples, 0.48%)</title><rect x="779.5" y="867.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="782.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (401 samples, 0.48%)</title><rect x="779.5" y="851.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="782.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (401 samples, 0.48%)</title><rect x="779.5" y="835.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="782.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (401 samples, 0.48%)</title><rect x="779.5" y="819.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (401 samples, 0.48%)</title><rect x="779.5" y="803.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="782.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (401 samples, 0.48%)</title><rect x="779.5" y="787.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="782.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (401 samples, 0.48%)</title><rect x="779.5" y="771.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="782.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (401 samples, 0.48%)</title><rect x="779.5" y="755.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (401 samples, 0.48%)</title><rect x="779.5" y="739.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="782.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (401 samples, 0.48%)</title><rect x="779.5" y="723.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="782.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (401 samples, 0.48%)</title><rect x="779.5" y="707.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="782.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (401 samples, 0.48%)</title><rect x="779.5" y="691.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="782.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (401 samples, 0.48%)</title><rect x="779.5" y="675.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (401 samples, 0.48%)</title><rect x="779.5" y="659.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="782.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (401 samples, 0.48%)</title><rect x="779.5" y="643.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="782.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (401 samples, 0.48%)</title><rect x="779.5" y="627.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (401 samples, 0.48%)</title><rect x="779.5" y="611.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="782.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (401 samples, 0.48%)</title><rect x="779.5" y="595.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="782.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (27,401 samples, 32.64%)</title><rect x="785.1" y="899.0" width="385.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.1" y="910.0">jdk/internal/net/http/HttpClientImpl$SelectorManager...</text>
</g>
<g>
<title>java/util/ArrayList.forEach (47 samples, 0.06%)</title><rect x="785.1" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1514835762.accept (47 samples, 0.06%)</title><rect x="785.1" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (47 samples, 0.06%)</title><rect x="785.1" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (47 samples, 0.06%)</title><rect x="785.1" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (47 samples, 0.06%)</title><rect x="785.1" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (47 samples, 0.06%)</title><rect x="785.1" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (47 samples, 0.06%)</title><rect x="785.1" y="787.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (47 samples, 0.06%)</title><rect x="785.1" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (47 samples, 0.06%)</title><rect x="785.1" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (47 samples, 0.06%)</title><rect x="785.1" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="788.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (47 samples, 0.06%)</title><rect x="785.1" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="788.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (47 samples, 0.06%)</title><rect x="785.1" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="788.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (47 samples, 0.06%)</title><rect x="785.1" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="788.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (42 samples, 0.05%)</title><rect x="785.1" y="675.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (42 samples, 0.05%)</title><rect x="785.1" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (42 samples, 0.05%)</title><rect x="785.1" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="788.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.05%)</title><rect x="785.1" y="627.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (42 samples, 0.05%)</title><rect x="785.1" y="611.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (42 samples, 0.05%)</title><rect x="785.1" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (42 samples, 0.05%)</title><rect x="785.1" y="579.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="788.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (42 samples, 0.05%)</title><rect x="785.1" y="563.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="788.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (37 samples, 0.04%)</title><rect x="785.1" y="547.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (37 samples, 0.04%)</title><rect x="785.1" y="531.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (37 samples, 0.04%)</title><rect x="785.1" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (37 samples, 0.04%)</title><rect x="785.1" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="788.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (37 samples, 0.04%)</title><rect x="785.1" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (37 samples, 0.04%)</title><rect x="785.1" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (37 samples, 0.04%)</title><rect x="785.1" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.1" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (37 samples, 0.04%)</title><rect x="785.1" y="435.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="788.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (13,922 samples, 16.58%)</title><rect x="785.8" y="883.0" width="195.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="788.8" y="894.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (65 samples, 0.08%)</title><rect x="981.5" y="883.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/856242411.run (24 samples, 0.03%)</title><rect x="981.5" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="984.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (24 samples, 0.03%)</title><rect x="981.5" y="851.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.03%)</title><rect x="981.5" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.03%)</title><rect x="981.5" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (24 samples, 0.03%)</title><rect x="981.5" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (24 samples, 0.03%)</title><rect x="981.5" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (24 samples, 0.03%)</title><rect x="981.5" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="984.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (24 samples, 0.03%)</title><rect x="981.5" y="755.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (24 samples, 0.03%)</title><rect x="981.5" y="739.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="984.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (24 samples, 0.03%)</title><rect x="981.5" y="723.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="984.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (24 samples, 0.03%)</title><rect x="981.5" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="984.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.03%)</title><rect x="981.5" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.03%)</title><rect x="981.5" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="984.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.03%)</title><rect x="981.5" y="659.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="984.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.03%)</title><rect x="981.5" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.03%)</title><rect x="981.5" y="627.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (20 samples, 0.02%)</title><rect x="981.5" y="611.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (20 samples, 0.02%)</title><rect x="981.5" y="595.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (20 samples, 0.02%)</title><rect x="981.5" y="579.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="984.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (20 samples, 0.02%)</title><rect x="981.5" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="984.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (20 samples, 0.02%)</title><rect x="981.5" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (20 samples, 0.02%)</title><rect x="981.5" y="531.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (20 samples, 0.02%)</title><rect x="981.5" y="515.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.5" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (20 samples, 0.02%)</title><rect x="981.5" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="984.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/2094894093.run (41 samples, 0.05%)</title><rect x="981.8" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (41 samples, 0.05%)</title><rect x="981.8" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 0.05%)</title><rect x="981.8" y="835.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="984.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (41 samples, 0.05%)</title><rect x="981.8" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="984.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (41 samples, 0.05%)</title><rect x="981.8" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (38 samples, 0.05%)</title><rect x="981.8" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (38 samples, 0.05%)</title><rect x="981.8" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (38 samples, 0.05%)</title><rect x="981.8" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="984.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (38 samples, 0.05%)</title><rect x="981.8" y="739.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="984.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (38 samples, 0.05%)</title><rect x="981.8" y="723.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="984.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (38 samples, 0.05%)</title><rect x="981.8" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="984.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 0.05%)</title><rect x="981.8" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="984.8" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (38 samples, 0.05%)</title><rect x="981.8" y="675.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="984.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,781 samples, 4.50%)</title><rect x="982.4" y="883.0" width="53.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="985.4" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3,781 samples, 4.50%)</title><rect x="982.4" y="867.0" width="53.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.4" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (3,781 samples, 4.50%)</title><rect x="982.4" y="851.0" width="53.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="985.4" y="862.0">jdk.i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (3,966 samples, 4.72%)</title><rect x="1035.5" y="883.0" width="55.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.5" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (3,966 samples, 4.72%)</title><rect x="1035.5" y="867.0" width="55.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1038.5" y="878.0">jdk.i..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (5,601 samples, 6.67%)</title><rect x="1091.3" y="883.0" width="78.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.3" y="894.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (5,601 samples, 6.67%)</title><rect x="1091.3" y="867.0" width="78.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.3" y="878.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (5,601 samples, 6.67%)</title><rect x="1091.3" y="851.0" width="78.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.3" y="862.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (5,601 samples, 6.67%)</title><rect x="1091.3" y="835.0" width="78.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.3" y="846.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (5,601 samples, 6.67%)</title><rect x="1091.3" y="819.0" width="78.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.3" y="830.0">sun/nio/c..</text>
</g>
<g>
<title>java.lang.Object (5,601 samples, 6.67%)</title><rect x="1091.3" y="803.0" width="78.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1094.3" y="814.0">java.lang..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (19 samples, 0.02%)</title><rect x="1170.0" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1173.0" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (19 samples, 0.02%)</title><rect x="1170.0" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1173.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (19 samples, 0.02%)</title><rect x="1170.0" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1173.0" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (19 samples, 0.02%)</title><rect x="1170.0" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1173.0" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (19 samples, 0.02%)</title><rect x="1170.0" y="819.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1173.0" y="830.0"></text>
</g>
<g>
<title>java.lang.Object (19 samples, 0.02%)</title><rect x="1170.0" y="803.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1173.0" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,402 samples, 1.67%)</title><rect x="1170.3" y="899.0" width="19.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,402 samples, 1.67%)</title><rect x="1170.3" y="883.0" width="19.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (726 samples, 0.86%)</title><rect x="1170.3" y="867.0" width="10.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (676 samples, 0.81%)</title><rect x="1180.5" y="867.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (676 samples, 0.81%)</title><rect x="1180.5" y="851.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (676 samples, 0.81%)</title><rect x="1180.5" y="835.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1183.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (676 samples, 0.81%)</title><rect x="1180.5" y="819.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1183.5" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (676 samples, 0.81%)</title><rect x="1180.5" y="803.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1183.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (676 samples, 0.81%)</title><rect x="1180.5" y="787.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1183.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (199 samples, 0.24%)</title><rect x="1180.5" y="771.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (199 samples, 0.24%)</title><rect x="1180.5" y="755.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1183.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (199 samples, 0.24%)</title><rect x="1180.5" y="739.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (199 samples, 0.24%)</title><rect x="1180.5" y="723.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (199 samples, 0.24%)</title><rect x="1180.5" y="707.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1183.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (199 samples, 0.24%)</title><rect x="1180.5" y="691.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (199 samples, 0.24%)</title><rect x="1180.5" y="675.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (199 samples, 0.24%)</title><rect x="1180.5" y="659.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (199 samples, 0.24%)</title><rect x="1180.5" y="643.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (199 samples, 0.24%)</title><rect x="1180.5" y="627.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (199 samples, 0.24%)</title><rect x="1180.5" y="611.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1183.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (199 samples, 0.24%)</title><rect x="1180.5" y="595.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1183.5" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (199 samples, 0.24%)</title><rect x="1180.5" y="579.0" width="2.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1183.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (477 samples, 0.57%)</title><rect x="1183.3" y="771.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (140 samples, 0.17%)</title><rect x="1183.3" y="755.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (140 samples, 0.17%)</title><rect x="1183.3" y="739.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (140 samples, 0.17%)</title><rect x="1183.3" y="723.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (140 samples, 0.17%)</title><rect x="1183.3" y="707.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1186.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (140 samples, 0.17%)</title><rect x="1183.3" y="691.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1186.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (140 samples, 0.17%)</title><rect x="1183.3" y="675.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (140 samples, 0.17%)</title><rect x="1183.3" y="659.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (140 samples, 0.17%)</title><rect x="1183.3" y="643.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (140 samples, 0.17%)</title><rect x="1183.3" y="627.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1186.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (39 samples, 0.05%)</title><rect x="1183.3" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1186.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (39 samples, 0.05%)</title><rect x="1183.3" y="595.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1186.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (39 samples, 0.05%)</title><rect x="1183.3" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1186.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (39 samples, 0.05%)</title><rect x="1183.3" y="563.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (39 samples, 0.05%)</title><rect x="1183.3" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (39 samples, 0.05%)</title><rect x="1183.3" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.05%)</title><rect x="1183.3" y="515.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (39 samples, 0.05%)</title><rect x="1183.3" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="1186.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (101 samples, 0.12%)</title><rect x="1183.8" y="611.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (101 samples, 0.12%)</title><rect x="1183.8" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (101 samples, 0.12%)</title><rect x="1183.8" y="579.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1186.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (101 samples, 0.12%)</title><rect x="1183.8" y="563.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1186.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 0.12%)</title><rect x="1183.8" y="547.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1186.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 0.12%)</title><rect x="1183.8" y="531.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (101 samples, 0.12%)</title><rect x="1183.8" y="515.0" width="1.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="1186.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (337 samples, 0.40%)</title><rect x="1185.3" y="755.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (337 samples, 0.40%)</title><rect x="1185.3" y="739.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (337 samples, 0.40%)</title><rect x="1185.3" y="723.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (337 samples, 0.40%)</title><rect x="1185.3" y="707.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1188.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (337 samples, 0.40%)</title><rect x="1185.3" y="691.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1188.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (337 samples, 0.40%)</title><rect x="1185.3" y="675.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1188.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (337 samples, 0.40%)</title><rect x="1185.3" y="659.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1188.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (337 samples, 0.40%)</title><rect x="1185.3" y="643.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1188.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (337 samples, 0.40%)</title><rect x="1185.3" y="627.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1188.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (337 samples, 0.40%)</title><rect x="1185.3" y="611.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1188.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (337 samples, 0.40%)</title><rect x="1185.3" y="595.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1188.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (337 samples, 0.40%)</title><rect x="1185.3" y="579.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1188.3" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (337 samples, 0.40%)</title><rect x="1185.3" y="563.0" width="4.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1188.3" y="574.0"></text>
</g>
</g>
</svg>
