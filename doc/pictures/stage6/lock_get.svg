<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (27,041 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (18,870 samples, 69.78%)</title><rect x="10.0" y="915.0" width="823.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,870 samples, 69.78%)</title><rect x="10.0" y="899.0" width="823.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,870 samples, 69.78%)</title><rect x="10.0" y="883.0" width="823.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (7,254 samples, 26.83%)</title><rect x="10.0" y="867.0" width="316.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="878.0">java/util/concurrent/CompletableFuture$Asyn..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7,238 samples, 26.77%)</title><rect x="10.0" y="851.0" width="315.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="862.0">java/util/concurrent/CompletableFuture.post..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7,231 samples, 26.74%)</title><rect x="10.0" y="835.0" width="315.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="846.0">java/util/concurrent/CompletableFuture$UniC..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.apply (7,231 samples, 26.74%)</title><rect x="10.0" y="819.0" width="315.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="830.0">jdk/internal/net/http/MultiExchange$$Lambda..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (7,231 samples, 26.74%)</title><rect x="10.0" y="803.0" width="315.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="814.0">jdk/internal/net/http/MultiExchange.lambda$..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (7,231 samples, 26.74%)</title><rect x="10.0" y="787.0" width="315.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="798.0">jdk/internal/net/http/MultiExchange.respons..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (4,464 samples, 16.51%)</title><rect x="10.0" y="771.0" width="194.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="782.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (4,464 samples, 16.51%)</title><rect x="10.0" y="755.0" width="194.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="766.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (4,464 samples, 16.51%)</title><rect x="10.0" y="739.0" width="194.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="750.0">jdk/internal/net/http/Exc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (3,176 samples, 11.75%)</title><rect x="10.0" y="723.0" width="138.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (3,176 samples, 11.75%)</title><rect x="10.0" y="707.0" width="138.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="718.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3,176 samples, 11.75%)</title><rect x="10.0" y="691.0" width="138.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.apply (3,176 samples, 11.75%)</title><rect x="10.0" y="675.0" width="138.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="686.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (3,176 samples, 11.75%)</title><rect x="10.0" y="659.0" width="138.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="670.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3,176 samples, 11.75%)</title><rect x="10.0" y="643.0" width="138.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="654.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (3,176 samples, 11.75%)</title><rect x="10.0" y="627.0" width="138.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="638.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3,176 samples, 11.75%)</title><rect x="10.0" y="611.0" width="138.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="622.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3,176 samples, 11.75%)</title><rect x="10.0" y="595.0" width="138.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="606.0">jdk/internal/net/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3,176 samples, 11.75%)</title><rect x="10.0" y="579.0" width="138.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="590.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3,176 samples, 11.75%)</title><rect x="10.0" y="563.0" width="138.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.apply (3,176 samples, 11.75%)</title><rect x="10.0" y="547.0" width="138.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="558.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,176 samples, 11.75%)</title><rect x="10.0" y="531.0" width="138.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="542.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (3,176 samples, 11.75%)</title><rect x="10.0" y="515.0" width="138.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.0" y="526.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,176 samples, 11.75%)</title><rect x="10.0" y="499.0" width="138.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="510.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (336 samples, 1.24%)</title><rect x="10.0" y="483.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (336 samples, 1.24%)</title><rect x="10.0" y="467.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (336 samples, 1.24%)</title><rect x="10.0" y="451.0" width="14.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (336 samples, 1.24%)</title><rect x="10.0" y="435.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (336 samples, 1.24%)</title><rect x="10.0" y="419.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (201 samples, 0.74%)</title><rect x="10.0" y="403.0" width="8.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (135 samples, 0.50%)</title><rect x="18.8" y="403.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.8" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (135 samples, 0.50%)</title><rect x="18.8" y="387.0" width="5.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="21.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2,840 samples, 10.50%)</title><rect x="24.7" y="483.0" width="123.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.7" y="494.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2,840 samples, 10.50%)</title><rect x="24.7" y="467.0" width="123.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="27.7" y="478.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2,840 samples, 10.50%)</title><rect x="24.7" y="451.0" width="123.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="27.7" y="462.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,840 samples, 10.50%)</title><rect x="24.7" y="435.0" width="123.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="27.7" y="446.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,840 samples, 10.50%)</title><rect x="24.7" y="419.0" width="123.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.7" y="430.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,348 samples, 8.68%)</title><rect x="24.7" y="403.0" width="102.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="27.7" y="414.0">jdk.internal..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (492 samples, 1.82%)</title><rect x="127.1" y="403.0" width="21.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.1" y="414.0">s..</text>
</g>
<g>
<title>java.lang.Object (492 samples, 1.82%)</title><rect x="127.1" y="387.0" width="21.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="130.1" y="398.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,288 samples, 4.76%)</title><rect x="148.6" y="723.0" width="56.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.6" y="734.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,288 samples, 4.76%)</title><rect x="148.6" y="707.0" width="56.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.6" y="718.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,288 samples, 4.76%)</title><rect x="148.6" y="691.0" width="56.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.6" y="702.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,288 samples, 4.76%)</title><rect x="148.6" y="675.0" width="56.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.6" y="686.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (1,288 samples, 4.76%)</title><rect x="148.6" y="659.0" width="56.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.6" y="670.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (1,288 samples, 4.76%)</title><rect x="148.6" y="643.0" width="56.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.6" y="654.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,288 samples, 4.76%)</title><rect x="148.6" y="627.0" width="56.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="151.6" y="638.0">jdk.in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (2,632 samples, 9.73%)</title><rect x="204.8" y="771.0" width="114.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.8" y="782.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,774 samples, 6.56%)</title><rect x="204.8" y="755.0" width="77.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="207.8" y="766.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (858 samples, 3.17%)</title><rect x="282.2" y="755.0" width="37.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.2" y="766.0">jdk..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (858 samples, 3.17%)</title><rect x="282.2" y="739.0" width="37.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.2" y="750.0">sun..</text>
</g>
<g>
<title>java.lang.Object (858 samples, 3.17%)</title><rect x="282.2" y="723.0" width="37.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="285.2" y="734.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (135 samples, 0.50%)</title><rect x="319.7" y="771.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="322.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (135 samples, 0.50%)</title><rect x="319.7" y="755.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="322.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (21 samples, 0.08%)</title><rect x="319.7" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.7" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter$Cache (21 samples, 0.08%)</title><rect x="319.7" y="723.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="322.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (114 samples, 0.42%)</title><rect x="320.6" y="739.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="323.6" y="750.0"></text>
</g>
<g>
<title>java.lang.Class (114 samples, 0.42%)</title><rect x="320.6" y="723.0" width="4.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="323.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.03%)</title><rect x="325.5" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.03%)</title><rect x="325.5" y="819.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.5" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (6 samples, 0.02%)</title><rect x="325.5" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (6 samples, 0.02%)</title><rect x="325.5" y="787.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 0.02%)</title><rect x="325.5" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.5" y="782.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (6 samples, 0.02%)</title><rect x="325.5" y="755.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="328.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$315/52309652.get (16 samples, 0.06%)</title><rect x="325.8" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.8" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$get$0 (16 samples, 0.06%)</title><rect x="325.8" y="835.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (16 samples, 0.06%)</title><rect x="325.8" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (16 samples, 0.06%)</title><rect x="325.8" y="803.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.8" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (16 samples, 0.06%)</title><rect x="325.8" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.8" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="771.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.8" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.8" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="723.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.8" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.8" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="691.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="328.8" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (16 samples, 0.06%)</title><rect x="325.8" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.8" y="686.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (16 samples, 0.06%)</title><rect x="325.8" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.8" y="670.0"></text>
</g>
<g>
<title>java.lang.Object (16 samples, 0.06%)</title><rect x="325.8" y="643.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="328.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (53 samples, 0.20%)</title><rect x="326.5" y="867.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (53 samples, 0.20%)</title><rect x="326.5" y="851.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (53 samples, 0.20%)</title><rect x="326.5" y="835.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="329.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (53 samples, 0.20%)</title><rect x="326.5" y="819.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (53 samples, 0.20%)</title><rect x="326.5" y="803.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (53 samples, 0.20%)</title><rect x="326.5" y="787.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (53 samples, 0.20%)</title><rect x="326.5" y="771.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (53 samples, 0.20%)</title><rect x="326.5" y="755.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (46 samples, 0.17%)</title><rect x="326.5" y="739.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (46 samples, 0.17%)</title><rect x="326.5" y="723.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="329.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (46 samples, 0.17%)</title><rect x="326.5" y="707.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (46 samples, 0.17%)</title><rect x="326.5" y="691.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="329.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.17%)</title><rect x="326.5" y="675.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="329.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (46 samples, 0.17%)</title><rect x="326.5" y="659.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (46 samples, 0.17%)</title><rect x="326.5" y="643.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (46 samples, 0.17%)</title><rect x="326.5" y="627.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="329.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (46 samples, 0.17%)</title><rect x="326.5" y="611.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="329.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (46 samples, 0.17%)</title><rect x="326.5" y="595.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="329.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (46 samples, 0.17%)</title><rect x="326.5" y="579.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (46 samples, 0.17%)</title><rect x="326.5" y="563.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.5" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (46 samples, 0.17%)</title><rect x="326.5" y="547.0" width="2.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="329.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (7 samples, 0.03%)</title><rect x="328.6" y="739.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.6" y="750.0"></text>
</g>
<g>
<title>java.lang.Object (7 samples, 0.03%)</title><rect x="328.6" y="723.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="331.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,343 samples, 4.97%)</title><rect x="328.9" y="867.0" width="58.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.9" y="878.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (540 samples, 2.00%)</title><rect x="328.9" y="851.0" width="23.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (152 samples, 0.56%)</title><rect x="328.9" y="835.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (152 samples, 0.56%)</title><rect x="328.9" y="819.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (152 samples, 0.56%)</title><rect x="328.9" y="803.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="331.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (152 samples, 0.56%)</title><rect x="328.9" y="787.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (152 samples, 0.56%)</title><rect x="328.9" y="771.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.9" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (152 samples, 0.56%)</title><rect x="328.9" y="755.0" width="6.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="331.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (388 samples, 1.43%)</title><rect x="335.5" y="835.0" width="16.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (388 samples, 1.43%)</title><rect x="335.5" y="819.0" width="16.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (388 samples, 1.43%)</title><rect x="335.5" y="803.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (388 samples, 1.43%)</title><rect x="335.5" y="787.0" width="16.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (388 samples, 1.43%)</title><rect x="335.5" y="771.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="338.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (388 samples, 1.43%)</title><rect x="335.5" y="755.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.5" y="766.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (388 samples, 1.43%)</title><rect x="335.5" y="739.0" width="16.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="338.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (803 samples, 2.97%)</title><rect x="352.4" y="851.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.4" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (115 samples, 0.43%)</title><rect x="352.4" y="835.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (115 samples, 0.43%)</title><rect x="352.4" y="819.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (115 samples, 0.43%)</title><rect x="352.4" y="803.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="355.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (115 samples, 0.43%)</title><rect x="352.4" y="787.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (115 samples, 0.43%)</title><rect x="352.4" y="771.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.4" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (115 samples, 0.43%)</title><rect x="352.4" y="755.0" width="5.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="355.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (688 samples, 2.54%)</title><rect x="357.4" y="835.0" width="30.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.4" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (688 samples, 2.54%)</title><rect x="357.4" y="819.0" width="30.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.4" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (688 samples, 2.54%)</title><rect x="357.4" y="803.0" width="30.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.4" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (688 samples, 2.54%)</title><rect x="357.4" y="787.0" width="30.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.4" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (688 samples, 2.54%)</title><rect x="357.4" y="771.0" width="30.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="360.4" y="782.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (688 samples, 2.54%)</title><rect x="357.4" y="755.0" width="30.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="360.4" y="766.0">jd..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (688 samples, 2.54%)</title><rect x="357.4" y="739.0" width="30.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="360.4" y="750.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.run (152 samples, 0.56%)</title><rect x="387.5" y="867.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (152 samples, 0.56%)</title><rect x="387.5" y="851.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="390.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (152 samples, 0.56%)</title><rect x="387.5" y="835.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (152 samples, 0.56%)</title><rect x="387.5" y="819.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (152 samples, 0.56%)</title><rect x="387.5" y="803.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (152 samples, 0.56%)</title><rect x="387.5" y="787.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="390.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (152 samples, 0.56%)</title><rect x="387.5" y="771.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (152 samples, 0.56%)</title><rect x="387.5" y="755.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="390.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (152 samples, 0.56%)</title><rect x="387.5" y="739.0" width="6.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="390.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (152 samples, 0.56%)</title><rect x="387.5" y="723.0" width="6.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (152 samples, 0.56%)</title><rect x="387.5" y="707.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (152 samples, 0.56%)</title><rect x="387.5" y="691.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (152 samples, 0.56%)</title><rect x="387.5" y="675.0" width="6.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (152 samples, 0.56%)</title><rect x="387.5" y="659.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (152 samples, 0.56%)</title><rect x="387.5" y="643.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (152 samples, 0.56%)</title><rect x="387.5" y="627.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="390.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (130 samples, 0.48%)</title><rect x="387.5" y="611.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (127 samples, 0.47%)</title><rect x="387.5" y="595.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (127 samples, 0.47%)</title><rect x="387.5" y="579.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (127 samples, 0.47%)</title><rect x="387.5" y="563.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="390.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (127 samples, 0.47%)</title><rect x="387.5" y="547.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (127 samples, 0.47%)</title><rect x="387.5" y="531.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (127 samples, 0.47%)</title><rect x="387.5" y="515.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (127 samples, 0.47%)</title><rect x="387.5" y="499.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (127 samples, 0.47%)</title><rect x="387.5" y="483.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (127 samples, 0.47%)</title><rect x="387.5" y="467.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (127 samples, 0.47%)</title><rect x="387.5" y="451.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (127 samples, 0.47%)</title><rect x="387.5" y="435.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (127 samples, 0.47%)</title><rect x="387.5" y="419.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (127 samples, 0.47%)</title><rect x="387.5" y="403.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (127 samples, 0.47%)</title><rect x="387.5" y="387.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (127 samples, 0.47%)</title><rect x="387.5" y="371.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="390.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (127 samples, 0.47%)</title><rect x="387.5" y="355.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (127 samples, 0.47%)</title><rect x="387.5" y="339.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="390.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (127 samples, 0.47%)</title><rect x="387.5" y="323.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (127 samples, 0.47%)</title><rect x="387.5" y="307.0" width="5.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (127 samples, 0.47%)</title><rect x="387.5" y="291.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (127 samples, 0.47%)</title><rect x="387.5" y="275.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="390.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (127 samples, 0.47%)</title><rect x="387.5" y="259.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="390.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (127 samples, 0.47%)</title><rect x="387.5" y="243.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="390.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (127 samples, 0.47%)</title><rect x="387.5" y="227.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="390.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (127 samples, 0.47%)</title><rect x="387.5" y="211.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="390.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (127 samples, 0.47%)</title><rect x="387.5" y="195.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (127 samples, 0.47%)</title><rect x="387.5" y="179.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.5" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (34 samples, 0.13%)</title><rect x="387.5" y="163.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="390.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (93 samples, 0.34%)</title><rect x="388.9" y="163.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (93 samples, 0.34%)</title><rect x="388.9" y="147.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (88 samples, 0.33%)</title><rect x="389.2" y="131.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (88 samples, 0.33%)</title><rect x="389.2" y="115.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (88 samples, 0.33%)</title><rect x="389.2" y="99.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (88 samples, 0.33%)</title><rect x="389.2" y="83.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.2" y="94.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (88 samples, 0.33%)</title><rect x="389.2" y="67.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.2" y="78.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (74 samples, 0.27%)</title><rect x="389.2" y="51.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="392.2" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (14 samples, 0.05%)</title><rect x="392.4" y="51.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (14 samples, 0.05%)</title><rect x="392.4" y="35.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="395.4" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (22 samples, 0.08%)</title><rect x="393.1" y="611.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (22 samples, 0.08%)</title><rect x="393.1" y="595.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="396.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (22 samples, 0.08%)</title><rect x="393.1" y="579.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (22 samples, 0.08%)</title><rect x="393.1" y="563.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="396.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (22 samples, 0.08%)</title><rect x="393.1" y="547.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="396.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (22 samples, 0.08%)</title><rect x="393.1" y="531.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (22 samples, 0.08%)</title><rect x="393.1" y="515.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="396.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,068 samples, 37.23%)</title><rect x="394.1" y="867.0" width="439.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.1" y="878.0">jdk/internal/net/http/common/SequentialScheduler$Schedulable..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,068 samples, 37.23%)</title><rect x="394.1" y="851.0" width="439.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="397.1" y="862.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRes..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4,060 samples, 15.01%)</title><rect x="394.1" y="835.0" width="177.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.1" y="846.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (4,060 samples, 15.01%)</title><rect x="394.1" y="819.0" width="177.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="397.1" y="830.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4,060 samples, 15.01%)</title><rect x="394.1" y="803.0" width="177.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.1" y="814.0">jdk/internal/net/http/H..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3,105 samples, 11.48%)</title><rect x="394.1" y="787.0" width="135.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="397.1" y="798.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (3,105 samples, 11.48%)</title><rect x="394.1" y="771.0" width="135.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.1" y="782.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3,105 samples, 11.48%)</title><rect x="394.1" y="755.0" width="135.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.1" y="766.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3,105 samples, 11.48%)</title><rect x="394.1" y="739.0" width="135.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.1" y="750.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3,105 samples, 11.48%)</title><rect x="394.1" y="723.0" width="135.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.1" y="734.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3,105 samples, 11.48%)</title><rect x="394.1" y="707.0" width="135.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.1" y="718.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3,105 samples, 11.48%)</title><rect x="394.1" y="691.0" width="135.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.1" y="702.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3,105 samples, 11.48%)</title><rect x="394.1" y="675.0" width="135.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.1" y="686.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,105 samples, 11.48%)</title><rect x="394.1" y="659.0" width="135.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.1" y="670.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,530 samples, 9.36%)</title><rect x="394.1" y="643.0" width="110.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="397.1" y="654.0">jdk.internal...</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (575 samples, 2.13%)</title><rect x="504.5" y="643.0" width="25.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.5" y="654.0">s..</text>
</g>
<g>
<title>java.lang.Object (575 samples, 2.13%)</title><rect x="504.5" y="627.0" width="25.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="507.5" y="638.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (955 samples, 3.53%)</title><rect x="529.6" y="787.0" width="41.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.6" y="798.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (955 samples, 3.53%)</title><rect x="529.6" y="771.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.6" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (955 samples, 3.53%)</title><rect x="529.6" y="755.0" width="41.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="532.6" y="766.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (955 samples, 3.53%)</title><rect x="529.6" y="739.0" width="41.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="532.6" y="750.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (955 samples, 3.53%)</title><rect x="529.6" y="723.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.6" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (955 samples, 3.53%)</title><rect x="529.6" y="707.0" width="41.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.6" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (955 samples, 3.53%)</title><rect x="529.6" y="691.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="532.6" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (955 samples, 3.53%)</title><rect x="529.6" y="675.0" width="41.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.6" y="686.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (955 samples, 3.53%)</title><rect x="529.6" y="659.0" width="41.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.6" y="670.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (955 samples, 3.53%)</title><rect x="529.6" y="643.0" width="41.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="532.6" y="654.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (955 samples, 3.53%)</title><rect x="529.6" y="627.0" width="41.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.6" y="638.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (955 samples, 3.53%)</title><rect x="529.6" y="611.0" width="41.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.6" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (955 samples, 3.53%)</title><rect x="529.6" y="595.0" width="41.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="532.6" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (170 samples, 0.63%)</title><rect x="529.6" y="579.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="532.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.apply (170 samples, 0.63%)</title><rect x="529.6" y="563.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (170 samples, 0.63%)</title><rect x="529.6" y="547.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (170 samples, 0.63%)</title><rect x="529.6" y="531.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="532.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (170 samples, 0.63%)</title><rect x="529.6" y="515.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (170 samples, 0.63%)</title><rect x="529.6" y="499.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.6" y="510.0"></text>
</g>
<g>
<title>java.lang.Class (170 samples, 0.63%)</title><rect x="529.6" y="483.0" width="7.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="532.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (785 samples, 2.90%)</title><rect x="537.0" y="579.0" width="34.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.0" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (785 samples, 2.90%)</title><rect x="537.0" y="563.0" width="34.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.0" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (785 samples, 2.90%)</title><rect x="537.0" y="547.0" width="34.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="540.0" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (785 samples, 2.90%)</title><rect x="537.0" y="531.0" width="34.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.0" y="542.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (785 samples, 2.90%)</title><rect x="537.0" y="515.0" width="34.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.0" y="526.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (785 samples, 2.90%)</title><rect x="537.0" y="499.0" width="34.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.0" y="510.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (785 samples, 2.90%)</title><rect x="537.0" y="483.0" width="34.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="540.0" y="494.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (6,008 samples, 22.22%)</title><rect x="571.3" y="835.0" width="262.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.3" y="846.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,008 samples, 22.22%)</title><rect x="571.3" y="819.0" width="262.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.3" y="830.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6,008 samples, 22.22%)</title><rect x="571.3" y="803.0" width="262.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.3" y="814.0">jdk/internal/net/http/common/Sequen..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (6,008 samples, 22.22%)</title><rect x="571.3" y="787.0" width="262.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.3" y="798.0">jdk/internal/net/http/Http1AsyncRec..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6,008 samples, 22.22%)</title><rect x="571.3" y="771.0" width="262.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.3" y="782.0">jdk/internal/net/http/Http1AsyncRec..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (5,991 samples, 22.16%)</title><rect x="571.3" y="755.0" width="261.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.3" y="766.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,991 samples, 22.16%)</title><rect x="571.3" y="739.0" width="261.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.3" y="750.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (5,991 samples, 22.16%)</title><rect x="571.3" y="723.0" width="261.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.3" y="734.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (5,991 samples, 22.16%)</title><rect x="571.3" y="707.0" width="261.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.3" y="718.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (5,991 samples, 22.16%)</title><rect x="571.3" y="691.0" width="261.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.3" y="702.0">jdk/internal/net/http/ResponseConte..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (5,991 samples, 22.16%)</title><rect x="571.3" y="675.0" width="261.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.3" y="686.0">jdk/internal/net/http/ResponseConte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (5,991 samples, 22.16%)</title><rect x="571.3" y="659.0" width="261.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.3" y="670.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (5,991 samples, 22.16%)</title><rect x="571.3" y="643.0" width="261.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.3" y="654.0">jdk/internal/net/http/Http1Response..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (5,991 samples, 22.16%)</title><rect x="571.3" y="627.0" width="261.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.3" y="638.0">jdk/internal/net/http/HttpConnectio..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,991 samples, 22.16%)</title><rect x="571.3" y="611.0" width="261.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.3" y="622.0">jdk/internal/net/http/ConnectionPoo..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (5,991 samples, 22.16%)</title><rect x="571.3" y="595.0" width="261.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="574.3" y="606.0">jdk/internal/net/http/ConnectionPoo..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (2,151 samples, 7.95%)</title><rect x="571.3" y="579.0" width="93.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="574.3" y="590.0">jdk.interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3,840 samples, 14.20%)</title><rect x="665.1" y="579.0" width="167.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.1" y="590.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3,840 samples, 14.20%)</title><rect x="665.1" y="563.0" width="167.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="668.1" y="574.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (399 samples, 1.48%)</title><rect x="665.1" y="547.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="668.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (399 samples, 1.48%)</title><rect x="665.1" y="531.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="668.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (399 samples, 1.48%)</title><rect x="665.1" y="515.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (399 samples, 1.48%)</title><rect x="665.1" y="499.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (399 samples, 1.48%)</title><rect x="665.1" y="483.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="668.1" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (280 samples, 1.04%)</title><rect x="665.1" y="467.0" width="12.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="668.1" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (119 samples, 0.44%)</title><rect x="677.3" y="467.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="680.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object (119 samples, 0.44%)</title><rect x="677.3" y="451.0" width="5.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="680.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3,441 samples, 12.73%)</title><rect x="682.5" y="547.0" width="150.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.5" y="558.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3,441 samples, 12.73%)</title><rect x="682.5" y="531.0" width="150.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.5" y="542.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3,441 samples, 12.73%)</title><rect x="682.5" y="515.0" width="150.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.5" y="526.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3,441 samples, 12.73%)</title><rect x="682.5" y="499.0" width="150.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.5" y="510.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3,441 samples, 12.73%)</title><rect x="682.5" y="483.0" width="150.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.5" y="494.0">jdk/internal/net/ht..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,953 samples, 10.92%)</title><rect x="682.5" y="467.0" width="128.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="685.5" y="478.0">jdk.internal.net..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (488 samples, 1.80%)</title><rect x="811.4" y="467.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="814.4" y="478.0">s..</text>
</g>
<g>
<title>java.lang.Object (488 samples, 1.80%)</title><rect x="811.4" y="451.0" width="21.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="814.4" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (17 samples, 0.06%)</title><rect x="832.7" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="835.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (17 samples, 0.06%)</title><rect x="832.7" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.06%)</title><rect x="832.7" y="723.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.06%)</title><rect x="832.7" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (17 samples, 0.06%)</title><rect x="832.7" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.06%)</title><rect x="832.7" y="675.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.06%)</title><rect x="832.7" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.06%)</title><rect x="832.7" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.06%)</title><rect x="832.7" y="627.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (17 samples, 0.06%)</title><rect x="832.7" y="611.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (17 samples, 0.06%)</title><rect x="832.7" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.06%)</title><rect x="832.7" y="579.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.06%)</title><rect x="832.7" y="563.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13 samples, 0.05%)</title><rect x="832.9" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.05%)</title><rect x="832.9" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (13 samples, 0.05%)</title><rect x="832.9" y="515.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (13 samples, 0.05%)</title><rect x="832.9" y="499.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (13 samples, 0.05%)</title><rect x="832.9" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (13 samples, 0.05%)</title><rect x="832.9" y="467.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="835.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (13 samples, 0.05%)</title><rect x="832.9" y="451.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="835.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (74 samples, 0.27%)</title><rect x="833.4" y="915.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.4" y="926.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (74 samples, 0.27%)</title><rect x="833.4" y="899.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.4" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (74 samples, 0.27%)</title><rect x="833.4" y="883.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.4" y="894.0"></text>
</g>
<g>
<title>java.lang.ref.ReferenceQueue$Lock (74 samples, 0.27%)</title><rect x="833.4" y="867.0" width="3.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="836.4" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (37 samples, 0.14%)</title><rect x="836.7" y="915.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="839.7" y="926.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (37 samples, 0.14%)</title><rect x="836.7" y="899.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.7" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (37 samples, 0.14%)</title><rect x="836.7" y="883.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="839.7" y="894.0"></text>
</g>
<g>
<title>java.lang.ref.ReferenceQueue$Lock (37 samples, 0.14%)</title><rect x="836.7" y="867.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="839.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (211 samples, 0.78%)</title><rect x="838.3" y="915.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (211 samples, 0.78%)</title><rect x="838.3" y="899.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (211 samples, 0.78%)</title><rect x="838.3" y="883.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (211 samples, 0.78%)</title><rect x="838.3" y="867.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (211 samples, 0.78%)</title><rect x="838.3" y="851.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (211 samples, 0.78%)</title><rect x="838.3" y="835.0" width="9.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (211 samples, 0.78%)</title><rect x="838.3" y="819.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="841.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (211 samples, 0.78%)</title><rect x="838.3" y="803.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="841.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (211 samples, 0.78%)</title><rect x="838.3" y="787.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="841.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (211 samples, 0.78%)</title><rect x="838.3" y="771.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="841.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (211 samples, 0.78%)</title><rect x="838.3" y="755.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (211 samples, 0.78%)</title><rect x="838.3" y="739.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="841.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (211 samples, 0.78%)</title><rect x="838.3" y="723.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (211 samples, 0.78%)</title><rect x="838.3" y="707.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (211 samples, 0.78%)</title><rect x="838.3" y="691.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (211 samples, 0.78%)</title><rect x="838.3" y="675.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (211 samples, 0.78%)</title><rect x="838.3" y="659.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="841.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (211 samples, 0.78%)</title><rect x="838.3" y="643.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (211 samples, 0.78%)</title><rect x="838.3" y="627.0" width="9.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="841.3" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (211 samples, 0.78%)</title><rect x="838.3" y="611.0" width="9.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="841.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (7,503 samples, 27.75%)</title><rect x="847.5" y="915.0" width="327.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.5" y="926.0">jdk/internal/net/http/HttpClientImpl$Selecto..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (35 samples, 0.13%)</title><rect x="847.5" y="899.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/984556979.accept (35 samples, 0.13%)</title><rect x="847.5" y="883.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (35 samples, 0.13%)</title><rect x="847.5" y="867.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (35 samples, 0.13%)</title><rect x="847.5" y="851.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (35 samples, 0.13%)</title><rect x="847.5" y="835.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (35 samples, 0.13%)</title><rect x="847.5" y="819.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (35 samples, 0.13%)</title><rect x="847.5" y="803.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.13%)</title><rect x="847.5" y="787.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="850.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.13%)</title><rect x="847.5" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (35 samples, 0.13%)</title><rect x="847.5" y="755.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (35 samples, 0.13%)</title><rect x="847.5" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="850.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (35 samples, 0.13%)</title><rect x="847.5" y="723.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (35 samples, 0.13%)</title><rect x="847.5" y="707.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (33 samples, 0.12%)</title><rect x="847.5" y="691.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (33 samples, 0.12%)</title><rect x="847.5" y="675.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (33 samples, 0.12%)</title><rect x="847.5" y="659.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.12%)</title><rect x="847.5" y="643.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="850.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (33 samples, 0.12%)</title><rect x="847.5" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (33 samples, 0.12%)</title><rect x="847.5" y="611.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="850.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (33 samples, 0.12%)</title><rect x="847.5" y="595.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (33 samples, 0.12%)</title><rect x="847.5" y="579.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="850.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (31 samples, 0.11%)</title><rect x="847.5" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (31 samples, 0.11%)</title><rect x="847.5" y="547.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (31 samples, 0.11%)</title><rect x="847.5" y="531.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="850.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (31 samples, 0.11%)</title><rect x="847.5" y="515.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (31 samples, 0.11%)</title><rect x="847.5" y="499.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="850.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (31 samples, 0.11%)</title><rect x="847.5" y="483.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (31 samples, 0.11%)</title><rect x="847.5" y="467.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (31 samples, 0.11%)</title><rect x="847.5" y="451.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="850.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (4,091 samples, 15.13%)</title><rect x="849.0" y="899.0" width="178.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="852.0" y="910.0">jdk.internal.net.http.H..</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (40 samples, 0.15%)</title><rect x="1027.5" y="899.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/1138953262.run (17 samples, 0.06%)</title><rect x="1027.5" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (17 samples, 0.06%)</title><rect x="1027.5" y="867.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1030.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.06%)</title><rect x="1027.5" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1030.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.06%)</title><rect x="1027.5" y="835.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (17 samples, 0.06%)</title><rect x="1027.5" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (17 samples, 0.06%)</title><rect x="1027.5" y="803.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1030.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (17 samples, 0.06%)</title><rect x="1027.5" y="787.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (17 samples, 0.06%)</title><rect x="1027.5" y="771.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (17 samples, 0.06%)</title><rect x="1027.5" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1030.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (17 samples, 0.06%)</title><rect x="1027.5" y="739.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1030.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (17 samples, 0.06%)</title><rect x="1027.5" y="723.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.06%)</title><rect x="1027.5" y="707.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1030.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (17 samples, 0.06%)</title><rect x="1027.5" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.06%)</title><rect x="1027.5" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1030.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.06%)</title><rect x="1027.5" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.06%)</title><rect x="1027.5" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1030.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.05%)</title><rect x="1027.5" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1030.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (13 samples, 0.05%)</title><rect x="1027.5" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (13 samples, 0.05%)</title><rect x="1027.5" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (13 samples, 0.05%)</title><rect x="1027.5" y="579.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1030.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.05%)</title><rect x="1027.5" y="563.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1030.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.05%)</title><rect x="1027.5" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.05%)</title><rect x="1027.5" y="531.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1030.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (13 samples, 0.05%)</title><rect x="1027.5" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1030.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$165/1403403797.run (23 samples, 0.09%)</title><rect x="1028.3" y="883.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (23 samples, 0.09%)</title><rect x="1028.3" y="867.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1031.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.09%)</title><rect x="1028.3" y="851.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (23 samples, 0.09%)</title><rect x="1028.3" y="835.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (23 samples, 0.09%)</title><rect x="1028.3" y="819.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1031.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (22 samples, 0.08%)</title><rect x="1028.3" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1031.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.08%)</title><rect x="1028.3" y="787.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.08%)</title><rect x="1028.3" y="771.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1031.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.08%)</title><rect x="1028.3" y="755.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1031.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.08%)</title><rect x="1028.3" y="739.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1031.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.08%)</title><rect x="1028.3" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.08%)</title><rect x="1028.3" y="707.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1031.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.08%)</title><rect x="1028.3" y="691.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1031.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,326 samples, 4.90%)</title><rect x="1029.3" y="899.0" width="57.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1032.3" y="910.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (1,326 samples, 4.90%)</title><rect x="1029.3" y="883.0" width="57.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1032.3" y="894.0">jdk/in..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (1,326 samples, 4.90%)</title><rect x="1029.3" y="867.0" width="57.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1032.3" y="878.0">jdk.in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1,529 samples, 5.65%)</title><rect x="1087.1" y="899.0" width="66.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.1" y="910.0">jdk/int..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,529 samples, 5.65%)</title><rect x="1087.1" y="883.0" width="66.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1090.1" y="894.0">jdk.int..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (465 samples, 1.72%)</title><rect x="1153.9" y="899.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1156.9" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (465 samples, 1.72%)</title><rect x="1153.9" y="883.0" width="20.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (465 samples, 1.72%)</title><rect x="1153.9" y="867.0" width="20.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1156.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (465 samples, 1.72%)</title><rect x="1153.9" y="851.0" width="20.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1156.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (465 samples, 1.72%)</title><rect x="1153.9" y="835.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.9" y="846.0"></text>
</g>
<g>
<title>java.lang.Object (465 samples, 1.72%)</title><rect x="1153.9" y="819.0" width="20.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1156.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (17 samples, 0.06%)</title><rect x="1174.2" y="899.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (17 samples, 0.06%)</title><rect x="1174.2" y="883.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.2" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (17 samples, 0.06%)</title><rect x="1174.2" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1177.2" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (17 samples, 0.06%)</title><rect x="1174.2" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1177.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (17 samples, 0.06%)</title><rect x="1174.2" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1177.2" y="846.0"></text>
</g>
<g>
<title>java.lang.Object (17 samples, 0.06%)</title><rect x="1174.2" y="819.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1177.2" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (346 samples, 1.28%)</title><rect x="1174.9" y="915.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (346 samples, 1.28%)</title><rect x="1174.9" y="899.0" width="15.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.9" y="910.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (86 samples, 0.32%)</title><rect x="1174.9" y="883.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1177.9" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (260 samples, 0.96%)</title><rect x="1178.7" y="883.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (260 samples, 0.96%)</title><rect x="1178.7" y="867.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1181.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (260 samples, 0.96%)</title><rect x="1178.7" y="851.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (260 samples, 0.96%)</title><rect x="1178.7" y="835.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.7" y="846.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (260 samples, 0.96%)</title><rect x="1178.7" y="819.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1181.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (260 samples, 0.96%)</title><rect x="1178.7" y="803.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1181.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (95 samples, 0.35%)</title><rect x="1178.7" y="787.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1181.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (95 samples, 0.35%)</title><rect x="1178.7" y="771.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (95 samples, 0.35%)</title><rect x="1178.7" y="755.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (95 samples, 0.35%)</title><rect x="1178.7" y="739.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (95 samples, 0.35%)</title><rect x="1178.7" y="723.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (95 samples, 0.35%)</title><rect x="1178.7" y="707.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (95 samples, 0.35%)</title><rect x="1178.7" y="691.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (95 samples, 0.35%)</title><rect x="1178.7" y="675.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1181.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (95 samples, 0.35%)</title><rect x="1178.7" y="659.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (95 samples, 0.35%)</title><rect x="1178.7" y="643.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1181.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (95 samples, 0.35%)</title><rect x="1178.7" y="627.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1181.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 0.35%)</title><rect x="1178.7" y="611.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1181.7" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (95 samples, 0.35%)</title><rect x="1178.7" y="595.0" width="4.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1181.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (165 samples, 0.61%)</title><rect x="1182.8" y="787.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1185.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (36 samples, 0.13%)</title><rect x="1182.8" y="771.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (36 samples, 0.13%)</title><rect x="1182.8" y="755.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 0.13%)</title><rect x="1182.8" y="739.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1185.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 0.13%)</title><rect x="1182.8" y="723.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 0.13%)</title><rect x="1182.8" y="707.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1185.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (36 samples, 0.13%)</title><rect x="1182.8" y="691.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1185.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (36 samples, 0.13%)</title><rect x="1182.8" y="675.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (36 samples, 0.13%)</title><rect x="1182.8" y="659.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (36 samples, 0.13%)</title><rect x="1182.8" y="643.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.05%)</title><rect x="1182.8" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1185.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (14 samples, 0.05%)</title><rect x="1182.8" y="611.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (14 samples, 0.05%)</title><rect x="1182.8" y="595.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1185.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (14 samples, 0.05%)</title><rect x="1182.8" y="579.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1185.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (14 samples, 0.05%)</title><rect x="1182.8" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.05%)</title><rect x="1182.8" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.05%)</title><rect x="1182.8" y="531.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1185.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (14 samples, 0.05%)</title><rect x="1182.8" y="515.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1185.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (22 samples, 0.08%)</title><rect x="1183.4" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1186.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (22 samples, 0.08%)</title><rect x="1183.4" y="611.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1186.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (22 samples, 0.08%)</title><rect x="1183.4" y="595.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (22 samples, 0.08%)</title><rect x="1183.4" y="579.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.08%)</title><rect x="1183.4" y="563.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1186.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (22 samples, 0.08%)</title><rect x="1183.4" y="547.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (22 samples, 0.08%)</title><rect x="1183.4" y="531.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1186.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (129 samples, 0.48%)</title><rect x="1184.4" y="771.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1187.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (129 samples, 0.48%)</title><rect x="1184.4" y="755.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (129 samples, 0.48%)</title><rect x="1184.4" y="739.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1187.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (129 samples, 0.48%)</title><rect x="1184.4" y="723.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (129 samples, 0.48%)</title><rect x="1184.4" y="707.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1187.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (129 samples, 0.48%)</title><rect x="1184.4" y="691.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (129 samples, 0.48%)</title><rect x="1184.4" y="675.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1187.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (129 samples, 0.48%)</title><rect x="1184.4" y="659.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1187.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (129 samples, 0.48%)</title><rect x="1184.4" y="643.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1187.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (129 samples, 0.48%)</title><rect x="1184.4" y="627.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1187.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (129 samples, 0.48%)</title><rect x="1184.4" y="611.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1187.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (129 samples, 0.48%)</title><rect x="1184.4" y="595.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1187.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (129 samples, 0.48%)</title><rect x="1184.4" y="579.0" width="5.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1187.4" y="590.0"></text>
</g>
</g>
</svg>
