<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (2,035 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (15 samples, 0.74%)</title><rect x="10.0" y="1171.0" width="8.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="10.0" y="1155.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="10.0" y="1139.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="10.0" y="1123.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="10.0" y="1107.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (14 samples, 0.69%)</title><rect x="10.6" y="1155.0" width="8.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.6" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (14 samples, 0.69%)</title><rect x="10.6" y="1139.0" width="8.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.6" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (10 samples, 0.49%)</title><rect x="10.6" y="1123.0" width="5.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.6" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (6 samples, 0.29%)</title><rect x="12.9" y="1107.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="15.9" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (6 samples, 0.29%)</title><rect x="12.9" y="1091.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.9" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.29%)</title><rect x="12.9" y="1075.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="15.9" y="1086.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="16.4" y="1123.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="19.4" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="17.5" y="1123.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="20.5" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="17.5" y="1107.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.5" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="17.5" y="1091.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="20.5" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="17.5" y="1075.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="20.5" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="17.5" y="1059.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="20.5" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="17.5" y="1043.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="20.5" y="1054.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.05%)</title><rect x="18.1" y="1123.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="21.1" y="1134.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="18.1" y="1107.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="21.1" y="1118.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.05%)</title><rect x="18.7" y="1171.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.7" y="1182.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.05%)</title><rect x="19.3" y="1171.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="22.3" y="1182.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.05%)</title><rect x="19.3" y="1155.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.29%)</title><rect x="19.9" y="1171.0" width="3.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="22.9" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="19.9" y="1155.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="22.9" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (5 samples, 0.25%)</title><rect x="20.4" y="1155.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.4" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.25%)</title><rect x="20.4" y="1139.0" width="2.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="23.4" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="20.4" y="1123.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="23.4" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.20%)</title><rect x="21.0" y="1123.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.0" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.15%)</title><rect x="21.0" y="1107.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.0" y="1118.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.15%)</title><rect x="21.0" y="1091.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="24.0" y="1102.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.15%)</title><rect x="21.0" y="1075.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.0" y="1086.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.10%)</title><rect x="21.0" y="1059.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="24.0" y="1070.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.10%)</title><rect x="21.0" y="1043.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.0" y="1054.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.10%)</title><rect x="21.0" y="1027.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="24.0" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="21.0" y="1011.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="24.0" y="1022.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.05%)</title><rect x="22.2" y="1059.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="25.2" y="1070.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.05%)</title><rect x="22.2" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.2" y="1054.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="22.8" y="1107.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.8" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (13 samples, 0.64%)</title><rect x="23.3" y="1171.0" width="7.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="26.3" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="23.3" y="1155.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="26.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.54%)</title><rect x="23.9" y="1155.0" width="6.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="26.9" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.54%)</title><rect x="23.9" y="1139.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="26.9" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.54%)</title><rect x="23.9" y="1123.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="26.9" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.49%)</title><rect x="23.9" y="1107.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="26.9" y="1118.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.49%)</title><rect x="23.9" y="1091.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="26.9" y="1102.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.49%)</title><rect x="23.9" y="1075.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="26.9" y="1086.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="23.9" y="1059.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="26.9" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.44%)</title><rect x="24.5" y="1059.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="27.5" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.44%)</title><rect x="24.5" y="1043.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.5" y="1054.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.44%)</title><rect x="24.5" y="1027.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.5" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="29.7" y="1107.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="32.7" y="1118.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="29.7" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.7" y="1102.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="29.7" y="1075.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.7" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="29.7" y="1059.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.7" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="30.3" y="1155.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="33.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,344 samples, 66.04%)</title><rect x="30.9" y="1171.0" width="779.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.9" y="1182.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,344 samples, 66.04%)</title><rect x="30.9" y="1155.0" width="779.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.9" y="1166.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,344 samples, 66.04%)</title><rect x="30.9" y="1139.0" width="779.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.9" y="1150.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (534 samples, 26.24%)</title><rect x="32.0" y="1123.0" width="309.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.0" y="1134.0">java/util/concurrent/CompletableFuture$Asy..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (276 samples, 13.56%)</title><rect x="32.6" y="1107.0" width="160.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="35.6" y="1118.0">java/util/concurrent..</text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="33.8" y="1091.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="36.8" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="34.4" y="1075.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.4" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="34.4" y="1059.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.4" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="34.4" y="1043.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (148 samples, 7.27%)</title><rect x="34.9" y="1091.0" width="85.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="37.9" y="1102.0">java/util/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.apply (148 samples, 7.27%)</title><rect x="34.9" y="1075.0" width="85.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="37.9" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (148 samples, 7.27%)</title><rect x="34.9" y="1059.0" width="85.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.9" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (148 samples, 7.27%)</title><rect x="34.9" y="1043.0" width="85.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.9" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.10%)</title><rect x="35.5" y="1027.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.10%)</title><rect x="35.5" y="1011.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="35.5" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="38.5" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="36.1" y="995.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.1" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="36.1" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.1" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="36.1" y="963.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (117 samples, 5.75%)</title><rect x="36.7" y="1027.0" width="67.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.7" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (117 samples, 5.75%)</title><rect x="36.7" y="1011.0" width="67.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.7" y="1022.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (117 samples, 5.75%)</title><rect x="36.7" y="995.0" width="67.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.7" y="1006.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (69 samples, 3.39%)</title><rect x="36.7" y="979.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.7" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (69 samples, 3.39%)</title><rect x="36.7" y="963.0" width="40.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.7" y="974.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (67 samples, 3.29%)</title><rect x="36.7" y="947.0" width="38.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="958.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.apply (67 samples, 3.29%)</title><rect x="36.7" y="931.0" width="38.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.7" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (67 samples, 3.29%)</title><rect x="36.7" y="915.0" width="38.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.7" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (67 samples, 3.29%)</title><rect x="36.7" y="899.0" width="38.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="39.7" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (67 samples, 3.29%)</title><rect x="36.7" y="883.0" width="38.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.7" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (67 samples, 3.29%)</title><rect x="36.7" y="867.0" width="38.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.7" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (67 samples, 3.29%)</title><rect x="36.7" y="851.0" width="38.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="862.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (56 samples, 2.75%)</title><rect x="38.4" y="835.0" width="32.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.4" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (56 samples, 2.75%)</title><rect x="38.4" y="819.0" width="32.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.4" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.10%)</title><rect x="38.4" y="803.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.4" y="814.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="38.4" y="787.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="41.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (1 samples, 0.05%)</title><rect x="39.0" y="787.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (54 samples, 2.65%)</title><rect x="39.6" y="803.0" width="31.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.6" y="814.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (54 samples, 2.65%)</title><rect x="39.6" y="787.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.6" y="798.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="39.6" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="39.6" y="755.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="39.6" y="739.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="42.6" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="39.6" y="723.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="42.6" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="39.6" y="707.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="42.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="40.2" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="40.2" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="40.2" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="40.2" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.25%)</title><rect x="40.7" y="771.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.25%)</title><rect x="40.7" y="755.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.25%)</title><rect x="40.7" y="739.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="41.9" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.10%)</title><rect x="41.9" y="707.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.10%)</title><rect x="41.9" y="691.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.10%)</title><rect x="41.9" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="44.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.10%)</title><rect x="41.9" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="44.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.05%)</title><rect x="41.9" y="643.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.05%)</title><rect x="41.9" y="627.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="44.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.05%)</title><rect x="41.9" y="611.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.05%)</title><rect x="41.9" y="595.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.05%)</title><rect x="41.9" y="579.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.9" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.05%)</title><rect x="41.9" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.05%)</title><rect x="41.9" y="547.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.9" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="41.9" y="531.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="44.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="41.9" y="515.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.9" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.05%)</title><rect x="41.9" y="499.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.9" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.05%)</title><rect x="41.9" y="483.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.9" y="494.0"></text>
</g>
<g>
<title>writev (1 samples, 0.05%)</title><rect x="41.9" y="467.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="44.9" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="41.9" y="451.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="44.9" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="41.9" y="435.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.05%)</title><rect x="41.9" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="44.9" y="430.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.05%)</title><rect x="41.9" y="403.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="44.9" y="414.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.05%)</title><rect x="41.9" y="387.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="44.9" y="398.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.05%)</title><rect x="41.9" y="371.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="44.9" y="382.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.05%)</title><rect x="41.9" y="355.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="44.9" y="366.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.05%)</title><rect x="41.9" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="44.9" y="350.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="41.9" y="323.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="44.9" y="334.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="41.9" y="307.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.9" y="318.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="42.5" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="42.5" y="627.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="45.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="42.5" y="611.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="45.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="43.1" y="723.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="43.1" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="43.1" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (17 samples, 0.84%)</title><rect x="43.6" y="771.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (17 samples, 0.84%)</title><rect x="43.6" y="755.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.05%)</title><rect x="43.6" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.05%)</title><rect x="43.6" y="723.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="43.6" y="707.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="43.6" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="43.6" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.6" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="43.6" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (16 samples, 0.79%)</title><rect x="44.2" y="739.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (16 samples, 0.79%)</title><rect x="44.2" y="723.0" width="9.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (16 samples, 0.79%)</title><rect x="44.2" y="707.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (16 samples, 0.79%)</title><rect x="44.2" y="691.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.79%)</title><rect x="44.2" y="675.0" width="9.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.2" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.20%)</title><rect x="44.8" y="659.0" width="2.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="47.8" y="670.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.20%)</title><rect x="44.8" y="643.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="47.8" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.10%)</title><rect x="44.8" y="627.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.8" y="638.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="46.0" y="627.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="49.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="46.5" y="611.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="46.5" y="595.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="49.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="46.5" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.54%)</title><rect x="47.1" y="659.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.1" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="47.7" y="643.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="50.7" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="47.7" y="627.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="50.7" y="638.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.05%)</title><rect x="47.7" y="611.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="50.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.39%)</title><rect x="48.3" y="643.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.3" y="654.0"></text>
</g>
<g>
<title>__write (8 samples, 0.39%)</title><rect x="48.3" y="627.0" width="4.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="51.3" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.39%)</title><rect x="48.3" y="611.0" width="4.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.3" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.39%)</title><rect x="48.3" y="595.0" width="4.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_write (8 samples, 0.39%)</title><rect x="48.3" y="579.0" width="4.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.3" y="590.0"></text>
</g>
<g>
<title>ksys_write (8 samples, 0.39%)</title><rect x="48.3" y="563.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="51.3" y="574.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="48.3" y="547.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="51.3" y="558.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="48.3" y="531.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="51.3" y="542.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="48.3" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.3" y="526.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.34%)</title><rect x="48.9" y="547.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.9" y="558.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="48.9" y="531.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.9" y="542.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.29%)</title><rect x="49.4" y="531.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="52.4" y="542.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.29%)</title><rect x="49.4" y="515.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="52.4" y="526.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="49.4" y="499.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="52.4" y="510.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.25%)</title><rect x="50.0" y="499.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.0" y="510.0"></text>
</g>
<g>
<title>__wake_up_sync_key (4 samples, 0.20%)</title><rect x="50.0" y="483.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="53.0" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.20%)</title><rect x="50.0" y="467.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.0" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="50.0" y="451.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="53.0" y="462.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="52.3" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.3" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="52.9" y="643.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="55.9" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="52.9" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="55.9" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="52.9" y="611.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="55.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (30 samples, 1.47%)</title><rect x="53.5" y="771.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.10%)</title><rect x="53.5" y="755.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="56.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.10%)</title><rect x="53.5" y="739.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2 samples, 0.10%)</title><rect x="53.5" y="723.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.5" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.10%)</title><rect x="54.6" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.6" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.10%)</title><rect x="54.6" y="739.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.10%)</title><rect x="55.8" y="755.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="58.8" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.10%)</title><rect x="55.8" y="739.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.8" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.05%)</title><rect x="56.4" y="723.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.4" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="56.4" y="707.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="59.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (15 samples, 0.74%)</title><rect x="57.0" y="755.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (3 samples, 0.15%)</title><rect x="57.0" y="739.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.15%)</title><rect x="57.0" y="723.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.0" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.15%)</title><rect x="57.0" y="707.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.0" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.15%)</title><rect x="57.0" y="691.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="60.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.15%)</title><rect x="57.0" y="675.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.15%)</title><rect x="57.0" y="659.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.0" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.15%)</title><rect x="57.0" y="643.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.15%)</title><rect x="57.0" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="60.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.15%)</title><rect x="57.0" y="611.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.0" y="622.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="58.1" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.1" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="58.1" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="58.1" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="58.1" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="61.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="58.1" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="61.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (5 samples, 0.25%)</title><rect x="58.7" y="739.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.7" y="750.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.05%)</title><rect x="60.4" y="723.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.4" y="734.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.05%)</title><rect x="60.4" y="707.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.4" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/792662632.test (1 samples, 0.05%)</title><rect x="61.0" y="723.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="64.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (7 samples, 0.34%)</title><rect x="61.6" y="739.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.6" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.34%)</title><rect x="61.6" y="723.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.6" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.34%)</title><rect x="61.6" y="707.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.29%)</title><rect x="62.2" y="691.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="65.2" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (3 samples, 0.15%)</title><rect x="63.3" y="675.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.3" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.15%)</title><rect x="63.3" y="659.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.15%)</title><rect x="63.3" y="643.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="66.3" y="654.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="63.3" y="627.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="66.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (2 samples, 0.10%)</title><rect x="63.9" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.9" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.10%)</title><rect x="63.9" y="611.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="64.5" y="595.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="67.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="64.5" y="579.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="64.5" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="67.5" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="65.1" y="675.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="68.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="65.1" y="659.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="68.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="65.1" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="68.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.10%)</title><rect x="65.7" y="755.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.10%)</title><rect x="65.7" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (2 samples, 0.10%)</title><rect x="65.7" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.7" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="66.2" y="707.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.2" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="66.2" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="69.2" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="66.2" y="675.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="69.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.34%)</title><rect x="66.8" y="755.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.15%)</title><rect x="68.6" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="69.1" y="723.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="69.1" y="707.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="69.1" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="70.3" y="739.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="73.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (8 samples, 0.39%)</title><rect x="70.9" y="835.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (8 samples, 0.39%)</title><rect x="70.9" y="819.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.10%)</title><rect x="70.9" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.10%)</title><rect x="70.9" y="787.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.29%)</title><rect x="72.0" y="803.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="75.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.29%)</title><rect x="72.0" y="787.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="72.0" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.25%)</title><rect x="72.6" y="771.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.25%)</title><rect x="72.6" y="755.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="72.6" y="739.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="72.6" y="723.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.15%)</title><rect x="73.2" y="739.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (3 samples, 0.15%)</title><rect x="73.2" y="723.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.15%)</title><rect x="73.2" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.05%)</title><rect x="73.2" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="73.2" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="76.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="73.2" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="73.2" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="76.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.10%)</title><rect x="73.8" y="691.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.10%)</title><rect x="73.8" y="675.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.10%)</title><rect x="73.8" y="659.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="73.8" y="643.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="73.8" y="627.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="74.9" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="74.9" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="74.9" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.10%)</title><rect x="75.5" y="947.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.5" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="76.1" y="931.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="79.1" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="76.1" y="915.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.1" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="76.1" y="899.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="79.1" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="76.1" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="79.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.10%)</title><rect x="76.7" y="979.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.10%)</title><rect x="76.7" y="963.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.10%)</title><rect x="76.7" y="947.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.7" y="958.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="76.7" y="931.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="79.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (46 samples, 2.26%)</title><rect x="77.8" y="979.0" width="26.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.8" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.10%)</title><rect x="78.4" y="963.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.10%)</title><rect x="78.4" y="947.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="79.0" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (43 samples, 2.11%)</title><rect x="79.6" y="963.0" width="24.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.6" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (43 samples, 2.11%)</title><rect x="79.6" y="947.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.6" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (42 samples, 2.06%)</title><rect x="79.6" y="931.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.6" y="942.0">j..</text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.2" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.2" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.2" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.2" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.2" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.05%)</title><rect x="80.7" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.7" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="80.7" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.7" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="80.7" y="883.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.7" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="80.7" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="83.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="81.3" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="84.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (2 samples, 0.10%)</title><rect x="81.9" y="915.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.10%)</title><rect x="81.9" y="899.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.10%)</title><rect x="81.9" y="883.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.9" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="81.9" y="867.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="84.9" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="81.9" y="851.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.9" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="81.9" y="835.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="84.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (11 samples, 0.54%)</title><rect x="83.1" y="915.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="86.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (11 samples, 0.54%)</title><rect x="83.1" y="899.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.1" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.15%)</title><rect x="84.8" y="883.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="87.8" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.15%)</title><rect x="84.8" y="867.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="87.8" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.15%)</title><rect x="84.8" y="851.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="87.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.05%)</title><rect x="86.5" y="883.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.5" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.05%)</title><rect x="86.5" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (3 samples, 0.15%)</title><rect x="87.1" y="883.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.05%)</title><rect x="88.3" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.3" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.05%)</title><rect x="88.3" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.3" y="862.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.05%)</title><rect x="88.3" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.3" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.05%)</title><rect x="88.3" y="819.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.3" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.05%)</title><rect x="88.3" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="88.9" y="883.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.9" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="88.9" y="867.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="91.9" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="88.9" y="851.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (23 samples, 1.13%)</title><rect x="89.4" y="915.0" width="13.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.4" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (23 samples, 1.13%)</title><rect x="89.4" y="899.0" width="13.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.4" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (18 samples, 0.88%)</title><rect x="89.4" y="883.0" width="10.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="92.4" y="894.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.10%)</title><rect x="90.0" y="867.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="93.0" y="878.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.05%)</title><rect x="90.6" y="851.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="93.6" y="862.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.05%)</title><rect x="90.6" y="835.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="93.6" y="846.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="91.2" y="867.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.2" y="878.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="91.8" y="867.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="94.8" y="878.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.10%)</title><rect x="92.3" y="867.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="95.3" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="92.9" y="851.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="92.9" y="835.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="95.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="92.9" y="819.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="95.9" y="830.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.05%)</title><rect x="93.5" y="867.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="96.5" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="94.1" y="867.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="97.1" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="94.1" y="851.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="97.1" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="94.1" y="835.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="97.1" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="94.7" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="97.7" y="878.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.39%)</title><rect x="95.2" y="867.0" width="4.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="98.2" y="878.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.20%)</title><rect x="95.2" y="851.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.2" y="862.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="97.6" y="851.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="100.6" y="862.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.15%)</title><rect x="98.1" y="851.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="101.1" y="862.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.15%)</title><rect x="98.1" y="835.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="101.1" y="846.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.15%)</title><rect x="98.1" y="819.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="101.1" y="830.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.10%)</title><rect x="99.9" y="883.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="102.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1183055826.run (2 samples, 0.10%)</title><rect x="101.0" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.10%)</title><rect x="101.0" y="867.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="878.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.10%)</title><rect x="101.0" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.0" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.10%)</title><rect x="101.0" y="835.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.0" y="846.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.10%)</title><rect x="101.0" y="819.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.0" y="830.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.10%)</title><rect x="101.0" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.0" y="814.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.10%)</title><rect x="101.0" y="787.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.10%)</title><rect x="101.0" y="771.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.10%)</title><rect x="101.0" y="755.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.10%)</title><rect x="101.0" y="739.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.0" y="750.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="101.6" y="723.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="104.6" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="101.6" y="707.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.6" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="101.6" y="691.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="104.6" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="101.6" y="675.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="104.6" y="686.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="101.6" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="104.6" y="670.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="101.6" y="643.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="104.6" y="654.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="101.6" y="627.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="104.6" y="638.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="102.2" y="883.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="105.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.05%)</title><rect x="102.8" y="915.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.8" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="103.4" y="915.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.4" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="103.4" y="899.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="106.4" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="103.4" y="883.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.05%)</title><rect x="103.9" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="103.9" y="915.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="103.9" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (23 samples, 1.13%)</title><rect x="104.5" y="1027.0" width="13.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.5" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="105.1" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="108.1" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="105.1" y="995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="108.1" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="105.1" y="979.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="108.1" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (4 samples, 0.20%)</title><rect x="105.7" y="1011.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.20%)</title><rect x="105.7" y="995.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.05%)</title><rect x="106.8" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.05%)</title><rect x="107.4" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (17 samples, 0.84%)</title><rect x="108.0" y="1011.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (17 samples, 0.84%)</title><rect x="108.0" y="995.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="108.6" y="979.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="111.6" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="108.6" y="963.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="111.6" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="108.6" y="947.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="111.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (15 samples, 0.74%)</title><rect x="109.2" y="979.0" width="8.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.2" y="990.0"></text>
</g>
<g>
<title>__write (15 samples, 0.74%)</title><rect x="109.2" y="963.0" width="8.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="112.2" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.74%)</title><rect x="109.2" y="947.0" width="8.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.74%)</title><rect x="109.2" y="931.0" width="8.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="112.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_write (15 samples, 0.74%)</title><rect x="109.2" y="915.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.2" y="926.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.74%)</title><rect x="109.2" y="899.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="112.2" y="910.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.74%)</title><rect x="109.2" y="883.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.2" y="894.0"></text>
</g>
<g>
<title>__vfs_write (14 samples, 0.69%)</title><rect x="109.2" y="867.0" width="8.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.2" y="878.0"></text>
</g>
<g>
<title>new_sync_write (14 samples, 0.69%)</title><rect x="109.2" y="851.0" width="8.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="112.2" y="862.0"></text>
</g>
<g>
<title>pipe_write (14 samples, 0.69%)</title><rect x="109.2" y="835.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.2" y="846.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.64%)</title><rect x="109.2" y="819.0" width="7.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.2" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.64%)</title><rect x="109.2" y="803.0" width="7.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.2" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.64%)</title><rect x="109.2" y="787.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.2" y="798.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="116.7" y="819.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.7" y="830.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="117.3" y="867.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="120.3" y="878.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="117.3" y="851.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="120.3" y="862.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="117.3" y="835.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="120.3" y="846.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="117.3" y="819.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.3" y="830.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="117.3" y="803.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2 samples, 0.10%)</title><rect x="117.9" y="1027.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.10%)</title><rect x="117.9" y="1011.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (1 samples, 0.05%)</title><rect x="117.9" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.9" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="117.9" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="120.9" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="117.9" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="120.9" y="974.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="117.9" y="947.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="120.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.05%)</title><rect x="118.4" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.4" y="1006.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.05%)</title><rect x="118.4" y="979.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.4" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.05%)</title><rect x="118.4" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.4" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.05%)</title><rect x="118.4" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.4" y="958.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.05%)</title><rect x="118.4" y="931.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="121.4" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="118.4" y="915.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="121.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (3 samples, 0.15%)</title><rect x="119.0" y="1027.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (3 samples, 0.15%)</title><rect x="119.0" y="1011.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.10%)</title><rect x="119.6" y="995.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.6" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.10%)</title><rect x="119.6" y="979.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.6" y="990.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.10%)</title><rect x="119.6" y="963.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="119.6" y="947.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.6" y="958.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="120.2" y="931.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="123.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (124 samples, 6.09%)</title><rect x="120.8" y="1091.0" width="71.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.8" y="1102.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (124 samples, 6.09%)</title><rect x="120.8" y="1075.0" width="71.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.8" y="1086.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.15%)</title><rect x="120.8" y="1059.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="123.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (3 samples, 0.15%)</title><rect x="120.8" y="1043.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (1 samples, 0.05%)</title><rect x="122.5" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (1 samples, 0.05%)</title><rect x="122.5" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.05%)</title><rect x="122.5" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="125.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.05%)</title><rect x="122.5" y="1011.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.05%)</title><rect x="122.5" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (120 samples, 5.90%)</title><rect x="123.1" y="1059.0" width="69.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.1" y="1070.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (120 samples, 5.90%)</title><rect x="123.1" y="1043.0" width="69.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.1" y="1054.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (120 samples, 5.90%)</title><rect x="123.1" y="1027.0" width="69.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.1" y="1038.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.20%)</title><rect x="124.2" y="1011.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.20%)</title><rect x="124.2" y="995.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="127.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.20%)</title><rect x="124.2" y="979.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="127.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="124.8" y="963.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="127.8" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="124.8" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="127.8" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="125.4" y="963.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="128.4" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="126.0" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="129.0" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="126.0" y="947.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="129.0" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="126.0" y="931.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="129.0" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (112 samples, 5.50%)</title><rect x="126.6" y="1011.0" width="64.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.6" y="1022.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="127.1" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.15%)</title><rect x="127.7" y="995.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="130.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (107 samples, 5.26%)</title><rect x="129.4" y="995.0" width="62.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.4" y="1006.0">one/ni..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="129.4" y="979.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="132.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (106 samples, 5.21%)</title><rect x="130.0" y="979.0" width="61.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.0" y="990.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (104 samples, 5.11%)</title><rect x="131.2" y="963.0" width="60.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="134.2" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="131.2" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (103 samples, 5.06%)</title><rect x="131.8" y="947.0" width="59.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.8" y="958.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.15%)</title><rect x="131.8" y="931.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="134.8" y="942.0"></text>
</g>
<g>
<title>send (99 samples, 4.86%)</title><rect x="133.5" y="931.0" width="57.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="136.5" y="942.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 4.82%)</title><rect x="134.1" y="915.0" width="56.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="137.1" y="926.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (98 samples, 4.82%)</title><rect x="134.1" y="899.0" width="56.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="137.1" y="910.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_sendto (98 samples, 4.82%)</title><rect x="134.1" y="883.0" width="56.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="137.1" y="894.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (94 samples, 4.62%)</title><rect x="134.7" y="867.0" width="54.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.7" y="878.0">__sys..</text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="135.8" y="851.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.8" y="862.0"></text>
</g>
<g>
<title>sock_sendmsg (85 samples, 4.18%)</title><rect x="136.4" y="851.0" width="49.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="139.4" y="862.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.10%)</title><rect x="136.4" y="835.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.4" y="846.0"></text>
</g>
<g>
<title>inet6_sendmsg (83 samples, 4.08%)</title><rect x="137.6" y="835.0" width="48.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.6" y="846.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 4.03%)</title><rect x="138.1" y="819.0" width="47.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.1" y="830.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="138.7" y="803.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.7" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="138.7" y="787.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="141.7" y="798.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="139.3" y="803.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="142.3" y="814.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="139.9" y="803.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="142.9" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (77 samples, 3.78%)</title><rect x="140.5" y="803.0" width="44.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="143.5" y="814.0">tcp_..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.05%)</title><rect x="141.6" y="787.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.6" y="798.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="141.6" y="771.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.6" y="782.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.10%)</title><rect x="142.2" y="787.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.2" y="798.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.10%)</title><rect x="142.2" y="771.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="145.2" y="782.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.49%)</title><rect x="143.4" y="787.0" width="5.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="146.4" y="798.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.49%)</title><rect x="143.4" y="771.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="146.4" y="782.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.10%)</title><rect x="143.9" y="755.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.9" y="766.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="143.9" y="739.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="146.9" y="750.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.10%)</title><rect x="143.9" y="723.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="146.9" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.20%)</title><rect x="145.1" y="755.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="148.1" y="766.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.10%)</title><rect x="146.3" y="739.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.3" y="750.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.05%)</title><rect x="147.4" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="150.4" y="766.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="147.4" y="739.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.4" y="750.0"></text>
</g>
<g>
<title>memset (2 samples, 0.10%)</title><rect x="148.0" y="755.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.0" y="766.0"></text>
</g>
<g>
<title>tcp_push (60 samples, 2.95%)</title><rect x="149.2" y="787.0" width="34.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="152.2" y="798.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (59 samples, 2.90%)</title><rect x="149.2" y="771.0" width="34.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="152.2" y="782.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (58 samples, 2.85%)</title><rect x="149.7" y="755.0" width="33.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.7" y="766.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (50 samples, 2.46%)</title><rect x="150.9" y="739.0" width="29.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="153.9" y="750.0">__..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="151.5" y="723.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="154.5" y="734.0"></text>
</g>
<g>
<title>ip_queue_xmit (48 samples, 2.36%)</title><rect x="152.1" y="723.0" width="27.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.1" y="734.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (48 samples, 2.36%)</title><rect x="152.1" y="707.0" width="27.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="155.1" y="718.0">_..</text>
</g>
<g>
<title>ip_local_out (48 samples, 2.36%)</title><rect x="152.1" y="691.0" width="27.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="155.1" y="702.0">i..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.05%)</title><rect x="152.1" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="155.1" y="686.0"></text>
</g>
<g>
<title>ip_output (47 samples, 2.31%)</title><rect x="152.6" y="675.0" width="27.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="155.6" y="686.0">i..</text>
</g>
<g>
<title>ip_finish_output (47 samples, 2.31%)</title><rect x="152.6" y="659.0" width="27.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="155.6" y="670.0">i..</text>
</g>
<g>
<title>__ip_finish_output (47 samples, 2.31%)</title><rect x="152.6" y="643.0" width="27.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="155.6" y="654.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 2.26%)</title><rect x="153.2" y="627.0" width="26.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.2" y="638.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (39 samples, 1.92%)</title><rect x="155.0" y="611.0" width="22.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.0" y="622.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (39 samples, 1.92%)</title><rect x="155.0" y="595.0" width="22.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.0" y="606.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (39 samples, 1.92%)</title><rect x="155.0" y="579.0" width="22.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="158.0" y="590.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 1.87%)</title><rect x="155.0" y="563.0" width="22.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="158.0" y="574.0">_..</text>
</g>
<g>
<title>net_rx_action (37 samples, 1.82%)</title><rect x="155.5" y="547.0" width="21.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.5" y="558.0">n..</text>
</g>
<g>
<title>process_backlog (34 samples, 1.67%)</title><rect x="157.3" y="531.0" width="19.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.3" y="542.0"></text>
</g>
<g>
<title>__netif_receive_skb (33 samples, 1.62%)</title><rect x="157.9" y="515.0" width="19.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.9" y="526.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (33 samples, 1.62%)</title><rect x="157.9" y="499.0" width="19.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="160.9" y="510.0"></text>
</g>
<g>
<title>ip_rcv (33 samples, 1.62%)</title><rect x="157.9" y="483.0" width="19.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="160.9" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish (33 samples, 1.62%)</title><rect x="157.9" y="467.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.9" y="478.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 1.62%)</title><rect x="157.9" y="451.0" width="19.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="160.9" y="462.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (33 samples, 1.62%)</title><rect x="157.9" y="435.0" width="19.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="160.9" y="446.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (33 samples, 1.62%)</title><rect x="157.9" y="419.0" width="19.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="160.9" y="430.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="158.4" y="403.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="161.4" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (31 samples, 1.52%)</title><rect x="159.0" y="403.0" width="18.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="162.0" y="414.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.15%)</title><rect x="160.8" y="387.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="163.8" y="398.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="161.9" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="164.9" y="382.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="162.5" y="387.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.5" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="163.1" y="387.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="166.1" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (22 samples, 1.08%)</title><rect x="163.7" y="387.0" width="12.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="166.7" y="398.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.05%)</title><rect x="164.2" y="371.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.2" y="382.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="164.8" y="371.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.8" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 0.93%)</title><rect x="165.4" y="371.0" width="11.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="168.4" y="382.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (7 samples, 0.34%)</title><rect x="166.0" y="355.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.0" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.25%)</title><rect x="167.1" y="339.0" width="2.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="170.1" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.25%)</title><rect x="167.1" y="323.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="170.1" y="334.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.25%)</title><rect x="167.1" y="307.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="170.1" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.25%)</title><rect x="167.1" y="291.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.1" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="170.0" y="355.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.0" y="366.0"></text>
</g>
<g>
<title>tcp_data_ready (9 samples, 0.44%)</title><rect x="170.6" y="355.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="173.6" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (9 samples, 0.44%)</title><rect x="170.6" y="339.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="173.6" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 0.44%)</title><rect x="170.6" y="323.0" width="5.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="173.6" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.44%)</title><rect x="170.6" y="307.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="173.6" y="318.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.44%)</title><rect x="170.6" y="291.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="173.6" y="302.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="175.8" y="355.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="178.8" y="366.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="175.8" y="339.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="178.8" y="350.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="176.4" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="179.4" y="398.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="177.0" y="563.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="180.0" y="574.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.20%)</title><rect x="177.6" y="611.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="180.6" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.20%)</title><rect x="177.6" y="595.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.6" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.10%)</title><rect x="177.6" y="579.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="180.6" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="177.6" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="180.6" y="574.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="177.6" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="180.6" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="177.6" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="180.6" y="542.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="178.2" y="563.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.2" y="574.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.10%)</title><rect x="178.7" y="579.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="181.7" y="590.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="179.9" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="182.9" y="750.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.10%)</title><rect x="180.5" y="739.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.5" y="750.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.05%)</title><rect x="180.5" y="723.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.5" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="181.1" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="184.1" y="734.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="181.1" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.1" y="718.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="181.1" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="184.1" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="181.1" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.1" y="686.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.05%)</title><rect x="181.6" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.6" y="750.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="182.2" y="739.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="185.2" y="750.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="182.8" y="739.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="185.8" y="750.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="182.8" y="723.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="185.8" y="734.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="183.4" y="771.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="186.4" y="782.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="184.0" y="787.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.0" y="798.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="184.0" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.0" y="782.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.05%)</title><rect x="184.5" y="771.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.5" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="184.5" y="755.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.5" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="185.1" y="803.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="188.1" y="814.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.29%)</title><rect x="185.7" y="851.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="188.7" y="862.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.20%)</title><rect x="186.3" y="835.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="189.3" y="846.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.20%)</title><rect x="186.3" y="819.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="189.3" y="830.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.20%)</title><rect x="186.3" y="803.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="189.3" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="188.6" y="835.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="191.6" y="846.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="189.2" y="867.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="192.2" y="878.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="189.8" y="867.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.8" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="190.3" y="867.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.3" y="878.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.05%)</title><rect x="190.9" y="931.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="193.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.10%)</title><rect x="191.5" y="1011.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="192.1" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="192.1" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.1" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="192.1" y="963.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="195.1" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="192.1" y="947.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.1" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="192.1" y="931.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="195.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$110/1500935830.get (257 samples, 12.63%)</title><rect x="192.7" y="1107.0" width="149.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.7" y="1118.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$put$1 (257 samples, 12.63%)</title><rect x="192.7" y="1091.0" width="149.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.7" y="1102.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.20%)</title><rect x="192.7" y="1075.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.20%)</title><rect x="192.7" y="1059.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.20%)</title><rect x="192.7" y="1043.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.20%)</title><rect x="192.7" y="1027.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.7" y="1038.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.05%)</title><rect x="194.4" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="195.0" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.0" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="195.0" y="1059.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="198.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (252 samples, 12.38%)</title><rect x="195.6" y="1075.0" width="146.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.6" y="1086.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (249 samples, 12.24%)</title><rect x="195.6" y="1059.0" width="144.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.6" y="1070.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (247 samples, 12.14%)</title><rect x="196.7" y="1043.0" width="143.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="199.7" y="1054.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (244 samples, 11.99%)</title><rect x="196.7" y="1027.0" width="141.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="199.7" y="1038.0">Java_org_rocksdb_R..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.05%)</title><rect x="197.3" y="1011.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="200.3" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="197.9" y="1011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="200.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (241 samples, 11.84%)</title><rect x="198.5" y="1011.0" width="139.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="201.5" y="1022.0">rocksdb_put_helpe..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.15%)</title><rect x="198.5" y="995.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="201.5" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="198.5" y="979.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="201.5" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.10%)</title><rect x="199.0" y="979.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="202.0" y="990.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (238 samples, 11.70%)</title><rect x="200.2" y="995.0" width="138.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="203.2" y="1006.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.05%)</title><rect x="200.8" y="979.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="203.8" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (236 samples, 11.60%)</title><rect x="201.4" y="979.0" width="136.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="204.4" y="990.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (234 samples, 11.50%)</title><rect x="201.4" y="963.0" width="135.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="204.4" y="974.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="201.4" y="947.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="204.4" y="958.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.05%)</title><rect x="201.9" y="947.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="204.9" y="958.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.10%)</title><rect x="202.5" y="947.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="205.5" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="203.1" y="931.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="206.1" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="203.1" y="915.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="206.1" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="203.1" y="899.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.05%)</title><rect x="203.7" y="947.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="206.7" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (220 samples, 10.81%)</title><rect x="204.3" y="947.0" width="127.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="207.3" y="958.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.05%)</title><rect x="204.3" y="931.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="207.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (214 samples, 10.52%)</title><rect x="204.8" y="931.0" width="124.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="207.8" y="942.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="210.0" y="915.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="213.0" y="926.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.05%)</title><rect x="210.6" y="915.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="213.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.05%)</title><rect x="211.2" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="214.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.05%)</title><rect x="211.2" y="899.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="214.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (105 samples, 5.16%)</title><rect x="211.8" y="915.0" width="60.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="214.8" y="926.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (103 samples, 5.06%)</title><rect x="212.4" y="899.0" width="59.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="215.4" y="910.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.05%)</title><rect x="212.9" y="883.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="215.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (101 samples, 4.96%)</title><rect x="213.5" y="883.0" width="58.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="216.5" y="894.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (9 samples, 0.44%)</title><rect x="214.1" y="867.0" width="5.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="217.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (90 samples, 4.42%)</title><rect x="219.3" y="867.0" width="52.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="222.3" y="878.0">rocks..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.05%)</title><rect x="219.9" y="851.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="222.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.05%)</title><rect x="220.5" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="223.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (87 samples, 4.28%)</title><rect x="221.1" y="851.0" width="50.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="224.1" y="862.0">rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="225.7" y="835.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="228.7" y="846.0"></text>
</g>
<g>
<title>__write (78 samples, 3.83%)</title><rect x="226.3" y="835.0" width="45.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="229.3" y="846.0">__wr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 3.73%)</title><rect x="226.9" y="819.0" width="44.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.9" y="830.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (76 samples, 3.73%)</title><rect x="226.9" y="803.0" width="44.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="229.9" y="814.0">do_s..</text>
</g>
<g>
<title>__x64_sys_write (73 samples, 3.59%)</title><rect x="228.6" y="787.0" width="42.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="231.6" y="798.0">__x6..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.05%)</title><rect x="229.2" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.2" y="782.0"></text>
</g>
<g>
<title>ksys_write (71 samples, 3.49%)</title><rect x="229.8" y="771.0" width="41.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="232.8" y="782.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.10%)</title><rect x="231.5" y="755.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="234.5" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="232.1" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="235.1" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="232.1" y="723.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="235.1" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.05%)</title><rect x="232.7" y="755.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="235.7" y="766.0"></text>
</g>
<g>
<title>vfs_write (65 samples, 3.19%)</title><rect x="233.2" y="755.0" width="37.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="236.2" y="766.0">vfs..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.05%)</title><rect x="235.0" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="238.0" y="750.0"></text>
</g>
<g>
<title>__vfs_write (59 samples, 2.90%)</title><rect x="235.6" y="739.0" width="34.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="238.6" y="750.0">__..</text>
</g>
<g>
<title>new_sync_write (59 samples, 2.90%)</title><rect x="235.6" y="723.0" width="34.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="238.6" y="734.0">ne..</text>
</g>
<g>
<title>ext4_file_write_iter (57 samples, 2.80%)</title><rect x="236.1" y="707.0" width="33.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="239.1" y="718.0">ex..</text>
</g>
<g>
<title>__generic_file_write_iter (55 samples, 2.70%)</title><rect x="236.7" y="691.0" width="31.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="239.7" y="702.0">__..</text>
</g>
<g>
<title>file_update_time (3 samples, 0.15%)</title><rect x="236.7" y="675.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="239.7" y="686.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.15%)</title><rect x="236.7" y="659.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.7" y="670.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.15%)</title><rect x="236.7" y="643.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="239.7" y="654.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.15%)</title><rect x="236.7" y="627.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.7" y="638.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.05%)</title><rect x="236.7" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.7" y="622.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.05%)</title><rect x="236.7" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="239.7" y="606.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.10%)</title><rect x="237.3" y="611.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="240.3" y="622.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.10%)</title><rect x="237.3" y="595.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.3" y="606.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.10%)</title><rect x="237.3" y="579.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="240.3" y="590.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.05%)</title><rect x="237.9" y="563.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.9" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (49 samples, 2.41%)</title><rect x="238.5" y="675.0" width="28.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.5" y="686.0">ge..</text>
</g>
<g>
<title>ext4_da_write_begin (15 samples, 0.74%)</title><rect x="239.0" y="659.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="242.0" y="670.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (7 samples, 0.34%)</title><rect x="239.6" y="643.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.6" y="654.0"></text>
</g>
<g>
<title>jbd2__journal_start (6 samples, 0.29%)</title><rect x="240.2" y="627.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="243.2" y="638.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.05%)</title><rect x="240.2" y="611.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="243.2" y="622.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="240.8" y="611.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.8" y="622.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.20%)</title><rect x="241.4" y="611.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.4" y="622.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.10%)</title><rect x="242.5" y="595.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="245.5" y="606.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.15%)</title><rect x="243.7" y="643.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="246.7" y="654.0"></text>
</g>
<g>
<title>create_empty_buffers (1 samples, 0.05%)</title><rect x="244.8" y="627.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="247.8" y="638.0"></text>
</g>
<g>
<title>alloc_page_buffers (1 samples, 0.05%)</title><rect x="244.8" y="611.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.8" y="622.0"></text>
</g>
<g>
<title>alloc_buffer_head (1 samples, 0.05%)</title><rect x="244.8" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="247.8" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.05%)</title><rect x="244.8" y="579.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.8" y="590.0"></text>
</g>
<g>
<title>memcg_kmem_get_cache (1 samples, 0.05%)</title><rect x="244.8" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="247.8" y="574.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.05%)</title><rect x="245.4" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.4" y="654.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.10%)</title><rect x="246.0" y="643.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="249.0" y="654.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.10%)</title><rect x="246.0" y="627.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="249.0" y="638.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.10%)</title><rect x="246.0" y="611.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="249.0" y="622.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.05%)</title><rect x="246.6" y="595.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="249.6" y="606.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.05%)</title><rect x="247.2" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="250.2" y="654.0"></text>
</g>
<g>
<title>ext4_da_write_end (28 samples, 1.38%)</title><rect x="247.7" y="659.0" width="16.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.7" y="670.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.10%)</title><rect x="247.7" y="643.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="250.7" y="654.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.10%)</title><rect x="247.7" y="627.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="250.7" y="638.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.10%)</title><rect x="247.7" y="611.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.7" y="622.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="247.7" y="595.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.7" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="247.7" y="579.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="250.7" y="590.0"></text>
</g>
<g>
<title>generic_write_end (26 samples, 1.28%)</title><rect x="248.9" y="643.0" width="15.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="251.9" y="654.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (3 samples, 0.15%)</title><rect x="248.9" y="627.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="251.9" y="638.0"></text>
</g>
<g>
<title>__mark_inode_dirty (22 samples, 1.08%)</title><rect x="250.6" y="627.0" width="12.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.6" y="638.0"></text>
</g>
<g>
<title>ext4_dirty_inode (21 samples, 1.03%)</title><rect x="250.6" y="611.0" width="12.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.6" y="622.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (21 samples, 1.03%)</title><rect x="250.6" y="595.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.6" y="606.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (16 samples, 0.79%)</title><rect x="250.6" y="579.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.05%)</title><rect x="250.6" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="253.6" y="574.0"></text>
</g>
<g>
<title>ext4_do_update_inode (15 samples, 0.74%)</title><rect x="251.2" y="563.0" width="8.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="254.2" y="574.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.05%)</title><rect x="253.0" y="547.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="256.0" y="558.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.05%)</title><rect x="253.0" y="531.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="256.0" y="542.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.05%)</title><rect x="253.5" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="256.5" y="558.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (10 samples, 0.49%)</title><rect x="254.1" y="547.0" width="5.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="257.1" y="558.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.05%)</title><rect x="254.7" y="531.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="257.7" y="542.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (8 samples, 0.39%)</title><rect x="255.3" y="531.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="258.3" y="542.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.15%)</title><rect x="257.6" y="515.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="260.6" y="526.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.05%)</title><rect x="259.3" y="515.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="262.3" y="526.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.05%)</title><rect x="259.3" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="262.3" y="510.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.25%)</title><rect x="259.9" y="579.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="262.9" y="590.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.10%)</title><rect x="260.5" y="563.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.5" y="574.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.05%)</title><rect x="261.1" y="547.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="264.1" y="558.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.05%)</title><rect x="261.1" y="531.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="264.1" y="542.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.05%)</title><rect x="261.1" y="515.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.1" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.05%)</title><rect x="261.7" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.7" y="574.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.05%)</title><rect x="261.7" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="264.7" y="558.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.05%)</title><rect x="261.7" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.7" y="542.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.05%)</title><rect x="262.2" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="265.2" y="574.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.05%)</title><rect x="262.8" y="611.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="265.8" y="622.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.05%)</title><rect x="263.4" y="627.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="266.4" y="638.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.05%)</title><rect x="263.4" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="266.4" y="622.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (5 samples, 0.25%)</title><rect x="264.0" y="659.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.0" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (5 samples, 0.25%)</title><rect x="264.0" y="643.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="267.0" y="654.0"></text>
</g>
<g>
<title>iov_iter_advance (3 samples, 0.15%)</title><rect x="266.9" y="675.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="269.9" y="686.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.05%)</title><rect x="268.6" y="691.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.6" y="702.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.05%)</title><rect x="269.2" y="707.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.2" y="718.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="269.8" y="739.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.8" y="750.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="270.4" y="739.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="273.4" y="750.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.05%)</title><rect x="270.4" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="273.4" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="270.4" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.4" y="718.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="270.4" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="273.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="270.9" y="819.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="273.9" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="270.9" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="273.9" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="270.9" y="787.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="273.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.05%)</title><rect x="271.5" y="867.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="274.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="271.5" y="851.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="274.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="272.1" y="899.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="275.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.05%)</title><rect x="272.7" y="915.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="275.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.05%)</title><rect x="273.3" y="915.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="276.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (2 samples, 0.10%)</title><rect x="273.8" y="915.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="276.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() [clone .plt] (1 samples, 0.05%)</title><rect x="275.0" y="915.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="278.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.05%)</title><rect x="275.6" y="915.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="278.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (64 samples, 3.14%)</title><rect x="276.2" y="915.0" width="37.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="279.2" y="926.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (62 samples, 3.05%)</title><rect x="276.2" y="899.0" width="35.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="279.2" y="910.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.10%)</title><rect x="276.2" y="883.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="279.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (60 samples, 2.95%)</title><rect x="277.3" y="883.0" width="34.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="280.3" y="894.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (56 samples, 2.75%)</title><rect x="277.9" y="867.0" width="32.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="280.9" y="878.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.05%)</title><rect x="277.9" y="851.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="280.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (55 samples, 2.70%)</title><rect x="278.5" y="851.0" width="31.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="281.5" y="862.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="280.2" y="835.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="283.2" y="846.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.05%)</title><rect x="280.2" y="819.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="283.2" y="830.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.05%)</title><rect x="280.2" y="803.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="283.2" y="814.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.05%)</title><rect x="280.2" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="283.2" y="798.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.05%)</title><rect x="280.2" y="771.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="283.2" y="782.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.05%)</title><rect x="280.2" y="755.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="283.2" y="766.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.05%)</title><rect x="280.2" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="283.2" y="750.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.05%)</title><rect x="280.2" y="723.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.2" y="734.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.05%)</title><rect x="280.2" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.2" y="718.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.05%)</title><rect x="280.2" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="283.2" y="702.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.05%)</title><rect x="280.2" y="675.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.05%)</title><rect x="280.8" y="835.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="283.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (50 samples, 2.46%)</title><rect x="281.4" y="835.0" width="29.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="284.4" y="846.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (7 samples, 0.34%)</title><rect x="283.1" y="819.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="286.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.15%)</title><rect x="284.9" y="803.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="287.9" y="814.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.05%)</title><rect x="286.6" y="803.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="289.6" y="814.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (40 samples, 1.97%)</title><rect x="287.2" y="819.0" width="23.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="290.2" y="830.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (35 samples, 1.72%)</title><rect x="288.3" y="803.0" width="20.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="291.3" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (6 samples, 0.29%)</title><rect x="302.2" y="787.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="305.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.20%)</title><rect x="303.4" y="771.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="306.4" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="304.0" y="755.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="307.0" y="766.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="304.6" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="307.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="305.1" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="308.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="305.1" y="739.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="308.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="305.1" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="308.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.25%)</title><rect x="305.7" y="787.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="308.7" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.10%)</title><rect x="307.5" y="771.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="310.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.10%)</title><rect x="308.6" y="803.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="311.6" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="309.8" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="312.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="309.8" y="787.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="309.8" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="312.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (1 samples, 0.05%)</title><rect x="310.4" y="867.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="313.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.10%)</title><rect x="310.9" y="867.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="313.9" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="311.5" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.5" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="311.5" y="835.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.5" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="311.5" y="819.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="314.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="312.1" y="899.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="315.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) [clone .plt] (1 samples, 0.05%)</title><rect x="312.7" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="315.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.05%)</title><rect x="313.3" y="915.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="316.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.05%)</title><rect x="313.3" y="899.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="316.3" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="313.3" y="883.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="316.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="313.3" y="867.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="316.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.05%)</title><rect x="313.3" y="851.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="316.3" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="313.3" y="835.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.3" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="313.3" y="819.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="316.3" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="313.3" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="316.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.05%)</title><rect x="313.8" y="915.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="316.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 0.79%)</title><rect x="314.4" y="915.0" width="9.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="317.4" y="926.0"></text>
</g>
<g>
<title>std::condition_variable::condition_variable() (1 samples, 0.05%)</title><rect x="322.5" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="325.5" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="323.1" y="899.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="326.1" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="323.1" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="326.1" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="323.1" y="867.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="326.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.15%)</title><rect x="323.7" y="915.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="326.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.15%)</title><rect x="323.7" y="899.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="326.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.05%)</title><rect x="325.4" y="915.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="328.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.10%)</title><rect x="326.0" y="915.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="329.0" y="926.0"></text>
</g>
<g>
<title>std::condition_variable::notify_one() (1 samples, 0.05%)</title><rect x="326.0" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="329.0" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="326.0" y="883.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="329.0" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="326.0" y="867.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.0" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="326.0" y="851.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="329.0" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="326.6" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.6" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="326.6" y="883.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="329.6" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="326.6" y="867.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="329.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.05%)</title><rect x="327.2" y="915.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="330.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.05%)</title><rect x="327.2" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="330.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.05%)</title><rect x="327.8" y="915.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="330.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() [clone .plt] (1 samples, 0.05%)</title><rect x="328.3" y="915.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="331.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.05%)</title><rect x="328.9" y="931.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="331.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.05%)</title><rect x="329.5" y="931.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="332.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.05%)</title><rect x="330.1" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="333.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.05%)</title><rect x="330.7" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="333.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.05%)</title><rect x="331.2" y="931.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="334.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.10%)</title><rect x="331.8" y="947.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="334.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.20%)</title><rect x="333.0" y="947.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="336.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (1 samples, 0.05%)</title><rect x="333.6" y="931.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="336.6" y="942.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.10%)</title><rect x="334.1" y="931.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="337.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="335.3" y="947.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="338.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.05%)</title><rect x="335.9" y="947.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="338.9" y="958.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.05%)</title><rect x="336.5" y="947.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="339.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.05%)</title><rect x="337.0" y="963.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="340.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.05%)</title><rect x="337.6" y="963.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="340.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.10%)</title><rect x="338.2" y="1027.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="341.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="338.2" y="1011.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="341.2" y="1022.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.05%)</title><rect x="338.2" y="995.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="341.2" y="1006.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.05%)</title><rect x="338.2" y="979.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="341.2" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="338.8" y="1011.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="341.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="338.8" y="995.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="341.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="338.8" y="979.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="341.8" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="338.8" y="963.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.8" y="974.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.05%)</title><rect x="339.4" y="1027.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="342.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampData (1 samples, 0.05%)</title><rect x="339.9" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="342.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.05%)</title><rect x="339.9" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.9" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="339.9" y="1027.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="342.9" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="339.9" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="342.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (2 samples, 0.10%)</title><rect x="340.5" y="1059.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.5" y="1070.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.05%)</title><rect x="340.5" y="1043.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="343.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.05%)</title><rect x="341.1" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.1" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="341.1" y="1027.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="344.1" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="341.1" y="1011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="344.1" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="341.1" y="995.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="344.1" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="341.1" y="979.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="344.1" y="990.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="341.1" y="963.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="344.1" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="341.1" y="947.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="344.1" y="958.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="341.1" y="931.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="344.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (99 samples, 4.86%)</title><rect x="341.7" y="1123.0" width="57.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.7" y="1134.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (99 samples, 4.86%)</title><rect x="341.7" y="1107.0" width="57.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="1118.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (96 samples, 4.72%)</title><rect x="341.7" y="1091.0" width="55.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="344.7" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (96 samples, 4.72%)</title><rect x="341.7" y="1075.0" width="55.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.7" y="1086.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (96 samples, 4.72%)</title><rect x="341.7" y="1059.0" width="55.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.7" y="1070.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (96 samples, 4.72%)</title><rect x="341.7" y="1043.0" width="55.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="344.7" y="1054.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (1 samples, 0.05%)</title><rect x="341.7" y="1027.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (1 samples, 0.05%)</title><rect x="341.7" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="341.7" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="344.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="341.7" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.05%)</title><rect x="341.7" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="341.7" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="341.7" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.05%)</title><rect x="341.7" y="915.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="341.7" y="899.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="344.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="341.7" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="341.7" y="867.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="344.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="341.7" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="341.7" y="835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="344.7" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="341.7" y="819.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="344.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="341.7" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="344.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="341.7" y="787.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="344.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="341.7" y="771.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="344.7" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="341.7" y="755.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="344.7" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="341.7" y="739.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="344.7" y="750.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="341.7" y="723.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="344.7" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="341.7" y="707.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.7" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="341.7" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="344.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (95 samples, 4.67%)</title><rect x="342.3" y="1027.0" width="55.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="345.3" y="1038.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (95 samples, 4.67%)</title><rect x="342.3" y="1011.0" width="55.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="345.3" y="1022.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (95 samples, 4.67%)</title><rect x="342.3" y="995.0" width="55.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.3" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (94 samples, 4.62%)</title><rect x="342.8" y="979.0" width="54.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.8" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="342.8" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="342.8" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.8" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="342.8" y="931.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="345.8" y="942.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="342.8" y="915.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="345.8" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="342.8" y="899.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="345.8" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="342.8" y="883.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="345.8" y="894.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="342.8" y="867.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="345.8" y="878.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.05%)</title><rect x="342.8" y="851.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="345.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 4.57%)</title><rect x="343.4" y="963.0" width="53.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="346.4" y="974.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 4.57%)</title><rect x="343.4" y="947.0" width="53.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.4" y="958.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (93 samples, 4.57%)</title><rect x="343.4" y="931.0" width="53.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.4" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="343.4" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (92 samples, 4.52%)</title><rect x="344.0" y="915.0" width="53.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="347.0" y="926.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.10%)</title><rect x="344.0" y="899.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="347.0" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="344.0" y="883.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="347.0" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="344.6" y="883.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="347.6" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="344.6" y="867.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="347.6" y="878.0"></text>
</g>
<g>
<title>send (90 samples, 4.42%)</title><rect x="345.2" y="899.0" width="52.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="348.2" y="910.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (90 samples, 4.42%)</title><rect x="345.2" y="883.0" width="52.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="348.2" y="894.0">entry..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="345.2" y="867.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.2" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (89 samples, 4.37%)</title><rect x="345.7" y="867.0" width="51.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="348.7" y="878.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (86 samples, 4.23%)</title><rect x="345.7" y="851.0" width="49.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="348.7" y="862.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (86 samples, 4.23%)</title><rect x="345.7" y="835.0" width="49.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="348.7" y="846.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (85 samples, 4.18%)</title><rect x="345.7" y="819.0" width="49.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="348.7" y="830.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (85 samples, 4.18%)</title><rect x="345.7" y="803.0" width="49.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="348.7" y="814.0">inet6..</text>
</g>
<g>
<title>tcp_sendmsg (85 samples, 4.18%)</title><rect x="345.7" y="787.0" width="49.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="348.7" y="798.0">tcp_s..</text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="345.7" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="348.7" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (84 samples, 4.13%)</title><rect x="346.3" y="771.0" width="48.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="349.3" y="782.0">tcp_..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.10%)</title><rect x="346.9" y="755.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.9" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.10%)</title><rect x="346.9" y="739.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="349.9" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.20%)</title><rect x="348.1" y="755.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="351.1" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.15%)</title><rect x="348.6" y="739.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.6" y="750.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="348.6" y="723.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="351.6" y="734.0"></text>
</g>
<g>
<title>memset (1 samples, 0.05%)</title><rect x="349.2" y="723.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="352.2" y="734.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.05%)</title><rect x="349.8" y="723.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="352.8" y="734.0"></text>
</g>
<g>
<title>tcp_push (75 samples, 3.69%)</title><rect x="350.4" y="755.0" width="43.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.4" y="766.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (75 samples, 3.69%)</title><rect x="350.4" y="739.0" width="43.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="353.4" y="750.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (75 samples, 3.69%)</title><rect x="350.4" y="723.0" width="43.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.4" y="734.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (74 samples, 3.64%)</title><rect x="350.4" y="707.0" width="42.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.4" y="718.0">__tc..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="351.0" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.0" y="702.0"></text>
</g>
<g>
<title>ip_queue_xmit (72 samples, 3.54%)</title><rect x="351.5" y="691.0" width="41.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.5" y="702.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 3.54%)</title><rect x="351.5" y="675.0" width="41.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="354.5" y="686.0">__i..</text>
</g>
<g>
<title>ip_local_out (71 samples, 3.49%)</title><rect x="352.1" y="659.0" width="41.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.1" y="670.0">ip_..</text>
</g>
<g>
<title>ip_output (71 samples, 3.49%)</title><rect x="352.1" y="643.0" width="41.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.1" y="654.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (71 samples, 3.49%)</title><rect x="352.1" y="627.0" width="41.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="355.1" y="638.0">ip_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="352.1" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="355.1" y="622.0"></text>
</g>
<g>
<title>__ip_finish_output (70 samples, 3.44%)</title><rect x="352.7" y="611.0" width="40.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="355.7" y="622.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (70 samples, 3.44%)</title><rect x="352.7" y="595.0" width="40.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="355.7" y="606.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (62 samples, 3.05%)</title><rect x="353.9" y="579.0" width="35.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="356.9" y="590.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (62 samples, 3.05%)</title><rect x="353.9" y="563.0" width="35.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="356.9" y="574.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (62 samples, 3.05%)</title><rect x="353.9" y="547.0" width="35.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="356.9" y="558.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (62 samples, 3.05%)</title><rect x="353.9" y="531.0" width="35.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.9" y="542.0">__s..</text>
</g>
<g>
<title>net_rx_action (60 samples, 2.95%)</title><rect x="354.4" y="515.0" width="34.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="357.4" y="526.0">ne..</text>
</g>
<g>
<title>process_backlog (60 samples, 2.95%)</title><rect x="354.4" y="499.0" width="34.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="357.4" y="510.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (60 samples, 2.95%)</title><rect x="354.4" y="483.0" width="34.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="357.4" y="494.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (60 samples, 2.95%)</title><rect x="354.4" y="467.0" width="34.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="357.4" y="478.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="354.4" y="451.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="357.4" y="462.0"></text>
</g>
<g>
<title>ip_rcv (59 samples, 2.90%)</title><rect x="355.0" y="451.0" width="34.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="358.0" y="462.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="355.0" y="435.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="358.0" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (58 samples, 2.85%)</title><rect x="355.6" y="435.0" width="33.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.6" y="446.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (58 samples, 2.85%)</title><rect x="355.6" y="419.0" width="33.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.6" y="430.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (58 samples, 2.85%)</title><rect x="355.6" y="403.0" width="33.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.6" y="414.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (58 samples, 2.85%)</title><rect x="355.6" y="387.0" width="33.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="358.6" y="398.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (57 samples, 2.80%)</title><rect x="356.2" y="371.0" width="33.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="359.2" y="382.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="356.8" y="355.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="359.8" y="366.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="357.9" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="360.9" y="366.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="357.9" y="339.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (53 samples, 2.60%)</title><rect x="358.5" y="355.0" width="30.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="361.5" y="366.0">tc..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="358.5" y="339.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="361.5" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (52 samples, 2.56%)</title><rect x="359.1" y="339.0" width="30.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.1" y="350.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.15%)</title><rect x="359.1" y="323.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="362.1" y="334.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.15%)</title><rect x="359.1" y="307.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="362.1" y="318.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.15%)</title><rect x="359.1" y="291.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="362.1" y="302.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.05%)</title><rect x="359.1" y="275.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="362.1" y="286.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.10%)</title><rect x="359.7" y="275.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="362.7" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="359.7" y="259.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="362.7" y="270.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.15%)</title><rect x="360.8" y="323.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="363.8" y="334.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.10%)</title><rect x="361.4" y="307.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="364.4" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="362.0" y="291.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.0" y="302.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="362.0" y="275.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.0" y="286.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="362.0" y="259.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="365.0" y="270.0"></text>
</g>
<g>
<title>tcp_data_ready (46 samples, 2.26%)</title><rect x="362.6" y="323.0" width="26.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="365.6" y="334.0">t..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="362.6" y="307.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="365.6" y="318.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 2.21%)</title><rect x="363.1" y="307.0" width="26.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="366.1" y="318.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (45 samples, 2.21%)</title><rect x="363.1" y="291.0" width="26.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="366.1" y="302.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (45 samples, 2.21%)</title><rect x="363.1" y="275.0" width="26.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.1" y="286.0">_..</text>
</g>
<g>
<title>__lock_text_start (45 samples, 2.21%)</title><rect x="363.1" y="259.0" width="26.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.1" y="270.0">_..</text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="389.2" y="515.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="392.2" y="526.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 0.29%)</title><rect x="389.8" y="579.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="392.8" y="590.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.29%)</title><rect x="389.8" y="563.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="392.8" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.20%)</title><rect x="390.4" y="547.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="393.4" y="558.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.15%)</title><rect x="390.4" y="531.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="393.4" y="542.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="390.4" y="515.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="393.4" y="526.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.05%)</title><rect x="391.0" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.0" y="526.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="391.5" y="515.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.5" y="526.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.05%)</title><rect x="392.1" y="531.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.1" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="392.7" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.7" y="558.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.05%)</title><rect x="393.3" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="396.3" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="393.9" y="755.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="396.9" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="393.9" y="739.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.9" y="750.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="394.4" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="397.4" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="395.0" y="819.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="398.0" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="395.0" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="398.0" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.15%)</title><rect x="395.6" y="851.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="398.6" y="862.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.15%)</title><rect x="395.6" y="835.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="398.6" y="846.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.15%)</title><rect x="395.6" y="819.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="398.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="396.2" y="803.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="399.2" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$136/2054529164.apply (3 samples, 0.15%)</title><rect x="397.3" y="1091.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="400.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$proxy$3 (3 samples, 0.15%)</title><rect x="397.3" y="1075.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (13 samples, 0.64%)</title><rect x="399.1" y="1123.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="402.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.64%)</title><rect x="399.1" y="1107.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="402.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.64%)</title><rect x="399.1" y="1091.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="402.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.64%)</title><rect x="399.1" y="1075.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.1" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="401.4" y="1059.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="404.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (2 samples, 0.10%)</title><rect x="402.0" y="1059.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.05%)</title><rect x="403.1" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (3 samples, 0.15%)</title><rect x="403.7" y="1059.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.7" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="404.9" y="1043.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="407.9" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="404.9" y="1027.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="407.9" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="404.9" y="1011.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="405.5" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.5" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="406.0" y="1059.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="409.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="406.0" y="1043.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="409.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="406.0" y="1027.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="409.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (190 samples, 9.34%)</title><rect x="406.6" y="1123.0" width="110.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.6" y="1134.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (127 samples, 6.24%)</title><rect x="407.2" y="1107.0" width="73.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.2" y="1118.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (85 samples, 4.18%)</title><rect x="410.1" y="1091.0" width="49.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.1" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.05%)</title><rect x="410.7" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.7" y="1086.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="410.7" y="1059.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="413.7" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="410.7" y="1043.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="413.7" y="1054.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="410.7" y="1027.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="413.7" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="410.7" y="1011.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="413.7" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="410.7" y="995.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="413.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="410.7" y="979.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="413.7" y="990.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="410.7" y="963.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="413.7" y="974.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="410.7" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="413.7" y="958.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.05%)</title><rect x="410.7" y="931.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="413.7" y="942.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.05%)</title><rect x="410.7" y="915.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="413.7" y="926.0"></text>
</g>
<g>
<title>MasterFreeRegionListMtSafeChecker::check() (1 samples, 0.05%)</title><rect x="410.7" y="899.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="413.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.74%)</title><rect x="411.3" y="1075.0" width="8.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.74%)</title><rect x="411.3" y="1059.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.54%)</title><rect x="412.4" y="1043.0" width="6.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.54%)</title><rect x="412.4" y="1027.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.54%)</title><rect x="412.4" y="1011.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="415.4" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.54%)</title><rect x="412.4" y="995.0" width="6.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="415.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.54%)</title><rect x="412.4" y="979.0" width="6.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.4" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.54%)</title><rect x="412.4" y="963.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.4" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.54%)</title><rect x="412.4" y="947.0" width="6.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="415.4" y="958.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.54%)</title><rect x="412.4" y="931.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.4" y="942.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.54%)</title><rect x="412.4" y="915.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="415.4" y="926.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.44%)</title><rect x="413.6" y="899.0" width="5.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="416.6" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.44%)</title><rect x="413.6" y="883.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.6" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.44%)</title><rect x="413.6" y="867.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.05%)</title><rect x="418.8" y="1043.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.8" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="419.4" y="1043.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.4" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="419.4" y="1027.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="422.4" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="419.4" y="1011.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="422.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (68 samples, 3.34%)</title><rect x="420.0" y="1075.0" width="39.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="423.0" y="1086.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (65 samples, 3.19%)</title><rect x="420.5" y="1059.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.5" y="1070.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (17 samples, 0.84%)</title><rect x="421.1" y="1043.0" width="9.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="424.1" y="1054.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.10%)</title><rect x="421.7" y="1027.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="424.7" y="1038.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.05%)</title><rect x="422.9" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="425.9" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.34%)</title><rect x="423.4" y="1027.0" width="4.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="426.4" y="1038.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="425.8" y="1011.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="428.8" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="426.3" y="1011.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="429.3" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="427.5" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="430.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="428.1" y="1027.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="431.1" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="428.1" y="1011.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="431.1" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="428.1" y="995.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="431.1" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.05%)</title><rect x="428.7" y="1027.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="431.7" y="1038.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="429.2" y="1027.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="432.2" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.05%)</title><rect x="429.8" y="1027.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="432.8" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.05%)</title><rect x="430.4" y="1027.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="433.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 2.21%)</title><rect x="431.0" y="1043.0" width="26.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="434.0" y="1054.0">[..</text>
</g>
<g>
<title>__pthread_cond_wait (43 samples, 2.11%)</title><rect x="431.0" y="1027.0" width="24.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="434.0" y="1038.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.62%)</title><rect x="436.8" y="1011.0" width="19.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="439.8" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 1.62%)</title><rect x="436.8" y="995.0" width="19.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.8" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 1.62%)</title><rect x="436.8" y="979.0" width="19.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="439.8" y="990.0"></text>
</g>
<g>
<title>do_futex (32 samples, 1.57%)</title><rect x="437.4" y="963.0" width="18.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="440.4" y="974.0"></text>
</g>
<g>
<title>futex_wait (32 samples, 1.57%)</title><rect x="437.4" y="947.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="440.4" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (26 samples, 1.28%)</title><rect x="437.9" y="931.0" width="15.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.9" y="942.0"></text>
</g>
<g>
<title>schedule (23 samples, 1.13%)</title><rect x="439.7" y="915.0" width="13.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="442.7" y="926.0"></text>
</g>
<g>
<title>__schedule (23 samples, 1.13%)</title><rect x="439.7" y="899.0" width="13.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.7" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 1.13%)</title><rect x="439.7" y="883.0" width="13.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="442.7" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.15%)</title><rect x="453.0" y="931.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="456.0" y="942.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="454.2" y="915.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="457.2" y="926.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.10%)</title><rect x="454.7" y="931.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="457.7" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="455.9" y="1027.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="458.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="456.5" y="1027.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="459.5" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.10%)</title><rect x="457.1" y="1043.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="460.1" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="458.2" y="1059.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.2" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="458.2" y="1043.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.2" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="458.2" y="1027.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.05%)</title><rect x="459.4" y="1091.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.05%)</title><rect x="459.4" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.05%)</title><rect x="459.4" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="459.4" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="459.4" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="459.4" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="459.4" y="995.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="462.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="459.4" y="979.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="462.4" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="459.4" y="963.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="462.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="459.4" y="947.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="462.4" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="459.4" y="931.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="462.4" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="459.4" y="915.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="462.4" y="926.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="459.4" y="899.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="462.4" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="459.4" y="883.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="462.4" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="459.4" y="867.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="462.4" y="878.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="459.4" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="462.4" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="459.4" y="835.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="462.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (36 samples, 1.77%)</title><rect x="460.0" y="1091.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (36 samples, 1.77%)</title><rect x="460.0" y="1075.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="463.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (36 samples, 1.77%)</title><rect x="460.0" y="1059.0" width="20.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 1.77%)</title><rect x="460.0" y="1043.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 1.77%)</title><rect x="460.0" y="1027.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="463.0" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.34%)</title><rect x="460.0" y="1011.0" width="4.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="463.0" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="460.0" y="995.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="463.0" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="460.5" y="995.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="463.5" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="460.5" y="979.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.5" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="460.5" y="963.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.5" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="460.5" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.5" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="461.1" y="995.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="464.1" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="461.1" y="979.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="464.1" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="461.1" y="963.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="464.1" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="461.1" y="947.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="464.1" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.10%)</title><rect x="461.7" y="995.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="464.7" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="462.9" y="995.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="465.9" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.05%)</title><rect x="463.4" y="995.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="466.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (29 samples, 1.43%)</title><rect x="464.0" y="1011.0" width="16.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="467.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.33%)</title><rect x="465.2" y="995.0" width="15.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="468.2" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="465.2" y="979.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="468.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.28%)</title><rect x="465.8" y="979.0" width="15.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="468.8" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 1.23%)</title><rect x="465.8" y="963.0" width="14.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="468.8" y="974.0"></text>
</g>
<g>
<title>do_futex (25 samples, 1.23%)</title><rect x="465.8" y="947.0" width="14.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="468.8" y="958.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 1.23%)</title><rect x="465.8" y="931.0" width="14.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="468.8" y="942.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 1.23%)</title><rect x="465.8" y="915.0" width="14.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.8" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 1.23%)</title><rect x="465.8" y="899.0" width="14.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="468.8" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 1.18%)</title><rect x="465.8" y="883.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="468.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="479.7" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="482.7" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="480.3" y="963.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.3" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="480.3" y="947.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="483.3" y="958.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="480.3" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="483.3" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="480.3" y="915.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (60 samples, 2.95%)</title><rect x="480.8" y="1107.0" width="34.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.8" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (32 samples, 1.57%)</title><rect x="480.8" y="1091.0" width="18.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="483.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.29%)</title><rect x="480.8" y="1075.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.29%)</title><rect x="480.8" y="1059.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.29%)</title><rect x="480.8" y="1043.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="483.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.25%)</title><rect x="480.8" y="1027.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.25%)</title><rect x="480.8" y="1011.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="483.8" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.25%)</title><rect x="480.8" y="995.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="483.8" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.25%)</title><rect x="480.8" y="979.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="483.8" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.25%)</title><rect x="480.8" y="963.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="483.8" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.25%)</title><rect x="480.8" y="947.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.8" y="958.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.25%)</title><rect x="480.8" y="931.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.8" y="942.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.25%)</title><rect x="480.8" y="915.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="483.8" y="926.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="480.8" y="899.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="483.8" y="910.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.20%)</title><rect x="481.4" y="899.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="484.4" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.20%)</title><rect x="481.4" y="883.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.4" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="481.4" y="867.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="484.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="483.7" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 1.28%)</title><rect x="484.3" y="1075.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 1.28%)</title><rect x="484.3" y="1059.0" width="15.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.3" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.20%)</title><rect x="484.3" y="1043.0" width="2.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="487.3" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="484.3" y="1027.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="487.3" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="484.9" y="1027.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="487.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="485.5" y="1027.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="488.5" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="485.5" y="1011.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="488.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="485.5" y="995.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.5" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="485.5" y="979.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.5" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="485.5" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="488.5" y="974.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="485.5" y="947.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.5" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="486.1" y="1027.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="489.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 1.03%)</title><rect x="486.6" y="1043.0" width="12.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="489.6" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_wait (20 samples, 0.98%)</title><rect x="486.6" y="1027.0" width="11.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="489.6" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.88%)</title><rect x="487.2" y="1011.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="490.2" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.88%)</title><rect x="487.2" y="995.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="490.2" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.88%)</title><rect x="487.2" y="979.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.2" y="990.0"></text>
</g>
<g>
<title>do_futex (18 samples, 0.88%)</title><rect x="487.2" y="963.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="490.2" y="974.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.84%)</title><rect x="487.8" y="947.0" width="9.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.8" y="958.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.74%)</title><rect x="488.4" y="931.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="491.4" y="942.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.74%)</title><rect x="488.4" y="915.0" width="8.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="491.4" y="926.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.59%)</title><rect x="490.1" y="899.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.1" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.59%)</title><rect x="490.1" y="883.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="493.1" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="497.1" y="931.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="500.1" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="497.7" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.7" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="497.7" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="500.7" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="497.7" y="979.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="500.7" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="498.2" y="1027.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="501.2" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.05%)</title><rect x="498.8" y="1043.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="501.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.05%)</title><rect x="499.4" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.05%)</title><rect x="499.4" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.05%)</title><rect x="499.4" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="499.4" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="499.4" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="499.4" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="499.4" y="995.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="502.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="499.4" y="979.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="502.4" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="499.4" y="963.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.4" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="499.4" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.4" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="499.4" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.4" y="942.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="499.4" y="915.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.4" y="926.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="499.4" y="899.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="502.4" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="499.4" y="883.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="502.4" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="499.4" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="502.4" y="878.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="499.4" y="851.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="502.4" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="499.4" y="835.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="502.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (27 samples, 1.33%)</title><rect x="500.0" y="1091.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="503.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (27 samples, 1.33%)</title><rect x="500.0" y="1075.0" width="15.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 1.33%)</title><rect x="500.0" y="1059.0" width="15.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 1.33%)</title><rect x="500.0" y="1043.0" width="15.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.98%)</title><rect x="502.3" y="1027.0" width="11.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.3" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="502.3" y="1011.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="505.3" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.05%)</title><rect x="502.3" y="995.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="505.3" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="502.3" y="979.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="505.3" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="502.3" y="963.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="505.3" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="502.3" y="947.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="505.3" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 0.93%)</title><rect x="502.9" y="1011.0" width="11.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="505.9" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.88%)</title><rect x="503.5" y="995.0" width="10.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="506.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.88%)</title><rect x="503.5" y="979.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.5" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.84%)</title><rect x="503.5" y="963.0" width="9.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="506.5" y="974.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.84%)</title><rect x="503.5" y="947.0" width="9.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="506.5" y="958.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.79%)</title><rect x="503.5" y="931.0" width="9.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="506.5" y="942.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.74%)</title><rect x="504.0" y="915.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="507.0" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.74%)</title><rect x="504.0" y="899.0" width="8.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="507.0" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.74%)</title><rect x="504.0" y="883.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="507.0" y="894.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="512.7" y="931.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="515.7" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="513.3" y="963.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="516.3" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="513.3" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="516.3" y="958.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="513.3" y="931.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.3" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="513.3" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.3" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.15%)</title><rect x="513.9" y="1027.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="516.9" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.15%)</title><rect x="513.9" y="1011.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="516.9" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.15%)</title><rect x="513.9" y="995.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="516.9" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="515.6" y="1107.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="518.6" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="515.6" y="1091.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.6" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="515.6" y="1075.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="518.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (218 samples, 10.71%)</title><rect x="516.8" y="1123.0" width="126.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.8" y="1134.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (218 samples, 10.71%)</title><rect x="516.8" y="1107.0" width="126.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.8" y="1118.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (216 samples, 10.61%)</title><rect x="518.0" y="1091.0" width="125.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.0" y="1102.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (215 samples, 10.57%)</title><rect x="518.5" y="1075.0" width="124.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.5" y="1086.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (215 samples, 10.57%)</title><rect x="518.5" y="1059.0" width="124.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.5" y="1070.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (215 samples, 10.57%)</title><rect x="518.5" y="1043.0" width="124.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.5" y="1054.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (214 samples, 10.52%)</title><rect x="518.5" y="1027.0" width="124.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.5" y="1038.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (214 samples, 10.52%)</title><rect x="518.5" y="1011.0" width="124.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.5" y="1022.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (214 samples, 10.52%)</title><rect x="518.5" y="995.0" width="124.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.5" y="1006.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (213 samples, 10.47%)</title><rect x="519.1" y="979.0" width="123.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.1" y="990.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (213 samples, 10.47%)</title><rect x="519.1" y="963.0" width="123.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.1" y="974.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (26 samples, 1.28%)</title><rect x="519.1" y="947.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (24 samples, 1.18%)</title><rect x="519.7" y="931.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 1.18%)</title><rect x="519.7" y="915.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (22 samples, 1.08%)</title><rect x="519.7" y="899.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (22 samples, 1.08%)</title><rect x="519.7" y="883.0" width="12.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="522.7" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="519.7" y="867.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="522.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (5 samples, 0.25%)</title><rect x="520.3" y="867.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="523.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/2129579493.apply (3 samples, 0.15%)</title><rect x="520.9" y="851.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.15%)</title><rect x="520.9" y="835.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.15%)</title><rect x="520.9" y="819.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.15%)</title><rect x="520.9" y="803.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="521.4" y="787.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="521.4" y="771.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/403338419.get$Lambda (1 samples, 0.05%)</title><rect x="521.4" y="755.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.05%)</title><rect x="521.4" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (1 samples, 0.05%)</title><rect x="522.0" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.05%)</title><rect x="522.0" y="771.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (1 samples, 0.05%)</title><rect x="522.6" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.05%)</title><rect x="522.6" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.05%)</title><rect x="522.6" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.05%)</title><rect x="522.6" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.05%)</title><rect x="522.6" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="522.6" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="525.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (1 samples, 0.05%)</title><rect x="522.6" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.05%)</title><rect x="522.6" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.05%)</title><rect x="522.6" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="525.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="522.6" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="522.6" y="691.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="522.6" y="675.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.05%)</title><rect x="522.6" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="525.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.05%)</title><rect x="522.6" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="525.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (1 samples, 0.05%)</title><rect x="522.6" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.05%)</title><rect x="522.6" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="525.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.05%)</title><rect x="522.6" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="525.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.05%)</title><rect x="522.6" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="525.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.05%)</title><rect x="522.6" y="563.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (1 samples, 0.05%)</title><rect x="522.6" y="547.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="525.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.05%)</title><rect x="522.6" y="531.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="525.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.05%)</title><rect x="522.6" y="515.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="525.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.05%)</title><rect x="522.6" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.6" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.05%)</title><rect x="522.6" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="525.6" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.05%)</title><rect x="522.6" y="467.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="525.6" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="522.6" y="451.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.6" y="462.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="522.6" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="525.6" y="446.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="522.6" y="419.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="525.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.74%)</title><rect x="523.2" y="867.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.64%)</title><rect x="524.3" y="851.0" width="7.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="524.3" y="835.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1550627049.apply (2 samples, 0.10%)</title><rect x="524.3" y="819.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="527.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1550627049.apply (11 samples, 0.54%)</title><rect x="525.5" y="835.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (11 samples, 0.54%)</title><rect x="525.5" y="819.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (11 samples, 0.54%)</title><rect x="525.5" y="803.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.apply (9 samples, 0.44%)</title><rect x="525.5" y="787.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9 samples, 0.44%)</title><rect x="525.5" y="771.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="528.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (9 samples, 0.44%)</title><rect x="525.5" y="755.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (4 samples, 0.20%)</title><rect x="525.5" y="739.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (3 samples, 0.15%)</title><rect x="526.1" y="723.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (3 samples, 0.15%)</title><rect x="526.1" y="707.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$259/982857775.accept (1 samples, 0.05%)</title><rect x="526.1" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.05%)</title><rect x="526.1" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.05%)</title><rect x="526.1" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.05%)</title><rect x="526.1" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="526.1" y="627.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="529.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.05%)</title><rect x="526.1" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="526.1" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.05%)</title><rect x="526.1" y="579.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.&lt;init&gt; (1 samples, 0.05%)</title><rect x="526.1" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="526.1" y="547.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$261/1839865896.accept (2 samples, 0.10%)</title><rect x="526.6" y="691.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="529.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (2 samples, 0.10%)</title><rect x="526.6" y="675.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="529.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (2 samples, 0.10%)</title><rect x="526.6" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (2 samples, 0.10%)</title><rect x="526.6" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (2 samples, 0.10%)</title><rect x="526.6" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="529.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="526.6" y="611.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="526.6" y="595.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="529.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.10%)</title><rect x="526.6" y="579.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.10%)</title><rect x="526.6" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.10%)</title><rect x="526.6" y="547.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (1 samples, 0.05%)</title><rect x="526.6" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="529.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="526.6" y="515.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="526.6" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="526.6" y="483.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="527.2" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="530.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="527.8" y="739.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="530.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="527.8" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="527.8" y="707.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="527.8" y="691.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="527.8" y="675.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (4 samples, 0.20%)</title><rect x="528.4" y="739.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (4 samples, 0.20%)</title><rect x="528.4" y="723.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (4 samples, 0.20%)</title><rect x="528.4" y="707.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.20%)</title><rect x="528.4" y="691.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.20%)</title><rect x="528.4" y="675.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.20%)</title><rect x="528.4" y="659.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.20%)</title><rect x="528.4" y="643.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.20%)</title><rect x="528.4" y="627.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="531.4" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="530.1" y="611.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="530.1" y="595.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="533.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="530.1" y="579.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="533.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (2 samples, 0.10%)</title><rect x="530.7" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.10%)</title><rect x="530.7" y="771.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2 samples, 0.10%)</title><rect x="530.7" y="755.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="530.7" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.10%)</title><rect x="530.7" y="723.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.7" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.10%)</title><rect x="530.7" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.10%)</title><rect x="530.7" y="691.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="531.9" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="534.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.10%)</title><rect x="532.4" y="899.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="535.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.10%)</title><rect x="532.4" y="883.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.10%)</title><rect x="532.4" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.10%)</title><rect x="532.4" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="535.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.10%)</title><rect x="532.4" y="835.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="535.4" y="846.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="532.4" y="819.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="535.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (1 samples, 0.05%)</title><rect x="533.0" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="536.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="533.6" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="536.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="533.6" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="536.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="533.6" y="899.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="533.6" y="883.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="533.6" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="533.6" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="536.6" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="533.6" y="835.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="536.6" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="533.6" y="819.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="536.6" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="533.6" y="803.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.6" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="533.6" y="787.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="536.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.05%)</title><rect x="534.2" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.05%)</title><rect x="534.2" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.05%)</title><rect x="534.2" y="915.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.2" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="534.2" y="899.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.2" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="534.2" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="537.2" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="534.2" y="867.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="537.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (185 samples, 9.09%)</title><rect x="534.8" y="947.0" width="107.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.8" y="958.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (185 samples, 9.09%)</title><rect x="534.8" y="931.0" width="107.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.8" y="942.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (185 samples, 9.09%)</title><rect x="534.8" y="915.0" width="107.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="537.8" y="926.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (182 samples, 8.94%)</title><rect x="535.9" y="899.0" width="105.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.9" y="910.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$264/1541613763.run (2 samples, 0.10%)</title><rect x="536.5" y="883.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="539.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.10%)</title><rect x="536.5" y="867.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="539.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.05%)</title><rect x="536.5" y="851.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.05%)</title><rect x="536.5" y="835.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="536.5" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="539.5" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="537.1" y="851.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="537.1" y="835.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="540.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="537.1" y="819.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (179 samples, 8.80%)</title><rect x="537.7" y="883.0" width="103.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="540.7" y="894.0">jdk/internal..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (175 samples, 8.60%)</title><rect x="537.7" y="867.0" width="101.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.7" y="878.0">java/nio/cha..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (175 samples, 8.60%)</title><rect x="537.7" y="851.0" width="101.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.7" y="862.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (175 samples, 8.60%)</title><rect x="537.7" y="835.0" width="101.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="540.7" y="846.0">sun/nio/ch/I..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (174 samples, 8.55%)</title><rect x="538.2" y="819.0" width="100.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="541.2" y="830.0">sun/nio/ch/I..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.15%)</title><rect x="538.2" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.2" y="814.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.15%)</title><rect x="538.2" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (171 samples, 8.40%)</title><rect x="540.0" y="803.0" width="99.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.0" y="814.0">sun/nio/ch/S..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (169 samples, 8.30%)</title><rect x="541.1" y="787.0" width="98.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.1" y="798.0">sun/nio/ch/..</text>
</g>
<g>
<title>fdval (2 samples, 0.10%)</title><rect x="542.9" y="771.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="545.9" y="782.0"></text>
</g>
<g>
<title>writev (164 samples, 8.06%)</title><rect x="544.0" y="771.0" width="95.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="547.0" y="782.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (161 samples, 7.91%)</title><rect x="545.2" y="755.0" width="93.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="548.2" y="766.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (161 samples, 7.91%)</title><rect x="545.2" y="739.0" width="93.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="548.2" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_writev (161 samples, 7.91%)</title><rect x="545.2" y="723.0" width="93.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="548.2" y="734.0">__x64_sys_w..</text>
</g>
<g>
<title>do_writev (161 samples, 7.91%)</title><rect x="545.2" y="707.0" width="93.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="548.2" y="718.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.15%)</title><rect x="545.8" y="691.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="548.8" y="702.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="545.8" y="675.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="548.8" y="686.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="545.8" y="659.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="548.8" y="670.0"></text>
</g>
<g>
<title>vfs_writev (157 samples, 7.71%)</title><rect x="547.5" y="691.0" width="91.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="550.5" y="702.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (150 samples, 7.37%)</title><rect x="549.3" y="675.0" width="86.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="552.3" y="686.0">do_iter_wr..</text>
</g>
<g>
<title>do_iter_readv_writev (145 samples, 7.13%)</title><rect x="549.3" y="659.0" width="84.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="552.3" y="670.0">do_iter_re..</text>
</g>
<g>
<title>sock_write_iter (144 samples, 7.08%)</title><rect x="549.8" y="643.0" width="83.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="552.8" y="654.0">sock_writ..</text>
</g>
<g>
<title>sock_sendmsg (142 samples, 6.98%)</title><rect x="551.0" y="627.0" width="82.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.0" y="638.0">sock_send..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.15%)</title><rect x="551.6" y="611.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="554.6" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (138 samples, 6.78%)</title><rect x="553.3" y="611.0" width="80.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="556.3" y="622.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (137 samples, 6.73%)</title><rect x="553.9" y="595.0" width="79.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="556.9" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="553.9" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="556.9" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="554.5" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.5" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.10%)</title><rect x="555.1" y="579.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="558.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (132 samples, 6.49%)</title><rect x="556.2" y="579.0" width="76.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="559.2" y="590.0">tcp_send..</text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.44%)</title><rect x="559.1" y="563.0" width="5.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="562.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.44%)</title><rect x="559.1" y="547.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="562.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.15%)</title><rect x="560.3" y="531.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="563.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="560.3" y="515.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="563.3" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.05%)</title><rect x="560.9" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.9" y="510.0"></text>
</g>
<g>
<title>memset (1 samples, 0.05%)</title><rect x="561.4" y="515.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="564.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.20%)</title><rect x="562.0" y="531.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="565.0" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (2 samples, 0.10%)</title><rect x="563.2" y="515.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="566.2" y="526.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.05%)</title><rect x="563.8" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.8" y="510.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.05%)</title><rect x="563.8" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="566.8" y="494.0"></text>
</g>
<g>
<title>allocate_slab (1 samples, 0.05%)</title><rect x="563.8" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="566.8" y="478.0"></text>
</g>
<g>
<title>alloc_slab_page (1 samples, 0.05%)</title><rect x="563.8" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.8" y="462.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.10%)</title><rect x="564.3" y="563.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="567.3" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="565.5" y="563.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.5" y="574.0"></text>
</g>
<g>
<title>tcp_push (113 samples, 5.55%)</title><rect x="566.1" y="563.0" width="65.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.1" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (112 samples, 5.50%)</title><rect x="566.7" y="547.0" width="64.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="569.7" y="558.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (112 samples, 5.50%)</title><rect x="566.7" y="531.0" width="64.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="569.7" y="542.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (106 samples, 5.21%)</title><rect x="566.7" y="515.0" width="61.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.7" y="526.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (105 samples, 5.16%)</title><rect x="567.2" y="499.0" width="60.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.2" y="510.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (105 samples, 5.16%)</title><rect x="567.2" y="483.0" width="60.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="570.2" y="494.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="567.8" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.8" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="567.8" y="451.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.8" y="462.0"></text>
</g>
<g>
<title>ip_local_out (101 samples, 4.96%)</title><rect x="568.4" y="467.0" width="58.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.4" y="478.0">ip_loc..</text>
</g>
<g>
<title>ip_output (101 samples, 4.96%)</title><rect x="568.4" y="451.0" width="58.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.4" y="462.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (101 samples, 4.96%)</title><rect x="568.4" y="435.0" width="58.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="571.4" y="446.0">ip_fin..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="568.4" y="419.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.4" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (100 samples, 4.91%)</title><rect x="569.0" y="419.0" width="58.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="572.0" y="430.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (99 samples, 4.86%)</title><rect x="569.6" y="403.0" width="57.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="572.6" y="414.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (88 samples, 4.32%)</title><rect x="569.6" y="387.0" width="51.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="572.6" y="398.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (87 samples, 4.28%)</title><rect x="570.1" y="371.0" width="50.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.1" y="382.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (86 samples, 4.23%)</title><rect x="570.7" y="355.0" width="49.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="573.7" y="366.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (85 samples, 4.18%)</title><rect x="570.7" y="339.0" width="49.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="573.7" y="350.0">__sof..</text>
</g>
<g>
<title>net_rx_action (83 samples, 4.08%)</title><rect x="571.3" y="323.0" width="48.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="574.3" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (83 samples, 4.08%)</title><rect x="571.3" y="307.0" width="48.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="574.3" y="318.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (83 samples, 4.08%)</title><rect x="571.3" y="291.0" width="48.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="574.3" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (83 samples, 4.08%)</title><rect x="571.3" y="275.0" width="48.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="574.3" y="286.0">__ne..</text>
</g>
<g>
<title>ip_rcv (81 samples, 3.98%)</title><rect x="571.9" y="259.0" width="46.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.9" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="571.9" y="243.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="574.9" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (80 samples, 3.93%)</title><rect x="572.5" y="243.0" width="46.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="575.5" y="254.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (80 samples, 3.93%)</title><rect x="572.5" y="227.0" width="46.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.5" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (79 samples, 3.88%)</title><rect x="573.0" y="211.0" width="45.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.0" y="222.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (78 samples, 3.83%)</title><rect x="573.6" y="195.0" width="45.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="576.6" y="206.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="574.2" y="179.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="577.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (76 samples, 3.73%)</title><rect x="574.8" y="179.0" width="44.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="577.8" y="190.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.34%)</title><rect x="577.1" y="163.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="580.1" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="580.6" y="147.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.6" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="581.2" y="163.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.2" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="581.2" y="147.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.2" y="158.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.05%)</title><rect x="581.7" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="584.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (62 samples, 3.05%)</title><rect x="582.3" y="163.0" width="36.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="585.3" y="174.0">tcp..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.10%)</title><rect x="582.3" y="147.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="585.3" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (60 samples, 2.95%)</title><rect x="583.5" y="147.0" width="34.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="586.5" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.10%)</title><rect x="586.4" y="131.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="589.4" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.10%)</title><rect x="586.4" y="115.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="589.4" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.10%)</title><rect x="586.4" y="99.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="589.4" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.10%)</title><rect x="586.4" y="83.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="589.4" y="94.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="586.4" y="67.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="589.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.49%)</title><rect x="587.5" y="131.0" width="5.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="590.5" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.29%)</title><rect x="589.9" y="115.0" width="3.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="592.9" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.25%)</title><rect x="589.9" y="99.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.9" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.15%)</title><rect x="589.9" y="83.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.9" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="590.4" y="67.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="593.4" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="591.6" y="83.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="594.6" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="591.6" y="67.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="594.6" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="592.2" y="51.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.2" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="592.2" y="35.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="595.2" y="46.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.05%)</title><rect x="592.8" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="595.8" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (40 samples, 1.97%)</title><rect x="593.3" y="131.0" width="23.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.3" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (40 samples, 1.97%)</title><rect x="593.3" y="115.0" width="23.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.3" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (40 samples, 1.97%)</title><rect x="593.3" y="99.0" width="23.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="596.3" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (40 samples, 1.97%)</title><rect x="593.3" y="83.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="596.3" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (40 samples, 1.97%)</title><rect x="593.3" y="67.0" width="23.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="596.3" y="78.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.10%)</title><rect x="616.5" y="131.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="619.5" y="142.0"></text>
</g>
<g>
<title>tcp_grow_window.isra.0 (1 samples, 0.05%)</title><rect x="617.1" y="115.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="620.1" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="617.7" y="131.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.7" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.05%)</title><rect x="617.7" y="115.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="620.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="618.3" y="163.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="621.3" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="618.8" y="259.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="621.8" y="270.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="619.4" y="323.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="622.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="620.0" y="339.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.0" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (11 samples, 0.54%)</title><rect x="620.6" y="387.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.54%)</title><rect x="620.6" y="371.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="623.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.34%)</title><rect x="621.7" y="355.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.10%)</title><rect x="624.1" y="339.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="627.1" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.10%)</title><rect x="624.1" y="323.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.1" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.10%)</title><rect x="624.1" y="307.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.1" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.10%)</title><rect x="624.1" y="291.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="627.1" y="302.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="625.2" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="628.2" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="625.8" y="355.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="628.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="626.4" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="629.4" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.10%)</title><rect x="627.0" y="467.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.0" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="628.1" y="515.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.1" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.10%)</title><rect x="628.7" y="515.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="631.7" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="629.3" y="499.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.3" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="629.3" y="483.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="632.3" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="629.3" y="467.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="632.3" y="478.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.05%)</title><rect x="629.9" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="632.9" y="526.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="630.4" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.4" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.05%)</title><rect x="631.0" y="515.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.0" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="631.0" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="634.0" y="510.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="631.0" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.0" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="631.0" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="634.0" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.10%)</title><rect x="631.6" y="563.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="634.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="631.6" y="547.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="634.6" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="632.8" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="635.8" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.25%)</title><rect x="633.3" y="659.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="636.3" y="670.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.25%)</title><rect x="633.3" y="643.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.3" y="654.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.20%)</title><rect x="633.3" y="627.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="636.3" y="638.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.20%)</title><rect x="633.3" y="611.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="636.3" y="622.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.15%)</title><rect x="633.9" y="595.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="636.9" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="635.7" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="638.7" y="638.0"></text>
</g>
<g>
<title>import_iovec (4 samples, 0.20%)</title><rect x="636.2" y="675.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.2" y="686.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (3 samples, 0.15%)</title><rect x="636.8" y="659.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="639.8" y="670.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.10%)</title><rect x="637.4" y="643.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="640.4" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="638.6" y="755.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="641.6" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="638.6" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="641.6" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="638.6" y="723.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.6" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.20%)</title><rect x="639.1" y="867.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.1" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="640.9" y="851.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="640.9" y="835.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="640.9" y="819.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="643.9" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="641.5" y="899.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.5" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="641.5" y="883.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="644.5" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="641.5" y="867.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.5" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="642.0" y="947.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="645.0" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="642.0" y="931.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="645.0" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="642.0" y="915.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="642.6" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="645.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (288 samples, 14.15%)</title><rect x="643.2" y="1123.0" width="167.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.2" y="1134.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (288 samples, 14.15%)</title><rect x="643.2" y="1107.0" width="167.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="646.2" y="1118.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="643.2" y="1091.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="643.2" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="646.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (126 samples, 6.19%)</title><rect x="643.8" y="1091.0" width="73.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.8" y="1102.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (125 samples, 6.14%)</title><rect x="644.4" y="1075.0" width="72.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.4" y="1086.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (124 samples, 6.09%)</title><rect x="644.9" y="1059.0" width="71.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.9" y="1070.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.05%)</title><rect x="644.9" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="647.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.05%)</title><rect x="644.9" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (21 samples, 1.03%)</title><rect x="645.5" y="1043.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (21 samples, 1.03%)</title><rect x="645.5" y="1027.0" width="12.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="648.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (21 samples, 1.03%)</title><rect x="645.5" y="1011.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (21 samples, 1.03%)</title><rect x="645.5" y="995.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.98%)</title><rect x="645.5" y="979.0" width="11.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (20 samples, 0.98%)</title><rect x="645.5" y="963.0" width="11.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (18 samples, 0.88%)</title><rect x="645.5" y="947.0" width="10.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (17 samples, 0.84%)</title><rect x="645.5" y="931.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.84%)</title><rect x="645.5" y="915.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.5" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (15 samples, 0.74%)</title><rect x="646.7" y="899.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (14 samples, 0.69%)</title><rect x="647.3" y="883.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="650.3" y="894.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="647.3" y="867.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="650.3" y="878.0"></text>
</g>
<g>
<title>__write (13 samples, 0.64%)</title><rect x="647.8" y="867.0" width="7.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="650.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.64%)</title><rect x="647.8" y="851.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="650.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.64%)</title><rect x="647.8" y="835.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="650.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.59%)</title><rect x="648.4" y="819.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.4" y="830.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.59%)</title><rect x="648.4" y="803.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="651.4" y="814.0"></text>
</g>
<g>
<title>vfs_write (12 samples, 0.59%)</title><rect x="648.4" y="787.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.4" y="798.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.54%)</title><rect x="648.4" y="771.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.4" y="782.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.54%)</title><rect x="648.4" y="755.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="651.4" y="766.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.54%)</title><rect x="648.4" y="739.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="651.4" y="750.0"></text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 0.49%)</title><rect x="648.4" y="723.0" width="5.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="651.4" y="734.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.49%)</title><rect x="648.4" y="707.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.4" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.49%)</title><rect x="648.4" y="691.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="651.4" y="702.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="654.2" y="723.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.2" y="734.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="654.8" y="771.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="657.8" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="655.4" y="931.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="658.4" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="655.4" y="915.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="658.4" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="655.4" y="899.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.10%)</title><rect x="656.0" y="947.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="659.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.10%)</title><rect x="656.0" y="931.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.0" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="656.0" y="915.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.0" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="656.0" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.0" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.10%)</title><rect x="656.0" y="883.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.0" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.10%)</title><rect x="656.0" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.0" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.10%)</title><rect x="656.0" y="851.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.05%)</title><rect x="657.1" y="979.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.05%)</title><rect x="657.1" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.1" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="657.1" y="947.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="660.1" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="657.1" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.1" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="657.1" y="915.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="660.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (102 samples, 5.01%)</title><rect x="657.7" y="1043.0" width="59.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.7" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (102 samples, 5.01%)</title><rect x="657.7" y="1027.0" width="59.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.7" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (102 samples, 5.01%)</title><rect x="657.7" y="1011.0" width="59.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.7" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (102 samples, 5.01%)</title><rect x="657.7" y="995.0" width="59.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.7" y="1006.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (78 samples, 3.83%)</title><rect x="657.7" y="979.0" width="45.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.7" y="990.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 3.83%)</title><rect x="657.7" y="963.0" width="45.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.7" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (77 samples, 3.78%)</title><rect x="657.7" y="947.0" width="44.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.7" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (73 samples, 3.59%)</title><rect x="657.7" y="931.0" width="42.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.7" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="657.7" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (72 samples, 3.54%)</title><rect x="658.3" y="915.0" width="41.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.3" y="926.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (70 samples, 3.44%)</title><rect x="658.3" y="899.0" width="40.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="661.3" y="910.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (70 samples, 3.44%)</title><rect x="658.3" y="883.0" width="40.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="661.3" y="894.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (68 samples, 3.34%)</title><rect x="658.3" y="867.0" width="39.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.3" y="878.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (66 samples, 3.24%)</title><rect x="658.9" y="851.0" width="38.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.9" y="862.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (52 samples, 2.56%)</title><rect x="658.9" y="835.0" width="30.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="661.9" y="846.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="658.9" y="819.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="661.9" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="658.9" y="803.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="661.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="658.9" y="787.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="658.9" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="661.9" y="782.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/1857815974.apply (1 samples, 0.05%)</title><rect x="659.4" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.4" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="659.4" y="803.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="659.4" y="787.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="659.4" y="771.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (31 samples, 1.52%)</title><rect x="660.0" y="819.0" width="18.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (29 samples, 1.43%)</title><rect x="660.6" y="803.0" width="16.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="663.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.05%)</title><rect x="660.6" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="663.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.05%)</title><rect x="660.6" y="771.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (28 samples, 1.38%)</title><rect x="661.2" y="787.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="661.8" y="771.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.05%)</title><rect x="661.8" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="664.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (26 samples, 1.28%)</title><rect x="662.3" y="771.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="665.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (26 samples, 1.28%)</title><rect x="662.3" y="755.0" width="15.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="665.3" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (8 samples, 0.39%)</title><rect x="662.3" y="739.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.10%)</title><rect x="662.3" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="665.3" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="662.3" y="707.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="662.3" y="691.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="662.3" y="675.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="665.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.10%)</title><rect x="662.3" y="659.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="662.3" y="643.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="662.3" y="627.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.3" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="662.3" y="611.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.getChar (1 samples, 0.05%)</title><rect x="662.9" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="665.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="662.9" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="662.9" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="662.9" y="547.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="665.9" y="558.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (6 samples, 0.29%)</title><rect x="663.5" y="723.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.25%)</title><rect x="664.1" y="707.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.1" y="718.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="664.1" y="691.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="667.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.20%)</title><rect x="664.7" y="691.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="667.7" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.10%)</title><rect x="665.2" y="675.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="668.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.05%)</title><rect x="665.2" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="668.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.05%)</title><rect x="665.2" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="668.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.05%)</title><rect x="665.2" y="627.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="668.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.05%)</title><rect x="665.8" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="668.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.05%)</title><rect x="666.4" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.4" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (1 samples, 0.05%)</title><rect x="666.4" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.4" y="670.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (1 samples, 0.05%)</title><rect x="666.4" y="643.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="669.4" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="666.4" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="669.4" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="666.4" y="611.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="669.4" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="666.4" y="595.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="669.4" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="666.4" y="579.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="669.4" y="590.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="666.4" y="563.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="669.4" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="666.4" y="547.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="669.4" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="666.4" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.4" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="666.4" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="669.4" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="666.4" y="499.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="669.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 0.88%)</title><rect x="667.0" y="739.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="667.0" y="723.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="667.0" y="707.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="667.0" y="691.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="667.0" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="667.0" y="659.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.0" y="670.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="667.0" y="643.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="670.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (17 samples, 0.84%)</title><rect x="667.6" y="723.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="670.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (17 samples, 0.84%)</title><rect x="667.6" y="707.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.05%)</title><rect x="667.6" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="670.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.05%)</title><rect x="667.6" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="670.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.05%)</title><rect x="667.6" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="667.6" y="643.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="670.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="667.6" y="627.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="670.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="667.6" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (12 samples, 0.59%)</title><rect x="668.1" y="691.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (12 samples, 0.59%)</title><rect x="668.1" y="675.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="671.1" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (4 samples, 0.20%)</title><rect x="668.7" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="671.7" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.20%)</title><rect x="668.7" y="643.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="671.7" y="654.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (4 samples, 0.20%)</title><rect x="668.7" y="627.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.7" y="638.0"></text>
</g>
<g>
<title>JVM_IHashCode (4 samples, 0.20%)</title><rect x="668.7" y="611.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="671.7" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.10%)</title><rect x="669.3" y="595.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="672.3" y="606.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.05%)</title><rect x="669.3" y="579.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="672.3" y="590.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="669.9" y="579.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="672.9" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="670.5" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="673.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.34%)</title><rect x="671.0" y="659.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.34%)</title><rect x="671.0" y="643.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="674.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 0.34%)</title><rect x="671.0" y="627.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.29%)</title><rect x="671.6" y="611.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="674.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$287/731272226.accept (5 samples, 0.25%)</title><rect x="672.2" y="595.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (5 samples, 0.25%)</title><rect x="672.2" y="579.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (5 samples, 0.25%)</title><rect x="672.2" y="563.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="675.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.05%)</title><rect x="675.1" y="691.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="678.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.05%)</title><rect x="675.1" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (3 samples, 0.15%)</title><rect x="675.7" y="691.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.7" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.05%)</title><rect x="676.3" y="675.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="679.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="676.8" y="675.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="679.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="676.8" y="659.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="679.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="676.8" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="679.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="677.4" y="803.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="680.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="677.4" y="787.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="677.4" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="680.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (19 samples, 0.93%)</title><rect x="678.0" y="819.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="681.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (18 samples, 0.88%)</title><rect x="678.0" y="803.0" width="10.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (17 samples, 0.84%)</title><rect x="678.6" y="787.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (7 samples, 0.34%)</title><rect x="683.8" y="771.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.34%)</title><rect x="683.8" y="755.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.8" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.34%)</title><rect x="683.8" y="739.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.8" y="750.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.eq (1 samples, 0.05%)</title><rect x="683.8" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.8" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (3 samples, 0.15%)</title><rect x="684.4" y="723.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.4" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (3 samples, 0.15%)</title><rect x="684.4" y="707.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.4" y="718.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (3 samples, 0.15%)</title><rect x="684.4" y="691.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="687.4" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (3 samples, 0.15%)</title><rect x="684.4" y="675.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.4" y="686.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.15%)</title><rect x="686.1" y="723.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.15%)</title><rect x="686.1" y="707.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.1" y="718.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="686.1" y="691.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="689.1" y="702.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.10%)</title><rect x="686.7" y="691.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="689.7" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="686.7" y="675.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="689.7" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="686.7" y="659.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="686.7" y="643.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="689.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="686.7" y="627.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="689.7" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="687.3" y="675.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="690.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="687.8" y="771.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="690.8" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="687.8" y="755.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.8" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="687.8" y="739.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="690.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="688.4" y="803.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="691.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="688.4" y="787.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="691.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="688.4" y="771.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="691.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 0.49%)</title><rect x="689.0" y="835.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="692.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.49%)</title><rect x="689.0" y="819.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="689.0" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="689.0" y="787.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (9 samples, 0.44%)</title><rect x="689.6" y="803.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (9 samples, 0.44%)</title><rect x="689.6" y="787.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="692.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (9 samples, 0.44%)</title><rect x="689.6" y="771.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (9 samples, 0.44%)</title><rect x="689.6" y="755.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="692.6" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.15%)</title><rect x="689.6" y="739.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="692.6" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.15%)</title><rect x="689.6" y="723.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="692.6" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.10%)</title><rect x="689.6" y="707.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="692.6" y="718.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="690.7" y="707.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="693.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (6 samples, 0.29%)</title><rect x="691.3" y="739.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.15%)</title><rect x="693.1" y="723.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.05%)</title><rect x="693.1" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.05%)</title><rect x="693.1" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="693.6" y="707.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="694.2" y="691.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="697.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (3 samples, 0.15%)</title><rect x="694.8" y="835.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.10%)</title><rect x="695.4" y="819.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.10%)</title><rect x="695.4" y="803.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="696.0" y="787.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="699.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="696.0" y="771.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="699.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="696.0" y="755.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="699.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/403338419.apply (1 samples, 0.05%)</title><rect x="696.5" y="835.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.5" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="696.5" y="819.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="699.5" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="696.5" y="803.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="699.5" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="696.5" y="787.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="699.5" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="697.1" y="851.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="700.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="697.1" y="835.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="700.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="697.1" y="819.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="700.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/403338419.apply (2 samples, 0.10%)</title><rect x="697.7" y="867.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.10%)</title><rect x="697.7" y="851.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.10%)</title><rect x="697.7" y="835.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="700.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.10%)</title><rect x="697.7" y="819.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="697.7" y="803.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="700.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="697.7" y="787.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="700.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.10%)</title><rect x="698.9" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.05%)</title><rect x="698.9" y="883.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="701.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="698.9" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="698.9" y="851.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="698.9" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="701.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="699.4" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="699.4" y="867.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="699.4" y="851.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="702.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="699.4" y="835.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.05%)</title><rect x="699.4" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.4" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="699.4" y="803.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="702.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="699.4" y="787.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="702.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="699.4" y="771.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="702.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (4 samples, 0.20%)</title><rect x="700.0" y="931.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.20%)</title><rect x="700.0" y="915.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="703.0" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="700.0" y="899.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="703.0" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="700.6" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="703.6" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="700.6" y="867.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="703.6" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="700.6" y="851.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="703.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.10%)</title><rect x="701.2" y="899.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.2" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="702.3" y="947.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.3" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="702.3" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="705.3" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="702.3" y="915.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (23 samples, 1.13%)</title><rect x="702.9" y="979.0" width="13.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.9" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.05%)</title><rect x="703.5" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.05%)</title><rect x="704.1" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.05%)</title><rect x="704.1" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (4 samples, 0.20%)</title><rect x="704.7" y="963.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.20%)</title><rect x="704.7" y="947.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.7" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.20%)</title><rect x="704.7" y="931.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.7" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="706.4" y="915.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.4" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="706.4" y="899.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="709.4" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="706.4" y="883.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.49%)</title><rect x="707.0" y="963.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.0" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.49%)</title><rect x="707.0" y="947.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.0" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.49%)</title><rect x="707.0" y="931.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.0" y="942.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="708.7" y="915.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="711.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.29%)</title><rect x="709.3" y="915.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.3" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (6 samples, 0.29%)</title><rect x="709.3" y="899.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.3" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.29%)</title><rect x="709.3" y="883.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="712.3" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.05%)</title><rect x="709.9" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.9" y="878.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="709.9" y="851.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="712.9" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="709.9" y="835.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.9" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="709.9" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.9" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="709.9" y="803.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="712.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.20%)</title><rect x="710.5" y="867.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.15%)</title><rect x="711.0" y="851.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.15%)</title><rect x="711.0" y="835.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="714.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.15%)</title><rect x="711.0" y="819.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="711.6" y="803.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="714.6" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="711.6" y="787.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="714.6" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="711.6" y="771.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="714.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (6 samples, 0.29%)</title><rect x="712.8" y="963.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="715.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (6 samples, 0.29%)</title><rect x="712.8" y="947.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.15%)</title><rect x="712.8" y="931.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.10%)</title><rect x="713.4" y="915.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.05%)</title><rect x="714.5" y="931.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="714.5" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.5" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.10%)</title><rect x="715.1" y="931.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.1" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="715.1" y="915.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="715.1" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.1" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="715.1" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.1" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="715.7" y="915.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="718.7" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="715.7" y="899.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.7" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="715.7" y="883.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="718.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/952689076.accept (1 samples, 0.05%)</title><rect x="716.3" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.05%)</title><rect x="716.3" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (161 samples, 7.91%)</title><rect x="716.8" y="1091.0" width="93.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.8" y="1102.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (161 samples, 7.91%)</title><rect x="716.8" y="1075.0" width="93.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="1086.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (160 samples, 7.86%)</title><rect x="716.8" y="1059.0" width="92.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.8" y="1070.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (160 samples, 7.86%)</title><rect x="716.8" y="1043.0" width="92.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.8" y="1054.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (160 samples, 7.86%)</title><rect x="716.8" y="1027.0" width="92.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.8" y="1038.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (155 samples, 7.62%)</title><rect x="716.8" y="1011.0" width="89.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.8" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (154 samples, 7.57%)</title><rect x="716.8" y="995.0" width="89.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.8" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (154 samples, 7.57%)</title><rect x="716.8" y="979.0" width="89.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.8" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (94 samples, 4.62%)</title><rect x="716.8" y="963.0" width="54.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.8" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (94 samples, 4.62%)</title><rect x="716.8" y="947.0" width="54.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.8" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (94 samples, 4.62%)</title><rect x="716.8" y="931.0" width="54.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="942.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.29%)</title><rect x="716.8" y="915.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="719.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.20%)</title><rect x="716.8" y="899.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="719.8" y="910.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.20%)</title><rect x="716.8" y="883.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.8" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.20%)</title><rect x="716.8" y="867.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.8" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.20%)</title><rect x="716.8" y="851.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.8" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.20%)</title><rect x="716.8" y="835.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="718.6" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="718.6" y="803.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="718.6" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="721.6" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="719.2" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="719.2" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.05%)</title><rect x="719.2" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.2" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="719.2" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="722.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="719.2" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="722.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="719.2" y="819.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.2" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.05%)</title><rect x="719.7" y="899.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.05%)</title><rect x="719.7" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.7" y="894.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (1 samples, 0.05%)</title><rect x="719.7" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.7" y="878.0"></text>
</g>
<g>
<title>java/util/Optional.map (3 samples, 0.15%)</title><rect x="720.3" y="915.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="723.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$$Lambda$294/1576289685.apply (3 samples, 0.15%)</title><rect x="720.3" y="899.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.lambda$closeOrReturnToCache$2 (3 samples, 0.15%)</title><rect x="720.3" y="883.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="723.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.15%)</title><rect x="720.3" y="867.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="723.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.15%)</title><rect x="720.3" y="851.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.3" y="862.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.10%)</title><rect x="720.3" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="723.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.05%)</title><rect x="721.5" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (84 samples, 4.13%)</title><rect x="722.1" y="915.0" width="48.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="725.1" y="926.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.15%)</title><rect x="722.1" y="899.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.1" y="910.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.15%)</title><rect x="722.1" y="883.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="722.6" y="867.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="725.6" y="878.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="722.6" y="851.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="725.6" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="723.2" y="835.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="726.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (81 samples, 3.98%)</title><rect x="723.8" y="899.0" width="47.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="726.8" y="910.0">jdk/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.25%)</title><rect x="725.5" y="883.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="728.5" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.25%)</title><rect x="725.5" y="867.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="728.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.20%)</title><rect x="725.5" y="851.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="728.5" y="862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="727.9" y="851.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="730.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (38 samples, 1.87%)</title><rect x="728.4" y="883.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.4" y="894.0">j..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.20%)</title><rect x="748.2" y="867.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="751.2" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.20%)</title><rect x="748.2" y="851.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="751.2" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.20%)</title><rect x="748.2" y="835.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="751.2" y="846.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="749.9" y="819.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="752.9" y="830.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="749.9" y="803.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="752.9" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="749.9" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="752.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (1 samples, 0.05%)</title><rect x="750.5" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.5" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="750.5" y="867.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.5" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="750.5" y="851.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="753.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="750.5" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (34 samples, 1.67%)</title><rect x="751.1" y="883.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (34 samples, 1.67%)</title><rect x="751.1" y="867.0" width="19.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.05%)</title><rect x="751.1" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.05%)</title><rect x="751.1" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="754.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="751.1" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="751.1" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="751.1" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="751.1" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (33 samples, 1.62%)</title><rect x="751.6" y="851.0" width="19.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="754.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (33 samples, 1.62%)</title><rect x="751.6" y="835.0" width="19.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="754.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (30 samples, 1.47%)</title><rect x="751.6" y="819.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (30 samples, 1.47%)</title><rect x="751.6" y="803.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (30 samples, 1.47%)</title><rect x="751.6" y="787.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.6" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="751.6" y="771.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="754.6" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="751.6" y="755.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="754.6" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="751.6" y="739.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="754.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (28 samples, 1.38%)</title><rect x="752.2" y="771.0" width="16.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="755.2" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="754.0" y="755.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="757.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="754.0" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="757.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="754.0" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="757.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (24 samples, 1.18%)</title><rect x="754.5" y="755.0" width="13.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.5" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="754.5" y="739.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="757.5" y="750.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (2 samples, 0.10%)</title><rect x="755.1" y="739.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="758.1" y="750.0"></text>
</g>
<g>
<title>__write (21 samples, 1.03%)</title><rect x="756.3" y="739.0" width="12.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="759.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.03%)</title><rect x="756.3" y="723.0" width="12.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="759.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.03%)</title><rect x="756.3" y="707.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="759.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (21 samples, 1.03%)</title><rect x="756.3" y="691.0" width="12.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.3" y="702.0"></text>
</g>
<g>
<title>ksys_write (21 samples, 1.03%)</title><rect x="756.3" y="675.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="759.3" y="686.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.15%)</title><rect x="756.3" y="659.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="759.3" y="670.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="756.3" y="643.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="759.3" y="654.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="756.3" y="627.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="759.3" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="758.0" y="659.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="761.0" y="670.0"></text>
</g>
<g>
<title>vfs_write (17 samples, 0.84%)</title><rect x="758.6" y="659.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="761.6" y="670.0"></text>
</g>
<g>
<title>__vfs_write (17 samples, 0.84%)</title><rect x="758.6" y="643.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.6" y="654.0"></text>
</g>
<g>
<title>new_sync_write (17 samples, 0.84%)</title><rect x="758.6" y="627.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="761.6" y="638.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.05%)</title><rect x="759.2" y="611.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="762.2" y="622.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.74%)</title><rect x="759.7" y="611.0" width="8.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="762.7" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 0.74%)</title><rect x="759.7" y="595.0" width="8.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="762.7" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 0.74%)</title><rect x="759.7" y="579.0" width="8.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="762.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.74%)</title><rect x="759.7" y="563.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="762.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="768.4" y="771.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="771.4" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="768.4" y="755.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="771.4" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="768.4" y="739.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="771.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.15%)</title><rect x="769.0" y="819.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="770.2" y="803.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.2" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="770.2" y="787.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="773.2" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="770.2" y="771.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="773.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.05%)</title><rect x="770.8" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="773.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.05%)</title><rect x="770.8" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1373007332.accept (2 samples, 0.10%)</title><rect x="771.3" y="963.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (2 samples, 0.10%)</title><rect x="771.3" y="947.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="774.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (2 samples, 0.10%)</title><rect x="771.3" y="931.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.10%)</title><rect x="771.3" y="915.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.10%)</title><rect x="771.3" y="899.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="774.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.05%)</title><rect x="771.9" y="883.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="771.9" y="867.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="774.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$287/731272226.accept (1 samples, 0.05%)</title><rect x="771.9" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="774.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (1 samples, 0.05%)</title><rect x="771.9" y="835.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (1 samples, 0.05%)</title><rect x="771.9" y="819.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.9" y="830.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.05%)</title><rect x="771.9" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (56 samples, 2.75%)</title><rect x="772.5" y="963.0" width="32.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.5" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (56 samples, 2.75%)</title><rect x="772.5" y="947.0" width="32.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.5" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (56 samples, 2.75%)</title><rect x="772.5" y="931.0" width="32.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.5" y="942.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (56 samples, 2.75%)</title><rect x="772.5" y="915.0" width="32.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.5" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (56 samples, 2.75%)</title><rect x="772.5" y="899.0" width="32.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="775.5" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (56 samples, 2.75%)</title><rect x="772.5" y="883.0" width="32.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.5" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (56 samples, 2.75%)</title><rect x="772.5" y="867.0" width="32.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.5" y="878.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="772.5" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="772.5" y="835.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="775.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1864376279.accept (55 samples, 2.70%)</title><rect x="773.1" y="851.0" width="31.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="776.1" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (54 samples, 2.65%)</title><rect x="773.7" y="835.0" width="31.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.7" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (54 samples, 2.65%)</title><rect x="773.7" y="819.0" width="31.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="776.7" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (54 samples, 2.65%)</title><rect x="773.7" y="803.0" width="31.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.7" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.05%)</title><rect x="773.7" y="787.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$293/843397805.apply (1 samples, 0.05%)</title><rect x="773.7" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (1 samples, 0.05%)</title><rect x="773.7" y="755.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="773.7" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="776.7" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="773.7" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="776.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="773.7" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="776.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (52 samples, 2.56%)</title><rect x="774.2" y="787.0" width="30.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="777.2" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (52 samples, 2.56%)</title><rect x="774.2" y="771.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.2" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (51 samples, 2.51%)</title><rect x="774.2" y="755.0" width="29.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="777.2" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (50 samples, 2.46%)</title><rect x="774.2" y="739.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="777.2" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (50 samples, 2.46%)</title><rect x="774.2" y="723.0" width="29.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.2" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (50 samples, 2.46%)</title><rect x="774.2" y="707.0" width="29.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.2" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (50 samples, 2.46%)</title><rect x="774.2" y="691.0" width="29.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.2" y="702.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (50 samples, 2.46%)</title><rect x="774.2" y="675.0" width="29.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.2" y="686.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 2.41%)</title><rect x="774.2" y="659.0" width="28.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.2" y="670.0">jd..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="774.2" y="643.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="777.2" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.15%)</title><rect x="774.8" y="643.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="777.8" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.05%)</title><rect x="776.0" y="627.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="779.0" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (45 samples, 2.21%)</title><rect x="776.6" y="643.0" width="26.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="779.6" y="654.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 2.16%)</title><rect x="777.1" y="627.0" width="25.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="780.1" y="638.0">e..</text>
</g>
<g>
<title>do_syscall_64 (44 samples, 2.16%)</title><rect x="777.1" y="611.0" width="25.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="780.1" y="622.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 2.11%)</title><rect x="777.1" y="595.0" width="25.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="780.1" y="606.0">_..</text>
</g>
<g>
<title>do_futex (43 samples, 2.11%)</title><rect x="777.1" y="579.0" width="25.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.1" y="590.0">d..</text>
</g>
<g>
<title>futex_wake (43 samples, 2.11%)</title><rect x="777.1" y="563.0" width="25.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="780.1" y="574.0">f..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="778.9" y="547.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="781.9" y="558.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.05%)</title><rect x="779.5" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.5" y="558.0"></text>
</g>
<g>
<title>wake_up_q (38 samples, 1.87%)</title><rect x="780.0" y="547.0" width="22.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="783.0" y="558.0">w..</text>
</g>
<g>
<title>try_to_wake_up (38 samples, 1.87%)</title><rect x="780.0" y="531.0" width="22.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="783.0" y="542.0">t..</text>
</g>
<g>
<title>__lock_text_start (38 samples, 1.87%)</title><rect x="780.0" y="515.0" width="22.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.0" y="526.0">_..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="802.1" y="595.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="805.1" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="802.1" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="805.1" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="802.1" y="563.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="805.1" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="802.1" y="547.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="805.1" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="802.7" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="805.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="802.7" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="805.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="802.7" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="805.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/478252441.accept (1 samples, 0.05%)</title><rect x="803.2" y="739.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/478252441.accept (1 samples, 0.05%)</title><rect x="803.8" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.05%)</title><rect x="803.8" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.05%)</title><rect x="803.8" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.05%)</title><rect x="803.8" y="707.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.8" y="718.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="804.4" y="787.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="807.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.10%)</title><rect x="805.0" y="963.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.10%)</title><rect x="805.0" y="947.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="808.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.10%)</title><rect x="805.0" y="931.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="805.0" y="915.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="808.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="805.0" y="899.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.05%)</title><rect x="806.1" y="995.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.05%)</title><rect x="806.1" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="806.1" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="809.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="806.1" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.25%)</title><rect x="806.7" y="1011.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3 samples, 0.15%)</title><rect x="807.9" y="995.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3 samples, 0.15%)</title><rect x="807.9" y="979.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="810.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3 samples, 0.15%)</title><rect x="807.9" y="963.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.15%)</title><rect x="807.9" y="947.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.15%)</title><rect x="807.9" y="931.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.15%)</title><rect x="807.9" y="915.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.15%)</title><rect x="807.9" y="899.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.15%)</title><rect x="807.9" y="883.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3 samples, 0.15%)</title><rect x="807.9" y="867.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="810.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.15%)</title><rect x="807.9" y="851.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.10%)</title><rect x="807.9" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.10%)</title><rect x="807.9" y="819.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2 samples, 0.10%)</title><rect x="807.9" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (2 samples, 0.10%)</title><rect x="807.9" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.10%)</title><rect x="807.9" y="771.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.10%)</title><rect x="807.9" y="755.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.10%)</title><rect x="807.9" y="739.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="810.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.10%)</title><rect x="807.9" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.10%)</title><rect x="807.9" y="707.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="807.9" y="691.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="807.9" y="675.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="807.9" y="659.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="807.9" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="807.9" y="627.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.9" y="638.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="807.9" y="611.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="810.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (1 samples, 0.05%)</title><rect x="808.5" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.05%)</title><rect x="808.5" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="811.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.05%)</title><rect x="808.5" y="659.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="808.5" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="811.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="808.5" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="811.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="808.5" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="811.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/403338419.apply (1 samples, 0.05%)</title><rect x="809.0" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="812.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.05%)</title><rect x="809.0" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="809.0" y="803.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="809.0" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="809.0" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="812.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="809.0" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="812.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="809.6" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (77 samples, 3.78%)</title><rect x="810.2" y="1171.0" width="44.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.2" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (77 samples, 3.78%)</title><rect x="810.2" y="1155.0" width="44.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.2" y="1166.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (22 samples, 1.08%)</title><rect x="811.4" y="1139.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (20 samples, 0.98%)</title><rect x="811.4" y="1123.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (17 samples, 0.84%)</title><rect x="813.1" y="1107.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="816.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (17 samples, 0.84%)</title><rect x="813.1" y="1091.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="816.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (17 samples, 0.84%)</title><rect x="813.1" y="1075.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="816.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15 samples, 0.74%)</title><rect x="813.1" y="1059.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.74%)</title><rect x="813.1" y="1043.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="816.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.74%)</title><rect x="813.1" y="1027.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="816.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.69%)</title><rect x="813.7" y="1011.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.69%)</title><rect x="813.7" y="995.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="816.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.69%)</title><rect x="813.7" y="979.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="816.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="813.7" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="816.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="813.7" y="947.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="813.7" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="816.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="813.7" y="915.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="816.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="813.7" y="899.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="813.7" y="883.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="816.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="813.7" y="867.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="816.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="813.7" y="851.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="816.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="813.7" y="835.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="816.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="813.7" y="819.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="816.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.64%)</title><rect x="814.3" y="963.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.64%)</title><rect x="814.3" y="947.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="817.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.64%)</title><rect x="814.3" y="931.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="817.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.59%)</title><rect x="814.8" y="915.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.59%)</title><rect x="814.8" y="899.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="817.8" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="814.8" y="883.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="817.8" y="894.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="814.8" y="867.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="817.8" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.54%)</title><rect x="815.4" y="883.0" width="6.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="818.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.54%)</title><rect x="815.4" y="867.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="818.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.54%)</title><rect x="815.4" y="851.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="818.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.54%)</title><rect x="815.4" y="835.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="818.4" y="846.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.54%)</title><rect x="815.4" y="819.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.4" y="830.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.54%)</title><rect x="815.4" y="803.0" width="6.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="818.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.54%)</title><rect x="815.4" y="787.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="818.4" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.54%)</title><rect x="815.4" y="771.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="818.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.54%)</title><rect x="815.4" y="755.0" width="6.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="821.8" y="1059.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.10%)</title><rect x="823.0" y="1123.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="823.0" y="1107.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="826.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.10%)</title><rect x="823.0" y="1091.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="823.0" y="1075.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="826.0" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="823.0" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="826.0" y="1070.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="823.5" y="1059.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="826.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.59%)</title><rect x="824.1" y="1139.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="827.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1 samples, 0.05%)</title><rect x="824.7" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="827.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.49%)</title><rect x="825.3" y="1123.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="828.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.10%)</title><rect x="825.3" y="1107.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="828.3" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="825.3" y="1091.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="828.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="825.9" y="1091.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="828.9" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="825.9" y="1075.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.9" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="825.9" y="1059.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="828.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.39%)</title><rect x="826.4" y="1107.0" width="4.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="829.4" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.34%)</title><rect x="826.4" y="1091.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="829.4" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.29%)</title><rect x="827.0" y="1075.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="830.0" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.29%)</title><rect x="827.0" y="1059.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.0" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.25%)</title><rect x="827.6" y="1043.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="830.6" y="1054.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.25%)</title><rect x="827.6" y="1027.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="830.6" y="1038.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.25%)</title><rect x="827.6" y="1011.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.6" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.20%)</title><rect x="827.6" y="995.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="830.6" y="1006.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.20%)</title><rect x="827.6" y="979.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="830.6" y="990.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.20%)</title><rect x="827.6" y="963.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.6" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.20%)</title><rect x="827.6" y="947.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="830.6" y="958.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.05%)</title><rect x="829.9" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="832.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.05%)</title><rect x="830.5" y="1091.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="833.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (40 samples, 1.97%)</title><rect x="831.1" y="1139.0" width="23.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.1" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (38 samples, 1.87%)</title><rect x="832.2" y="1123.0" width="22.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.2" y="1134.0">j..</text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.44%)</title><rect x="833.4" y="1107.0" width="5.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="836.4" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.15%)</title><rect x="834.0" y="1091.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="837.0" y="1102.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.10%)</title><rect x="834.6" y="1075.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="837.6" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="835.1" y="1059.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="838.1" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="835.1" y="1043.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="838.1" y="1054.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="835.7" y="1091.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="838.7" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.15%)</title><rect x="836.3" y="1091.0" width="1.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="839.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.15%)</title><rect x="836.3" y="1075.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="839.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.15%)</title><rect x="836.3" y="1059.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="839.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="836.9" y="1043.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="839.9" y="1054.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="836.9" y="1027.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.9" y="1038.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="836.9" y="1011.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.9" y="1022.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="837.4" y="995.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="840.4" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.05%)</title><rect x="838.0" y="1091.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="841.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.33%)</title><rect x="838.6" y="1107.0" width="15.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="841.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.05%)</title><rect x="838.6" y="1091.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="841.6" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="838.6" y="1075.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="841.6" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="838.6" y="1059.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="841.6" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="838.6" y="1043.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="841.6" y="1054.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.05%)</title><rect x="839.2" y="1091.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="842.2" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="839.2" y="1075.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="842.2" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="839.2" y="1059.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.2" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="839.2" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="842.2" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (25 samples, 1.23%)</title><rect x="839.8" y="1091.0" width="14.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="842.8" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.08%)</title><rect x="841.5" y="1075.0" width="12.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="844.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.08%)</title><rect x="841.5" y="1059.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="844.5" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 1.08%)</title><rect x="841.5" y="1043.0" width="12.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="844.5" y="1054.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.98%)</title><rect x="841.5" y="1027.0" width="11.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="844.5" y="1038.0"></text>
</g>
<g>
<title>futex_wait (19 samples, 0.93%)</title><rect x="842.1" y="1011.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="845.1" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.88%)</title><rect x="842.1" y="995.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="845.1" y="1006.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (2 samples, 0.10%)</title><rect x="842.7" y="979.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="845.7" y="990.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.10%)</title><rect x="842.7" y="963.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="845.7" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="842.7" y="947.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="845.7" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="843.2" y="947.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.2" y="958.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.74%)</title><rect x="843.8" y="979.0" width="8.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.8" y="990.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.69%)</title><rect x="844.4" y="963.0" width="8.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="847.4" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.64%)</title><rect x="845.0" y="947.0" width="7.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="848.0" y="958.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="852.5" y="995.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="855.5" y="1006.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="852.5" y="979.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="855.5" y="990.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.10%)</title><rect x="853.1" y="1027.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="856.1" y="1038.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="853.7" y="1011.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="856.7" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="854.3" y="1139.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="857.3" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="854.3" y="1123.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="857.3" y="1134.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="854.3" y="1107.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="857.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (201 samples, 9.88%)</title><rect x="854.8" y="1171.0" width="116.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="857.8" y="1182.0">jdk/internal/n..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (4 samples, 0.20%)</title><rect x="856.6" y="1155.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="859.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (4 samples, 0.20%)</title><rect x="856.6" y="1139.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.6" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="857.7" y="1123.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="860.7" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="857.7" y="1107.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="860.7" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="857.7" y="1091.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="860.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.05%)</title><rect x="858.9" y="1155.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.9" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (57 samples, 2.80%)</title><rect x="859.5" y="1155.0" width="33.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.5" y="1166.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1514835762.accept (55 samples, 2.70%)</title><rect x="859.5" y="1139.0" width="31.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="862.5" y="1150.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (55 samples, 2.70%)</title><rect x="859.5" y="1123.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="862.5" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (55 samples, 2.70%)</title><rect x="859.5" y="1107.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.5" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (55 samples, 2.70%)</title><rect x="859.5" y="1091.0" width="31.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="862.5" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (55 samples, 2.70%)</title><rect x="859.5" y="1075.0" width="31.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.5" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.10%)</title><rect x="859.5" y="1059.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.05%)</title><rect x="859.5" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="859.5" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="862.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.05%)</title><rect x="859.5" y="1011.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.5" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="860.1" y="1043.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="863.1" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="860.1" y="1027.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="863.1" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="860.1" y="1011.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="863.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (53 samples, 2.60%)</title><rect x="860.6" y="1059.0" width="30.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.6" y="1070.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 2.60%)</title><rect x="860.6" y="1043.0" width="30.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.6" y="1054.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (53 samples, 2.60%)</title><rect x="860.6" y="1027.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.6" y="1038.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (53 samples, 2.60%)</title><rect x="860.6" y="1011.0" width="30.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.6" y="1022.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (53 samples, 2.60%)</title><rect x="860.6" y="995.0" width="30.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="863.6" y="1006.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (52 samples, 2.56%)</title><rect x="861.2" y="979.0" width="30.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="864.2" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (52 samples, 2.56%)</title><rect x="861.2" y="963.0" width="30.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="864.2" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.44%)</title><rect x="862.4" y="947.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.44%)</title><rect x="862.4" y="931.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="865.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (9 samples, 0.44%)</title><rect x="862.4" y="915.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="865.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.44%)</title><rect x="862.4" y="899.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.44%)</title><rect x="862.4" y="883.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="865.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.29%)</title><rect x="863.0" y="867.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="866.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.29%)</title><rect x="863.0" y="851.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="866.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.29%)</title><rect x="863.0" y="835.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="866.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.20%)</title><rect x="863.0" y="819.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="866.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.20%)</title><rect x="863.0" y="803.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="866.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.20%)</title><rect x="863.0" y="787.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.20%)</title><rect x="863.0" y="771.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="866.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.20%)</title><rect x="863.0" y="755.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.20%)</title><rect x="863.0" y="739.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="866.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.20%)</title><rect x="863.0" y="723.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="866.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.20%)</title><rect x="863.0" y="707.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.20%)</title><rect x="863.0" y="691.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="866.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.20%)</title><rect x="863.0" y="675.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.0" y="686.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.20%)</title><rect x="863.0" y="659.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="866.0" y="670.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.20%)</title><rect x="863.0" y="643.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="866.0" y="654.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.20%)</title><rect x="863.0" y="627.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="866.0" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.20%)</title><rect x="863.0" y="611.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="866.0" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="863.0" y="595.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="866.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="865.3" y="819.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="868.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="865.3" y="803.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="865.3" y="787.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.3" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="866.4" y="867.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="869.4" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="866.4" y="851.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="869.4" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="866.4" y="835.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="869.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.10%)</title><rect x="867.6" y="947.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="870.6" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="868.2" y="931.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="871.2" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="868.2" y="915.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="871.2" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="868.2" y="899.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="871.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.20%)</title><rect x="868.8" y="947.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="871.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.20%)</title><rect x="868.8" y="931.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.10%)</title><rect x="869.3" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.10%)</title><rect x="869.3" y="899.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.3" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="869.3" y="883.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="872.3" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="869.9" y="883.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.9" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="869.9" y="867.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="872.9" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="869.9" y="851.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.9" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="870.5" y="915.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.5" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="870.5" y="899.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.5" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="870.5" y="883.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (35 samples, 1.72%)</title><rect x="871.1" y="947.0" width="20.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (35 samples, 1.72%)</title><rect x="871.1" y="931.0" width="20.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.1" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (33 samples, 1.62%)</title><rect x="871.7" y="915.0" width="19.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (33 samples, 1.62%)</title><rect x="871.7" y="899.0" width="19.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (33 samples, 1.62%)</title><rect x="871.7" y="883.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (33 samples, 1.62%)</title><rect x="871.7" y="867.0" width="19.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="874.7" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (31 samples, 1.52%)</title><rect x="872.8" y="851.0" width="18.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.8" y="862.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="873.4" y="835.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="876.4" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="873.4" y="819.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="876.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="873.4" y="803.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="873.4" y="787.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="876.4" y="798.0"></text>
</g>
<g>
<title>read (28 samples, 1.38%)</title><rect x="874.0" y="835.0" width="16.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="877.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 1.28%)</title><rect x="874.6" y="819.0" width="15.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.28%)</title><rect x="874.6" y="803.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_read (26 samples, 1.28%)</title><rect x="874.6" y="787.0" width="15.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="877.6" y="798.0"></text>
</g>
<g>
<title>ksys_read (26 samples, 1.28%)</title><rect x="874.6" y="771.0" width="15.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="877.6" y="782.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.05%)</title><rect x="874.6" y="755.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.6" y="766.0"></text>
</g>
<g>
<title>vfs_read (25 samples, 1.23%)</title><rect x="875.1" y="755.0" width="14.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.1" y="766.0"></text>
</g>
<g>
<title>__vfs_read (21 samples, 1.03%)</title><rect x="875.7" y="739.0" width="12.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="878.7" y="750.0"></text>
</g>
<g>
<title>new_sync_read (21 samples, 1.03%)</title><rect x="875.7" y="723.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="878.7" y="734.0"></text>
</g>
<g>
<title>sock_read_iter (21 samples, 1.03%)</title><rect x="875.7" y="707.0" width="12.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="878.7" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.05%)</title><rect x="876.9" y="691.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.9" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.88%)</title><rect x="877.5" y="691.0" width="10.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="880.5" y="702.0"></text>
</g>
<g>
<title>inet6_recvmsg (15 samples, 0.74%)</title><rect x="878.0" y="675.0" width="8.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.0" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.74%)</title><rect x="878.0" y="659.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="881.0" y="670.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.10%)</title><rect x="879.8" y="643.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.8" y="654.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="879.8" y="627.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="882.8" y="638.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.10%)</title><rect x="879.8" y="611.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="882.8" y="622.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.10%)</title><rect x="879.8" y="595.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="882.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="880.9" y="643.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="883.9" y="654.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.15%)</title><rect x="881.5" y="643.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.5" y="654.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="882.7" y="627.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="885.7" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.20%)</title><rect x="883.3" y="643.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="886.3" y="654.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.20%)</title><rect x="883.3" y="627.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.3" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.15%)</title><rect x="883.8" y="611.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="886.8" y="622.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.10%)</title><rect x="883.8" y="595.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="886.8" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="884.4" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="887.4" y="590.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.05%)</title><rect x="885.0" y="595.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="888.0" y="606.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="885.0" y="579.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="888.0" y="590.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="885.6" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="888.6" y="654.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="885.6" y="627.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.6" y="638.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.05%)</title><rect x="886.2" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="889.2" y="654.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="886.2" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="889.2" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.10%)</title><rect x="886.7" y="675.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.7" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="886.7" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.7" y="670.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="887.3" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="890.3" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="887.3" y="643.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="890.3" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.15%)</title><rect x="887.9" y="739.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="890.9" y="750.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.10%)</title><rect x="888.5" y="723.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="891.5" y="734.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="888.5" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="891.5" y="718.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="888.5" y="691.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.5" y="702.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="888.5" y="675.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="891.5" y="686.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="889.1" y="707.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="889.6" y="819.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="892.6" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="889.6" y="803.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="892.6" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="889.6" y="787.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.6" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="890.2" y="835.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="893.2" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="890.2" y="819.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="893.2" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="890.2" y="803.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="893.2" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="890.8" y="915.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.8" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="890.8" y="899.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.8" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="890.8" y="883.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="893.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/2133118391.accept (2 samples, 0.10%)</title><rect x="891.4" y="1139.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.10%)</title><rect x="891.4" y="1123.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/526911886.run (2 samples, 0.10%)</title><rect x="891.4" y="1107.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (2 samples, 0.10%)</title><rect x="891.4" y="1091.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.10%)</title><rect x="891.4" y="1075.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="894.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.05%)</title><rect x="891.4" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.4" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="891.4" y="1043.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="894.4" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="891.4" y="1027.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="894.4" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="891.4" y="1011.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="892.0" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="892.0" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="892.0" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="892.0" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="895.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (3 samples, 0.15%)</title><rect x="892.5" y="1155.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="895.5" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.15%)</title><rect x="892.5" y="1139.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="895.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (3 samples, 0.15%)</title><rect x="892.5" y="1123.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (3 samples, 0.15%)</title><rect x="892.5" y="1107.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="895.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.15%)</title><rect x="892.5" y="1091.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="895.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.05%)</title><rect x="892.5" y="1075.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.05%)</title><rect x="892.5" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="895.5" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.05%)</title><rect x="892.5" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="895.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$247/1379068579.test (1 samples, 0.05%)</title><rect x="892.5" y="1027.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="895.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.05%)</title><rect x="892.5" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.5" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="892.5" y="995.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="895.5" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="892.5" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="895.5" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="892.5" y="963.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="895.5" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.10%)</title><rect x="893.1" y="1075.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="896.1" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.05%)</title><rect x="893.7" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.7" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (1 samples, 0.05%)</title><rect x="893.7" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.7" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.05%)</title><rect x="893.7" y="1027.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (18 samples, 0.88%)</title><rect x="894.3" y="1155.0" width="10.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="897.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/856242411.run (14 samples, 0.69%)</title><rect x="894.3" y="1139.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="897.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (14 samples, 0.69%)</title><rect x="894.3" y="1123.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (14 samples, 0.69%)</title><rect x="894.3" y="1107.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.59%)</title><rect x="894.3" y="1091.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="897.3" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="894.3" y="1075.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="897.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (11 samples, 0.54%)</title><rect x="894.9" y="1075.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="897.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (11 samples, 0.54%)</title><rect x="894.9" y="1059.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="897.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (11 samples, 0.54%)</title><rect x="894.9" y="1043.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (11 samples, 0.54%)</title><rect x="894.9" y="1027.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="897.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (11 samples, 0.54%)</title><rect x="894.9" y="1011.0" width="6.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (8 samples, 0.39%)</title><rect x="896.0" y="995.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (6 samples, 0.29%)</title><rect x="896.0" y="979.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (6 samples, 0.29%)</title><rect x="896.0" y="963.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="899.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (6 samples, 0.29%)</title><rect x="896.0" y="947.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.25%)</title><rect x="896.0" y="931.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="899.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.25%)</title><rect x="896.0" y="915.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="899.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.25%)</title><rect x="896.0" y="899.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.25%)</title><rect x="896.0" y="883.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="899.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.25%)</title><rect x="896.0" y="867.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="899.0" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.25%)</title><rect x="896.0" y="851.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.0" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="897.8" y="835.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="900.8" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="897.8" y="819.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="900.8" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="897.8" y="803.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="900.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.05%)</title><rect x="898.9" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.9" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="898.9" y="915.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="901.9" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="898.9" y="899.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="901.9" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="898.9" y="883.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="901.9" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="898.9" y="867.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="901.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.10%)</title><rect x="899.5" y="979.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="899.5" y="963.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="899.5" y="947.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="902.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.10%)</title><rect x="899.5" y="931.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.10%)</title><rect x="899.5" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.10%)</title><rect x="899.5" y="899.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.05%)</title><rect x="899.5" y="883.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="902.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="899.5" y="867.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="902.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="899.5" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="902.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="899.5" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="902.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="899.5" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="899.5" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.5" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="899.5" y="787.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="902.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="899.5" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="899.5" y="755.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="902.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="899.5" y="739.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="902.5" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="899.5" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="902.5" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="899.5" y="707.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="902.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="899.5" y="691.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="902.5" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="899.5" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="902.5" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="899.5" y="659.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="902.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="900.1" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="900.1" y="867.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="900.1" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="900.7" y="995.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="903.7" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="900.7" y="979.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="903.7" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="900.7" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.7" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="901.2" y="1091.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="904.2" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="901.2" y="1075.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="904.2" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="901.2" y="1059.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="904.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/2094894093.run (4 samples, 0.20%)</title><rect x="902.4" y="1139.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (4 samples, 0.20%)</title><rect x="902.4" y="1123.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="905.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.20%)</title><rect x="902.4" y="1107.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.20%)</title><rect x="902.4" y="1091.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.20%)</title><rect x="902.4" y="1075.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.10%)</title><rect x="902.4" y="1059.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="902.4" y="1043.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="902.4" y="1027.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="905.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="902.4" y="1011.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="902.4" y="995.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="905.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.10%)</title><rect x="902.4" y="979.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.4" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.10%)</title><rect x="902.4" y="963.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="905.4" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="902.4" y="947.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.4" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="902.4" y="931.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="905.4" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="902.4" y="915.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="905.4" y="926.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="902.4" y="899.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="905.4" y="910.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="902.4" y="883.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="905.4" y="894.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.10%)</title><rect x="902.4" y="867.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.4" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.10%)</title><rect x="902.4" y="851.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.4" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="902.4" y="835.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="905.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="903.6" y="1059.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="903.6" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="906.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="903.6" y="1027.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.6" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="903.6" y="1011.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="906.6" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="903.6" y="995.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.6" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="903.6" y="979.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.25%)</title><rect x="904.7" y="1155.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5 samples, 0.25%)</title><rect x="904.7" y="1139.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="907.7" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.20%)</title><rect x="905.3" y="1123.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="908.3" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.20%)</title><rect x="905.3" y="1107.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="908.3" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.15%)</title><rect x="905.3" y="1091.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="908.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="906.5" y="1075.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="909.5" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="906.5" y="1059.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="909.5" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="906.5" y="1043.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="909.5" y="1054.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="907.0" y="1091.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="910.0" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="907.0" y="1075.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="910.0" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="907.0" y="1059.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="910.0" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="907.0" y="1043.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="910.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.05%)</title><rect x="907.6" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="910.6" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="907.6" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.6" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="907.6" y="1123.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.6" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="907.6" y="1107.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.6" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="907.6" y="1091.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="910.6" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="907.6" y="1075.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.6" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="907.6" y="1059.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (9 samples, 0.44%)</title><rect x="908.2" y="1155.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.2" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="908.8" y="1139.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="911.8" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="908.8" y="1123.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="911.8" y="1134.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="908.8" y="1107.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="911.8" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.10%)</title><rect x="909.4" y="1139.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.4" y="1150.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.10%)</title><rect x="909.4" y="1123.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="912.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="909.4" y="1107.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="912.4" y="1118.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="909.4" y="1091.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="912.4" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="909.9" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="912.9" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="909.9" y="1059.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="912.9" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.05%)</title><rect x="910.5" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.5" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.05%)</title><rect x="910.5" y="1123.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="910.5" y="1107.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (4 samples, 0.20%)</title><rect x="911.1" y="1139.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.1" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.20%)</title><rect x="911.1" y="1123.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.20%)</title><rect x="911.1" y="1107.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="914.1" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.20%)</title><rect x="911.1" y="1091.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="914.1" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="912.3" y="1075.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="915.3" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="912.3" y="1059.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="915.3" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="912.3" y="1043.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="915.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (85 samples, 4.18%)</title><rect x="913.4" y="1155.0" width="49.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.4" y="1166.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (85 samples, 4.18%)</title><rect x="913.4" y="1139.0" width="49.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.4" y="1150.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (83 samples, 4.08%)</title><rect x="914.0" y="1123.0" width="48.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.0" y="1134.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (43 samples, 2.11%)</title><rect x="915.1" y="1107.0" width="25.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.1" y="1118.0">s..</text>
</g>
<g>
<title>epoll_wait (42 samples, 2.06%)</title><rect x="915.1" y="1091.0" width="24.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="918.1" y="1102.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.77%)</title><rect x="915.7" y="1075.0" width="20.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="918.7" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.77%)</title><rect x="915.7" y="1059.0" width="20.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.7" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (36 samples, 1.77%)</title><rect x="915.7" y="1043.0" width="20.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="918.7" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (36 samples, 1.77%)</title><rect x="915.7" y="1027.0" width="20.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="918.7" y="1038.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="915.7" y="1011.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="918.7" y="1022.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="915.7" y="995.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="918.7" y="1006.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="915.7" y="979.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.7" y="990.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="916.3" y="1011.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.3" y="1022.0"></text>
</g>
<g>
<title>ep_poll (34 samples, 1.67%)</title><rect x="916.9" y="1011.0" width="19.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.9" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.69%)</title><rect x="918.0" y="995.0" width="8.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="921.0" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.59%)</title><rect x="918.6" y="979.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="921.6" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (8 samples, 0.39%)</title><rect x="919.8" y="963.0" width="4.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="922.8" y="974.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="922.1" y="947.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.1" y="958.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.05%)</title><rect x="922.7" y="947.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="925.7" y="958.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="923.3" y="947.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="926.3" y="958.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="923.8" y="931.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="926.8" y="942.0"></text>
</g>
<g>
<title>pipe_poll (2 samples, 0.10%)</title><rect x="924.4" y="963.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="927.4" y="974.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="925.6" y="979.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="928.6" y="990.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="925.6" y="963.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="928.6" y="974.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.05%)</title><rect x="925.6" y="947.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.6" y="958.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="925.6" y="931.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="928.6" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="925.6" y="915.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="928.6" y="926.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="926.2" y="995.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="929.2" y="1006.0"></text>
</g>
<g>
<title>ktime_get_ts64 (2 samples, 0.10%)</title><rect x="926.7" y="995.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="929.7" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.54%)</title><rect x="927.9" y="995.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="930.9" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.54%)</title><rect x="927.9" y="979.0" width="6.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.9" y="990.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.05%)</title><rect x="927.9" y="963.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="930.9" y="974.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.05%)</title><rect x="927.9" y="947.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="930.9" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.05%)</title><rect x="928.5" y="963.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.5" y="974.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="928.5" y="947.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="931.5" y="958.0"></text>
</g>
<g>
<title>schedule (9 samples, 0.44%)</title><rect x="929.1" y="963.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="932.1" y="974.0"></text>
</g>
<g>
<title>__schedule (9 samples, 0.44%)</title><rect x="929.1" y="947.0" width="5.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.1" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.44%)</title><rect x="929.1" y="931.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="932.1" y="942.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.05%)</title><rect x="934.3" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.3" y="1006.0"></text>
</g>
<g>
<title>set_normalized_timespec64 (3 samples, 0.15%)</title><rect x="934.9" y="995.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="937.9" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (5 samples, 0.25%)</title><rect x="936.6" y="1075.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.6" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (5 samples, 0.25%)</title><rect x="936.6" y="1059.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.6" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (5 samples, 0.25%)</title><rect x="936.6" y="1043.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="939.6" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="939.5" y="1091.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="942.5" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="939.5" y="1075.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="942.5" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="939.5" y="1059.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="942.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (31 samples, 1.52%)</title><rect x="940.1" y="1107.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.20%)</title><rect x="940.1" y="1091.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="943.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.20%)</title><rect x="940.1" y="1075.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.1" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (24 samples, 1.18%)</title><rect x="942.4" y="1091.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.4" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="942.4" y="1075.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="945.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="942.4" y="1059.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="945.4" y="1070.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="942.4" y="1043.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="945.4" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="942.4" y="1027.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="945.4" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="942.4" y="1011.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.4" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="942.4" y="995.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="945.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (23 samples, 1.13%)</title><rect x="943.0" y="1075.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.0" y="1086.0"></text>
</g>
<g>
<title>read (22 samples, 1.08%)</title><rect x="943.6" y="1059.0" width="12.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="946.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.03%)</title><rect x="943.6" y="1043.0" width="12.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="946.6" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.05%)</title><rect x="943.6" y="1027.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="946.6" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 0.98%)</title><rect x="944.1" y="1027.0" width="11.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_read (20 samples, 0.98%)</title><rect x="944.1" y="1011.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.1" y="1022.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="944.1" y="995.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.1" y="1006.0"></text>
</g>
<g>
<title>ksys_read (19 samples, 0.93%)</title><rect x="944.7" y="995.0" width="11.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.7" y="1006.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="945.3" y="979.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="948.3" y="990.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="945.3" y="963.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="948.3" y="974.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="945.3" y="947.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="948.3" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="945.9" y="979.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="948.9" y="990.0"></text>
</g>
<g>
<title>vfs_read (16 samples, 0.79%)</title><rect x="946.5" y="979.0" width="9.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.5" y="990.0"></text>
</g>
<g>
<title>__vfs_read (12 samples, 0.59%)</title><rect x="946.5" y="963.0" width="6.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.5" y="974.0"></text>
</g>
<g>
<title>new_sync_read (11 samples, 0.54%)</title><rect x="946.5" y="947.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.5" y="958.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (1 samples, 0.05%)</title><rect x="946.5" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="949.5" y="942.0"></text>
</g>
<g>
<title>pipe_read (10 samples, 0.49%)</title><rect x="947.0" y="931.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="950.0" y="942.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="948.2" y="915.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="951.2" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="948.2" y="899.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.2" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="948.2" y="883.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.2" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.25%)</title><rect x="948.8" y="915.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.8" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.20%)</title><rect x="949.4" y="899.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="952.4" y="910.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.05%)</title><rect x="951.7" y="915.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="954.7" y="926.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.05%)</title><rect x="952.3" y="915.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.3" y="926.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.05%)</title><rect x="952.3" y="899.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="955.3" y="910.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.05%)</title><rect x="952.3" y="883.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.3" y="894.0"></text>
</g>
<g>
<title>pipe_read (1 samples, 0.05%)</title><rect x="952.8" y="947.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="955.8" y="958.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.20%)</title><rect x="953.4" y="963.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.4" y="974.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.20%)</title><rect x="953.4" y="947.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="956.4" y="958.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="954.0" y="931.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.0" y="942.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="954.0" y="915.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="957.0" y="926.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="954.0" y="899.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.0" y="910.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="954.6" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="957.6" y="942.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="955.2" y="931.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="958.2" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="955.7" y="1043.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.7" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="955.7" y="1027.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="958.7" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="955.7" y="1011.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="958.7" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.15%)</title><rect x="956.3" y="1091.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="956.3" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="959.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="956.3" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="959.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="956.3" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.3" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndUpdateReadyOps (1 samples, 0.05%)</title><rect x="956.9" y="1075.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="959.9" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="956.9" y="1059.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.9" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="956.9" y="1043.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="959.9" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="956.9" y="1027.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.9" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="957.5" y="1075.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="960.5" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="957.5" y="1059.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="960.5" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="957.5" y="1043.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="960.5" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (2 samples, 0.10%)</title><rect x="958.1" y="1107.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.1" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="958.6" y="1091.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="961.6" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="958.6" y="1075.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="961.6" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="958.6" y="1059.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="961.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.15%)</title><rect x="959.2" y="1107.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.15%)</title><rect x="959.2" y="1091.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.2" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (3 samples, 0.15%)</title><rect x="959.2" y="1075.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (3 samples, 0.15%)</title><rect x="959.2" y="1059.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (3 samples, 0.15%)</title><rect x="959.2" y="1043.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="962.2" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="959.8" y="1027.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.8" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="959.8" y="1011.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.8" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="959.8" y="995.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.8" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="961.0" y="1107.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.0" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="961.0" y="1091.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="964.0" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="961.0" y="1075.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="964.0" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="962.1" y="1123.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="965.1" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="962.1" y="1107.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.1" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="962.1" y="1091.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="965.1" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (8 samples, 0.39%)</title><rect x="962.7" y="1155.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.05%)</title><rect x="962.7" y="1139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.7" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="962.7" y="1123.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="965.7" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="962.7" y="1107.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="965.7" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="962.7" y="1091.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="965.7" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (7 samples, 0.34%)</title><rect x="963.3" y="1139.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.3" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (7 samples, 0.34%)</title><rect x="963.3" y="1123.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="966.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (6 samples, 0.29%)</title><rect x="963.3" y="1107.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="966.3" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.29%)</title><rect x="963.3" y="1091.0" width="3.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="966.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.29%)</title><rect x="963.3" y="1075.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="966.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.29%)</title><rect x="963.3" y="1059.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="966.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.25%)</title><rect x="963.9" y="1043.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="966.9" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.25%)</title><rect x="963.9" y="1027.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="966.9" y="1038.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 0.25%)</title><rect x="963.9" y="1011.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="966.9" y="1022.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 0.25%)</title><rect x="963.9" y="995.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="966.9" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.20%)</title><rect x="964.4" y="979.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="967.4" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.20%)</title><rect x="964.4" y="963.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.4" y="974.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.20%)</title><rect x="964.4" y="947.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="967.4" y="958.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="965.6" y="931.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="968.6" y="942.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="966.2" y="931.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.05%)</title><rect x="966.8" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.05%)</title><rect x="966.8" y="1091.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.8" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="966.8" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.8" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="966.8" y="1059.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.8" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="966.8" y="1043.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="969.8" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="966.8" y="1027.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="969.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (2 samples, 0.10%)</title><rect x="967.3" y="1155.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="970.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.10%)</title><rect x="967.3" y="1139.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (2 samples, 0.10%)</title><rect x="967.3" y="1123.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="970.3" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.10%)</title><rect x="968.5" y="1155.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.5" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.10%)</title><rect x="968.5" y="1139.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="971.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.10%)</title><rect x="968.5" y="1123.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="969.1" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="969.1" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.1" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.15%)</title><rect x="969.7" y="1155.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="972.7" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.15%)</title><rect x="969.7" y="1139.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="972.7" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.15%)</title><rect x="969.7" y="1123.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (368 samples, 18.08%)</title><rect x="971.4" y="1171.0" width="213.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="974.4" y="1182.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (72 samples, 3.54%)</title><rect x="972.0" y="1155.0" width="41.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.0" y="1166.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (71 samples, 3.49%)</title><rect x="972.6" y="1139.0" width="41.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="975.6" y="1150.0">one..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="973.7" y="1123.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="976.7" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.05%)</title><rect x="974.3" y="1123.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="977.3" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.05%)</title><rect x="974.9" y="1123.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="977.9" y="1134.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.05%)</title><rect x="975.5" y="1123.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="978.5" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (65 samples, 3.19%)</title><rect x="976.0" y="1123.0" width="37.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="979.0" y="1134.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 2.90%)</title><rect x="979.5" y="1107.0" width="34.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="982.5" y="1118.0">en..</text>
</g>
<g>
<title>do_syscall_64 (59 samples, 2.90%)</title><rect x="979.5" y="1091.0" width="34.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="982.5" y="1102.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (56 samples, 2.75%)</title><rect x="980.7" y="1075.0" width="32.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.7" y="1086.0">__..</text>
</g>
<g>
<title>do_epoll_wait (56 samples, 2.75%)</title><rect x="980.7" y="1059.0" width="32.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="983.7" y="1070.0">do..</text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="980.7" y="1043.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="983.7" y="1054.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="980.7" y="1027.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="983.7" y="1038.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="980.7" y="1011.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="983.7" y="1022.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="982.4" y="1043.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.4" y="1054.0"></text>
</g>
<g>
<title>ep_poll (50 samples, 2.46%)</title><rect x="983.6" y="1043.0" width="29.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="986.6" y="1054.0">ep..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (19 samples, 0.93%)</title><rect x="984.7" y="1027.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.7" y="1038.0"></text>
</g>
<g>
<title>ep_send_events_proc (18 samples, 0.88%)</title><rect x="985.3" y="1011.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.3" y="1022.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (13 samples, 0.64%)</title><rect x="987.1" y="995.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="990.1" y="1006.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.34%)</title><rect x="989.4" y="979.0" width="4.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="992.4" y="990.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="992.3" y="963.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="995.3" y="974.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="992.9" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="995.9" y="974.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.10%)</title><rect x="993.4" y="979.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.4" y="990.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="994.6" y="995.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="997.6" y="1006.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="995.7" y="1027.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="998.7" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 1.38%)</title><rect x="996.3" y="1027.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.3" y="1038.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (28 samples, 1.38%)</title><rect x="996.3" y="1011.0" width="16.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.3" y="1022.0"></text>
</g>
<g>
<title>schedule (26 samples, 1.28%)</title><rect x="997.5" y="995.0" width="15.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1000.5" y="1006.0"></text>
</g>
<g>
<title>__schedule (26 samples, 1.28%)</title><rect x="997.5" y="979.0" width="15.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.5" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (25 samples, 1.23%)</title><rect x="998.1" y="963.0" width="14.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1001.1" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.05%)</title><rect x="1012.6" y="1043.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1015.6" y="1054.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.05%)</title><rect x="1013.1" y="1075.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1016.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (294 samples, 14.45%)</title><rect x="1013.7" y="1155.0" width="170.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.7" y="1166.0">one/nio/net/Session.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (294 samples, 14.45%)</title><rect x="1013.7" y="1139.0" width="170.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.7" y="1150.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (196 samples, 9.63%)</title><rect x="1014.9" y="1123.0" width="113.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1017.9" y="1134.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (178 samples, 8.75%)</title><rect x="1020.1" y="1107.0" width="103.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1023.1" y="1118.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (176 samples, 8.65%)</title><rect x="1021.3" y="1091.0" width="102.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1024.3" y="1102.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (171 samples, 8.40%)</title><rect x="1021.3" y="1075.0" width="99.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.3" y="1086.0">RequestHandl..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (171 samples, 8.40%)</title><rect x="1021.3" y="1059.0" width="99.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.3" y="1070.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="1021.8" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (65 samples, 3.19%)</title><rect x="1022.4" y="1043.0" width="37.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1025.4" y="1054.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (65 samples, 3.19%)</title><rect x="1022.4" y="1027.0" width="37.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1025.4" y="1038.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (65 samples, 3.19%)</title><rect x="1022.4" y="1011.0" width="37.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1025.4" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (65 samples, 3.19%)</title><rect x="1022.4" y="995.0" width="37.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.4" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (64 samples, 3.14%)</title><rect x="1023.0" y="979.0" width="37.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1026.0" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (63 samples, 3.10%)</title><rect x="1023.0" y="963.0" width="36.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1026.0" y="974.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (63 samples, 3.10%)</title><rect x="1023.0" y="947.0" width="36.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1026.0" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (63 samples, 3.10%)</title><rect x="1023.0" y="931.0" width="36.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1026.0" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (63 samples, 3.10%)</title><rect x="1023.0" y="915.0" width="36.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1026.0" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 2.95%)</title><rect x="1024.7" y="899.0" width="34.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.7" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 2.95%)</title><rect x="1024.7" y="883.0" width="34.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.7" y="894.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.39%)</title><rect x="1025.3" y="867.0" width="4.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1028.3" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.15%)</title><rect x="1025.3" y="851.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1028.3" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.10%)</title><rect x="1027.1" y="851.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1030.1" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.15%)</title><rect x="1028.2" y="851.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1031.2" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (48 samples, 2.36%)</title><rect x="1030.0" y="867.0" width="27.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1033.0" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 2.36%)</title><rect x="1030.0" y="851.0" width="27.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1033.0" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (48 samples, 2.36%)</title><rect x="1030.0" y="835.0" width="27.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1033.0" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (46 samples, 2.26%)</title><rect x="1031.1" y="819.0" width="26.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1034.1" y="830.0">_..</text>
</g>
<g>
<title>do_futex (46 samples, 2.26%)</title><rect x="1031.1" y="803.0" width="26.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1034.1" y="814.0">d..</text>
</g>
<g>
<title>futex_wake (46 samples, 2.26%)</title><rect x="1031.1" y="787.0" width="26.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1034.1" y="798.0">f..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="1033.4" y="771.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1036.4" y="782.0"></text>
</g>
<g>
<title>wake_up_q (41 samples, 2.01%)</title><rect x="1034.0" y="771.0" width="23.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1037.0" y="782.0">w..</text>
</g>
<g>
<title>try_to_wake_up (41 samples, 2.01%)</title><rect x="1034.0" y="755.0" width="23.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1037.0" y="766.0">t..</text>
</g>
<g>
<title>__lock_text_start (41 samples, 2.01%)</title><rect x="1034.0" y="739.0" width="23.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1037.0" y="750.0">_..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.10%)</title><rect x="1057.8" y="867.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1060.8" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.05%)</title><rect x="1059.0" y="867.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1062.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="1059.5" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1062.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="1059.5" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1062.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="1059.5" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="1059.5" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1062.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (103 samples, 5.06%)</title><rect x="1060.1" y="1043.0" width="59.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1063.1" y="1054.0">ru/mai..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1060.7" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1063.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1060.7" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1063.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1060.7" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1063.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1060.7" y="979.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1063.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="1061.3" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1064.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (84 samples, 4.13%)</title><rect x="1061.9" y="1027.0" width="48.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1064.9" y="1038.0">ru/m..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (61 samples, 3.00%)</title><rect x="1062.4" y="1011.0" width="35.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.4" y="1022.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (61 samples, 3.00%)</title><rect x="1062.4" y="995.0" width="35.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1065.4" y="1006.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (61 samples, 3.00%)</title><rect x="1062.4" y="979.0" width="35.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1065.4" y="990.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (61 samples, 3.00%)</title><rect x="1062.4" y="963.0" width="35.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.4" y="974.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.05%)</title><rect x="1063.0" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1066.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="1063.0" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1066.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (32 samples, 1.57%)</title><rect x="1063.6" y="947.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.25%)</title><rect x="1063.6" y="931.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1066.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.05%)</title><rect x="1063.6" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1066.6" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="1063.6" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.05%)</title><rect x="1063.6" y="883.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1066.6" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="1063.6" y="867.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1066.6" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="1063.6" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1066.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="1063.6" y="835.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1066.6" y="846.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.10%)</title><rect x="1064.2" y="915.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1067.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.10%)</title><rect x="1064.2" y="899.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1067.2" y="910.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.10%)</title><rect x="1064.2" y="883.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1067.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.10%)</title><rect x="1065.3" y="915.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.10%)</title><rect x="1065.3" y="899.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.3" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.05%)</title><rect x="1065.9" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.9" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.05%)</title><rect x="1065.9" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1068.9" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.05%)</title><rect x="1065.9" y="851.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1068.9" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.15%)</title><rect x="1066.5" y="931.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1069.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.15%)</title><rect x="1066.5" y="915.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.5" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.10%)</title><rect x="1067.1" y="899.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1070.1" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.10%)</title><rect x="1067.1" y="883.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1070.1" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (1 samples, 0.05%)</title><rect x="1067.1" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1070.1" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.05%)</title><rect x="1067.1" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.05%)</title><rect x="1067.1" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1070.1" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (1 samples, 0.05%)</title><rect x="1067.1" y="819.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1070.1" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.05%)</title><rect x="1067.1" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1070.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/867148091.test (1 samples, 0.05%)</title><rect x="1067.1" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1070.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.05%)</title><rect x="1067.1" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1070.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.05%)</title><rect x="1067.1" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1070.1" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="1067.7" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1070.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (24 samples, 1.18%)</title><rect x="1068.2" y="931.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.2" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (24 samples, 1.18%)</title><rect x="1068.2" y="915.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.10%)</title><rect x="1069.4" y="899.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.4" y="910.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.10%)</title><rect x="1069.4" y="883.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.98%)</title><rect x="1070.6" y="899.0" width="11.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.6" y="910.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (14 samples, 0.69%)</title><rect x="1071.1" y="883.0" width="8.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1074.1" y="894.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.05%)</title><rect x="1071.1" y="867.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1074.1" y="878.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.15%)</title><rect x="1071.7" y="867.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1074.7" y="878.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.05%)</title><rect x="1071.7" y="851.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.7" y="862.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.05%)</title><rect x="1071.7" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1074.7" y="846.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.05%)</title><rect x="1072.3" y="851.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1075.3" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1072.9" y="851.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1075.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1072.9" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1075.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1072.9" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1075.9" y="830.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="1073.4" y="867.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1076.4" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="1074.0" y="867.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1077.0" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.20%)</title><rect x="1074.6" y="867.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1077.6" y="878.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.10%)</title><rect x="1075.8" y="851.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.8" y="862.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.05%)</title><rect x="1075.8" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.8" y="846.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.05%)</title><rect x="1076.3" y="835.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1079.3" y="846.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.20%)</title><rect x="1076.9" y="867.0" width="2.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1079.9" y="878.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.15%)</title><rect x="1077.5" y="851.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.5" y="862.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.05%)</title><rect x="1079.2" y="883.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1082.2" y="894.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.05%)</title><rect x="1079.8" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1082.8" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.15%)</title><rect x="1080.4" y="883.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.4" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.15%)</title><rect x="1080.4" y="867.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (14 samples, 0.69%)</title><rect x="1082.1" y="947.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (4 samples, 0.20%)</title><rect x="1082.1" y="931.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.20%)</title><rect x="1082.1" y="915.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.20%)</title><rect x="1082.1" y="899.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1085.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.20%)</title><rect x="1082.1" y="883.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (4 samples, 0.20%)</title><rect x="1082.1" y="867.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.1" y="878.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (4 samples, 0.20%)</title><rect x="1082.1" y="851.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.1" y="862.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.05%)</title><rect x="1083.9" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (10 samples, 0.49%)</title><rect x="1084.5" y="931.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1087.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (8 samples, 0.39%)</title><rect x="1085.6" y="915.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1088.6" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.20%)</title><rect x="1087.4" y="899.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1090.4" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (2 samples, 0.10%)</title><rect x="1087.4" y="883.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1090.4" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (2 samples, 0.10%)</title><rect x="1087.4" y="867.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1090.4" y="878.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (2 samples, 0.10%)</title><rect x="1087.4" y="851.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1090.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.10%)</title><rect x="1088.5" y="883.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.05%)</title><rect x="1089.7" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1092.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (13 samples, 0.64%)</title><rect x="1090.3" y="947.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1093.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (7 samples, 0.34%)</title><rect x="1090.3" y="931.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.34%)</title><rect x="1090.3" y="915.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.34%)</title><rect x="1090.3" y="899.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1093.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.25%)</title><rect x="1090.3" y="883.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="1090.3" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="1090.3" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1093.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="1090.3" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1093.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.20%)</title><rect x="1090.8" y="867.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.20%)</title><rect x="1090.8" y="851.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.20%)</title><rect x="1090.8" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.20%)</title><rect x="1090.8" y="819.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1093.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.20%)</title><rect x="1090.8" y="803.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.8" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.20%)</title><rect x="1090.8" y="787.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1093.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.20%)</title><rect x="1090.8" y="771.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1093.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.20%)</title><rect x="1090.8" y="755.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1093.8" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.20%)</title><rect x="1090.8" y="739.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1093.8" y="750.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.20%)</title><rect x="1090.8" y="723.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1093.8" y="734.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.20%)</title><rect x="1090.8" y="707.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.8" y="718.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.20%)</title><rect x="1090.8" y="691.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1093.8" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.20%)</title><rect x="1090.8" y="675.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.8" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.20%)</title><rect x="1090.8" y="659.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1093.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="1093.2" y="883.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="1093.2" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1096.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="1093.2" y="851.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1096.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.05%)</title><rect x="1093.7" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="1093.7" y="819.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1096.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="1093.7" y="803.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1096.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1093.7" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1096.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1093.7" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1096.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="1093.7" y="755.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1096.7" y="766.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1093.7" y="739.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1096.7" y="750.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="1093.7" y="723.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.7" y="734.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="1093.7" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1096.7" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="1093.7" y="691.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.7" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1093.7" y="675.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1096.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (6 samples, 0.29%)</title><rect x="1094.3" y="931.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1097.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.25%)</title><rect x="1094.3" y="915.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.25%)</title><rect x="1094.3" y="899.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1094.3" y="883.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1097.3" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1094.3" y="867.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.3" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1094.3" y="851.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1097.3" y="862.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1094.3" y="835.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (4 samples, 0.20%)</title><rect x="1094.9" y="883.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.9" y="894.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.05%)</title><rect x="1097.2" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1100.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (22 samples, 1.08%)</title><rect x="1097.8" y="1011.0" width="12.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (3 samples, 0.15%)</title><rect x="1097.8" y="995.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (3 samples, 0.15%)</title><rect x="1097.8" y="979.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.8" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.10%)</title><rect x="1097.8" y="963.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1100.8" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.10%)</title><rect x="1097.8" y="947.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.8" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1098.4" y="931.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1101.4" y="942.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.05%)</title><rect x="1099.0" y="963.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1102.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="1099.0" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1102.0" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="1099.5" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1102.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (18 samples, 0.88%)</title><rect x="1100.1" y="995.0" width="10.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1103.1" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.create (10 samples, 0.49%)</title><rect x="1100.1" y="979.0" width="5.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.1" y="990.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (10 samples, 0.49%)</title><rect x="1100.1" y="963.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1103.1" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (10 samples, 0.49%)</title><rect x="1100.1" y="947.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1103.1" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (1 samples, 0.05%)</title><rect x="1100.1" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1103.1" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.05%)</title><rect x="1100.1" y="915.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1103.1" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1100.1" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1103.1" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (8 samples, 0.39%)</title><rect x="1100.7" y="931.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1103.7" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.20%)</title><rect x="1100.7" y="915.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1103.7" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.20%)</title><rect x="1100.7" y="899.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1103.7" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (4 samples, 0.20%)</title><rect x="1103.0" y="915.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.10%)</title><rect x="1104.2" y="899.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.05%)</title><rect x="1104.2" y="883.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.2" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1104.2" y="867.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1107.2" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.05%)</title><rect x="1104.8" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1107.8" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.05%)</title><rect x="1104.8" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1107.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1104.8" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1107.8" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="1105.3" y="931.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1108.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (6 samples, 0.29%)</title><rect x="1105.9" y="979.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (6 samples, 0.29%)</title><rect x="1105.9" y="963.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (4 samples, 0.20%)</title><rect x="1105.9" y="947.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1108.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (3 samples, 0.15%)</title><rect x="1105.9" y="931.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1108.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.15%)</title><rect x="1105.9" y="915.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.9" y="926.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.15%)</title><rect x="1105.9" y="899.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.9" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.15%)</title><rect x="1105.9" y="883.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1108.9" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.15%)</title><rect x="1105.9" y="867.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.9" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.15%)</title><rect x="1105.9" y="851.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1108.9" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.15%)</title><rect x="1105.9" y="835.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="1107.1" y="819.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="1107.1" y="803.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="1107.1" y="787.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (1 samples, 0.05%)</title><rect x="1107.7" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2 samples, 0.10%)</title><rect x="1108.2" y="947.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.2" y="958.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.10%)</title><rect x="1108.2" y="931.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.10%)</title><rect x="1108.2" y="915.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="1108.2" y="899.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="1108.2" y="883.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.2" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="1108.2" y="867.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.10%)</title><rect x="1109.4" y="979.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1112.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (2 samples, 0.10%)</title><rect x="1109.4" y="963.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.10%)</title><rect x="1109.4" y="947.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1112.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.10%)</title><rect x="1109.4" y="931.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.4" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="1109.4" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1112.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (1 samples, 0.05%)</title><rect x="1110.0" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.0" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (14 samples, 0.69%)</title><rect x="1110.6" y="1027.0" width="8.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1113.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (2 samples, 0.10%)</title><rect x="1110.6" y="1011.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2 samples, 0.10%)</title><rect x="1110.6" y="995.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2 samples, 0.10%)</title><rect x="1110.6" y="979.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1113.6" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1111.1" y="963.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1114.1" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1111.1" y="947.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1114.1" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1111.1" y="931.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1114.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (12 samples, 0.59%)</title><rect x="1111.7" y="1011.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (12 samples, 0.59%)</title><rect x="1111.7" y="995.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (12 samples, 0.59%)</title><rect x="1111.7" y="979.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1114.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.49%)</title><rect x="1112.9" y="963.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1115.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.49%)</title><rect x="1112.9" y="947.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.49%)</title><rect x="1112.9" y="931.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1115.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.49%)</title><rect x="1112.9" y="915.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.49%)</title><rect x="1112.9" y="899.0" width="5.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.39%)</title><rect x="1114.0" y="883.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1117.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.39%)</title><rect x="1114.0" y="867.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.0" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="1114.0" y="851.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1117.0" y="862.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="1114.0" y="835.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.0" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.34%)</title><rect x="1114.6" y="851.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1117.6" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.29%)</title><rect x="1115.2" y="835.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.29%)</title><rect x="1115.2" y="819.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1118.2" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.29%)</title><rect x="1115.2" y="803.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1118.2" y="814.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.29%)</title><rect x="1115.2" y="787.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1118.2" y="798.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.29%)</title><rect x="1115.2" y="771.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1118.2" y="782.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.25%)</title><rect x="1115.8" y="755.0" width="2.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1118.8" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.25%)</title><rect x="1115.8" y="739.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1118.8" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.25%)</title><rect x="1115.8" y="723.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1118.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (1 samples, 0.05%)</title><rect x="1118.7" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1121.7" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.05%)</title><rect x="1118.7" y="1011.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1121.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.accept (1 samples, 0.05%)</title><rect x="1118.7" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1121.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (1 samples, 0.05%)</title><rect x="1118.7" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="1118.7" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="1118.7" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="1118.7" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1121.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (1 samples, 0.05%)</title><rect x="1119.3" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1119.3" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1122.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1119.3" y="995.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1122.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1119.3" y="979.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1122.3" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1119.3" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.sendResponseFromFuture (1 samples, 0.05%)</title><rect x="1119.8" y="1043.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1122.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="1119.8" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1122.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="1119.8" y="1011.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1122.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="1119.8" y="995.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1119.8" y="979.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1122.8" y="990.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.05%)</title><rect x="1119.8" y="963.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1122.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1119.8" y="947.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1122.8" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1119.8" y="931.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1122.8" y="942.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.10%)</title><rect x="1120.4" y="1075.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1123.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.10%)</title><rect x="1120.4" y="1059.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1123.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1120.4" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1121.0" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1124.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="1121.0" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="1121.0" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.15%)</title><rect x="1121.6" y="1075.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.15%)</title><rect x="1121.6" y="1059.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.15%)</title><rect x="1121.6" y="1043.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1124.6" y="1054.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.10%)</title><rect x="1121.6" y="1027.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1124.6" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1122.7" y="1027.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1125.7" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1122.7" y="1011.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1125.7" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1122.7" y="995.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1125.7" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1122.7" y="979.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1125.7" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.15%)</title><rect x="1123.3" y="1107.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1123.3" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1126.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.05%)</title><rect x="1123.3" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.10%)</title><rect x="1123.9" y="1091.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.29%)</title><rect x="1125.1" y="1107.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.25%)</title><rect x="1125.6" y="1091.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1128.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1127.4" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1127.4" y="1059.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1130.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.10%)</title><rect x="1127.4" y="1043.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.4" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.10%)</title><rect x="1127.4" y="1027.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1130.4" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.10%)</title><rect x="1127.4" y="1011.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1130.4" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="1127.4" y="995.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1130.4" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1127.4" y="979.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.4" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1127.4" y="963.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1130.4" y="974.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.05%)</title><rect x="1127.4" y="947.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.4" y="958.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="1128.0" y="979.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.0" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.05%)</title><rect x="1128.5" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (95 samples, 4.67%)</title><rect x="1129.1" y="1123.0" width="55.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1132.1" y="1134.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (95 samples, 4.67%)</title><rect x="1129.1" y="1107.0" width="55.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1132.1" y="1118.0">one/n..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.10%)</title><rect x="1129.7" y="1091.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1132.7" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.39%)</title><rect x="1130.9" y="1091.0" width="4.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1133.9" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.15%)</title><rect x="1131.4" y="1075.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.4" y="1086.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.20%)</title><rect x="1133.2" y="1075.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1136.2" y="1086.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="1133.2" y="1059.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.2" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="1133.8" y="1059.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.8" y="1070.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1134.3" y="1059.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1137.3" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1134.9" y="1059.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1137.9" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1134.9" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.9" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1134.9" y="1027.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1137.9" y="1038.0"></text>
</g>
<g>
<title>__recv (83 samples, 4.08%)</title><rect x="1135.5" y="1091.0" width="48.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1138.5" y="1102.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 3.93%)</title><rect x="1137.2" y="1075.0" width="46.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1140.2" y="1086.0">entr..</text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.10%)</title><rect x="1137.2" y="1059.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1140.2" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 3.83%)</title><rect x="1138.4" y="1059.0" width="45.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1141.4" y="1070.0">do_s..</text>
</g>
<g>
<title>__x64_sys_recvfrom (76 samples, 3.73%)</title><rect x="1139.6" y="1043.0" width="44.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.6" y="1054.0">__x6..</text>
</g>
<g>
<title>__sys_recvfrom (75 samples, 3.69%)</title><rect x="1139.6" y="1027.0" width="43.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.6" y="1038.0">__sy..</text>
</g>
<g>
<title>fput_many (1 samples, 0.05%)</title><rect x="1140.1" y="1011.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1143.1" y="1022.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.05%)</title><rect x="1140.7" y="1011.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1143.7" y="1022.0"></text>
</g>
<g>
<title>sock_recvmsg (68 samples, 3.34%)</title><rect x="1141.3" y="1011.0" width="39.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1144.3" y="1022.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (68 samples, 3.34%)</title><rect x="1141.3" y="995.0" width="39.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.3" y="1006.0">ine..</text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.05%)</title><rect x="1141.9" y="979.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.9" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (66 samples, 3.24%)</title><rect x="1142.5" y="979.0" width="38.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1145.5" y="990.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.20%)</title><rect x="1143.6" y="963.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1146.6" y="974.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1144.2" y="947.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1147.2" y="958.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="1144.8" y="947.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1147.8" y="958.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="1144.8" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.8" y="942.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="1144.8" y="915.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1147.8" y="926.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.05%)</title><rect x="1145.4" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1148.4" y="942.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1145.9" y="963.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1148.9" y="974.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.29%)</title><rect x="1146.5" y="963.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1149.5" y="974.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.29%)</title><rect x="1146.5" y="947.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1149.5" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.20%)</title><rect x="1147.7" y="931.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1150.7" y="942.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="1147.7" y="915.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1150.7" y="926.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.10%)</title><rect x="1148.3" y="915.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.3" y="926.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.10%)</title><rect x="1148.3" y="899.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.3" y="910.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.05%)</title><rect x="1149.4" y="915.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1152.4" y="926.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (47 samples, 2.31%)</title><rect x="1150.0" y="963.0" width="27.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.0" y="974.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.05%)</title><rect x="1150.6" y="947.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1153.6" y="958.0"></text>
</g>
<g>
<title>tcp_send_ack (45 samples, 2.21%)</title><rect x="1151.1" y="947.0" width="26.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.1" y="958.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (44 samples, 2.16%)</title><rect x="1151.7" y="931.0" width="25.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1154.7" y="942.0">_..</text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.15%)</title><rect x="1151.7" y="915.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.7" y="926.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.05%)</title><rect x="1151.7" y="899.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.7" y="910.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="1151.7" y="883.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1154.7" y="894.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="1151.7" y="867.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1154.7" y="878.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="1152.3" y="899.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.3" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (40 samples, 1.97%)</title><rect x="1153.5" y="915.0" width="23.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.5" y="926.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (36 samples, 1.77%)</title><rect x="1155.2" y="899.0" width="20.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.2" y="910.0"></text>
</g>
<g>
<title>__ip_queue_xmit (36 samples, 1.77%)</title><rect x="1155.2" y="883.0" width="20.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1158.2" y="894.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="1155.2" y="867.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1158.2" y="878.0"></text>
</g>
<g>
<title>ip_local_out (34 samples, 1.67%)</title><rect x="1155.8" y="867.0" width="19.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.8" y="878.0"></text>
</g>
<g>
<title>ip_output (33 samples, 1.62%)</title><rect x="1156.4" y="851.0" width="19.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.4" y="862.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="1156.4" y="835.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1159.4" y="846.0"></text>
</g>
<g>
<title>ip_finish_output (32 samples, 1.57%)</title><rect x="1156.9" y="835.0" width="18.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1159.9" y="846.0"></text>
</g>
<g>
<title>__ip_finish_output (31 samples, 1.52%)</title><rect x="1156.9" y="819.0" width="18.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.9" y="830.0"></text>
</g>
<g>
<title>ip_finish_output2 (30 samples, 1.47%)</title><rect x="1157.5" y="803.0" width="17.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1160.5" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 1.23%)</title><rect x="1158.1" y="787.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1161.1" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 1.23%)</title><rect x="1158.1" y="771.0" width="14.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.1" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 1.23%)</title><rect x="1158.1" y="755.0" width="14.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.1" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 1.18%)</title><rect x="1158.1" y="739.0" width="13.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1161.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="1158.7" y="723.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1161.7" y="734.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 1.08%)</title><rect x="1159.3" y="723.0" width="12.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.3" y="734.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="1159.3" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1162.3" y="718.0"></text>
</g>
<g>
<title>process_backlog (21 samples, 1.03%)</title><rect x="1159.8" y="707.0" width="12.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1162.8" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (19 samples, 0.93%)</title><rect x="1160.4" y="691.0" width="11.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1163.4" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="1161.0" y="675.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.0" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 0.84%)</title><rect x="1161.6" y="675.0" width="9.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1164.6" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.10%)</title><rect x="1161.6" y="659.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1164.6" y="670.0"></text>
</g>
<g>
<title>ip_rcv (15 samples, 0.74%)</title><rect x="1162.7" y="659.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1165.7" y="670.0"></text>
</g>
<g>
<title>ip_rcv_finish (14 samples, 0.69%)</title><rect x="1162.7" y="643.0" width="8.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1165.7" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (14 samples, 0.69%)</title><rect x="1162.7" y="627.0" width="8.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.7" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (14 samples, 0.69%)</title><rect x="1162.7" y="611.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1165.7" y="622.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (13 samples, 0.64%)</title><rect x="1162.7" y="595.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1165.7" y="606.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="1162.7" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1165.7" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 0.59%)</title><rect x="1163.3" y="579.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1166.3" y="590.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="1163.9" y="563.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.9" y="574.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="1165.1" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1168.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 0.39%)</title><rect x="1165.6" y="563.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.6" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 0.39%)</title><rect x="1165.6" y="547.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.6" y="558.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="1166.8" y="531.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1169.8" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="1166.8" y="515.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1169.8" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="1166.8" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1169.8" y="510.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.25%)</title><rect x="1167.4" y="531.0" width="2.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1170.4" y="542.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.25%)</title><rect x="1167.4" y="515.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1170.4" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.20%)</title><rect x="1167.4" y="499.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.4" y="510.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.15%)</title><rect x="1167.4" y="483.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1170.4" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.10%)</title><rect x="1168.0" y="467.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1171.0" y="478.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="1169.1" y="483.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.1" y="494.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="1169.1" y="467.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1172.1" y="478.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="1169.1" y="451.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.1" y="462.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="1169.1" y="435.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1172.1" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.05%)</title><rect x="1169.7" y="499.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1172.7" y="510.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="1170.3" y="595.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1173.3" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.05%)</title><rect x="1170.9" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.9" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="1171.4" y="691.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1174.4" y="702.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="1172.0" y="739.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1175.0" y="750.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.20%)</title><rect x="1172.6" y="787.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1175.6" y="798.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.20%)</title><rect x="1172.6" y="771.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1175.6" y="782.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.15%)</title><rect x="1172.6" y="755.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.6" y="766.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.05%)</title><rect x="1173.2" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.2" y="750.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.05%)</title><rect x="1173.8" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.8" y="750.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="1174.3" y="755.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.3" y="766.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="1174.9" y="819.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.9" y="830.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="1175.5" y="867.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.5" y="878.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.05%)</title><rect x="1176.1" y="899.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.1" y="910.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="1176.7" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1179.7" y="926.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="1177.2" y="963.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1180.2" y="974.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.15%)</title><rect x="1177.8" y="963.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.8" y="974.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.10%)</title><rect x="1178.4" y="947.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1181.4" y="958.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.10%)</title><rect x="1178.4" y="931.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.4" y="942.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.10%)</title><rect x="1179.6" y="963.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.6" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.20%)</title><rect x="1180.7" y="1011.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1183.7" y="1022.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.15%)</title><rect x="1180.7" y="995.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1183.7" y="1006.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.15%)</title><rect x="1180.7" y="979.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1183.7" y="990.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.15%)</title><rect x="1180.7" y="963.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1183.7" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="1182.5" y="995.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1185.5" y="1006.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.05%)</title><rect x="1183.0" y="1027.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.0" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.05%)</title><rect x="1183.6" y="1091.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1186.6" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1184.2" y="1155.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.2" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1184.2" y="1139.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1187.2" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1184.2" y="1123.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.2" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1184.2" y="1107.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.2" y="1118.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.44%)</title><rect x="1184.8" y="1171.0" width="5.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1187.8" y="1182.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.44%)</title><rect x="1184.8" y="1155.0" width="5.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.8" y="1166.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.44%)</title><rect x="1184.8" y="1139.0" width="5.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="1150.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.39%)</title><rect x="1184.8" y="1123.0" width="4.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.8" y="1134.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.25%)</title><rect x="1184.8" y="1107.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.8" y="1118.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="1184.8" y="1091.0" width="2.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.8" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.20%)</title><rect x="1184.8" y="1075.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.8" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.20%)</title><rect x="1184.8" y="1059.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.8" y="1070.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (4 samples, 0.20%)</title><rect x="1184.8" y="1043.0" width="2.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.8" y="1054.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.20%)</title><rect x="1184.8" y="1027.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.8" y="1038.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (4 samples, 0.20%)</title><rect x="1184.8" y="1011.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.8" y="1022.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (4 samples, 0.20%)</title><rect x="1184.8" y="995.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.8" y="1006.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1185.9" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.9" y="990.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.05%)</title><rect x="1186.5" y="979.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.5" y="990.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1186.5" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="974.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1187.1" y="1091.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.05%)</title><rect x="1187.1" y="1075.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1187.1" y="1059.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1187.1" y="1043.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.05%)</title><rect x="1187.1" y="1027.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (1 samples, 0.05%)</title><rect x="1187.1" y="1011.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.1" y="1022.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.05%)</title><rect x="1187.1" y="995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="1006.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (3 samples, 0.15%)</title><rect x="1187.7" y="1107.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.7" y="1118.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (3 samples, 0.15%)</title><rect x="1187.7" y="1091.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.7" y="1102.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.0] (3 samples, 0.15%)</title><rect x="1187.7" y="1075.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.15%)</title><rect x="1187.7" y="1059.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.7" y="1070.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.05%)</title><rect x="1187.7" y="1043.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.7" y="1054.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.05%)</title><rect x="1188.3" y="1043.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.3" y="1054.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="1188.8" y="1043.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.8" y="1054.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="1188.8" y="1027.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.8" y="1038.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.05%)</title><rect x="1189.4" y="1123.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="1134.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.05%)</title><rect x="1189.4" y="1107.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.4" y="1118.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.05%)</title><rect x="1189.4" y="1091.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.4" y="1102.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread() (1 samples, 0.05%)</title><rect x="1189.4" y="1075.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.4" y="1086.0"></text>
</g>
</g>
</svg>
