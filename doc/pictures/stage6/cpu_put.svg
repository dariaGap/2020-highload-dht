<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1541"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1541"> </text>
<g id="frames">
<g>
<title>all (1,751 samples, 100.00%)</title><rect x="10.0" y="1507.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="1518.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (13 samples, 0.74%)</title><rect x="10.0" y="1491.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1502.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (13 samples, 0.74%)</title><rect x="10.0" y="1475.0" width="8.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1486.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="10.0" y="1459.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="1470.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="10.0" y="1443.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="13.0" y="1454.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="10.0" y="1427.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="13.0" y="1438.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="10.0" y="1411.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.0" y="1422.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (11 samples, 0.63%)</title><rect x="10.7" y="1459.0" width="7.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.7" y="1470.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (11 samples, 0.63%)</title><rect x="10.7" y="1443.0" width="7.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="13.7" y="1454.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="18.1" y="1459.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="21.1" y="1470.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="18.1" y="1443.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.1" y="1454.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="18.1" y="1427.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.1" y="1438.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.06%)</title><rect x="18.8" y="1491.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="21.8" y="1502.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.29%)</title><rect x="19.4" y="1491.0" width="3.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="22.4" y="1502.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.29%)</title><rect x="19.4" y="1475.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="22.4" y="1486.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.29%)</title><rect x="19.4" y="1459.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.4" y="1470.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.17%)</title><rect x="19.4" y="1443.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="22.4" y="1454.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (2 samples, 0.11%)</title><rect x="19.4" y="1427.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.4" y="1438.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="20.8" y="1427.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="23.8" y="1438.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.11%)</title><rect x="21.5" y="1443.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="24.5" y="1454.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.23%)</title><rect x="22.8" y="1491.0" width="2.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="25.8" y="1502.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (4 samples, 0.23%)</title><rect x="22.8" y="1475.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="25.8" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.23%)</title><rect x="22.8" y="1459.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="25.8" y="1470.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="22.8" y="1443.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.8" y="1454.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.17%)</title><rect x="23.5" y="1443.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.5" y="1454.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.17%)</title><rect x="23.5" y="1427.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="26.5" y="1438.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.17%)</title><rect x="23.5" y="1411.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="26.5" y="1422.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.17%)</title><rect x="23.5" y="1395.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="26.5" y="1406.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.17%)</title><rect x="23.5" y="1379.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.5" y="1390.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (3 samples, 0.17%)</title><rect x="23.5" y="1363.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="26.5" y="1374.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.17%)</title><rect x="23.5" y="1347.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.5" y="1358.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="23.5" y="1331.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.5" y="1342.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.69%)</title><rect x="25.5" y="1491.0" width="8.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="28.5" y="1502.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.11%)</title><rect x="25.5" y="1475.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="28.5" y="1486.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="26.2" y="1459.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.2" y="1470.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="26.2" y="1443.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.2" y="1454.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="26.2" y="1427.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="29.2" y="1438.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="26.8" y="1475.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="29.8" y="1486.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.06%)</title><rect x="26.8" y="1459.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="29.8" y="1470.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.17%)</title><rect x="27.5" y="1475.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="30.5" y="1486.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.34%)</title><rect x="29.5" y="1475.0" width="4.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="32.5" y="1486.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.34%)</title><rect x="29.5" y="1459.0" width="4.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="32.5" y="1470.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.34%)</title><rect x="29.5" y="1443.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.5" y="1454.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.34%)</title><rect x="29.5" y="1427.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.5" y="1438.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.34%)</title><rect x="29.5" y="1411.0" width="4.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="32.5" y="1422.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.34%)</title><rect x="29.5" y="1395.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.5" y="1406.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.34%)</title><rect x="29.5" y="1379.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.5" y="1390.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.34%)</title><rect x="29.5" y="1363.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.5" y="1374.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.34%)</title><rect x="29.5" y="1347.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.5" y="1358.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="33.6" y="1491.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="36.6" y="1502.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="33.6" y="1475.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.6" y="1486.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="33.6" y="1459.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="36.6" y="1470.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="33.6" y="1443.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.6" y="1454.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="33.6" y="1427.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="36.6" y="1438.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="33.6" y="1411.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.6" y="1422.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="33.6" y="1395.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="36.6" y="1406.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="33.6" y="1379.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.6" y="1390.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="33.6" y="1363.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.6" y="1374.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,142 samples, 65.22%)</title><rect x="34.3" y="1491.0" width="769.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="37.3" y="1502.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,142 samples, 65.22%)</title><rect x="34.3" y="1475.0" width="769.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="37.3" y="1486.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,142 samples, 65.22%)</title><rect x="34.3" y="1459.0" width="769.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="37.3" y="1470.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="36.3" y="1443.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="39.3" y="1454.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="36.3" y="1427.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="39.3" y="1438.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="36.3" y="1411.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="39.3" y="1422.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="36.3" y="1395.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="39.3" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (436 samples, 24.90%)</title><rect x="37.0" y="1443.0" width="293.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.0" y="1454.0">java/util/concurrent/CompletableFuture$..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (189 samples, 10.79%)</title><rect x="37.0" y="1427.0" width="127.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.0" y="1438.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (109 samples, 6.23%)</title><rect x="39.0" y="1411.0" width="73.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.0" y="1422.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.apply (107 samples, 6.11%)</title><rect x="39.7" y="1395.0" width="72.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.7" y="1406.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (107 samples, 6.11%)</title><rect x="39.7" y="1379.0" width="72.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="42.7" y="1390.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (107 samples, 6.11%)</title><rect x="39.7" y="1363.0" width="72.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.7" y="1374.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.06%)</title><rect x="39.7" y="1347.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.06%)</title><rect x="39.7" y="1331.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.06%)</title><rect x="39.7" y="1315.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="42.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (92 samples, 5.25%)</title><rect x="40.3" y="1347.0" width="62.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.3" y="1358.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (92 samples, 5.25%)</title><rect x="40.3" y="1331.0" width="62.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="1342.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (92 samples, 5.25%)</title><rect x="40.3" y="1315.0" width="62.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.3" y="1326.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (52 samples, 2.97%)</title><rect x="40.3" y="1299.0" width="35.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.3" y="1310.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (52 samples, 2.97%)</title><rect x="40.3" y="1283.0" width="35.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.3" y="1294.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (52 samples, 2.97%)</title><rect x="40.3" y="1267.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.3" y="1278.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.apply (52 samples, 2.97%)</title><rect x="40.3" y="1251.0" width="35.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.3" y="1262.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (52 samples, 2.97%)</title><rect x="40.3" y="1235.0" width="35.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.3" y="1246.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (52 samples, 2.97%)</title><rect x="40.3" y="1219.0" width="35.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.3" y="1230.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (52 samples, 2.97%)</title><rect x="40.3" y="1203.0" width="35.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.3" y="1214.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (52 samples, 2.97%)</title><rect x="40.3" y="1187.0" width="35.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="1198.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (4 samples, 0.23%)</title><rect x="40.3" y="1171.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (4 samples, 0.23%)</title><rect x="40.3" y="1155.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.17%)</title><rect x="40.3" y="1139.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.apply (3 samples, 0.17%)</title><rect x="40.3" y="1123.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (3 samples, 0.17%)</title><rect x="40.3" y="1107.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (3 samples, 0.17%)</title><rect x="40.3" y="1091.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.apply (1 samples, 0.06%)</title><rect x="40.3" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.06%)</title><rect x="40.3" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="43.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.06%)</title><rect x="40.3" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.06%)</title><rect x="40.3" y="1027.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.06%)</title><rect x="40.3" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.06%)</title><rect x="40.3" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$260/433311816.accept (1 samples, 0.06%)</title><rect x="40.3" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.06%)</title><rect x="40.3" y="963.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.06%)</title><rect x="40.3" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.06%)</title><rect x="40.3" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="43.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.06%)</title><rect x="40.3" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="40.3" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="40.3" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="40.3" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="40.3" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.06%)</title><rect x="40.3" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.06%)</title><rect x="40.3" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.06%)</title><rect x="40.3" y="803.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="40.3" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="40.3" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="40.3" y="755.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="40.3" y="739.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="40.3" y="723.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="43.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="40.3" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="40.3" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.06%)</title><rect x="40.3" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.06%)</title><rect x="40.3" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="43.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.06%)</title><rect x="40.3" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="43.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.06%)</title><rect x="40.3" y="627.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.06%)</title><rect x="40.3" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.06%)</title><rect x="40.3" y="595.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.3" y="606.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.06%)</title><rect x="40.3" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="43.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.06%)</title><rect x="40.3" y="563.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.06%)</title><rect x="40.3" y="547.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.3" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.06%)</title><rect x="40.3" y="531.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.06%)</title><rect x="40.3" y="515.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.06%)</title><rect x="40.3" y="499.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="43.3" y="510.0"></text>
</g>
<g>
<title>writev (1 samples, 0.06%)</title><rect x="40.3" y="483.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="43.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="40.3" y="467.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.3" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="40.3" y="451.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="43.3" y="462.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.06%)</title><rect x="40.3" y="435.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.3" y="446.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.06%)</title><rect x="40.3" y="419.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.3" y="430.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.06%)</title><rect x="40.3" y="403.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.3" y="414.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.06%)</title><rect x="40.3" y="387.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="43.3" y="398.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.06%)</title><rect x="40.3" y="371.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.3" y="382.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.06%)</title><rect x="40.3" y="355.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.3" y="366.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.06%)</title><rect x="40.3" y="339.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.3" y="350.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.06%)</title><rect x="40.3" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="43.3" y="334.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.06%)</title><rect x="40.3" y="307.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="43.3" y="318.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.06%)</title><rect x="40.3" y="291.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="43.3" y="302.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.06%)</title><rect x="40.3" y="275.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.3" y="286.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="40.3" y="259.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.3" y="270.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.06%)</title><rect x="40.3" y="243.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="43.3" y="254.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="40.3" y="227.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="43.3" y="238.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="40.3" y="211.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="43.3" y="222.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="40.3" y="195.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="43.3" y="206.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="40.3" y="179.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.3" y="190.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="40.3" y="163.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="43.3" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="40.3" y="147.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.3" y="158.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="40.3" y="131.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.3" y="142.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="40.3" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="43.3" y="126.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="40.3" y="99.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.3" y="110.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.06%)</title><rect x="40.3" y="83.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.3" y="94.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="40.3" y="67.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="43.3" y="78.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="40.3" y="51.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="43.3" y="62.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="40.3" y="35.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="43.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (2 samples, 0.11%)</title><rect x="41.0" y="1075.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="44.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.11%)</title><rect x="41.0" y="1059.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.06%)</title><rect x="42.3" y="1139.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.3" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="42.3" y="1123.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.3" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="42.3" y="1107.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="45.3" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="42.3" y="1091.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="45.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (48 samples, 2.74%)</title><rect x="43.0" y="1171.0" width="32.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.0" y="1182.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (43 samples, 2.46%)</title><rect x="43.0" y="1155.0" width="29.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.0" y="1166.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (43 samples, 2.46%)</title><rect x="43.0" y="1139.0" width="29.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.0" y="1150.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.apply (43 samples, 2.46%)</title><rect x="43.0" y="1123.0" width="29.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.0" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (43 samples, 2.46%)</title><rect x="43.0" y="1107.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.0" y="1118.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="43.0" y="1091.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="43.0" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="43.7" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="43.7" y="1075.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="43.7" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="46.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="44.4" y="1091.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="44.4" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="47.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="44.4" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="44.4" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="44.4" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="44.4" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="44.4" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="47.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.06%)</title><rect x="44.4" y="979.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.06%)</title><rect x="44.4" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="44.4" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="44.4" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.4" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="44.4" y="915.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.4" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="44.4" y="899.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="47.4" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="44.4" y="883.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (3 samples, 0.17%)</title><rect x="45.0" y="1091.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.17%)</title><rect x="45.0" y="1075.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.06%)</title><rect x="45.0" y="1059.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="45.0" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="45.0" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="48.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="45.0" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="45.0" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.0" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="45.0" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="48.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="45.0" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="48.0" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="45.0" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="48.0" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="45.0" y="931.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="48.0" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="45.0" y="915.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="48.0" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="45.0" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="48.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.11%)</title><rect x="45.7" y="1059.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.11%)</title><rect x="45.7" y="1043.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="45.7" y="1027.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="45.7" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="45.7" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.7" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="45.7" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (1 samples, 0.06%)</title><rect x="46.4" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="46.4" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (37 samples, 2.11%)</title><rect x="47.1" y="1091.0" width="24.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.1" y="1102.0">j..</text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.06%)</title><rect x="47.1" y="1075.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="47.1" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.11%)</title><rect x="47.7" y="1075.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.11%)</title><rect x="47.7" y="1059.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2 samples, 0.11%)</title><rect x="47.7" y="1043.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.11%)</title><rect x="49.1" y="1075.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.11%)</title><rect x="49.1" y="1059.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="52.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.06%)</title><rect x="49.1" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.1" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="49.1" y="1027.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.1" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="49.1" y="1011.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="52.1" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="49.1" y="995.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="52.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.06%)</title><rect x="49.8" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="52.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.06%)</title><rect x="50.4" y="1075.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="50.4" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="53.4" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="50.4" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.4" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="50.4" y="1027.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="53.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (18 samples, 1.03%)</title><rect x="51.1" y="1075.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.1" y="1086.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.06%)</title><rect x="51.1" y="1059.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="51.1" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="51.1" y="1027.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.06%)</title><rect x="51.1" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.23%)</title><rect x="51.8" y="1059.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="54.8" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.17%)</title><rect x="51.8" y="1043.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.06%)</title><rect x="53.8" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="56.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (3 samples, 0.17%)</title><rect x="54.5" y="1059.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.5" y="1070.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$249/740179033.test (1 samples, 0.06%)</title><rect x="54.5" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.5" y="1054.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (1 samples, 0.06%)</title><rect x="54.5" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1127224355.test (1 samples, 0.06%)</title><rect x="54.5" y="1011.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (1 samples, 0.06%)</title><rect x="54.5" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.5" y="1006.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/416153648.test (1 samples, 0.06%)</title><rect x="54.5" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.5" y="990.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (1 samples, 0.06%)</title><rect x="54.5" y="963.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/815674463.test (1 samples, 0.06%)</title><rect x="54.5" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.06%)</title><rect x="54.5" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="54.5" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="54.5" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="57.5" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="54.5" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.5" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="54.5" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="57.5" y="878.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="54.5" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="57.5" y="862.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="54.5" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="57.5" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="54.5" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="57.5" y="830.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="54.5" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="57.5" y="814.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.06%)</title><rect x="54.5" y="787.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="57.5" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="55.2" y="1043.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="58.2" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="55.8" y="1043.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.8" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="55.8" y="1027.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="58.8" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="55.8" y="1011.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="58.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (1 samples, 0.06%)</title><rect x="56.5" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isTunnel (1 samples, 0.06%)</title><rect x="56.5" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="59.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (9 samples, 0.51%)</title><rect x="57.2" y="1059.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="60.2" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.51%)</title><rect x="57.2" y="1043.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="60.2" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (9 samples, 0.51%)</title><rect x="57.2" y="1027.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="60.2" y="1038.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="58.5" y="1011.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="61.5" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="59.2" y="995.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.2" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="59.2" y="979.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="62.2" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="59.2" y="963.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.2" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.29%)</title><rect x="59.9" y="1011.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.9" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (4 samples, 0.23%)</title><rect x="59.9" y="995.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.9" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.23%)</title><rect x="59.9" y="979.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="62.9" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.11%)</title><rect x="59.9" y="963.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.9" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (1 samples, 0.06%)</title><rect x="60.5" y="947.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="63.5" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="60.5" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="63.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="60.5" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="63.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="60.5" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.5" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="60.5" y="883.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="63.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="61.2" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="64.2" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.06%)</title><rect x="61.2" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="64.2" y="958.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="61.9" y="963.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="64.9" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="62.6" y="995.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.6" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="62.6" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.6" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="62.6" y="963.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="65.6" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="62.6" y="947.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="65.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (1 samples, 0.06%)</title><rect x="63.2" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="63.2" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.2" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="63.2" y="1043.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="66.2" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="63.2" y="1027.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.2" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="63.2" y="1011.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="66.2" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="63.2" y="995.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="66.2" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="63.2" y="979.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="66.2" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="63.2" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="66.2" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::supports_tlab_allocation() const (1 samples, 0.06%)</title><rect x="63.2" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="66.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.23%)</title><rect x="63.9" y="1075.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (4 samples, 0.23%)</title><rect x="63.9" y="1059.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.17%)</title><rect x="64.6" y="1043.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.17%)</title><rect x="64.6" y="1027.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (3 samples, 0.17%)</title><rect x="64.6" y="1011.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.11%)</title><rect x="64.6" y="995.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.06%)</title><rect x="64.6" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.06%)</title><rect x="65.3" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1160460865.invoke (1 samples, 0.06%)</title><rect x="65.9" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="65.9" y="979.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.06%)</title><rect x="65.9" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="65.9" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.9" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="65.9" y="931.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="68.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.46%)</title><rect x="66.6" y="1075.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.6" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="66.6" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.6" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.40%)</title><rect x="67.3" y="1059.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.3" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.06%)</title><rect x="69.3" y="1043.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="72.3" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.11%)</title><rect x="70.0" y="1043.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.0" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="71.3" y="1043.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="74.3" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="71.3" y="1027.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.3" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="71.3" y="1011.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="74.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5 samples, 0.29%)</title><rect x="72.0" y="1155.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.29%)</title><rect x="72.0" y="1139.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.17%)</title><rect x="72.0" y="1123.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.17%)</title><rect x="72.0" y="1107.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.11%)</title><rect x="74.0" y="1123.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.11%)</title><rect x="74.0" y="1107.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.11%)</title><rect x="74.0" y="1091.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.11%)</title><rect x="74.0" y="1075.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.11%)</title><rect x="74.0" y="1059.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (2 samples, 0.11%)</title><rect x="74.0" y="1043.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="77.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.11%)</title><rect x="74.0" y="1027.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.06%)</title><rect x="74.0" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="74.0" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="77.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="74.7" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.06%)</title><rect x="74.7" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="74.7" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="74.7" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="74.7" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.06%)</title><rect x="74.7" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="75.4" y="1299.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="75.4" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.06%)</title><rect x="75.4" y="1267.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.4" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="75.4" y="1251.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.4" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="75.4" y="1235.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.4" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="75.4" y="1219.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="78.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (39 samples, 2.23%)</title><rect x="76.0" y="1299.0" width="26.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.0" y="1310.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="76.0" y="1283.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="76.0" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.&lt;init&gt; (1 samples, 0.06%)</title><rect x="76.0" y="1251.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="79.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="76.0" y="1235.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="79.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="76.0" y="1219.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="76.7" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="76.7" y="1267.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.06%)</title><rect x="76.7" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="76.7" y="1235.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="76.7" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (37 samples, 2.11%)</title><rect x="77.4" y="1283.0" width="24.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.4" y="1294.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (37 samples, 2.11%)</title><rect x="77.4" y="1267.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.4" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (37 samples, 2.11%)</title><rect x="77.4" y="1251.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.4" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (13 samples, 0.74%)</title><rect x="77.4" y="1235.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (13 samples, 0.74%)</title><rect x="77.4" y="1219.0" width="8.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.4" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.23%)</title><rect x="78.1" y="1203.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="81.1" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.23%)</title><rect x="78.1" y="1187.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="81.1" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.17%)</title><rect x="78.1" y="1171.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="81.1" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="79.4" y="1155.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.4" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="79.4" y="1139.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.4" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="79.4" y="1123.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="82.4" y="1134.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.06%)</title><rect x="80.1" y="1171.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="83.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (8 samples, 0.46%)</title><rect x="80.8" y="1203.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.8" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.23%)</title><rect x="80.8" y="1187.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.8" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.17%)</title><rect x="80.8" y="1171.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.11%)</title><rect x="81.4" y="1155.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.4" y="1166.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.11%)</title><rect x="81.4" y="1139.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.4" y="1150.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.11%)</title><rect x="81.4" y="1123.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.4" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.11%)</title><rect x="81.4" y="1107.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.06%)</title><rect x="82.8" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (1 samples, 0.06%)</title><rect x="82.8" y="1155.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.8" y="1166.0"></text>
</g>
<g>
<title>java/util/Objects.hash (1 samples, 0.06%)</title><rect x="82.8" y="1139.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.8" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (1 samples, 0.06%)</title><rect x="82.8" y="1123.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.23%)</title><rect x="83.5" y="1187.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="86.5" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (4 samples, 0.23%)</title><rect x="83.5" y="1171.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.5" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlink (2 samples, 0.11%)</title><rect x="84.1" y="1155.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.1" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="84.8" y="1139.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.8" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="84.8" y="1123.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="87.8" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="84.8" y="1107.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="87.8" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="85.5" y="1155.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="88.5" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="85.5" y="1139.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.5" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="85.5" y="1123.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="88.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (24 samples, 1.37%)</title><rect x="86.2" y="1235.0" width="16.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.2" y="1246.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (21 samples, 1.20%)</title><rect x="88.2" y="1219.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.2" y="1230.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.97%)</title><rect x="88.2" y="1203.0" width="11.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="91.2" y="1214.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.06%)</title><rect x="88.8" y="1187.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="91.8" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="89.5" y="1187.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="92.5" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="89.5" y="1171.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.5" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.17%)</title><rect x="90.2" y="1187.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="93.2" y="1198.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="90.9" y="1171.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="93.9" y="1182.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="91.5" y="1171.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="94.5" y="1182.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.11%)</title><rect x="92.2" y="1187.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="95.2" y="1198.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.11%)</title><rect x="93.6" y="1187.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="96.6" y="1198.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="94.9" y="1187.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="97.9" y="1198.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.11%)</title><rect x="95.6" y="1187.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="98.6" y="1198.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.11%)</title><rect x="95.6" y="1171.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.6" y="1182.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.11%)</title><rect x="95.6" y="1155.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="98.6" y="1166.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="96.3" y="1139.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="99.3" y="1150.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="96.3" y="1123.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.3" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="96.3" y="1107.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="99.3" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="96.3" y="1091.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.3" y="1102.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="96.3" y="1075.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="99.3" y="1086.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="96.3" y="1059.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="99.3" y="1070.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="96.3" y="1043.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.3" y="1054.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.23%)</title><rect x="96.9" y="1187.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="99.9" y="1198.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.17%)</title><rect x="97.6" y="1171.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="100.6" y="1182.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.06%)</title><rect x="98.3" y="1155.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="101.3" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="99.0" y="1155.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.0" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="99.0" y="1139.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.0" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="99.0" y="1123.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.0" y="1134.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.06%)</title><rect x="99.6" y="1203.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="102.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/1042709263.run (3 samples, 0.17%)</title><rect x="100.3" y="1203.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="103.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.17%)</title><rect x="100.3" y="1187.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="103.3" y="1198.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.06%)</title><rect x="100.3" y="1171.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.3" y="1182.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.11%)</title><rect x="101.0" y="1171.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.0" y="1182.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.11%)</title><rect x="101.0" y="1155.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="104.0" y="1166.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.11%)</title><rect x="101.0" y="1139.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.0" y="1150.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.11%)</title><rect x="101.0" y="1123.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="101.0" y="1107.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.06%)</title><rect x="101.0" y="1091.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.06%)</title><rect x="101.0" y="1075.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.0" y="1086.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.06%)</title><rect x="101.0" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.0" y="1070.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.06%)</title><rect x="101.7" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (7 samples, 0.40%)</title><rect x="102.3" y="1347.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (6 samples, 0.34%)</title><rect x="103.0" y="1331.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.0" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.34%)</title><rect x="103.0" y="1315.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.0" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.34%)</title><rect x="103.0" y="1299.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.0" y="1310.0"></text>
</g>
<g>
<title>__write (6 samples, 0.34%)</title><rect x="103.0" y="1283.0" width="4.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="106.0" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.34%)</title><rect x="103.0" y="1267.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="106.0" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.34%)</title><rect x="103.0" y="1251.0" width="4.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="106.0" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.29%)</title><rect x="103.7" y="1235.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.7" y="1246.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.29%)</title><rect x="103.7" y="1219.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.7" y="1230.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.29%)</title><rect x="103.7" y="1203.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="106.7" y="1214.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.29%)</title><rect x="103.7" y="1187.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.7" y="1198.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.29%)</title><rect x="103.7" y="1171.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="106.7" y="1182.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.29%)</title><rect x="103.7" y="1155.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.7" y="1166.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.29%)</title><rect x="103.7" y="1139.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="106.7" y="1150.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.29%)</title><rect x="103.7" y="1123.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.7" y="1134.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.29%)</title><rect x="103.7" y="1107.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (5 samples, 0.29%)</title><rect x="107.0" y="1347.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.23%)</title><rect x="107.0" y="1331.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.11%)</title><rect x="107.0" y="1315.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.0" y="1326.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.11%)</title><rect x="107.0" y="1299.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.0" y="1310.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.11%)</title><rect x="107.0" y="1283.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.11%)</title><rect x="107.0" y="1267.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.0" y="1278.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.06%)</title><rect x="107.0" y="1251.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="110.0" y="1262.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="107.7" y="1251.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="110.7" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="107.7" y="1235.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="110.7" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="107.7" y="1219.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="110.7" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="107.7" y="1203.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.7" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="107.7" y="1187.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="110.7" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="107.7" y="1171.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="110.7" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="107.7" y="1155.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="110.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getProxyURI (2 samples, 0.11%)</title><rect x="108.4" y="1315.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.4" y="1326.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.06%)</title><rect x="109.1" y="1299.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.1" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="109.7" y="1331.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="112.7" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="109.7" y="1315.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="112.7" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="109.7" y="1299.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="112.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.11%)</title><rect x="110.4" y="1347.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.11%)</title><rect x="110.4" y="1331.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.11%)</title><rect x="110.4" y="1315.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="113.4" y="1326.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.06%)</title><rect x="110.4" y="1299.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.4" y="1310.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.06%)</title><rect x="110.4" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="110.4" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.4" y="1278.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="110.4" y="1251.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="113.4" y="1262.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="110.4" y="1235.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="113.4" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="110.4" y="1219.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.4" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="110.4" y="1203.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="113.4" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="110.4" y="1187.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="113.4" y="1198.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="111.1" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.1" y="1310.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.06%)</title><rect x="111.1" y="1283.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.1" y="1294.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="111.1" y="1267.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="114.1" y="1278.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.06%)</title><rect x="111.1" y="1251.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="114.1" y="1262.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (1 samples, 0.06%)</title><rect x="111.1" y="1235.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.1" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="111.8" y="1395.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.8" y="1406.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="111.8" y="1379.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="114.8" y="1390.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="111.8" y="1363.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="114.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (77 samples, 4.40%)</title><rect x="112.4" y="1411.0" width="51.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.4" y="1422.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (76 samples, 4.34%)</title><rect x="113.1" y="1395.0" width="51.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.1" y="1406.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (74 samples, 4.23%)</title><rect x="113.1" y="1379.0" width="49.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.1" y="1390.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (74 samples, 4.23%)</title><rect x="113.1" y="1363.0" width="49.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.1" y="1374.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (74 samples, 4.23%)</title><rect x="113.1" y="1347.0" width="49.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="116.1" y="1358.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (68 samples, 3.88%)</title><rect x="115.1" y="1331.0" width="45.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.1" y="1342.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.17%)</title><rect x="115.1" y="1315.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.1" y="1326.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 3.71%)</title><rect x="117.2" y="1315.0" width="43.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.2" y="1326.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (65 samples, 3.71%)</title><rect x="117.2" y="1299.0" width="43.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.2" y="1310.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (65 samples, 3.71%)</title><rect x="117.2" y="1283.0" width="43.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.2" y="1294.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (65 samples, 3.71%)</title><rect x="117.2" y="1267.0" width="43.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.2" y="1278.0">one/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="118.5" y="1251.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="121.5" y="1262.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.11%)</title><rect x="119.2" y="1251.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="122.2" y="1262.0"></text>
</g>
<g>
<title>send (60 samples, 3.43%)</title><rect x="120.5" y="1251.0" width="40.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="123.5" y="1262.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 3.31%)</title><rect x="121.9" y="1235.0" width="39.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="124.9" y="1246.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 3.31%)</title><rect x="121.9" y="1219.0" width="39.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="124.9" y="1230.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (57 samples, 3.26%)</title><rect x="122.5" y="1203.0" width="38.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="125.5" y="1214.0">__x..</text>
</g>
<g>
<title>__sys_sendto (56 samples, 3.20%)</title><rect x="122.5" y="1187.0" width="37.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="125.5" y="1198.0">__s..</text>
</g>
<g>
<title>sock_sendmsg (56 samples, 3.20%)</title><rect x="122.5" y="1171.0" width="37.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="125.5" y="1182.0">soc..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="122.5" y="1155.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.5" y="1166.0"></text>
</g>
<g>
<title>inet6_sendmsg (55 samples, 3.14%)</title><rect x="123.2" y="1155.0" width="37.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="126.2" y="1166.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (55 samples, 3.14%)</title><rect x="123.2" y="1139.0" width="37.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="126.2" y="1150.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="124.6" y="1123.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="127.6" y="1134.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="125.2" y="1123.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="128.2" y="1134.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (51 samples, 2.91%)</title><rect x="125.9" y="1123.0" width="34.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="128.9" y="1134.0">tc..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="125.9" y="1107.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="128.9" y="1118.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="125.9" y="1091.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.9" y="1102.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="126.6" y="1107.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.6" y="1118.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.06%)</title><rect x="127.3" y="1107.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="130.3" y="1118.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="127.3" y="1091.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="130.3" y="1102.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.40%)</title><rect x="127.9" y="1107.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="130.9" y="1118.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.40%)</title><rect x="127.9" y="1091.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.9" y="1102.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.17%)</title><rect x="127.9" y="1075.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="130.9" y="1086.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.11%)</title><rect x="127.9" y="1059.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="130.9" y="1070.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="129.3" y="1059.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.3" y="1070.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.23%)</title><rect x="130.0" y="1075.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="133.0" y="1086.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="132.0" y="1059.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="135.0" y="1070.0"></text>
</g>
<g>
<title>___slab_alloc (1 samples, 0.06%)</title><rect x="132.0" y="1043.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="135.0" y="1054.0"></text>
</g>
<g>
<title>new_slab (1 samples, 0.06%)</title><rect x="132.0" y="1027.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="135.0" y="1038.0"></text>
</g>
<g>
<title>allocate_slab (1 samples, 0.06%)</title><rect x="132.0" y="1011.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="135.0" y="1022.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="132.6" y="1107.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="135.6" y="1118.0"></text>
</g>
<g>
<title>tcp_push (39 samples, 2.23%)</title><rect x="133.3" y="1107.0" width="26.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="136.3" y="1118.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (39 samples, 2.23%)</title><rect x="133.3" y="1091.0" width="26.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="136.3" y="1102.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (38 samples, 2.17%)</title><rect x="134.0" y="1075.0" width="25.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.0" y="1086.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (31 samples, 1.77%)</title><rect x="136.0" y="1059.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="139.0" y="1070.0"></text>
</g>
<g>
<title>ip_queue_xmit (27 samples, 1.54%)</title><rect x="138.7" y="1043.0" width="18.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="141.7" y="1054.0"></text>
</g>
<g>
<title>__ip_queue_xmit (26 samples, 1.48%)</title><rect x="138.7" y="1027.0" width="17.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="141.7" y="1038.0"></text>
</g>
<g>
<title>ip_local_out (26 samples, 1.48%)</title><rect x="138.7" y="1011.0" width="17.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.7" y="1022.0"></text>
</g>
<g>
<title>ip_output (25 samples, 1.43%)</title><rect x="139.4" y="995.0" width="16.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="142.4" y="1006.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="139.4" y="979.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.4" y="990.0"></text>
</g>
<g>
<title>ip_finish_output (24 samples, 1.37%)</title><rect x="140.1" y="979.0" width="16.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="143.1" y="990.0"></text>
</g>
<g>
<title>__ip_finish_output (24 samples, 1.37%)</title><rect x="140.1" y="963.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.1" y="974.0"></text>
</g>
<g>
<title>ip_finish_output2 (24 samples, 1.37%)</title><rect x="140.1" y="947.0" width="16.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.1" y="958.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (20 samples, 1.14%)</title><rect x="140.7" y="931.0" width="13.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="143.7" y="942.0"></text>
</g>
<g>
<title>do_softirq.part.0 (20 samples, 1.14%)</title><rect x="140.7" y="915.0" width="13.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="143.7" y="926.0"></text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 1.14%)</title><rect x="140.7" y="899.0" width="13.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="143.7" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 1.14%)</title><rect x="140.7" y="883.0" width="13.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.7" y="894.0"></text>
</g>
<g>
<title>net_rx_action (20 samples, 1.14%)</title><rect x="140.7" y="867.0" width="13.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="143.7" y="878.0"></text>
</g>
<g>
<title>process_backlog (20 samples, 1.14%)</title><rect x="140.7" y="851.0" width="13.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="143.7" y="862.0"></text>
</g>
<g>
<title>__netif_receive_skb (20 samples, 1.14%)</title><rect x="140.7" y="835.0" width="13.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="143.7" y="846.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (20 samples, 1.14%)</title><rect x="140.7" y="819.0" width="13.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="143.7" y="830.0"></text>
</g>
<g>
<title>ip_rcv (20 samples, 1.14%)</title><rect x="140.7" y="803.0" width="13.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="143.7" y="814.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.06%)</title><rect x="140.7" y="787.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.7" y="798.0"></text>
</g>
<g>
<title>ip_rcv_finish (19 samples, 1.09%)</title><rect x="141.4" y="787.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="144.4" y="798.0"></text>
</g>
<g>
<title>ip_local_deliver (18 samples, 1.03%)</title><rect x="142.1" y="771.0" width="12.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="145.1" y="782.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (18 samples, 1.03%)</title><rect x="142.1" y="755.0" width="12.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="145.1" y="766.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (18 samples, 1.03%)</title><rect x="142.1" y="739.0" width="12.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="145.1" y="750.0"></text>
</g>
<g>
<title>tcp_v4_rcv (18 samples, 1.03%)</title><rect x="142.1" y="723.0" width="12.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="145.1" y="734.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="142.1" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="145.1" y="718.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.11%)</title><rect x="142.8" y="707.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="145.8" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.06%)</title><rect x="143.4" y="691.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="146.4" y="702.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 0.80%)</title><rect x="144.1" y="707.0" width="9.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="147.1" y="718.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.11%)</title><rect x="144.8" y="691.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.8" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.63%)</title><rect x="146.1" y="691.0" width="7.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="149.1" y="702.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.23%)</title><rect x="147.5" y="675.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.5" y="686.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.23%)</title><rect x="147.5" y="659.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="150.5" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.23%)</title><rect x="147.5" y="643.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="150.5" y="654.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.23%)</title><rect x="147.5" y="627.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="150.5" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="147.5" y="611.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="150.5" y="622.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.06%)</title><rect x="149.5" y="611.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="152.5" y="622.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 0.29%)</title><rect x="150.2" y="675.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.2" y="686.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.29%)</title><rect x="150.2" y="659.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="153.2" y="670.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.29%)</title><rect x="150.2" y="643.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="153.2" y="654.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.29%)</title><rect x="150.2" y="627.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="153.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.29%)</title><rect x="150.2" y="611.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="153.2" y="622.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="153.5" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="156.5" y="718.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.17%)</title><rect x="154.2" y="931.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="157.2" y="942.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.17%)</title><rect x="154.2" y="915.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.2" y="926.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="154.9" y="899.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.9" y="910.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="154.9" y="883.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="157.9" y="894.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="154.9" y="867.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="157.9" y="878.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="154.9" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="157.9" y="862.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="154.9" y="835.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="157.9" y="846.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.06%)</title><rect x="155.6" y="899.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="158.6" y="910.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="156.2" y="1027.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="159.2" y="1038.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.06%)</title><rect x="156.9" y="1059.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="159.9" y="1070.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.06%)</title><rect x="157.6" y="1059.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="160.6" y="1070.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="158.3" y="1059.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="161.3" y="1070.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.06%)</title><rect x="158.9" y="1059.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="161.9" y="1070.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="158.9" y="1043.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="161.9" y="1054.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="159.6" y="1107.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="162.6" y="1118.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="159.6" y="1091.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.6" y="1102.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="160.3" y="1187.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="163.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.17%)</title><rect x="161.0" y="1331.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="162.3" y="1315.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="162.3" y="1299.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="165.3" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (2 samples, 0.11%)</title><rect x="163.0" y="1379.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.0" y="1390.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (2 samples, 0.11%)</title><rect x="163.0" y="1363.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="163.0" y="1347.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="163.0" y="1331.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="166.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.06%)</title><rect x="163.6" y="1347.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.6" y="1358.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="163.6" y="1331.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="1342.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="163.6" y="1315.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="166.6" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.06%)</title><rect x="163.6" y="1299.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="166.6" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="163.6" y="1283.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="166.6" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="163.6" y="1267.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="166.6" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="163.6" y="1251.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="166.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="163.6" y="1235.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="166.6" y="1246.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="163.6" y="1219.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="166.6" y="1230.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned long, bool, bool*) (1 samples, 0.06%)</title><rect x="163.6" y="1203.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="166.6" y="1214.0"></text>
</g>
<g>
<title>ContiguousSpace::par_allocate(unsigned long) (1 samples, 0.06%)</title><rect x="163.6" y="1187.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="166.6" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$111/1623904019.get (246 samples, 14.05%)</title><rect x="164.3" y="1427.0" width="165.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.3" y="1438.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$put$1 (246 samples, 14.05%)</title><rect x="164.3" y="1411.0" width="165.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.3" y="1422.0">ru/mail/polis/service..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="166.3" y="1395.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="169.3" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="166.3" y="1379.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="169.3" y="1390.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="166.3" y="1363.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="169.3" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="166.3" y="1347.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="169.3" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="166.3" y="1331.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="169.3" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="166.3" y="1315.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="169.3" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.17%)</title><rect x="167.0" y="1395.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.0" y="1406.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.17%)</title><rect x="167.0" y="1379.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.0" y="1390.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (1 samples, 0.06%)</title><rect x="168.4" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.4" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="169.0" y="1395.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.0" y="1406.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="169.0" y="1379.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="172.0" y="1390.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="169.0" y="1363.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="172.0" y="1374.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="169.0" y="1347.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="172.0" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="169.0" y="1331.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="172.0" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="169.0" y="1315.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="172.0" y="1326.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="169.0" y="1299.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="172.0" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (238 samples, 13.59%)</title><rect x="169.7" y="1395.0" width="160.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.7" y="1406.0">ru/mail/polis/dao/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (233 samples, 13.31%)</title><rect x="169.7" y="1379.0" width="157.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.7" y="1390.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="170.4" y="1363.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.4" y="1374.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (231 samples, 13.19%)</title><rect x="171.1" y="1363.0" width="155.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.1" y="1374.0">org/rocksdb/RocksDB...</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (223 samples, 12.74%)</title><rect x="172.4" y="1347.0" width="150.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="175.4" y="1358.0">Java_org_rocksdb_Ro..</text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.11%)</title><rect x="173.1" y="1331.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="176.1" y="1342.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.17%)</title><rect x="174.4" y="1331.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="177.4" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="175.8" y="1315.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="178.8" y="1326.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="175.8" y="1299.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="178.8" y="1310.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="175.8" y="1283.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="178.8" y="1294.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="176.5" y="1331.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="179.5" y="1342.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="177.1" y="1331.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="180.1" y="1342.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (215 samples, 12.28%)</title><rect x="177.8" y="1331.0" width="144.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="180.8" y="1342.0">rocksdb_put_helper..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="178.5" y="1315.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="181.5" y="1326.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.06%)</title><rect x="179.1" y="1315.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="182.1" y="1326.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.23%)</title><rect x="179.8" y="1315.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="182.8" y="1326.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="180.5" y="1299.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="183.5" y="1310.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.11%)</title><rect x="181.2" y="1299.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.2" y="1310.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (205 samples, 11.71%)</title><rect x="182.5" y="1315.0" width="138.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="185.5" y="1326.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (205 samples, 11.71%)</title><rect x="182.5" y="1299.0" width="138.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="185.5" y="1310.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (204 samples, 11.65%)</title><rect x="182.5" y="1283.0" width="137.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="185.5" y="1294.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (3 samples, 0.17%)</title><rect x="182.5" y="1267.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="185.5" y="1278.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.11%)</title><rect x="184.5" y="1267.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="187.5" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="185.2" y="1251.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="188.2" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="185.2" y="1235.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.2" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="185.2" y="1219.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.2" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (194 samples, 11.08%)</title><rect x="185.9" y="1267.0" width="130.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="188.9" y="1278.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.11%)</title><rect x="186.6" y="1251.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="189.6" y="1262.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.06%)</title><rect x="187.9" y="1251.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="190.9" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.06%)</title><rect x="188.6" y="1251.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="191.6" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (183 samples, 10.45%)</title><rect x="189.3" y="1251.0" width="123.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="192.3" y="1262.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.11%)</title><rect x="192.0" y="1235.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="195.0" y="1246.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.06%)</title><rect x="193.3" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="196.3" y="1246.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (108 samples, 6.17%)</title><rect x="194.0" y="1235.0" width="72.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="197.0" y="1246.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.06%)</title><rect x="194.6" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="197.6" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (106 samples, 6.05%)</title><rect x="195.3" y="1219.0" width="71.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="198.3" y="1230.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.06%)</title><rect x="196.7" y="1203.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="199.7" y="1214.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (103 samples, 5.88%)</title><rect x="197.3" y="1203.0" width="69.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="200.3" y="1214.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (7 samples, 0.40%)</title><rect x="200.0" y="1187.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="203.0" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="204.1" y="1171.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.1" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="204.1" y="1155.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.1" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="204.1" y="1139.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.1" y="1150.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.06%)</title><rect x="204.8" y="1187.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="207.8" y="1198.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (81 samples, 4.63%)</title><rect x="205.4" y="1187.0" width="54.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="208.4" y="1198.0">rocks..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize(rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (4 samples, 0.23%)</title><rect x="205.4" y="1171.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="208.4" y="1182.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (77 samples, 4.40%)</title><rect x="208.1" y="1171.0" width="51.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="211.1" y="1182.0">rocks..</text>
</g>
<g>
<title>__write (73 samples, 4.17%)</title><rect x="210.1" y="1155.0" width="49.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="213.1" y="1166.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 4.11%)</title><rect x="210.8" y="1139.0" width="48.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="213.8" y="1150.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (72 samples, 4.11%)</title><rect x="210.8" y="1123.0" width="48.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="213.8" y="1134.0">do_s..</text>
</g>
<g>
<title>__x64_sys_write (71 samples, 4.05%)</title><rect x="211.5" y="1107.0" width="47.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="214.5" y="1118.0">__x6..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="211.5" y="1091.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="214.5" y="1102.0"></text>
</g>
<g>
<title>ksys_write (70 samples, 4.00%)</title><rect x="212.2" y="1091.0" width="47.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="215.2" y="1102.0">ksys..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="212.2" y="1075.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.2" y="1086.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="212.2" y="1059.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="215.2" y="1070.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="212.2" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="215.2" y="1054.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.06%)</title><rect x="212.8" y="1075.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="215.8" y="1086.0"></text>
</g>
<g>
<title>vfs_write (68 samples, 3.88%)</title><rect x="213.5" y="1075.0" width="45.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="216.5" y="1086.0">vfs_..</text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.17%)</title><rect x="214.2" y="1059.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.2" y="1070.0"></text>
</g>
<g>
<title>__vfs_write (61 samples, 3.48%)</title><rect x="216.2" y="1059.0" width="41.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="219.2" y="1070.0">__v..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.06%)</title><rect x="216.2" y="1043.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="219.2" y="1054.0"></text>
</g>
<g>
<title>new_sync_write (60 samples, 3.43%)</title><rect x="216.9" y="1043.0" width="40.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="219.9" y="1054.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (59 samples, 3.37%)</title><rect x="217.6" y="1027.0" width="39.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="220.6" y="1038.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (59 samples, 3.37%)</title><rect x="217.6" y="1011.0" width="39.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="220.6" y="1022.0">__g..</text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.06%)</title><rect x="218.2" y="995.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="221.2" y="1006.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.06%)</title><rect x="218.9" y="995.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="221.9" y="1006.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.06%)</title><rect x="219.6" y="995.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.6" y="1006.0"></text>
</g>
<g>
<title>file_remove_privs (1 samples, 0.06%)</title><rect x="220.3" y="995.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="223.3" y="1006.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.29%)</title><rect x="220.9" y="995.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="223.9" y="1006.0"></text>
</g>
<g>
<title>generic_update_time (5 samples, 0.29%)</title><rect x="220.9" y="979.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="223.9" y="990.0"></text>
</g>
<g>
<title>__mark_inode_dirty (5 samples, 0.29%)</title><rect x="220.9" y="963.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.9" y="974.0"></text>
</g>
<g>
<title>ext4_dirty_inode (5 samples, 0.29%)</title><rect x="220.9" y="947.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="223.9" y="958.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.23%)</title><rect x="220.9" y="931.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="223.9" y="942.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.23%)</title><rect x="220.9" y="915.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="223.9" y="926.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.17%)</title><rect x="220.9" y="899.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="223.9" y="910.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.06%)</title><rect x="223.0" y="899.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="226.0" y="910.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.06%)</title><rect x="223.0" y="883.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="226.0" y="894.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.06%)</title><rect x="223.6" y="931.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="226.6" y="942.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.06%)</title><rect x="223.6" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="226.6" y="926.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.06%)</title><rect x="223.6" y="899.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="226.6" y="910.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.06%)</title><rect x="223.6" y="883.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="226.6" y="894.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.06%)</title><rect x="223.6" y="867.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="226.6" y="878.0"></text>
</g>
<g>
<title>generic_perform_write (48 samples, 2.74%)</title><rect x="224.3" y="995.0" width="32.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="227.3" y="1006.0">ge..</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="225.0" y="979.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.0" y="990.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.06%)</title><rect x="225.0" y="963.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="228.0" y="974.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="225.0" y="947.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="228.0" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="225.0" y="931.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="228.0" y="942.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (1 samples, 0.06%)</title><rect x="225.6" y="979.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.6" y="990.0"></text>
</g>
<g>
<title>ext4_da_write_begin (13 samples, 0.74%)</title><rect x="226.3" y="979.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="229.3" y="990.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.11%)</title><rect x="227.7" y="963.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="230.7" y="974.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.11%)</title><rect x="227.7" y="947.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.7" y="958.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.06%)</title><rect x="227.7" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="230.7" y="942.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.06%)</title><rect x="228.3" y="931.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="231.3" y="942.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (8 samples, 0.46%)</title><rect x="229.0" y="963.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.0" y="974.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.06%)</title><rect x="229.0" y="947.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="232.0" y="958.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.40%)</title><rect x="229.7" y="947.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="232.7" y="958.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (2 samples, 0.11%)</title><rect x="229.7" y="931.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.7" y="942.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.06%)</title><rect x="229.7" y="915.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="232.7" y="926.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.06%)</title><rect x="229.7" y="899.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="232.7" y="910.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.06%)</title><rect x="229.7" y="883.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.7" y="894.0"></text>
</g>
<g>
<title>lru_cache_add (1 samples, 0.06%)</title><rect x="230.4" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="233.4" y="926.0"></text>
</g>
<g>
<title>__lru_cache_add (1 samples, 0.06%)</title><rect x="230.4" y="899.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.4" y="910.0"></text>
</g>
<g>
<title>pagevec_lru_move_fn (1 samples, 0.06%)</title><rect x="230.4" y="883.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="233.4" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="230.4" y="867.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="233.4" y="878.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.11%)</title><rect x="231.0" y="931.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.0" y="942.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.17%)</title><rect x="232.4" y="931.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="235.4" y="942.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.06%)</title><rect x="234.4" y="963.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.4" y="974.0"></text>
</g>
<g>
<title>ext4_da_write_end (31 samples, 1.77%)</title><rect x="235.1" y="979.0" width="20.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.1" y="990.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.17%)</title><rect x="235.1" y="963.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="238.1" y="974.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.17%)</title><rect x="235.1" y="947.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.1" y="958.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.17%)</title><rect x="235.1" y="931.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="238.1" y="942.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.06%)</title><rect x="237.1" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="240.1" y="974.0"></text>
</g>
<g>
<title>generic_write_end (27 samples, 1.54%)</title><rect x="237.8" y="963.0" width="18.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.8" y="974.0"></text>
</g>
<g>
<title>__mark_inode_dirty (24 samples, 1.37%)</title><rect x="239.1" y="947.0" width="16.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="242.1" y="958.0"></text>
</g>
<g>
<title>ext4_dirty_inode (24 samples, 1.37%)</title><rect x="239.1" y="931.0" width="16.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.1" y="942.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (23 samples, 1.31%)</title><rect x="239.1" y="915.0" width="15.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="242.1" y="926.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (15 samples, 0.86%)</title><rect x="240.5" y="899.0" width="10.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.5" y="910.0"></text>
</g>
<g>
<title>__brelse (2 samples, 0.11%)</title><rect x="240.5" y="883.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="243.5" y="894.0"></text>
</g>
<g>
<title>ext4_do_update_inode (11 samples, 0.63%)</title><rect x="241.8" y="883.0" width="7.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.8" y="894.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (9 samples, 0.51%)</title><rect x="243.2" y="867.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="246.2" y="878.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.11%)</title><rect x="243.2" y="851.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="246.2" y="862.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (7 samples, 0.40%)</title><rect x="244.5" y="851.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="247.5" y="862.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.11%)</title><rect x="246.5" y="835.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="249.5" y="846.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.11%)</title><rect x="247.9" y="835.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.9" y="846.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.11%)</title><rect x="247.9" y="819.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="250.9" y="830.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.06%)</title><rect x="249.2" y="883.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="252.2" y="894.0"></text>
</g>
<g>
<title>from_kgid (1 samples, 0.06%)</title><rect x="249.9" y="883.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.9" y="894.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.34%)</title><rect x="250.6" y="899.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="253.6" y="910.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (5 samples, 0.29%)</title><rect x="251.3" y="883.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="254.3" y="894.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.11%)</title><rect x="251.3" y="867.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.3" y="878.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.11%)</title><rect x="251.3" y="851.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.3" y="862.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.06%)</title><rect x="251.9" y="835.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="254.9" y="846.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.17%)</title><rect x="252.6" y="867.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.6" y="878.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.06%)</title><rect x="254.6" y="915.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="257.6" y="926.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.06%)</title><rect x="255.3" y="947.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="258.3" y="958.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.06%)</title><rect x="256.0" y="979.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="259.0" y="990.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="256.0" y="963.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="259.0" y="974.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.06%)</title><rect x="256.6" y="995.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.6" y="1006.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="257.3" y="1059.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.3" y="1070.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.11%)</title><rect x="258.0" y="1059.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.0" y="1070.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.11%)</title><rect x="258.0" y="1043.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="261.0" y="1054.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="259.3" y="1155.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="262.3" y="1166.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.06%)</title><rect x="260.0" y="1187.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="263.0" y="1198.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (9 samples, 0.51%)</title><rect x="260.7" y="1187.0" width="6.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="263.7" y="1198.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="260.7" y="1171.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="263.7" y="1182.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="261.4" y="1171.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="264.4" y="1182.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.06%)</title><rect x="262.0" y="1171.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="265.0" y="1182.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.06%)</title><rect x="262.7" y="1171.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="265.7" y="1182.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.06%)</title><rect x="263.4" y="1171.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="266.4" y="1182.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="264.1" y="1171.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="267.1" y="1182.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (2 samples, 0.11%)</title><rect x="264.7" y="1171.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="267.7" y="1182.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="266.1" y="1171.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="269.1" y="1182.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.06%)</title><rect x="266.8" y="1235.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="269.8" y="1246.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.06%)</title><rect x="267.4" y="1235.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="270.4" y="1246.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (47 samples, 2.68%)</title><rect x="268.1" y="1235.0" width="31.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="271.1" y="1246.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (46 samples, 2.63%)</title><rect x="268.8" y="1219.0" width="31.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="271.8" y="1230.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="268.8" y="1203.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="271.8" y="1214.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (45 samples, 2.57%)</title><rect x="269.5" y="1203.0" width="30.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="272.5" y="1214.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 2.40%)</title><rect x="269.5" y="1187.0" width="28.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="272.5" y="1198.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.06%)</title><rect x="269.5" y="1171.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="272.5" y="1182.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.06%)</title><rect x="270.1" y="1171.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="273.1" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="270.1" y="1155.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="273.1" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="270.1" y="1139.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.1" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="270.1" y="1123.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="273.1" y="1134.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (40 samples, 2.28%)</title><rect x="270.8" y="1171.0" width="27.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="273.8" y="1182.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (2 samples, 0.11%)</title><rect x="272.1" y="1155.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="275.1" y="1166.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="273.5" y="1155.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="276.5" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="273.5" y="1139.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="276.5" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="273.5" y="1123.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="276.5" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="273.5" y="1107.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.5" y="1118.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="273.5" y="1091.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.5" y="1102.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.06%)</title><rect x="273.5" y="1075.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="276.5" y="1086.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.06%)</title><rect x="273.5" y="1059.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.5" y="1070.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.06%)</title><rect x="274.2" y="1155.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="277.2" y="1166.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="274.2" y="1139.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.2" y="1150.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="274.2" y="1123.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.2" y="1134.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="274.2" y="1107.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.2" y="1118.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="274.2" y="1091.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.2" y="1102.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="274.2" y="1075.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="277.2" y="1086.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="274.2" y="1059.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.2" y="1070.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (32 samples, 1.83%)</title><rect x="274.8" y="1155.0" width="21.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="277.8" y="1166.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (5 samples, 0.29%)</title><rect x="278.9" y="1139.0" width="3.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="281.9" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="280.9" y="1123.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="283.9" y="1134.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.06%)</title><rect x="281.6" y="1123.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="284.6" y="1134.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (20 samples, 1.14%)</title><rect x="282.3" y="1139.0" width="13.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="285.3" y="1150.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (18 samples, 1.03%)</title><rect x="283.6" y="1123.0" width="12.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="286.6" y="1134.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (7 samples, 0.40%)</title><rect x="289.7" y="1107.0" width="4.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="292.7" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="289.7" y="1091.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="292.7" y="1102.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.34%)</title><rect x="290.3" y="1091.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="293.3" y="1102.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (1 samples, 0.06%)</title><rect x="291.7" y="1075.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="294.7" y="1086.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="292.4" y="1075.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="295.4" y="1086.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="293.0" y="1075.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="296.0" y="1086.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.06%)</title><rect x="293.7" y="1075.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="296.7" y="1086.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.11%)</title><rect x="294.4" y="1107.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="297.4" y="1118.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.06%)</title><rect x="295.1" y="1091.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="298.1" y="1102.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.06%)</title><rect x="295.7" y="1139.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="298.7" y="1150.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.06%)</title><rect x="295.7" y="1123.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="298.7" y="1134.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.06%)</title><rect x="296.4" y="1155.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="299.4" y="1166.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.06%)</title><rect x="297.1" y="1155.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="300.1" y="1166.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (3 samples, 0.17%)</title><rect x="297.8" y="1187.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="300.8" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="299.1" y="1171.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="302.1" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="299.1" y="1155.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="302.1" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="299.1" y="1139.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="302.1" y="1150.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.06%)</title><rect x="299.8" y="1235.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="302.8" y="1246.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.06%)</title><rect x="299.8" y="1219.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="302.8" y="1230.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.06%)</title><rect x="300.5" y="1235.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="303.5" y="1246.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 0.46%)</title><rect x="301.1" y="1235.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="304.1" y="1246.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.06%)</title><rect x="305.2" y="1219.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="308.2" y="1230.0"></text>
</g>
<g>
<title>std::condition_variable::wait(std::unique_lock&lt;std::mutex&gt;&amp;) (1 samples, 0.06%)</title><rect x="305.8" y="1219.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="308.8" y="1230.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (7 samples, 0.40%)</title><rect x="306.5" y="1235.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="309.5" y="1246.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.06%)</title><rect x="306.5" y="1219.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="309.5" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="306.5" y="1203.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="309.5" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="306.5" y="1187.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.5" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.06%)</title><rect x="306.5" y="1171.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.5" y="1182.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.06%)</title><rect x="306.5" y="1155.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.5" y="1166.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="306.5" y="1139.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.5" y="1150.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="306.5" y="1123.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="309.5" y="1134.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 0.34%)</title><rect x="307.2" y="1219.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="310.2" y="1230.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="311.2" y="1235.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="314.2" y="1246.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.06%)</title><rect x="311.9" y="1235.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="314.9" y="1246.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.06%)</title><rect x="312.6" y="1251.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="315.6" y="1262.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="313.3" y="1251.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="316.3" y="1262.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) [clone .plt] (1 samples, 0.06%)</title><rect x="313.9" y="1251.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="316.9" y="1262.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.06%)</title><rect x="314.6" y="1251.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="317.6" y="1262.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.06%)</title><rect x="315.3" y="1251.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="318.3" y="1262.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.06%)</title><rect x="316.0" y="1251.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="319.0" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.06%)</title><rect x="316.6" y="1267.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="319.6" y="1278.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.06%)</title><rect x="317.3" y="1267.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="320.3" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="317.3" y="1251.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="320.3" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="317.3" y="1235.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="320.3" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="317.3" y="1219.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="320.3" y="1230.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="318.0" y="1267.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="321.0" y="1278.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.06%)</title><rect x="318.0" y="1251.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="321.0" y="1262.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.06%)</title><rect x="318.6" y="1267.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="321.6" y="1278.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.06%)</title><rect x="319.3" y="1267.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="322.3" y="1278.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.06%)</title><rect x="320.0" y="1283.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="323.0" y="1294.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.06%)</title><rect x="320.7" y="1315.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="323.7" y="1326.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.11%)</title><rect x="321.3" y="1315.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="324.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="322.7" y="1347.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="325.7" y="1358.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.06%)</title><rect x="322.7" y="1331.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="325.7" y="1342.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.06%)</title><rect x="323.4" y="1347.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="326.4" y="1358.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.23%)</title><rect x="324.0" y="1347.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="327.0" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.23%)</title><rect x="324.0" y="1331.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="327.0" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.23%)</title><rect x="324.0" y="1315.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.0" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.23%)</title><rect x="324.0" y="1299.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="327.0" y="1310.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.23%)</title><rect x="324.0" y="1283.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="327.0" y="1294.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.23%)</title><rect x="324.0" y="1267.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="327.0" y="1278.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.23%)</title><rect x="324.0" y="1251.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.0" y="1262.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.23%)</title><rect x="324.0" y="1235.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="327.0" y="1246.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.23%)</title><rect x="324.0" y="1219.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="327.0" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampData (4 samples, 0.23%)</title><rect x="326.7" y="1379.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.7" y="1390.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (4 samples, 0.23%)</title><rect x="326.7" y="1363.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.7" y="1374.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.06%)</title><rect x="327.4" y="1347.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="330.4" y="1358.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="327.4" y="1331.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="330.4" y="1342.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="328.1" y="1347.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="331.1" y="1358.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="328.8" y="1347.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="331.8" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.06%)</title><rect x="329.4" y="1379.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="332.4" y="1390.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="329.4" y="1363.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="332.4" y="1374.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="329.4" y="1347.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="332.4" y="1358.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="329.4" y="1331.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="332.4" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="329.4" y="1315.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="332.4" y="1326.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="329.4" y="1299.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="332.4" y="1310.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.06%)</title><rect x="329.4" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="332.4" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="330.1" y="1427.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="333.1" y="1438.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="330.1" y="1411.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.1" y="1422.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="330.1" y="1395.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="333.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (89 samples, 5.08%)</title><rect x="330.8" y="1443.0" width="60.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.8" y="1454.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (89 samples, 5.08%)</title><rect x="330.8" y="1427.0" width="60.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.8" y="1438.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (86 samples, 4.91%)</title><rect x="330.8" y="1411.0" width="57.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="1422.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (86 samples, 4.91%)</title><rect x="330.8" y="1395.0" width="57.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.8" y="1406.0">java/u..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="330.8" y="1379.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="333.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (83 samples, 4.74%)</title><rect x="331.5" y="1379.0" width="55.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="334.5" y="1390.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (83 samples, 4.74%)</title><rect x="331.5" y="1363.0" width="55.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="334.5" y="1374.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.11%)</title><rect x="331.5" y="1347.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.5" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (1 samples, 0.06%)</title><rect x="332.1" y="1331.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.1" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (77 samples, 4.40%)</title><rect x="332.8" y="1347.0" width="51.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.8" y="1358.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (77 samples, 4.40%)</title><rect x="332.8" y="1331.0" width="51.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.8" y="1342.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 4.40%)</title><rect x="332.8" y="1315.0" width="51.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="335.8" y="1326.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (73 samples, 4.17%)</title><rect x="334.1" y="1299.0" width="49.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="337.1" y="1310.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.23%)</title><rect x="334.1" y="1283.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.1" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.17%)</title><rect x="334.8" y="1267.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.8" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.11%)</title><rect x="335.5" y="1251.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="338.5" y="1262.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.11%)</title><rect x="335.5" y="1235.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="338.5" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.11%)</title><rect x="335.5" y="1219.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="338.5" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.11%)</title><rect x="335.5" y="1203.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="338.5" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="335.5" y="1187.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="338.5" y="1198.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="336.2" y="1187.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="339.2" y="1198.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.06%)</title><rect x="336.2" y="1171.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="339.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 3.94%)</title><rect x="336.8" y="1283.0" width="46.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="339.8" y="1294.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (69 samples, 3.94%)</title><rect x="336.8" y="1267.0" width="46.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="339.8" y="1278.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (68 samples, 3.88%)</title><rect x="337.5" y="1251.0" width="45.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.5" y="1262.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (68 samples, 3.88%)</title><rect x="337.5" y="1235.0" width="45.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="340.5" y="1246.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.17%)</title><rect x="337.5" y="1219.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="340.5" y="1230.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="338.9" y="1203.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="341.9" y="1214.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="338.9" y="1187.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="341.9" y="1198.0"></text>
</g>
<g>
<title>send (65 samples, 3.71%)</title><rect x="339.5" y="1219.0" width="43.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="342.5" y="1230.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 3.66%)</title><rect x="340.2" y="1203.0" width="43.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="343.2" y="1214.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.06%)</title><rect x="340.2" y="1187.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="343.2" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 3.60%)</title><rect x="340.9" y="1187.0" width="42.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="343.9" y="1198.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (63 samples, 3.60%)</title><rect x="340.9" y="1171.0" width="42.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="343.9" y="1182.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (63 samples, 3.60%)</title><rect x="340.9" y="1155.0" width="42.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="343.9" y="1166.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (63 samples, 3.60%)</title><rect x="340.9" y="1139.0" width="42.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="343.9" y="1150.0">sock..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="340.9" y="1123.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="343.9" y="1134.0"></text>
</g>
<g>
<title>inet6_sendmsg (62 samples, 3.54%)</title><rect x="341.6" y="1123.0" width="41.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.6" y="1134.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (61 samples, 3.48%)</title><rect x="342.2" y="1107.0" width="41.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="345.2" y="1118.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="342.2" y="1091.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.2" y="1102.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.06%)</title><rect x="342.9" y="1091.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="345.9" y="1102.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (59 samples, 3.37%)</title><rect x="343.6" y="1091.0" width="39.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="346.6" y="1102.0">tcp..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="343.6" y="1075.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.6" y="1086.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.06%)</title><rect x="344.3" y="1075.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="347.3" y="1086.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="344.3" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="347.3" y="1070.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="344.9" y="1075.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="347.9" y="1086.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="345.6" y="1075.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="348.6" y="1086.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="345.6" y="1059.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="348.6" y="1070.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.29%)</title><rect x="346.3" y="1075.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.3" y="1086.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.29%)</title><rect x="346.3" y="1059.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.3" y="1070.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.11%)</title><rect x="346.3" y="1043.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="349.3" y="1054.0"></text>
</g>
<g>
<title>memset (2 samples, 0.11%)</title><rect x="346.3" y="1027.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="349.3" y="1038.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="347.6" y="1043.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.6" y="1054.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.11%)</title><rect x="348.3" y="1043.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="351.3" y="1054.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.11%)</title><rect x="348.3" y="1027.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.3" y="1038.0"></text>
</g>
<g>
<title>tcp_push (48 samples, 2.74%)</title><rect x="349.6" y="1075.0" width="32.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.6" y="1086.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (48 samples, 2.74%)</title><rect x="349.6" y="1059.0" width="32.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="352.6" y="1070.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (48 samples, 2.74%)</title><rect x="349.6" y="1043.0" width="32.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="352.6" y="1054.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (48 samples, 2.74%)</title><rect x="349.6" y="1027.0" width="32.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="352.6" y="1038.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (46 samples, 2.63%)</title><rect x="350.3" y="1011.0" width="31.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="353.3" y="1022.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (46 samples, 2.63%)</title><rect x="350.3" y="995.0" width="31.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="353.3" y="1006.0">__..</text>
</g>
<g>
<title>ip_local_out (45 samples, 2.57%)</title><rect x="350.3" y="979.0" width="30.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.3" y="990.0">ip..</text>
</g>
<g>
<title>ip_output (45 samples, 2.57%)</title><rect x="350.3" y="963.0" width="30.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="353.3" y="974.0">ip..</text>
</g>
<g>
<title>ip_finish_output (45 samples, 2.57%)</title><rect x="350.3" y="947.0" width="30.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.3" y="958.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (45 samples, 2.57%)</title><rect x="350.3" y="931.0" width="30.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="353.3" y="942.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (45 samples, 2.57%)</title><rect x="350.3" y="915.0" width="30.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="353.3" y="926.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (42 samples, 2.40%)</title><rect x="350.3" y="899.0" width="28.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="353.3" y="910.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (42 samples, 2.40%)</title><rect x="350.3" y="883.0" width="28.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="353.3" y="894.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (42 samples, 2.40%)</title><rect x="350.3" y="867.0" width="28.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="353.3" y="878.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (42 samples, 2.40%)</title><rect x="350.3" y="851.0" width="28.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="353.3" y="862.0">__..</text>
</g>
<g>
<title>net_rx_action (41 samples, 2.34%)</title><rect x="351.0" y="835.0" width="27.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="354.0" y="846.0">n..</text>
</g>
<g>
<title>process_backlog (41 samples, 2.34%)</title><rect x="351.0" y="819.0" width="27.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="354.0" y="830.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (39 samples, 2.23%)</title><rect x="352.3" y="803.0" width="26.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="355.3" y="814.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (39 samples, 2.23%)</title><rect x="352.3" y="787.0" width="26.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="355.3" y="798.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="353.0" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="356.0" y="782.0"></text>
</g>
<g>
<title>ip_rcv (37 samples, 2.11%)</title><rect x="353.7" y="771.0" width="24.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="356.7" y="782.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (37 samples, 2.11%)</title><rect x="353.7" y="755.0" width="24.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="356.7" y="766.0">i..</text>
</g>
<g>
<title>ip_local_deliver (37 samples, 2.11%)</title><rect x="353.7" y="739.0" width="24.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="356.7" y="750.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (37 samples, 2.11%)</title><rect x="353.7" y="723.0" width="24.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="356.7" y="734.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (37 samples, 2.11%)</title><rect x="353.7" y="707.0" width="24.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="356.7" y="718.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (37 samples, 2.11%)</title><rect x="353.7" y="691.0" width="24.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.7" y="702.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.11%)</title><rect x="353.7" y="675.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="356.7" y="686.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.17%)</title><rect x="355.0" y="675.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="358.0" y="686.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.11%)</title><rect x="355.0" y="659.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="358.0" y="670.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="356.4" y="659.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.4" y="670.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (32 samples, 1.83%)</title><rect x="357.1" y="675.0" width="21.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="360.1" y="686.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (32 samples, 1.83%)</title><rect x="357.1" y="659.0" width="21.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="360.1" y="670.0">t..</text>
</g>
<g>
<title>tcp_ack (9 samples, 0.51%)</title><rect x="357.1" y="643.0" width="6.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="360.1" y="654.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="358.4" y="627.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="361.4" y="638.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.29%)</title><rect x="359.1" y="627.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.1" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.23%)</title><rect x="359.8" y="611.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.8" y="622.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.23%)</title><rect x="359.8" y="595.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="362.8" y="606.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.23%)</title><rect x="359.8" y="579.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.8" y="590.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="361.8" y="563.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.8" y="574.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="361.8" y="547.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="364.8" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.06%)</title><rect x="362.5" y="627.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="365.5" y="638.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="363.1" y="643.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="366.1" y="654.0"></text>
</g>
<g>
<title>tcp_data_ready (21 samples, 1.20%)</title><rect x="363.8" y="643.0" width="14.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="366.8" y="654.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="363.8" y="627.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.8" y="638.0"></text>
</g>
<g>
<title>sock_def_readable (20 samples, 1.14%)</title><rect x="364.5" y="627.0" width="13.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="367.5" y="638.0"></text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 1.14%)</title><rect x="364.5" y="611.0" width="13.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="367.5" y="622.0"></text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 1.14%)</title><rect x="364.5" y="595.0" width="13.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="367.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 1.14%)</title><rect x="364.5" y="579.0" width="13.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="367.5" y="590.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.06%)</title><rect x="377.9" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="380.9" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.17%)</title><rect x="378.6" y="899.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="381.6" y="910.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.17%)</title><rect x="378.6" y="883.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="381.6" y="894.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="379.3" y="867.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="382.3" y="878.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="380.0" y="867.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="383.0" y="878.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="380.6" y="979.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.6" y="990.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.06%)</title><rect x="381.3" y="1011.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="384.3" y="1022.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.11%)</title><rect x="382.0" y="1075.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="385.0" y="1086.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="382.0" y="1059.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="385.0" y="1070.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="382.7" y="1059.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="385.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.11%)</title><rect x="383.3" y="1299.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="386.3" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (4 samples, 0.23%)</title><rect x="384.7" y="1347.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.7" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (4 samples, 0.23%)</title><rect x="384.7" y="1331.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="384.7" y="1315.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="384.7" y="1299.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.11%)</title><rect x="386.0" y="1283.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="389.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.11%)</title><rect x="386.0" y="1267.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.11%)</title><rect x="386.0" y="1251.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="389.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.11%)</title><rect x="386.0" y="1235.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="386.0" y="1219.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="386.0" y="1203.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="386.0" y="1187.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="386.0" y="1171.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="386.0" y="1155.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="389.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.11%)</title><rect x="386.0" y="1139.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="389.0" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.11%)</title><rect x="386.0" y="1123.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="389.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.11%)</title><rect x="386.0" y="1107.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="389.0" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.11%)</title><rect x="386.0" y="1091.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="389.0" y="1102.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.11%)</title><rect x="386.0" y="1075.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="389.0" y="1086.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.11%)</title><rect x="386.0" y="1059.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="389.0" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.11%)</title><rect x="386.0" y="1043.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="389.0" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.11%)</title><rect x="386.0" y="1027.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="389.0" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.11%)</title><rect x="386.0" y="1011.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="389.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$130/712231129.apply (1 samples, 0.06%)</title><rect x="387.4" y="1379.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="390.4" y="1390.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="387.4" y="1363.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="390.4" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="387.4" y="1347.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.4" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="387.4" y="1331.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="390.4" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.apply (1 samples, 0.06%)</title><rect x="388.1" y="1379.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.1" y="1390.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.apply (3 samples, 0.17%)</title><rect x="388.7" y="1411.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.7" y="1422.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (3 samples, 0.17%)</title><rect x="388.7" y="1395.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="391.7" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (3 samples, 0.17%)</title><rect x="388.7" y="1379.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.7" y="1390.0"></text>
</g>
<g>
<title>java/util/Collection.stream (3 samples, 0.17%)</title><rect x="388.7" y="1363.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (1 samples, 0.06%)</title><rect x="388.7" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.7" y="1358.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1 samples, 0.06%)</title><rect x="388.7" y="1331.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.7" y="1342.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="388.7" y="1315.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="391.7" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.11%)</title><rect x="389.4" y="1347.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.4" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.11%)</title><rect x="389.4" y="1331.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (180 samples, 10.28%)</title><rect x="390.8" y="1443.0" width="121.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.8" y="1454.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (117 samples, 6.68%)</title><rect x="390.8" y="1427.0" width="78.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="393.8" y="1438.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (86 samples, 4.91%)</title><rect x="391.4" y="1411.0" width="58.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="394.4" y="1422.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="392.1" y="1395.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.1" y="1406.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="392.1" y="1379.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="395.1" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="392.1" y="1363.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="395.1" y="1374.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="392.1" y="1347.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="395.1" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="392.1" y="1331.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="395.1" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="392.1" y="1315.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="395.1" y="1326.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="392.1" y="1299.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="395.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.86%)</title><rect x="392.8" y="1395.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.86%)</title><rect x="392.8" y="1379.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.80%)</title><rect x="392.8" y="1363.0" width="9.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.80%)</title><rect x="392.8" y="1347.0" width="9.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.74%)</title><rect x="393.4" y="1331.0" width="8.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="396.4" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.11%)</title><rect x="393.4" y="1315.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="396.4" y="1326.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="393.4" y="1299.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="396.4" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="394.1" y="1299.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.1" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="394.1" y="1283.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="397.1" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="394.1" y="1267.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.1" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.63%)</title><rect x="394.8" y="1315.0" width="7.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="397.8" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.63%)</title><rect x="394.8" y="1299.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.8" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.63%)</title><rect x="394.8" y="1283.0" width="7.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="397.8" y="1294.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.51%)</title><rect x="396.1" y="1267.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="399.1" y="1278.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.51%)</title><rect x="396.1" y="1251.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.1" y="1262.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.51%)</title><rect x="396.1" y="1235.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="399.1" y="1246.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.06%)</title><rect x="396.8" y="1219.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.8" y="1230.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.40%)</title><rect x="397.5" y="1219.0" width="4.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.5" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.40%)</title><rect x="397.5" y="1203.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="400.5" y="1214.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.40%)</title><rect x="397.5" y="1187.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="400.5" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="402.2" y="1363.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="405.2" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="402.2" y="1347.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="405.2" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="402.2" y="1331.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="405.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.06%)</title><rect x="402.9" y="1395.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="405.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.06%)</title><rect x="402.9" y="1379.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="405.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (68 samples, 3.88%)</title><rect x="403.6" y="1395.0" width="45.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.6" y="1406.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.06%)</title><rect x="403.6" y="1379.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="406.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (67 samples, 3.83%)</title><rect x="404.2" y="1379.0" width="45.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="407.2" y="1390.0">jdk/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="404.9" y="1363.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="407.9" y="1374.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.80%)</title><rect x="405.6" y="1363.0" width="9.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="408.6" y="1374.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="406.3" y="1347.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="409.3" y="1358.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.17%)</title><rect x="406.9" y="1347.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="409.9" y="1358.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="408.3" y="1331.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="411.3" y="1342.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="408.9" y="1347.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="411.9" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="408.9" y="1331.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.9" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="408.9" y="1315.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.9" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="408.9" y="1299.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.9" y="1310.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (7 samples, 0.40%)</title><rect x="409.6" y="1347.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="412.6" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.40%)</title><rect x="409.6" y="1331.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="412.6" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.40%)</title><rect x="409.6" y="1315.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="412.6" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.34%)</title><rect x="410.3" y="1299.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.3" y="1310.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.34%)</title><rect x="410.3" y="1283.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.3" y="1294.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="411.0" y="1267.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.0" y="1278.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="414.3" y="1347.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="417.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 2.86%)</title><rect x="415.0" y="1363.0" width="33.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="418.0" y="1374.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.06%)</title><rect x="415.0" y="1347.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="418.0" y="1358.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.06%)</title><rect x="415.7" y="1347.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="418.7" y="1358.0"></text>
</g>
<g>
<title>__pthread_cond_wait (46 samples, 2.63%)</title><rect x="416.4" y="1347.0" width="31.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="419.4" y="1358.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 2.46%)</title><rect x="418.4" y="1331.0" width="29.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="421.4" y="1342.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="418.4" y="1315.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="421.4" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 2.40%)</title><rect x="419.1" y="1315.0" width="28.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.1" y="1326.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 2.40%)</title><rect x="419.1" y="1299.0" width="28.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.1" y="1310.0">__..</text>
</g>
<g>
<title>do_futex (42 samples, 2.40%)</title><rect x="419.1" y="1283.0" width="28.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="422.1" y="1294.0">do..</text>
</g>
<g>
<title>futex_wait (42 samples, 2.40%)</title><rect x="419.1" y="1267.0" width="28.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.1" y="1278.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (39 samples, 2.23%)</title><rect x="419.1" y="1251.0" width="26.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.1" y="1262.0">f..</text>
</g>
<g>
<title>schedule (39 samples, 2.23%)</title><rect x="419.1" y="1235.0" width="26.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.1" y="1246.0">s..</text>
</g>
<g>
<title>__schedule (39 samples, 2.23%)</title><rect x="419.1" y="1219.0" width="26.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="422.1" y="1230.0">_..</text>
</g>
<g>
<title>finish_task_switch (39 samples, 2.23%)</title><rect x="419.1" y="1203.0" width="26.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="422.1" y="1214.0">f..</text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.11%)</title><rect x="445.3" y="1251.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="448.3" y="1262.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.06%)</title><rect x="446.7" y="1251.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.7" y="1262.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.06%)</title><rect x="447.4" y="1347.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="450.4" y="1358.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="448.0" y="1347.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="451.0" y="1358.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="448.7" y="1363.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="451.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (30 samples, 1.71%)</title><rect x="449.4" y="1411.0" width="20.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (30 samples, 1.71%)</title><rect x="449.4" y="1395.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (30 samples, 1.71%)</title><rect x="449.4" y="1379.0" width="20.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="452.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (30 samples, 1.71%)</title><rect x="449.4" y="1363.0" width="20.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="452.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.06%)</title><rect x="450.1" y="1347.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (28 samples, 1.60%)</title><rect x="450.7" y="1347.0" width="18.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.7" y="1358.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.06%)</title><rect x="450.7" y="1331.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="453.7" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.11%)</title><rect x="451.4" y="1331.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="454.4" y="1342.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.06%)</title><rect x="451.4" y="1315.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="454.4" y="1326.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="452.1" y="1315.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="455.1" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 1.43%)</title><rect x="452.8" y="1331.0" width="16.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="455.8" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.43%)</title><rect x="452.8" y="1315.0" width="16.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="455.8" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 1.43%)</title><rect x="452.8" y="1299.0" width="16.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.8" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 1.31%)</title><rect x="454.1" y="1283.0" width="15.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="457.1" y="1294.0"></text>
</g>
<g>
<title>do_futex (23 samples, 1.31%)</title><rect x="454.1" y="1267.0" width="15.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="457.1" y="1278.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 1.31%)</title><rect x="454.1" y="1251.0" width="15.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.1" y="1262.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="454.1" y="1235.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="457.1" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (22 samples, 1.26%)</title><rect x="454.8" y="1235.0" width="14.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="457.8" y="1246.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 1.26%)</title><rect x="454.8" y="1219.0" width="14.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="457.8" y="1230.0"></text>
</g>
<g>
<title>__lock_text_start (22 samples, 1.26%)</title><rect x="454.8" y="1203.0" width="14.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="457.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (63 samples, 3.60%)</title><rect x="469.6" y="1427.0" width="42.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.6" y="1438.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (37 samples, 2.11%)</title><rect x="469.6" y="1411.0" width="24.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.6" y="1422.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.29%)</title><rect x="469.6" y="1395.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.29%)</title><rect x="469.6" y="1379.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.29%)</title><rect x="469.6" y="1363.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.6" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.29%)</title><rect x="469.6" y="1347.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.29%)</title><rect x="469.6" y="1331.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.6" y="1342.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.29%)</title><rect x="469.6" y="1315.0" width="3.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="472.6" y="1326.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="469.6" y="1299.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.6" y="1310.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="469.6" y="1283.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.6" y="1294.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.29%)</title><rect x="469.6" y="1267.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="472.6" y="1278.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.29%)</title><rect x="469.6" y="1251.0" width="3.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.6" y="1262.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="469.6" y="1235.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.6" y="1246.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="469.6" y="1219.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="472.6" y="1230.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="469.6" y="1203.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="472.6" y="1214.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.29%)</title><rect x="469.6" y="1187.0" width="3.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 1.83%)</title><rect x="473.0" y="1395.0" width="21.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.0" y="1406.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 1.83%)</title><rect x="473.0" y="1379.0" width="21.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.0" y="1390.0">j..</text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.57%)</title><rect x="473.0" y="1363.0" width="6.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="476.0" y="1374.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.23%)</title><rect x="473.0" y="1347.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="476.0" y="1358.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="473.0" y="1331.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="476.0" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="473.0" y="1315.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="476.0" y="1326.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="473.0" y="1299.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="476.0" y="1310.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="473.0" y="1283.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="476.0" y="1294.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.11%)</title><rect x="473.6" y="1331.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="476.6" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="475.0" y="1331.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="478.0" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="475.0" y="1315.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="478.0" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="475.0" y="1299.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.0" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="475.7" y="1347.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="478.7" y="1358.0"></text>
</g>
<g>
<title>pthread_cond_wait (2 samples, 0.11%)</title><rect x="476.3" y="1347.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="479.3" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="477.0" y="1331.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="480.0" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="477.0" y="1315.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="480.0" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="477.0" y="1299.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="480.0" y="1310.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.11%)</title><rect x="477.7" y="1347.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="480.7" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="477.7" y="1331.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="480.7" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="477.7" y="1315.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="480.7" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="477.7" y="1299.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="480.7" y="1310.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.06%)</title><rect x="479.0" y="1347.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="482.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.26%)</title><rect x="479.7" y="1363.0" width="14.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="482.7" y="1374.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.06%)</title><rect x="479.7" y="1347.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="482.7" y="1358.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 1.20%)</title><rect x="480.4" y="1347.0" width="14.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="483.4" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 1.09%)</title><rect x="481.1" y="1331.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.1" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 1.09%)</title><rect x="481.1" y="1315.0" width="12.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="484.1" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 1.03%)</title><rect x="481.7" y="1299.0" width="12.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.7" y="1310.0"></text>
</g>
<g>
<title>do_futex (18 samples, 1.03%)</title><rect x="481.7" y="1283.0" width="12.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="484.7" y="1294.0"></text>
</g>
<g>
<title>futex_wait (18 samples, 1.03%)</title><rect x="481.7" y="1267.0" width="12.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.7" y="1278.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.97%)</title><rect x="481.7" y="1251.0" width="11.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="484.7" y="1262.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.91%)</title><rect x="482.4" y="1235.0" width="10.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="485.4" y="1246.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.91%)</title><rect x="482.4" y="1219.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.4" y="1230.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.86%)</title><rect x="483.1" y="1203.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="486.1" y="1214.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="493.2" y="1251.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="496.2" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="493.9" y="1331.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="496.9" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="493.9" y="1315.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="496.9" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="493.9" y="1299.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.11%)</title><rect x="494.5" y="1411.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.11%)</title><rect x="494.5" y="1395.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.11%)</title><rect x="494.5" y="1379.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.11%)</title><rect x="494.5" y="1363.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="497.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.11%)</title><rect x="494.5" y="1347.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.11%)</title><rect x="494.5" y="1331.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="494.5" y="1315.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="497.5" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.11%)</title><rect x="494.5" y="1299.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="497.5" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.11%)</title><rect x="494.5" y="1283.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="497.5" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.11%)</title><rect x="494.5" y="1267.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="497.5" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.11%)</title><rect x="494.5" y="1251.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="497.5" y="1262.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="495.2" y="1235.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="498.2" y="1246.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="495.2" y="1219.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="498.2" y="1230.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="495.2" y="1203.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="498.2" y="1214.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="495.2" y="1187.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.2" y="1198.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="495.2" y="1171.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.2" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="495.2" y="1155.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 1.37%)</title><rect x="495.9" y="1411.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 1.37%)</title><rect x="495.9" y="1395.0" width="16.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="498.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 1.37%)</title><rect x="495.9" y="1379.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 1.37%)</title><rect x="495.9" y="1363.0" width="16.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 1.20%)</title><rect x="497.9" y="1347.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="500.9" y="1358.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="497.9" y="1331.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="500.9" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.17%)</title><rect x="498.6" y="1331.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="501.6" y="1342.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="498.6" y="1315.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="501.6" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="498.6" y="1299.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.6" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="498.6" y="1283.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="501.6" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="498.6" y="1267.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.6" y="1278.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="499.3" y="1315.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="502.3" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="499.3" y="1299.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="502.3" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="499.3" y="1283.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="502.3" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="499.3" y="1267.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="502.3" y="1278.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="499.9" y="1315.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="502.9" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="499.9" y="1299.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.9" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="499.9" y="1283.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="502.9" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="499.9" y="1267.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.9" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.97%)</title><rect x="500.6" y="1331.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="503.6" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.97%)</title><rect x="500.6" y="1315.0" width="11.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.6" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.97%)</title><rect x="500.6" y="1299.0" width="11.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.6" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.86%)</title><rect x="500.6" y="1283.0" width="10.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="503.6" y="1294.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.86%)</title><rect x="500.6" y="1267.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.6" y="1278.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.86%)</title><rect x="500.6" y="1251.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.6" y="1262.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.86%)</title><rect x="500.6" y="1235.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.6" y="1246.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.86%)</title><rect x="500.6" y="1219.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="503.6" y="1230.0"></text>
</g>
<g>
<title>__lock_text_start (15 samples, 0.86%)</title><rect x="500.6" y="1203.0" width="10.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="503.6" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="510.7" y="1283.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.7" y="1294.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.11%)</title><rect x="510.7" y="1267.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="513.7" y="1278.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.11%)</title><rect x="510.7" y="1251.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.7" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.11%)</title><rect x="510.7" y="1235.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="513.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.run (200 samples, 11.42%)</title><rect x="512.1" y="1443.0" width="134.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.1" y="1454.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (198 samples, 11.31%)</title><rect x="512.1" y="1427.0" width="133.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.1" y="1438.0">jdk/internal/net/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (197 samples, 11.25%)</title><rect x="512.1" y="1411.0" width="132.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.1" y="1422.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (196 samples, 11.19%)</title><rect x="512.7" y="1395.0" width="132.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.7" y="1406.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (196 samples, 11.19%)</title><rect x="512.7" y="1379.0" width="132.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="515.7" y="1390.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (196 samples, 11.19%)</title><rect x="512.7" y="1363.0" width="132.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.7" y="1374.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (196 samples, 11.19%)</title><rect x="512.7" y="1347.0" width="132.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="515.7" y="1358.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (196 samples, 11.19%)</title><rect x="512.7" y="1331.0" width="132.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.7" y="1342.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (196 samples, 11.19%)</title><rect x="512.7" y="1315.0" width="132.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.7" y="1326.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (196 samples, 11.19%)</title><rect x="512.7" y="1299.0" width="132.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.7" y="1310.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (1 samples, 0.06%)</title><rect x="512.7" y="1283.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.06%)</title><rect x="512.7" y="1267.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.7" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="512.7" y="1251.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="515.7" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="512.7" y="1235.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.7" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="512.7" y="1219.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="515.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (195 samples, 11.14%)</title><rect x="513.4" y="1283.0" width="131.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.4" y="1294.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (20 samples, 1.14%)</title><rect x="513.4" y="1267.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (16 samples, 0.91%)</title><rect x="513.4" y="1251.0" width="10.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.91%)</title><rect x="513.4" y="1235.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (16 samples, 0.91%)</title><rect x="513.4" y="1219.0" width="10.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.91%)</title><rect x="513.4" y="1203.0" width="10.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (4 samples, 0.23%)</title><rect x="514.1" y="1187.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/154665854.apply (1 samples, 0.06%)</title><rect x="514.8" y="1171.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (1 samples, 0.06%)</title><rect x="514.8" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="517.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (2 samples, 0.11%)</title><rect x="515.4" y="1171.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.11%)</title><rect x="515.4" y="1155.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.11%)</title><rect x="515.4" y="1139.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.11%)</title><rect x="515.4" y="1123.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="518.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.11%)</title><rect x="515.4" y="1107.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.11%)</title><rect x="515.4" y="1091.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (2 samples, 0.11%)</title><rect x="515.4" y="1075.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.11%)</title><rect x="515.4" y="1059.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.06%)</title><rect x="515.4" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="515.4" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="515.4" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.06%)</title><rect x="515.4" y="995.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="515.4" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="515.4" y="963.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (1 samples, 0.06%)</title><rect x="515.4" y="947.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.06%)</title><rect x="515.4" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="518.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="515.4" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (1 samples, 0.06%)</title><rect x="515.4" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (1 samples, 0.06%)</title><rect x="515.4" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (1 samples, 0.06%)</title><rect x="515.4" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.06%)</title><rect x="515.4" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.06%)</title><rect x="515.4" y="835.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.06%)</title><rect x="515.4" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="518.4" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="515.4" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="515.4" y="787.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="518.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="515.4" y="771.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.4" y="782.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.06%)</title><rect x="515.4" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="518.4" y="766.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (1 samples, 0.06%)</title><rect x="515.4" y="739.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.4" y="750.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="515.4" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.4" y="734.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.06%)</title><rect x="515.4" y="707.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="518.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.06%)</title><rect x="516.1" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (1 samples, 0.06%)</title><rect x="516.1" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="516.1" y="1011.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="516.1" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="516.1" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="516.1" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.06%)</title><rect x="516.1" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (1 samples, 0.06%)</title><rect x="516.1" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="516.1" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="519.1" y="926.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.06%)</title><rect x="516.1" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.1" y="910.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.06%)</title><rect x="516.1" y="883.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.06%)</title><rect x="516.1" y="867.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="516.1" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="519.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.06%)</title><rect x="516.1" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.1" y="846.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (1 samples, 0.06%)</title><rect x="516.1" y="819.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="519.1" y="830.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (1 samples, 0.06%)</title><rect x="516.1" y="803.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="519.1" y="814.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (1 samples, 0.06%)</title><rect x="516.1" y="787.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="519.1" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="516.1" y="771.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="519.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="516.1" y="755.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="519.1" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="516.1" y="739.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="519.1" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="516.1" y="723.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="519.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (9 samples, 0.51%)</title><rect x="516.8" y="1187.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (9 samples, 0.51%)</title><rect x="516.8" y="1171.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.11%)</title><rect x="516.8" y="1155.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.apply (7 samples, 0.40%)</title><rect x="518.1" y="1155.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (7 samples, 0.40%)</title><rect x="518.1" y="1139.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (7 samples, 0.40%)</title><rect x="518.1" y="1123.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.apply (7 samples, 0.40%)</title><rect x="518.1" y="1107.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (7 samples, 0.40%)</title><rect x="518.1" y="1091.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (7 samples, 0.40%)</title><rect x="518.1" y="1075.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (2 samples, 0.11%)</title><rect x="518.1" y="1059.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (2 samples, 0.11%)</title><rect x="518.1" y="1043.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (2 samples, 0.11%)</title><rect x="518.1" y="1027.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$256/1547025833.accept (1 samples, 0.06%)</title><rect x="518.8" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (1 samples, 0.06%)</title><rect x="518.8" y="995.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (1 samples, 0.06%)</title><rect x="518.8" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.06%)</title><rect x="518.8" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="518.8" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (5 samples, 0.29%)</title><rect x="519.5" y="1059.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (5 samples, 0.29%)</title><rect x="519.5" y="1043.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="522.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (3 samples, 0.17%)</title><rect x="519.5" y="1027.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (2 samples, 0.11%)</title><rect x="519.5" y="1011.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.setSubscription (2 samples, 0.11%)</title><rect x="519.5" y="995.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.11%)</title><rect x="519.5" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="519.5" y="963.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="519.5" y="947.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.5" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="519.5" y="931.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="522.5" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="519.5" y="915.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="522.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="520.8" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.06%)</title><rect x="520.8" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.8" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="520.8" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="523.8" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="520.8" y="963.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="523.8" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="520.8" y="947.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="523.8" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="520.8" y="931.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="523.8" y="942.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="520.8" y="915.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="523.8" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="520.8" y="899.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="523.8" y="910.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="520.8" y="883.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="523.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (2 samples, 0.11%)</title><rect x="521.5" y="1027.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.06%)</title><rect x="522.8" y="1187.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.8" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="523.5" y="1187.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.5" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="523.5" y="1171.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.5" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="523.5" y="1155.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="526.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.17%)</title><rect x="524.2" y="1251.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="527.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.11%)</title><rect x="524.9" y="1235.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (1 samples, 0.06%)</title><rect x="524.9" y="1219.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="527.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateHead (1 samples, 0.06%)</title><rect x="525.5" y="1219.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="528.5" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="525.5" y="1203.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.5" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="525.5" y="1187.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.5" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="525.5" y="1171.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="528.5" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="526.2" y="1251.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="529.2" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="526.2" y="1235.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="529.2" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="526.2" y="1219.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="529.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (175 samples, 9.99%)</title><rect x="526.9" y="1267.0" width="117.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="529.9" y="1278.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (175 samples, 9.99%)</title><rect x="526.9" y="1251.0" width="117.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.9" y="1262.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (175 samples, 9.99%)</title><rect x="526.9" y="1235.0" width="117.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="529.9" y="1246.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (175 samples, 9.99%)</title><rect x="526.9" y="1219.0" width="117.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.9" y="1230.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/1776857875.run (3 samples, 0.17%)</title><rect x="526.9" y="1203.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (3 samples, 0.17%)</title><rect x="526.9" y="1187.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.06%)</title><rect x="528.2" y="1171.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.06%)</title><rect x="528.2" y="1155.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="531.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="528.2" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.2" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="528.2" y="1123.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="531.2" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="528.2" y="1107.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="531.2" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="528.2" y="1091.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="531.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (171 samples, 9.77%)</title><rect x="528.9" y="1203.0" width="115.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.9" y="1214.0">jdk/internal/n..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (165 samples, 9.42%)</title><rect x="528.9" y="1187.0" width="111.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.9" y="1198.0">java/nio/chan..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (165 samples, 9.42%)</title><rect x="528.9" y="1171.0" width="111.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.9" y="1182.0">sun/nio/ch/So..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (165 samples, 9.42%)</title><rect x="528.9" y="1155.0" width="111.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.9" y="1166.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (165 samples, 9.42%)</title><rect x="528.9" y="1139.0" width="111.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.9" y="1150.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (164 samples, 9.37%)</title><rect x="528.9" y="1123.0" width="110.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.9" y="1134.0">sun/nio/ch/So..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.11%)</title><rect x="533.6" y="1107.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="536.6" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="533.6" y="1091.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="536.6" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="533.6" y="1075.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="536.6" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="533.6" y="1059.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="536.6" y="1070.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="534.3" y="1043.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="537.3" y="1054.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="534.3" y="1027.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.3" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="534.3" y="1011.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.3" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (155 samples, 8.85%)</title><rect x="535.0" y="1107.0" width="104.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.0" y="1118.0">sun/nio/ch/F..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (1 samples, 0.06%)</title><rect x="536.3" y="1091.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="539.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="536.3" y="1075.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.3" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="536.3" y="1059.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.3" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="536.3" y="1043.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="539.3" y="1054.0"></text>
</g>
<g>
<title>writev (152 samples, 8.68%)</title><rect x="537.0" y="1091.0" width="102.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="540.0" y="1102.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (151 samples, 8.62%)</title><rect x="537.7" y="1075.0" width="101.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.7" y="1086.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.06%)</title><rect x="537.7" y="1059.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="540.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (150 samples, 8.57%)</title><rect x="538.3" y="1059.0" width="101.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="541.3" y="1070.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_writev (144 samples, 8.22%)</title><rect x="538.3" y="1043.0" width="97.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.3" y="1054.0">__x64_sys_w..</text>
</g>
<g>
<title>do_writev (144 samples, 8.22%)</title><rect x="538.3" y="1027.0" width="97.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.3" y="1038.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.11%)</title><rect x="538.3" y="1011.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="541.3" y="1022.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.11%)</title><rect x="538.3" y="995.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="541.3" y="1006.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.11%)</title><rect x="538.3" y="979.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="541.3" y="990.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.06%)</title><rect x="539.7" y="1011.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="542.7" y="1022.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="540.4" y="1011.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="543.4" y="1022.0"></text>
</g>
<g>
<title>vfs_writev (140 samples, 8.00%)</title><rect x="541.0" y="1011.0" width="94.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="544.0" y="1022.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (136 samples, 7.77%)</title><rect x="541.0" y="995.0" width="91.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="544.0" y="1006.0">do_iter_write</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="541.0" y="979.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="544.0" y="990.0"></text>
</g>
<g>
<title>do_iter_readv_writev (133 samples, 7.60%)</title><rect x="541.7" y="979.0" width="89.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="544.7" y="990.0">do_iter_re..</text>
</g>
<g>
<title>sock_write_iter (131 samples, 7.48%)</title><rect x="543.1" y="963.0" width="88.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="546.1" y="974.0">sock_write..</text>
</g>
<g>
<title>sock_sendmsg (130 samples, 7.42%)</title><rect x="543.7" y="947.0" width="87.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.7" y="958.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.23%)</title><rect x="543.7" y="931.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="546.7" y="942.0"></text>
</g>
<g>
<title>inet6_sendmsg (125 samples, 7.14%)</title><rect x="546.4" y="931.0" width="84.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="549.4" y="942.0">inet6_send..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="547.8" y="915.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.8" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg (122 samples, 6.97%)</title><rect x="548.4" y="915.0" width="82.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="551.4" y="926.0">tcp_sendmsg</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="548.4" y="899.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="551.4" y="910.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.06%)</title><rect x="549.1" y="899.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="552.1" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (120 samples, 6.85%)</title><rect x="549.8" y="899.0" width="80.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="552.8" y="910.0">tcp_sendm..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.06%)</title><rect x="551.8" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="554.8" y="894.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="552.5" y="883.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="555.5" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="552.5" y="867.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="555.5" y="878.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="553.2" y="883.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="556.2" y="894.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="553.8" y="883.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.8" y="894.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="553.8" y="867.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="556.8" y="878.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.29%)</title><rect x="554.5" y="883.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="557.5" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.29%)</title><rect x="554.5" y="867.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="557.5" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.29%)</title><rect x="554.5" y="851.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="557.5" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.11%)</title><rect x="554.5" y="835.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="557.5" y="846.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="554.5" y="819.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="557.5" y="830.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="555.2" y="819.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="558.2" y="830.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="555.9" y="835.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="558.9" y="846.0"></text>
</g>
<g>
<title>memset (2 samples, 0.11%)</title><rect x="556.5" y="835.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="559.5" y="846.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.11%)</title><rect x="557.9" y="883.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="560.9" y="894.0"></text>
</g>
<g>
<title>tcp_push (100 samples, 5.71%)</title><rect x="559.2" y="883.0" width="67.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="562.2" y="894.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (100 samples, 5.71%)</title><rect x="559.2" y="867.0" width="67.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="562.2" y="878.0">__tcp_p..</text>
</g>
<g>
<title>tcp_write_xmit (100 samples, 5.71%)</title><rect x="559.2" y="851.0" width="67.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="562.2" y="862.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (87 samples, 4.97%)</title><rect x="559.2" y="835.0" width="58.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="562.2" y="846.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (85 samples, 4.85%)</title><rect x="560.6" y="819.0" width="57.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="563.6" y="830.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (83 samples, 4.74%)</title><rect x="560.6" y="803.0" width="55.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="563.6" y="814.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (3 samples, 0.17%)</title><rect x="561.9" y="787.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.9" y="798.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.11%)</title><rect x="562.6" y="771.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.6" y="782.0"></text>
</g>
<g>
<title>ip_local_out (77 samples, 4.40%)</title><rect x="563.9" y="787.0" width="51.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="566.9" y="798.0">ip_lo..</text>
</g>
<g>
<title>ip_output (77 samples, 4.40%)</title><rect x="563.9" y="771.0" width="51.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="566.9" y="782.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output (76 samples, 4.34%)</title><rect x="564.6" y="755.0" width="51.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="567.6" y="766.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.17%)</title><rect x="564.6" y="739.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="567.6" y="750.0"></text>
</g>
<g>
<title>__ip_finish_output (73 samples, 4.17%)</title><rect x="566.6" y="739.0" width="49.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="569.6" y="750.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (73 samples, 4.17%)</title><rect x="566.6" y="723.0" width="49.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="569.6" y="734.0">ip_fi..</text>
</g>
<g>
<title>__local_bh_enable_ip (71 samples, 4.05%)</title><rect x="566.6" y="707.0" width="47.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="569.6" y="718.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (71 samples, 4.05%)</title><rect x="566.6" y="691.0" width="47.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.6" y="702.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (70 samples, 4.00%)</title><rect x="567.3" y="675.0" width="47.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="570.3" y="686.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (70 samples, 4.00%)</title><rect x="567.3" y="659.0" width="47.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.3" y="670.0">__so..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="568.7" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.7" y="654.0"></text>
</g>
<g>
<title>net_rx_action (65 samples, 3.71%)</title><rect x="569.3" y="643.0" width="43.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="572.3" y="654.0">net_..</text>
</g>
<g>
<title>process_backlog (63 samples, 3.60%)</title><rect x="570.7" y="627.0" width="42.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="573.7" y="638.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (63 samples, 3.60%)</title><rect x="570.7" y="611.0" width="42.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="573.7" y="622.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (63 samples, 3.60%)</title><rect x="570.7" y="595.0" width="42.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="573.7" y="606.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.17%)</title><rect x="571.4" y="579.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="574.4" y="590.0"></text>
</g>
<g>
<title>ip_rcv (59 samples, 3.37%)</title><rect x="573.4" y="579.0" width="39.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="576.4" y="590.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="573.4" y="563.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.4" y="574.0"></text>
</g>
<g>
<title>ip_rcv_finish (58 samples, 3.31%)</title><rect x="574.1" y="563.0" width="39.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="577.1" y="574.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (58 samples, 3.31%)</title><rect x="574.1" y="547.0" width="39.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.1" y="558.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (57 samples, 3.26%)</title><rect x="574.7" y="531.0" width="38.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.7" y="542.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (57 samples, 3.26%)</title><rect x="574.7" y="515.0" width="38.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="577.7" y="526.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (56 samples, 3.20%)</title><rect x="575.4" y="499.0" width="37.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.4" y="510.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.17%)</title><rect x="575.4" y="483.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="578.4" y="494.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="577.4" y="483.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.4" y="494.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="577.4" y="467.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.4" y="478.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (50 samples, 2.86%)</title><rect x="578.1" y="483.0" width="33.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="581.1" y="494.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="578.1" y="467.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="581.1" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 2.80%)</title><rect x="578.8" y="467.0" width="33.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="581.8" y="478.0">tc..</text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.06%)</title><rect x="580.1" y="451.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.1" y="462.0"></text>
</g>
<g>
<title>tcp_data_ready (44 samples, 2.51%)</title><rect x="580.8" y="451.0" width="29.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="583.8" y="462.0">tc..</text>
</g>
<g>
<title>sock_def_readable (44 samples, 2.51%)</title><rect x="580.8" y="435.0" width="29.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.8" y="446.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 2.51%)</title><rect x="580.8" y="419.0" width="29.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="583.8" y="430.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 2.51%)</title><rect x="580.8" y="403.0" width="29.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="583.8" y="414.0">__..</text>
</g>
<g>
<title>__lock_text_start (44 samples, 2.51%)</title><rect x="580.8" y="387.0" width="29.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="583.8" y="398.0">__..</text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.11%)</title><rect x="610.4" y="451.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="613.4" y="462.0"></text>
</g>
<g>
<title>tcp_try_coalesce (2 samples, 0.11%)</title><rect x="610.4" y="435.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="613.4" y="446.0"></text>
</g>
<g>
<title>skb_try_coalesce (2 samples, 0.11%)</title><rect x="610.4" y="419.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="613.4" y="430.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="611.8" y="483.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.8" y="494.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.06%)</title><rect x="612.5" y="483.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="615.5" y="494.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.11%)</title><rect x="613.1" y="643.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.1" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.11%)</title><rect x="614.5" y="707.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="617.5" y="718.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.11%)</title><rect x="614.5" y="691.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="617.5" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="614.5" y="675.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="617.5" y="686.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="614.5" y="659.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.5" y="670.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.06%)</title><rect x="615.2" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="618.2" y="686.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="615.8" y="787.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="618.8" y="798.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="616.5" y="803.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="619.5" y="814.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.06%)</title><rect x="617.2" y="803.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.2" y="814.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.06%)</title><rect x="617.9" y="835.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="620.9" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.17%)</title><rect x="618.5" y="835.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="621.5" y="846.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.06%)</title><rect x="620.6" y="835.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.6" y="846.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.11%)</title><rect x="621.2" y="835.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="624.2" y="846.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.06%)</title><rect x="621.2" y="819.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="624.2" y="830.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="621.9" y="819.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="624.9" y="830.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="621.9" y="803.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.9" y="814.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="621.9" y="787.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.9" y="798.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (4 samples, 0.23%)</title><rect x="622.6" y="835.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="625.6" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.17%)</title><rect x="623.2" y="819.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="626.2" y="830.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.17%)</title><rect x="623.2" y="803.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.2" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="623.2" y="787.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.2" y="798.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.06%)</title><rect x="625.3" y="835.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.3" y="846.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.06%)</title><rect x="625.9" y="835.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="628.9" y="846.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.34%)</title><rect x="626.6" y="883.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="629.6" y="894.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.11%)</title><rect x="628.0" y="867.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.0" y="878.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.11%)</title><rect x="629.3" y="867.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="632.3" y="878.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="630.7" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="633.7" y="942.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="630.7" y="915.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="633.7" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="630.7" y="899.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="633.7" y="910.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="630.7" y="883.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="633.7" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.11%)</title><rect x="631.3" y="979.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="634.3" y="990.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.11%)</title><rect x="631.3" y="963.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="634.3" y="974.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.11%)</title><rect x="631.3" y="947.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="634.3" y="958.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.11%)</title><rect x="631.3" y="931.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="634.3" y="942.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.11%)</title><rect x="631.3" y="915.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.3" y="926.0"></text>
</g>
<g>
<title>import_iovec (3 samples, 0.17%)</title><rect x="632.7" y="995.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="635.7" y="1006.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (2 samples, 0.11%)</title><rect x="633.4" y="979.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="636.4" y="990.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="633.4" y="963.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="636.4" y="974.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="634.0" y="963.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="637.0" y="974.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="634.7" y="995.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.7" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.34%)</title><rect x="635.4" y="1043.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="638.4" y="1054.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.34%)</title><rect x="635.4" y="1027.0" width="4.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="638.4" y="1038.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.34%)</title><rect x="635.4" y="1011.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="638.4" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.29%)</title><rect x="636.1" y="995.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="639.4" y="1123.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="639.4" y="1107.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="639.4" y="1091.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.4" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.34%)</title><rect x="640.1" y="1187.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.1" y="1198.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.06%)</title><rect x="640.8" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="643.8" y="1182.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.11%)</title><rect x="641.4" y="1171.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.4" y="1182.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.06%)</title><rect x="642.1" y="1155.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="645.1" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="642.8" y="1171.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.8" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="642.8" y="1155.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.8" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="642.8" y="1139.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="645.8" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="644.1" y="1203.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.1" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="644.1" y="1187.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="647.1" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="644.1" y="1171.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="647.1" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="644.8" y="1411.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="647.8" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="644.8" y="1395.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.8" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="644.8" y="1379.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="647.8" y="1390.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="645.5" y="1427.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.5" y="1438.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="645.5" y="1411.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.5" y="1422.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="645.5" y="1395.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="648.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (232 samples, 13.25%)</title><rect x="646.8" y="1443.0" width="156.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.8" y="1454.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (232 samples, 13.25%)</title><rect x="646.8" y="1427.0" width="156.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.8" y="1438.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (86 samples, 4.91%)</title><rect x="646.8" y="1411.0" width="58.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.8" y="1422.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (86 samples, 4.91%)</title><rect x="646.8" y="1395.0" width="58.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.8" y="1406.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (86 samples, 4.91%)</title><rect x="646.8" y="1379.0" width="58.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.8" y="1390.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.06%)</title><rect x="646.8" y="1363.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="646.8" y="1347.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="649.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (15 samples, 0.86%)</title><rect x="647.5" y="1363.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (15 samples, 0.86%)</title><rect x="647.5" y="1347.0" width="10.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (15 samples, 0.86%)</title><rect x="647.5" y="1331.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (15 samples, 0.86%)</title><rect x="647.5" y="1315.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (15 samples, 0.86%)</title><rect x="647.5" y="1299.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (13 samples, 0.74%)</title><rect x="648.2" y="1283.0" width="8.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="651.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13 samples, 0.74%)</title><rect x="648.2" y="1267.0" width="8.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (13 samples, 0.74%)</title><rect x="648.2" y="1251.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="651.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (10 samples, 0.57%)</title><rect x="649.5" y="1235.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.5" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="650.2" y="1219.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="653.2" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="650.2" y="1203.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="653.2" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="650.2" y="1187.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="653.2" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.46%)</title><rect x="650.9" y="1219.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.9" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.46%)</title><rect x="650.9" y="1203.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.9" y="1214.0"></text>
</g>
<g>
<title>__write (8 samples, 0.46%)</title><rect x="650.9" y="1187.0" width="5.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="653.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.40%)</title><rect x="651.6" y="1171.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="654.6" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.40%)</title><rect x="651.6" y="1155.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.6" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_write (7 samples, 0.40%)</title><rect x="651.6" y="1139.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.6" y="1150.0"></text>
</g>
<g>
<title>ksys_write (7 samples, 0.40%)</title><rect x="651.6" y="1123.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="654.6" y="1134.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="651.6" y="1107.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.6" y="1118.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.34%)</title><rect x="652.2" y="1107.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.2" y="1118.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.29%)</title><rect x="652.2" y="1091.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="655.2" y="1102.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.29%)</title><rect x="652.2" y="1075.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="655.2" y="1086.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.06%)</title><rect x="652.2" y="1059.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.2" y="1070.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.23%)</title><rect x="652.9" y="1059.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="655.9" y="1070.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.17%)</title><rect x="652.9" y="1043.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.9" y="1054.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.17%)</title><rect x="652.9" y="1027.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="655.9" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="652.9" y="1011.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="655.9" y="1022.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.06%)</title><rect x="654.9" y="1043.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.9" y="1054.0"></text>
</g>
<g>
<title>__mnt_want_write_file (1 samples, 0.06%)</title><rect x="654.9" y="1027.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="657.9" y="1038.0"></text>
</g>
<g>
<title>__mnt_want_write (1 samples, 0.06%)</title><rect x="654.9" y="1011.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="657.9" y="1022.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="655.6" y="1091.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="658.6" y="1102.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="655.6" y="1075.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="658.6" y="1086.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="655.6" y="1059.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="658.6" y="1070.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="655.6" y="1043.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="658.6" y="1054.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.06%)</title><rect x="655.6" y="1027.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="658.6" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="656.3" y="1235.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="659.3" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="656.3" y="1219.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="659.3" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="656.3" y="1203.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.3" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="656.9" y="1283.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="659.9" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="656.9" y="1267.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.9" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="656.9" y="1251.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="659.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (70 samples, 4.00%)</title><rect x="657.6" y="1363.0" width="47.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.6" y="1374.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (70 samples, 4.00%)</title><rect x="657.6" y="1347.0" width="47.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.6" y="1358.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (70 samples, 4.00%)</title><rect x="657.6" y="1331.0" width="47.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.6" y="1342.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (70 samples, 4.00%)</title><rect x="657.6" y="1315.0" width="47.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.6" y="1326.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (44 samples, 2.51%)</title><rect x="657.6" y="1299.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.6" y="1310.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (44 samples, 2.51%)</title><rect x="657.6" y="1283.0" width="29.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.6" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (44 samples, 2.51%)</title><rect x="657.6" y="1267.0" width="29.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.6" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (44 samples, 2.51%)</title><rect x="657.6" y="1251.0" width="29.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.6" y="1262.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (44 samples, 2.51%)</title><rect x="657.6" y="1235.0" width="29.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.6" y="1246.0">jd..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="657.6" y="1219.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="660.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (43 samples, 2.46%)</title><rect x="658.3" y="1219.0" width="29.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.3" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (43 samples, 2.46%)</title><rect x="658.3" y="1203.0" width="29.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.3" y="1214.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (41 samples, 2.34%)</title><rect x="658.3" y="1187.0" width="27.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.3" y="1198.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.06%)</title><rect x="658.3" y="1171.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 2.28%)</title><rect x="659.0" y="1171.0" width="26.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.0" y="1182.0">j..</text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="659.0" y="1155.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="662.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (31 samples, 1.77%)</title><rect x="660.3" y="1155.0" width="20.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.3" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="661.0" y="1139.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="664.0" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="661.0" y="1123.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="664.0" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="661.0" y="1107.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="664.0" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="661.0" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="664.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.11%)</title><rect x="661.7" y="1139.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (2 samples, 0.11%)</title><rect x="661.7" y="1123.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (23 samples, 1.31%)</title><rect x="663.0" y="1139.0" width="15.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="666.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (23 samples, 1.31%)</title><rect x="663.0" y="1123.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.06%)</title><rect x="663.0" y="1107.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.06%)</title><rect x="663.0" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (21 samples, 1.20%)</title><rect x="663.7" y="1107.0" width="14.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (21 samples, 1.20%)</title><rect x="663.7" y="1091.0" width="14.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (21 samples, 1.20%)</title><rect x="663.7" y="1075.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.7" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (9 samples, 0.51%)</title><rect x="663.7" y="1059.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.7" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.11%)</title><rect x="663.7" y="1043.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.11%)</title><rect x="663.7" y="1027.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.11%)</title><rect x="663.7" y="1011.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="666.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.11%)</title><rect x="663.7" y="995.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.11%)</title><rect x="663.7" y="979.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="666.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.11%)</title><rect x="663.7" y="963.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="666.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.11%)</title><rect x="663.7" y="947.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="666.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.11%)</title><rect x="663.7" y="931.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.11%)</title><rect x="663.7" y="915.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.11%)</title><rect x="663.7" y="899.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="666.7" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.11%)</title><rect x="665.0" y="1043.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.0" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.11%)</title><rect x="665.0" y="1027.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.0" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.11%)</title><rect x="665.0" y="1011.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.0" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.11%)</title><rect x="665.0" y="995.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (5 samples, 0.29%)</title><rect x="666.4" y="1043.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.4" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.23%)</title><rect x="667.1" y="1027.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.1" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.23%)</title><rect x="667.1" y="1011.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.1" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.23%)</title><rect x="667.1" y="995.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="670.1" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.17%)</title><rect x="667.1" y="979.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.1" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.17%)</title><rect x="667.1" y="963.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.1" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.17%)</title><rect x="667.1" y="947.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="670.1" y="958.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.06%)</title><rect x="668.4" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="671.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.06%)</title><rect x="669.1" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.1" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="669.1" y="963.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="672.1" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="669.1" y="947.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.1" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="669.1" y="931.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="672.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="669.7" y="1059.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="669.7" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.7" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="669.7" y="1027.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="672.7" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="669.7" y="1011.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="672.7" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="669.7" y="995.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="672.7" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="669.7" y="979.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="672.7" y="990.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="669.7" y="963.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="672.7" y="974.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.06%)</title><rect x="669.7" y="947.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="672.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.63%)</title><rect x="670.4" y="1059.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="673.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (11 samples, 0.63%)</title><rect x="670.4" y="1043.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (11 samples, 0.63%)</title><rect x="670.4" y="1027.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.23%)</title><rect x="670.4" y="1011.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="670.4" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="673.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="670.4" y="979.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="673.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.17%)</title><rect x="671.1" y="995.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="674.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.17%)</title><rect x="671.1" y="979.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="674.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.29%)</title><rect x="673.1" y="1011.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.23%)</title><rect x="673.8" y="995.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.8" y="1006.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (2 samples, 0.11%)</title><rect x="673.8" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="676.8" y="990.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.11%)</title><rect x="673.8" y="963.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="974.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.11%)</title><rect x="673.8" y="947.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.8" y="958.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libjava.so (1 samples, 0.06%)</title><rect x="673.8" y="931.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="676.8" y="942.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.06%)</title><rect x="674.5" y="931.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="677.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.11%)</title><rect x="675.1" y="979.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.11%)</title><rect x="675.1" y="963.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.11%)</title><rect x="675.1" y="947.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.11%)</title><rect x="675.1" y="931.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="678.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.11%)</title><rect x="676.5" y="1011.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="679.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.11%)</title><rect x="676.5" y="995.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="679.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.06%)</title><rect x="677.8" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.apply (4 samples, 0.23%)</title><rect x="678.5" y="1139.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (4 samples, 0.23%)</title><rect x="678.5" y="1123.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (4 samples, 0.23%)</title><rect x="678.5" y="1107.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="681.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (3 samples, 0.17%)</title><rect x="679.2" y="1091.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.17%)</title><rect x="679.2" y="1075.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="682.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="679.2" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.2" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="679.2" y="1043.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.2" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="679.2" y="1027.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.2" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="679.2" y="1011.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.2" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.11%)</title><rect x="679.9" y="1059.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.9" y="1070.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.06%)</title><rect x="680.5" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="680.5" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="683.5" y="1038.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="680.5" y="1011.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="683.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.11%)</title><rect x="681.2" y="1155.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.11%)</title><rect x="681.2" y="1139.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (2 samples, 0.11%)</title><rect x="681.2" y="1123.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="684.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2 samples, 0.11%)</title><rect x="681.2" y="1107.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (2 samples, 0.11%)</title><rect x="681.2" y="1091.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (2 samples, 0.11%)</title><rect x="681.2" y="1075.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.2" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="681.2" y="1059.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="684.2" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="681.2" y="1043.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="684.2" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.11%)</title><rect x="681.2" y="1027.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="684.2" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="681.9" y="1011.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.9" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="681.9" y="995.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="684.9" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="681.9" y="979.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="684.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.11%)</title><rect x="682.6" y="1155.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.11%)</title><rect x="682.6" y="1139.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.11%)</title><rect x="682.6" y="1123.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="685.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.apply (2 samples, 0.11%)</title><rect x="683.9" y="1155.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="686.9" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="685.2" y="1155.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="688.2" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="685.2" y="1139.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="688.2" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="685.2" y="1123.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.apply (2 samples, 0.11%)</title><rect x="685.9" y="1187.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.11%)</title><rect x="685.9" y="1171.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.11%)</title><rect x="685.9" y="1155.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="688.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.11%)</title><rect x="685.9" y="1139.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.11%)</title><rect x="685.9" y="1123.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.11%)</title><rect x="685.9" y="1107.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (24 samples, 1.37%)</title><rect x="687.3" y="1299.0" width="16.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (2 samples, 0.11%)</title><rect x="689.3" y="1283.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.3" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="689.3" y="1267.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="692.3" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="689.3" y="1251.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="692.3" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="689.3" y="1235.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.11%)</title><rect x="690.6" y="1283.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.11%)</title><rect x="690.6" y="1267.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.11%)</title><rect x="690.6" y="1251.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.6" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="691.3" y="1235.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="694.3" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="691.3" y="1219.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="694.3" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="691.3" y="1203.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.3" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="691.3" y="1187.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="694.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.06%)</title><rect x="692.0" y="1283.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="692.0" y="1267.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="692.0" y="1251.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (6 samples, 0.34%)</title><rect x="692.7" y="1283.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="695.7" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.34%)</title><rect x="692.7" y="1267.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.7" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.34%)</title><rect x="692.7" y="1251.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.29%)</title><rect x="692.7" y="1235.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.7" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (5 samples, 0.29%)</title><rect x="692.7" y="1219.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.7" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.29%)</title><rect x="692.7" y="1203.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.17%)</title><rect x="692.7" y="1187.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (2 samples, 0.11%)</title><rect x="693.3" y="1171.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.3" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="694.0" y="1155.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="694.0" y="1139.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="694.0" y="1123.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.0" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="694.0" y="1107.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.0" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="694.0" y="1091.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.0" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="694.0" y="1075.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="697.0" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="694.7" y="1187.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.7" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="695.4" y="1187.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="698.4" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="695.4" y="1171.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="698.4" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="695.4" y="1155.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="698.4" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="696.0" y="1235.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.0" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="696.0" y="1219.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="699.0" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="696.0" y="1203.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="699.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (9 samples, 0.51%)</title><rect x="696.7" y="1283.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="696.7" y="1267.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="696.7" y="1251.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="696.7" y="1235.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="699.7" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="696.7" y="1219.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 0.46%)</title><rect x="697.4" y="1267.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.11%)</title><rect x="697.4" y="1251.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.11%)</title><rect x="697.4" y="1235.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="700.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.trim (6 samples, 0.34%)</title><rect x="698.7" y="1251.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (6 samples, 0.34%)</title><rect x="698.7" y="1235.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="701.7" y="1246.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.11%)</title><rect x="700.7" y="1219.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="703.7" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="701.4" y="1203.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.4" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="701.4" y="1187.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.4" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="701.4" y="1171.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="704.4" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="702.1" y="1219.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="705.1" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="702.1" y="1203.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="705.1" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="702.1" y="1187.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="705.1" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="702.8" y="1283.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="705.8" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="702.8" y="1267.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.8" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="702.8" y="1251.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$196/1429407653.accept (2 samples, 0.11%)</title><rect x="703.4" y="1299.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.06%)</title><rect x="703.4" y="1283.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.4" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="703.4" y="1267.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="706.4" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="703.4" y="1251.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.4" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="703.4" y="1235.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="706.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.06%)</title><rect x="704.1" y="1283.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.06%)</title><rect x="704.1" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="707.1" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="704.1" y="1251.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="707.1" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="704.1" y="1235.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="707.1" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="704.1" y="1219.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="707.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (146 samples, 8.34%)</title><rect x="704.8" y="1411.0" width="98.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.8" y="1422.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (146 samples, 8.34%)</title><rect x="704.8" y="1395.0" width="98.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.8" y="1406.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (146 samples, 8.34%)</title><rect x="704.8" y="1379.0" width="98.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.8" y="1390.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (146 samples, 8.34%)</title><rect x="704.8" y="1363.0" width="98.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.8" y="1374.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (146 samples, 8.34%)</title><rect x="704.8" y="1347.0" width="98.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.8" y="1358.0">jdk/internal..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.06%)</title><rect x="704.8" y="1331.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="704.8" y="1315.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="707.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (144 samples, 8.22%)</title><rect x="705.5" y="1331.0" width="97.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.5" y="1342.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (143 samples, 8.17%)</title><rect x="706.1" y="1315.0" width="96.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.1" y="1326.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (143 samples, 8.17%)</title><rect x="706.1" y="1299.0" width="96.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.1" y="1310.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (76 samples, 4.34%)</title><rect x="706.1" y="1283.0" width="51.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.1" y="1294.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (75 samples, 4.28%)</title><rect x="706.8" y="1267.0" width="50.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="709.8" y="1278.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (75 samples, 4.28%)</title><rect x="706.8" y="1251.0" width="50.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.8" y="1262.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.17%)</title><rect x="706.8" y="1235.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.8" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.06%)</title><rect x="706.8" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.8" y="1230.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="706.8" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.8" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.06%)</title><rect x="706.8" y="1187.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.8" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.06%)</title><rect x="706.8" y="1171.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="709.8" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.06%)</title><rect x="706.8" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="706.8" y="1139.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="706.8" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="706.8" y="1107.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="709.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="706.8" y="1091.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.06%)</title><rect x="706.8" y="1075.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="709.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.06%)</title><rect x="706.8" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.06%)</title><rect x="706.8" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.8" y="1054.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="707.5" y="1219.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.5" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="707.5" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.5" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="707.5" y="1187.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="710.5" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="707.5" y="1171.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="710.5" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="707.5" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="710.5" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="708.2" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.2" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="708.2" y="1203.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.2" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="708.2" y="1187.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.2" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="708.2" y="1171.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="711.2" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="708.2" y="1155.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="711.2" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="708.2" y="1139.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="711.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (72 samples, 4.11%)</title><rect x="708.8" y="1235.0" width="48.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.8" y="1246.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.06%)</title><rect x="708.8" y="1219.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.8" y="1230.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.06%)</title><rect x="708.8" y="1203.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="708.8" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="711.8" y="1198.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="708.8" y="1171.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="711.8" y="1182.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="708.8" y="1155.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="711.8" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="708.8" y="1139.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="711.8" y="1150.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="708.8" y="1123.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="711.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (71 samples, 4.05%)</title><rect x="709.5" y="1219.0" width="47.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.5" y="1230.0">jdk/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.11%)</title><rect x="710.9" y="1203.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="713.9" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.11%)</title><rect x="710.9" y="1187.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="713.9" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.11%)</title><rect x="710.9" y="1171.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="713.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (35 samples, 2.00%)</title><rect x="712.2" y="1203.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.2" y="1214.0">j..</text>
</g>
<g>
<title>java/time/Instant.truncatedTo (35 samples, 2.00%)</title><rect x="712.2" y="1187.0" width="23.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.2" y="1198.0">j..</text>
</g>
<g>
<title>java/time/Instant.plusNanos (35 samples, 2.00%)</title><rect x="712.2" y="1171.0" width="23.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.2" y="1182.0">j..</text>
</g>
<g>
<title>java/time/Instant.plus (35 samples, 2.00%)</title><rect x="712.2" y="1155.0" width="23.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.2" y="1166.0">j..</text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (35 samples, 2.00%)</title><rect x="712.2" y="1139.0" width="23.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.2" y="1150.0">j..</text>
</g>
<g>
<title>java/time/Instant.create (35 samples, 2.00%)</title><rect x="712.2" y="1123.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="715.2" y="1134.0">j..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (10 samples, 0.57%)</title><rect x="729.1" y="1107.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="732.1" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (10 samples, 0.57%)</title><rect x="729.1" y="1091.0" width="6.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.1" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 0.57%)</title><rect x="729.1" y="1075.0" width="6.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="732.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.17%)</title><rect x="735.8" y="1203.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="738.8" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.17%)</title><rect x="735.8" y="1187.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="738.8" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.17%)</title><rect x="735.8" y="1171.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.17%)</title><rect x="735.8" y="1155.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="738.8" y="1166.0"></text>
</g>
<g>
<title>java/util/Objects.equals (3 samples, 0.17%)</title><rect x="735.8" y="1139.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.8" y="1150.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (3 samples, 0.17%)</title><rect x="735.8" y="1123.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.8" y="1134.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (3 samples, 0.17%)</title><rect x="735.8" y="1107.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="738.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (29 samples, 1.66%)</title><rect x="737.8" y="1203.0" width="19.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="740.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (29 samples, 1.66%)</title><rect x="737.8" y="1187.0" width="19.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.29%)</title><rect x="737.8" y="1171.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="740.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.29%)</title><rect x="737.8" y="1155.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.29%)</title><rect x="737.8" y="1139.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.23%)</title><rect x="737.8" y="1123.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.23%)</title><rect x="737.8" y="1107.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.8" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="737.8" y="1091.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="740.8" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="737.8" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="740.8" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="737.8" y="1059.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="740.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.17%)</title><rect x="738.5" y="1091.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.5" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="739.8" y="1075.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="742.8" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.06%)</title><rect x="739.8" y="1059.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="742.8" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="739.8" y="1043.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="742.8" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="739.8" y="1027.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.8" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="739.8" y="1011.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="742.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.06%)</title><rect x="740.5" y="1123.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.5" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="740.5" y="1107.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.5" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="740.5" y="1091.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="743.5" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="740.5" y="1075.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (24 samples, 1.37%)</title><rect x="741.2" y="1171.0" width="16.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (24 samples, 1.37%)</title><rect x="741.2" y="1155.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (24 samples, 1.37%)</title><rect x="741.2" y="1139.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 1.37%)</title><rect x="741.2" y="1123.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 1.37%)</title><rect x="741.2" y="1107.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.2" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="741.9" y="1091.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="744.9" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="741.9" y="1075.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="744.9" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="741.9" y="1059.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="744.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (22 samples, 1.26%)</title><rect x="742.5" y="1091.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="745.5" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="745.2" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="748.2" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="745.2" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="748.2" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="745.2" y="1043.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.2" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="745.2" y="1027.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="748.2" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="745.2" y="1011.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="748.2" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (17 samples, 0.97%)</title><rect x="745.9" y="1075.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.9" y="1086.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.06%)</title><rect x="745.9" y="1059.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="748.9" y="1070.0"></text>
</g>
<g>
<title>__write (16 samples, 0.91%)</title><rect x="746.6" y="1059.0" width="10.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="749.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.91%)</title><rect x="746.6" y="1043.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="749.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.91%)</title><rect x="746.6" y="1027.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="749.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_write (15 samples, 0.86%)</title><rect x="747.2" y="1011.0" width="10.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.2" y="1022.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 0.86%)</title><rect x="747.2" y="995.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.2" y="1006.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.86%)</title><rect x="747.2" y="979.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="750.2" y="990.0"></text>
</g>
<g>
<title>__vfs_write (13 samples, 0.74%)</title><rect x="747.2" y="963.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="750.2" y="974.0"></text>
</g>
<g>
<title>new_sync_write (13 samples, 0.74%)</title><rect x="747.2" y="947.0" width="8.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="750.2" y="958.0"></text>
</g>
<g>
<title>pipe_write (13 samples, 0.74%)</title><rect x="747.2" y="931.0" width="8.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.2" y="942.0"></text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 0.74%)</title><rect x="747.2" y="915.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.2" y="926.0"></text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 0.74%)</title><rect x="747.2" y="899.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.2" y="910.0"></text>
</g>
<g>
<title>__lock_text_start (13 samples, 0.74%)</title><rect x="747.2" y="883.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.2" y="894.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.11%)</title><rect x="756.0" y="963.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="759.0" y="974.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.11%)</title><rect x="756.0" y="947.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.0" y="958.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.11%)</title><rect x="756.0" y="931.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="759.0" y="942.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.11%)</title><rect x="756.0" y="915.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="759.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1564007654.accept (4 samples, 0.23%)</title><rect x="757.4" y="1283.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (4 samples, 0.23%)</title><rect x="757.4" y="1267.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (4 samples, 0.23%)</title><rect x="757.4" y="1251.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="757.4" y="1235.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="760.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="757.4" y="1219.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.17%)</title><rect x="757.4" y="1203.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.17%)</title><rect x="757.4" y="1187.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="757.4" y="1171.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="760.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$296/1509000023.accept (1 samples, 0.06%)</title><rect x="757.4" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="760.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$296/1509000023.accept (2 samples, 0.11%)</title><rect x="758.0" y="1171.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="761.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.11%)</title><rect x="758.0" y="1155.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.11%)</title><rect x="758.0" y="1139.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.0" y="1150.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.11%)</title><rect x="758.0" y="1123.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="761.0" y="1134.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.06%)</title><rect x="758.0" y="1107.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.0" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="758.0" y="1091.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="761.0" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="758.0" y="1075.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.0" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="758.0" y="1059.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="761.0" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="758.7" y="1107.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="761.7" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="758.7" y="1091.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="761.7" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="758.7" y="1075.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.7" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="759.4" y="1203.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="762.4" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="759.4" y="1187.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="762.4" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="759.4" y="1171.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="762.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (62 samples, 3.54%)</title><rect x="760.1" y="1283.0" width="41.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.1" y="1294.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (62 samples, 3.54%)</title><rect x="760.1" y="1267.0" width="41.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="763.1" y="1278.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (62 samples, 3.54%)</title><rect x="760.1" y="1251.0" width="41.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.1" y="1262.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (62 samples, 3.54%)</title><rect x="760.1" y="1235.0" width="41.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.1" y="1246.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 3.54%)</title><rect x="760.1" y="1219.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="763.1" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (60 samples, 3.43%)</title><rect x="761.4" y="1203.0" width="40.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.4" y="1214.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (60 samples, 3.43%)</title><rect x="761.4" y="1187.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.4" y="1198.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="761.4" y="1171.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="764.4" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="761.4" y="1155.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="764.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.accept (59 samples, 3.37%)</title><rect x="762.1" y="1171.0" width="39.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="765.1" y="1182.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (59 samples, 3.37%)</title><rect x="762.1" y="1155.0" width="39.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="765.1" y="1166.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (59 samples, 3.37%)</title><rect x="762.1" y="1139.0" width="39.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.1" y="1150.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (59 samples, 3.37%)</title><rect x="762.1" y="1123.0" width="39.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.1" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (57 samples, 3.26%)</title><rect x="762.7" y="1107.0" width="38.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="765.7" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="762.7" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="765.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="762.7" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.06%)</title><rect x="762.7" y="1059.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="765.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (56 samples, 3.20%)</title><rect x="763.4" y="1091.0" width="37.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="766.4" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (55 samples, 3.14%)</title><rect x="764.1" y="1075.0" width="37.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="767.1" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (55 samples, 3.14%)</title><rect x="764.1" y="1059.0" width="37.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.1" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (55 samples, 3.14%)</title><rect x="764.1" y="1043.0" width="37.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.1" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (55 samples, 3.14%)</title><rect x="764.1" y="1027.0" width="37.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.1" y="1038.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (55 samples, 3.14%)</title><rect x="764.1" y="1011.0" width="37.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.1" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (55 samples, 3.14%)</title><rect x="764.1" y="995.0" width="37.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="767.1" y="1006.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (51 samples, 2.91%)</title><rect x="766.8" y="979.0" width="34.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.8" y="990.0">jd..</text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.11%)</title><rect x="766.8" y="963.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="769.8" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.29%)</title><rect x="768.1" y="963.0" width="3.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="771.1" y="974.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="768.1" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="771.1" y="958.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.06%)</title><rect x="768.8" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="771.8" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="769.5" y="947.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="772.5" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="769.5" y="931.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="772.5" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="769.5" y="915.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="772.5" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="769.5" y="899.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="772.5" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.06%)</title><rect x="770.2" y="947.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="773.2" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="770.8" y="947.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="773.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 2.51%)</title><rect x="771.5" y="963.0" width="29.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="774.5" y="974.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 2.51%)</title><rect x="771.5" y="947.0" width="29.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.5" y="958.0">en..</text>
</g>
<g>
<title>do_syscall_64 (44 samples, 2.51%)</title><rect x="771.5" y="931.0" width="29.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.5" y="942.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 2.28%)</title><rect x="771.5" y="915.0" width="27.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.5" y="926.0">_..</text>
</g>
<g>
<title>do_futex (40 samples, 2.28%)</title><rect x="771.5" y="899.0" width="27.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.5" y="910.0">d..</text>
</g>
<g>
<title>futex_wake (40 samples, 2.28%)</title><rect x="771.5" y="883.0" width="27.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.5" y="894.0">f..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.11%)</title><rect x="772.2" y="867.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="775.2" y="878.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 2.11%)</title><rect x="773.5" y="867.0" width="25.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.5" y="878.0">w..</text>
</g>
<g>
<title>try_to_wake_up (37 samples, 2.11%)</title><rect x="773.5" y="851.0" width="25.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.5" y="862.0">t..</text>
</g>
<g>
<title>__lock_text_start (37 samples, 2.11%)</title><rect x="773.5" y="835.0" width="25.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="776.5" y="846.0">_..</text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.23%)</title><rect x="798.5" y="915.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="801.5" y="926.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.23%)</title><rect x="798.5" y="899.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="801.5" y="910.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.23%)</title><rect x="798.5" y="883.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="801.5" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.23%)</title><rect x="798.5" y="867.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="801.5" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="801.2" y="1107.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="804.2" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="801.2" y="1091.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="804.2" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="801.2" y="1075.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="804.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="801.8" y="1283.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="801.8" y="1267.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="801.8" y="1251.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="801.8" y="1235.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="801.8" y="1219.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="804.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.06%)</title><rect x="802.5" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.06%)</title><rect x="802.5" y="1315.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.06%)</title><rect x="802.5" y="1299.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.06%)</title><rect x="802.5" y="1283.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.06%)</title><rect x="802.5" y="1267.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1 samples, 0.06%)</title><rect x="802.5" y="1251.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="805.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1 samples, 0.06%)</title><rect x="802.5" y="1235.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.5" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="803.2" y="1443.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="806.2" y="1454.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="803.2" y="1427.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.2" y="1438.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="803.2" y="1411.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (62 samples, 3.54%)</title><rect x="803.9" y="1491.0" width="41.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.9" y="1502.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (62 samples, 3.54%)</title><rect x="803.9" y="1475.0" width="41.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.9" y="1486.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (24 samples, 1.37%)</title><rect x="803.9" y="1459.0" width="16.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.9" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (20 samples, 1.14%)</title><rect x="803.9" y="1443.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (20 samples, 1.14%)</title><rect x="803.9" y="1427.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="806.9" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (20 samples, 1.14%)</title><rect x="803.9" y="1411.0" width="13.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 1.14%)</title><rect x="803.9" y="1395.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19 samples, 1.09%)</title><rect x="803.9" y="1379.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="806.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 1.09%)</title><rect x="803.9" y="1363.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="806.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (16 samples, 0.91%)</title><rect x="805.9" y="1347.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="808.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.86%)</title><rect x="805.9" y="1331.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="808.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.86%)</title><rect x="805.9" y="1315.0" width="10.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (13 samples, 0.74%)</title><rect x="807.2" y="1299.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="810.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.11%)</title><rect x="807.2" y="1283.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.11%)</title><rect x="807.2" y="1267.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.11%)</title><rect x="807.2" y="1251.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="810.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.11%)</title><rect x="807.2" y="1235.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="810.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.63%)</title><rect x="808.6" y="1283.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.63%)</title><rect x="808.6" y="1267.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.63%)</title><rect x="808.6" y="1251.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.63%)</title><rect x="808.6" y="1235.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.63%)</title><rect x="808.6" y="1219.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.6" y="1230.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="808.6" y="1203.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="811.6" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.51%)</title><rect x="809.2" y="1203.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="812.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.51%)</title><rect x="809.2" y="1187.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="812.2" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.51%)</title><rect x="809.2" y="1171.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="812.2" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.51%)</title><rect x="809.2" y="1155.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="812.2" y="1166.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.51%)</title><rect x="809.2" y="1139.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="812.2" y="1150.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.51%)</title><rect x="809.2" y="1123.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.2" y="1134.0"></text>
</g>
<g>
<title>wake_up_q (8 samples, 0.46%)</title><rect x="809.9" y="1107.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.9" y="1118.0"></text>
</g>
<g>
<title>try_to_wake_up (8 samples, 0.46%)</title><rect x="809.9" y="1091.0" width="5.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="812.9" y="1102.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 0.46%)</title><rect x="809.9" y="1075.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.9" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.06%)</title><rect x="815.3" y="1203.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="818.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="816.0" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="816.0" y="1315.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="819.0" y="1326.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="816.0" y="1299.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="819.0" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="816.7" y="1379.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.23%)</title><rect x="817.3" y="1443.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.3" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="817.3" y="1427.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.3" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.17%)</title><rect x="818.0" y="1427.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="818.0" y="1411.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.0" y="1422.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.17%)</title><rect x="818.0" y="1395.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="821.0" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.17%)</title><rect x="818.0" y="1379.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="821.0" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.17%)</title><rect x="818.0" y="1363.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="821.0" y="1374.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.17%)</title><rect x="818.0" y="1347.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.0" y="1358.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.17%)</title><rect x="818.0" y="1331.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="821.0" y="1342.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.17%)</title><rect x="818.0" y="1315.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.0" y="1326.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.17%)</title><rect x="818.0" y="1299.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="821.0" y="1310.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.17%)</title><rect x="818.0" y="1283.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="821.0" y="1294.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="818.0" y="1267.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="821.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.23%)</title><rect x="820.0" y="1459.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.0" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.23%)</title><rect x="820.0" y="1443.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.0" y="1454.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.11%)</title><rect x="820.0" y="1427.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="823.0" y="1438.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="820.0" y="1411.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="823.0" y="1422.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.06%)</title><rect x="820.0" y="1395.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="823.0" y="1406.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="820.7" y="1411.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="823.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.11%)</title><rect x="821.4" y="1427.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="824.4" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.11%)</title><rect x="821.4" y="1411.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="824.4" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="822.1" y="1395.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="825.1" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="822.1" y="1379.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="825.1" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="822.1" y="1363.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="825.1" y="1374.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="822.1" y="1347.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="825.1" y="1358.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="822.1" y="1331.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="825.1" y="1342.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="822.1" y="1315.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="825.1" y="1326.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="822.1" y="1299.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="825.1" y="1310.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="822.1" y="1283.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="825.1" y="1294.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="822.1" y="1267.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="825.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (34 samples, 1.94%)</title><rect x="822.7" y="1459.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="825.7" y="1470.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 1.88%)</title><rect x="822.7" y="1443.0" width="22.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.7" y="1454.0">j..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.11%)</title><rect x="822.7" y="1427.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.7" y="1438.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="824.1" y="1427.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="827.1" y="1438.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.51%)</title><rect x="824.7" y="1427.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="827.7" y="1438.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.23%)</title><rect x="825.4" y="1411.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="828.4" y="1422.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.06%)</title><rect x="825.4" y="1395.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="828.4" y="1406.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.11%)</title><rect x="826.1" y="1395.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="829.1" y="1406.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="826.8" y="1379.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="829.8" y="1390.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="826.8" y="1363.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.8" y="1374.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="826.8" y="1347.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.8" y="1358.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="826.8" y="1331.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="829.8" y="1342.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.06%)</title><rect x="826.8" y="1315.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.8" y="1326.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.06%)</title><rect x="826.8" y="1299.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="829.8" y="1310.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="826.8" y="1283.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="829.8" y="1294.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="827.4" y="1395.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="830.4" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="827.4" y="1379.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="830.4" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="827.4" y="1363.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="830.4" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="827.4" y="1347.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="830.4" y="1358.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="828.1" y="1411.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="831.1" y="1422.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="828.8" y="1411.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="831.8" y="1422.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="829.5" y="1411.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="832.5" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="829.5" y="1395.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.5" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="829.5" y="1379.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="832.5" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="829.5" y="1363.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="832.5" y="1374.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="829.5" y="1347.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="832.5" y="1358.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="829.5" y="1331.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.5" y="1342.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="829.5" y="1315.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="832.5" y="1326.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.06%)</title><rect x="829.5" y="1299.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="832.5" y="1310.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="830.1" y="1411.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="833.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 1.20%)</title><rect x="830.8" y="1427.0" width="14.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="833.8" y="1438.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (21 samples, 1.20%)</title><rect x="830.8" y="1411.0" width="14.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="833.8" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 1.20%)</title><rect x="830.8" y="1395.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="833.8" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 1.20%)</title><rect x="830.8" y="1379.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="833.8" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 1.14%)</title><rect x="830.8" y="1363.0" width="13.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="833.8" y="1374.0"></text>
</g>
<g>
<title>do_futex (20 samples, 1.14%)</title><rect x="830.8" y="1347.0" width="13.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="833.8" y="1358.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 1.14%)</title><rect x="830.8" y="1331.0" width="13.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.8" y="1342.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 1.09%)</title><rect x="830.8" y="1315.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="833.8" y="1326.0"></text>
</g>
<g>
<title>schedule (19 samples, 1.09%)</title><rect x="830.8" y="1299.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.8" y="1310.0"></text>
</g>
<g>
<title>__schedule (19 samples, 1.09%)</title><rect x="830.8" y="1283.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="833.8" y="1294.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 1.03%)</title><rect x="831.5" y="1267.0" width="12.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="834.5" y="1278.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.06%)</title><rect x="843.6" y="1315.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="846.6" y="1326.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.06%)</title><rect x="843.6" y="1299.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="846.6" y="1310.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="843.6" y="1283.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.6" y="1294.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.06%)</title><rect x="844.3" y="1363.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="847.3" y="1374.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="845.0" y="1443.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="848.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (182 samples, 10.39%)</title><rect x="845.6" y="1491.0" width="122.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.6" y="1502.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (92 samples, 5.25%)</title><rect x="850.4" y="1475.0" width="62.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="853.4" y="1486.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/984556979.accept (88 samples, 5.03%)</title><rect x="851.0" y="1459.0" width="59.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.0" y="1470.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (88 samples, 5.03%)</title><rect x="851.0" y="1443.0" width="59.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.0" y="1454.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (88 samples, 5.03%)</title><rect x="851.0" y="1427.0" width="59.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.0" y="1438.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (86 samples, 4.91%)</title><rect x="851.7" y="1411.0" width="58.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.7" y="1422.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (86 samples, 4.91%)</title><rect x="851.7" y="1395.0" width="58.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.7" y="1406.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.11%)</title><rect x="851.7" y="1379.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.11%)</title><rect x="851.7" y="1363.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.06%)</title><rect x="852.4" y="1347.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.4" y="1358.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="852.4" y="1331.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.4" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="852.4" y="1315.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.4" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="852.4" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="855.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (84 samples, 4.80%)</title><rect x="853.0" y="1379.0" width="56.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.0" y="1390.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 4.80%)</title><rect x="853.0" y="1363.0" width="56.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.0" y="1374.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (84 samples, 4.80%)</title><rect x="853.0" y="1347.0" width="56.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.0" y="1358.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="853.7" y="1331.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="856.7" y="1342.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="853.7" y="1315.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="856.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (82 samples, 4.68%)</title><rect x="854.4" y="1331.0" width="55.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="857.4" y="1342.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (82 samples, 4.68%)</title><rect x="854.4" y="1315.0" width="55.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="857.4" y="1326.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (82 samples, 4.68%)</title><rect x="854.4" y="1299.0" width="55.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.4" y="1310.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (82 samples, 4.68%)</title><rect x="854.4" y="1283.0" width="55.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="857.4" y="1294.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (11 samples, 0.63%)</title><rect x="855.7" y="1267.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (11 samples, 0.63%)</title><rect x="855.7" y="1251.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="858.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (11 samples, 0.63%)</title><rect x="855.7" y="1235.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.63%)</title><rect x="855.7" y="1219.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.63%)</title><rect x="855.7" y="1203.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.57%)</title><rect x="856.4" y="1187.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="859.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.57%)</title><rect x="856.4" y="1171.0" width="6.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="859.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.57%)</title><rect x="856.4" y="1155.0" width="6.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="859.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.51%)</title><rect x="856.4" y="1139.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="859.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.51%)</title><rect x="856.4" y="1123.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.51%)</title><rect x="856.4" y="1107.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="859.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.51%)</title><rect x="856.4" y="1091.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.51%)</title><rect x="856.4" y="1075.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.51%)</title><rect x="856.4" y="1059.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.4" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.11%)</title><rect x="856.4" y="1043.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="859.4" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.11%)</title><rect x="856.4" y="1027.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="859.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.40%)</title><rect x="857.8" y="1043.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="860.8" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.40%)</title><rect x="857.8" y="1027.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="860.8" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.40%)</title><rect x="857.8" y="1011.0" width="4.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="860.8" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.40%)</title><rect x="857.8" y="995.0" width="4.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="860.8" y="1006.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.40%)</title><rect x="857.8" y="979.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="860.8" y="990.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.40%)</title><rect x="857.8" y="963.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.8" y="974.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.40%)</title><rect x="857.8" y="947.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.8" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.40%)</title><rect x="857.8" y="931.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="860.8" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.40%)</title><rect x="857.8" y="915.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="862.5" y="1139.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="865.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="862.5" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="862.5" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="862.5" y="1091.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.5" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="862.5" y="1075.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="865.5" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="862.5" y="1059.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="865.5" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="862.5" y="1043.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="865.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="863.2" y="1267.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="866.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (67 samples, 3.83%)</title><rect x="863.8" y="1267.0" width="45.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.8" y="1278.0">jdk/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (62 samples, 3.54%)</title><rect x="866.5" y="1251.0" width="41.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.5" y="1262.0">sun..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="866.5" y="1235.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="866.5" y="1219.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="869.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="866.5" y="1203.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="869.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="866.5" y="1187.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="869.5" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (60 samples, 3.43%)</title><rect x="867.9" y="1235.0" width="40.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.9" y="1246.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (60 samples, 3.43%)</title><rect x="867.9" y="1219.0" width="40.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.9" y="1230.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (59 samples, 3.37%)</title><rect x="867.9" y="1203.0" width="39.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.9" y="1214.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (59 samples, 3.37%)</title><rect x="867.9" y="1187.0" width="39.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="870.9" y="1198.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (56 samples, 3.20%)</title><rect x="869.2" y="1171.0" width="37.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.2" y="1182.0">sun..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="869.2" y="1155.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="872.2" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="869.2" y="1139.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="872.2" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="869.2" y="1123.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="872.2" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="869.2" y="1107.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="872.2" y="1118.0"></text>
</g>
<g>
<title>read (54 samples, 3.08%)</title><rect x="869.9" y="1155.0" width="36.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="872.9" y="1166.0">read</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 3.08%)</title><rect x="869.9" y="1139.0" width="36.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="872.9" y="1150.0">ent..</text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.06%)</title><rect x="869.9" y="1123.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="872.9" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 3.03%)</title><rect x="870.6" y="1123.0" width="35.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="873.6" y="1134.0">do_..</text>
</g>
<g>
<title>__x64_sys_read (52 samples, 2.97%)</title><rect x="871.2" y="1107.0" width="35.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="874.2" y="1118.0">__x..</text>
</g>
<g>
<title>ksys_read (52 samples, 2.97%)</title><rect x="871.2" y="1091.0" width="35.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.2" y="1102.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="871.2" y="1075.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="874.2" y="1086.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="871.2" y="1059.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.2" y="1070.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="871.2" y="1043.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="874.2" y="1054.0"></text>
</g>
<g>
<title>__vfs_read (2 samples, 0.11%)</title><rect x="871.9" y="1075.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="874.9" y="1086.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="873.3" y="1075.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="876.3" y="1086.0"></text>
</g>
<g>
<title>vfs_read (48 samples, 2.74%)</title><rect x="873.9" y="1075.0" width="32.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.9" y="1086.0">vf..</text>
</g>
<g>
<title>__vfs_read (42 samples, 2.40%)</title><rect x="874.6" y="1059.0" width="28.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="877.6" y="1070.0">__..</text>
</g>
<g>
<title>new_sync_read (42 samples, 2.40%)</title><rect x="874.6" y="1043.0" width="28.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="877.6" y="1054.0">ne..</text>
</g>
<g>
<title>sock_read_iter (40 samples, 2.28%)</title><rect x="876.0" y="1027.0" width="26.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.0" y="1038.0">s..</text>
</g>
<g>
<title>sock_recvmsg (39 samples, 2.23%)</title><rect x="876.6" y="1011.0" width="26.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="879.6" y="1022.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="876.6" y="995.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="879.6" y="1006.0"></text>
</g>
<g>
<title>inet6_recvmsg (36 samples, 2.06%)</title><rect x="877.3" y="995.0" width="24.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="880.3" y="1006.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (36 samples, 2.06%)</title><rect x="877.3" y="979.0" width="24.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="880.3" y="990.0">t..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="878.7" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.7" y="974.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="878.7" y="947.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="881.7" y="958.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.17%)</title><rect x="879.3" y="963.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="882.3" y="974.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.17%)</title><rect x="879.3" y="947.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="882.3" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.11%)</title><rect x="880.0" y="931.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="883.0" y="942.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="880.0" y="915.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="883.0" y="926.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.06%)</title><rect x="880.7" y="915.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="883.7" y="926.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.06%)</title><rect x="880.7" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.7" y="910.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (30 samples, 1.71%)</title><rect x="881.4" y="963.0" width="20.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.4" y="974.0"></text>
</g>
<g>
<title>tcp_send_ack (30 samples, 1.71%)</title><rect x="881.4" y="947.0" width="20.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="884.4" y="958.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (30 samples, 1.71%)</title><rect x="881.4" y="931.0" width="20.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.4" y="942.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.11%)</title><rect x="881.4" y="915.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="884.4" y="926.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="881.4" y="899.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="884.4" y="910.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.06%)</title><rect x="882.0" y="899.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="885.0" y="910.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="882.7" y="915.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="885.7" y="926.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (27 samples, 1.54%)</title><rect x="883.4" y="915.0" width="18.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.4" y="926.0"></text>
</g>
<g>
<title>ip_queue_xmit (24 samples, 1.37%)</title><rect x="885.4" y="899.0" width="16.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="888.4" y="910.0"></text>
</g>
<g>
<title>__ip_queue_xmit (23 samples, 1.31%)</title><rect x="885.4" y="883.0" width="15.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="888.4" y="894.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="885.4" y="867.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="888.4" y="878.0"></text>
</g>
<g>
<title>ip_local_out (22 samples, 1.26%)</title><rect x="886.1" y="867.0" width="14.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="889.1" y="878.0"></text>
</g>
<g>
<title>ip_output (22 samples, 1.26%)</title><rect x="886.1" y="851.0" width="14.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.1" y="862.0"></text>
</g>
<g>
<title>ip_finish_output (22 samples, 1.26%)</title><rect x="886.1" y="835.0" width="14.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.1" y="846.0"></text>
</g>
<g>
<title>__ip_finish_output (21 samples, 1.20%)</title><rect x="886.1" y="819.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="889.1" y="830.0"></text>
</g>
<g>
<title>ip_finish_output2 (18 samples, 1.03%)</title><rect x="887.4" y="803.0" width="12.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="890.4" y="814.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 0.86%)</title><rect x="887.4" y="787.0" width="10.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="890.4" y="798.0"></text>
</g>
<g>
<title>do_softirq.part.0 (15 samples, 0.86%)</title><rect x="887.4" y="771.0" width="10.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="890.4" y="782.0"></text>
</g>
<g>
<title>do_softirq_own_stack (15 samples, 0.86%)</title><rect x="887.4" y="755.0" width="10.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.4" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (15 samples, 0.86%)</title><rect x="887.4" y="739.0" width="10.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="890.4" y="750.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="887.4" y="723.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.4" y="734.0"></text>
</g>
<g>
<title>net_rx_action (14 samples, 0.80%)</title><rect x="888.1" y="723.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="891.1" y="734.0"></text>
</g>
<g>
<title>process_backlog (13 samples, 0.74%)</title><rect x="888.8" y="707.0" width="8.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="891.8" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 0.69%)</title><rect x="889.4" y="691.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="892.4" y="702.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 0.63%)</title><rect x="890.1" y="675.0" width="7.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="893.1" y="686.0"></text>
</g>
<g>
<title>ip_rcv (11 samples, 0.63%)</title><rect x="890.1" y="659.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.1" y="670.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="890.1" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="893.1" y="654.0"></text>
</g>
<g>
<title>ip_rcv_finish (10 samples, 0.57%)</title><rect x="890.8" y="643.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="893.8" y="654.0"></text>
</g>
<g>
<title>ip_local_deliver (10 samples, 0.57%)</title><rect x="890.8" y="627.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="893.8" y="638.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 0.51%)</title><rect x="891.5" y="611.0" width="6.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="894.5" y="622.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 0.51%)</title><rect x="891.5" y="595.0" width="6.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.5" y="606.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="891.5" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.5" y="590.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.46%)</title><rect x="892.1" y="579.0" width="5.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="895.1" y="590.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.29%)</title><rect x="894.2" y="563.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.2" y="574.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="894.2" y="547.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.2" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.23%)</title><rect x="894.8" y="547.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.8" y="558.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.06%)</title><rect x="896.2" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="899.2" y="542.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="896.2" y="515.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.2" y="526.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="896.9" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="899.9" y="542.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.17%)</title><rect x="897.5" y="787.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.5" y="798.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.17%)</title><rect x="897.5" y="771.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.5" y="782.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.17%)</title><rect x="897.5" y="755.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="900.5" y="766.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.11%)</title><rect x="897.5" y="739.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="900.5" y="750.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="898.9" y="739.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="901.9" y="750.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="898.9" y="723.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="901.9" y="734.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="898.9" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="901.9" y="718.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="898.9" y="691.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="901.9" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="899.5" y="803.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="902.5" y="814.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="900.2" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="903.2" y="830.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.06%)</title><rect x="900.9" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="903.9" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.11%)</title><rect x="901.6" y="995.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="904.6" y="1006.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="902.2" y="979.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="905.2" y="990.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.29%)</title><rect x="902.9" y="1059.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="905.9" y="1070.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="904.3" y="1043.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="907.3" y="1054.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.11%)</title><rect x="904.9" y="1043.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="907.9" y="1054.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="904.9" y="1027.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="907.9" y="1038.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="905.6" y="1027.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="908.6" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="906.3" y="1155.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="909.3" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="906.3" y="1139.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="909.3" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="906.3" y="1123.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="909.3" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="907.0" y="1171.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="910.0" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="907.0" y="1155.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="910.0" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="907.0" y="1139.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.0" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.06%)</title><rect x="907.6" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="910.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.06%)</title><rect x="907.6" y="1187.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="910.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.06%)</title><rect x="907.6" y="1171.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="910.6" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="907.6" y="1155.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.6" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="907.6" y="1139.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.6" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="907.6" y="1123.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.6" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="908.3" y="1251.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="911.3" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="908.3" y="1235.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="911.3" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="908.3" y="1219.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="911.3" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="909.0" y="1267.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="912.0" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="909.0" y="1251.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.0" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="909.0" y="1235.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="912.0" y="1246.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="909.0" y="1219.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.0" y="1230.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="909.0" y="1203.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="912.0" y="1214.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="909.0" y="1187.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="912.0" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="909.7" y="1411.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="912.7" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="909.7" y="1395.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="912.7" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="909.7" y="1379.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1747724333.accept (3 samples, 0.17%)</title><rect x="910.3" y="1459.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.17%)</title><rect x="910.3" y="1443.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1196171815.run (1 samples, 0.06%)</title><rect x="910.3" y="1427.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.06%)</title><rect x="910.3" y="1411.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="913.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.06%)</title><rect x="910.3" y="1395.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.3" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="910.3" y="1379.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.3" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="910.3" y="1363.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="913.3" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="910.3" y="1347.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="913.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (1 samples, 0.06%)</title><rect x="911.0" y="1427.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.0" y="1438.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.06%)</title><rect x="911.7" y="1427.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="914.7" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (7 samples, 0.40%)</title><rect x="912.4" y="1475.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.4" y="1486.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (6 samples, 0.34%)</title><rect x="912.4" y="1459.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="915.4" y="1470.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="912.4" y="1443.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="915.4" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (5 samples, 0.29%)</title><rect x="913.0" y="1443.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.0" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.23%)</title><rect x="913.7" y="1427.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.7" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.23%)</title><rect x="913.7" y="1411.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.7" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.23%)</title><rect x="913.7" y="1395.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.7" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.11%)</title><rect x="913.7" y="1379.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="916.7" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.11%)</title><rect x="913.7" y="1363.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.7" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.06%)</title><rect x="914.4" y="1347.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/1594236632.accept (1 samples, 0.06%)</title><rect x="914.4" y="1331.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.4" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="914.4" y="1315.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.4" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="914.4" y="1299.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.4" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="914.4" y="1283.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.4" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="914.4" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="917.4" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.06%)</title><rect x="914.4" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="917.4" y="1262.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.11%)</title><rect x="915.0" y="1379.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.0" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (2 samples, 0.11%)</title><rect x="915.0" y="1363.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.0" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.getFence (2 samples, 0.11%)</title><rect x="915.0" y="1347.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.0" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="915.7" y="1331.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="918.7" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="915.7" y="1315.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.7" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="915.7" y="1299.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="918.7" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="916.4" y="1459.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="919.4" y="1470.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="916.4" y="1443.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="919.4" y="1454.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="916.4" y="1427.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="919.4" y="1438.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="916.4" y="1411.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.4" y="1422.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="916.4" y="1395.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="919.4" y="1406.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="916.4" y="1379.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="919.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (14 samples, 0.80%)</title><rect x="917.1" y="1475.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="920.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/1138953262.run (12 samples, 0.69%)</title><rect x="917.1" y="1459.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="920.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (12 samples, 0.69%)</title><rect x="917.1" y="1443.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.69%)</title><rect x="917.1" y="1427.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.1" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.69%)</title><rect x="917.1" y="1411.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.1" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.69%)</title><rect x="917.1" y="1395.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (11 samples, 0.63%)</title><rect x="917.1" y="1379.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="920.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (9 samples, 0.51%)</title><rect x="917.1" y="1363.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (9 samples, 0.51%)</title><rect x="917.1" y="1347.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (9 samples, 0.51%)</title><rect x="917.1" y="1331.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (7 samples, 0.40%)</title><rect x="917.7" y="1315.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="920.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (5 samples, 0.29%)</title><rect x="917.7" y="1299.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.29%)</title><rect x="917.7" y="1283.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="920.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.29%)</title><rect x="917.7" y="1267.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.17%)</title><rect x="917.7" y="1251.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.17%)</title><rect x="917.7" y="1235.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="920.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.17%)</title><rect x="917.7" y="1219.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="920.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.17%)</title><rect x="917.7" y="1203.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.11%)</title><rect x="917.7" y="1187.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.7" y="1198.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.11%)</title><rect x="917.7" y="1171.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="920.7" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.11%)</title><rect x="917.7" y="1155.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.7" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.11%)</title><rect x="917.7" y="1139.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="920.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="919.1" y="1187.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.1" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="919.1" y="1171.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="922.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (2 samples, 0.11%)</title><rect x="919.8" y="1251.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.8" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="920.4" y="1235.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="923.4" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="920.4" y="1219.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="923.4" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="920.4" y="1203.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="923.4" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="920.4" y="1187.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.11%)</title><rect x="921.1" y="1299.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.11%)</title><rect x="921.1" y="1283.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.11%)</title><rect x="921.1" y="1267.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.11%)</title><rect x="921.1" y="1251.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.11%)</title><rect x="921.1" y="1235.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.11%)</title><rect x="921.1" y="1219.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="921.1" y="1203.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="924.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="921.1" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="921.1" y="1171.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="921.1" y="1155.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="921.1" y="1139.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="921.1" y="1123.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.1" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="921.1" y="1107.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="924.1" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="921.1" y="1091.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="924.1" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="921.1" y="1075.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="924.1" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="921.1" y="1059.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="924.1" y="1070.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="921.1" y="1043.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="924.1" y="1054.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="921.1" y="1027.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="924.1" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="921.1" y="1011.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.1" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="921.1" y="995.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.1" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="921.1" y="979.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="924.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="921.8" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="921.8" y="1187.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="924.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="921.8" y="1171.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="921.8" y="1155.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.8" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="922.5" y="1315.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="925.5" y="1326.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="922.5" y="1299.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="925.5" y="1310.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="922.5" y="1283.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="925.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.06%)</title><rect x="923.1" y="1363.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="926.1" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="923.1" y="1347.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="926.1" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="923.1" y="1331.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.1" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="923.1" y="1315.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="926.1" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="923.8" y="1363.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="926.8" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="923.8" y="1347.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="926.8" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="923.8" y="1331.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="926.8" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="924.5" y="1379.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.5" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="924.5" y="1363.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.5" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="924.5" y="1347.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.5" y="1358.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="924.5" y="1331.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.5" y="1342.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="924.5" y="1315.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="927.5" y="1326.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="924.5" y="1299.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="927.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$165/1403403797.run (2 samples, 0.11%)</title><rect x="925.2" y="1459.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (2 samples, 0.11%)</title><rect x="925.2" y="1443.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="925.2" y="1427.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="928.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="925.2" y="1411.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.get$Lambda (1 samples, 0.06%)</title><rect x="925.2" y="1395.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="928.2" y="1406.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="925.2" y="1379.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="928.2" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="925.2" y="1363.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="928.2" y="1374.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="925.2" y="1347.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="928.2" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="925.2" y="1331.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="928.2" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="925.2" y="1315.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="928.2" y="1326.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.06%)</title><rect x="925.2" y="1299.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="928.2" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="925.2" y="1283.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="928.2" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="925.2" y="1267.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.2" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="925.2" y="1251.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="928.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="925.8" y="1427.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="928.8" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="925.8" y="1411.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.8" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="925.8" y="1395.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="928.8" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="925.8" y="1379.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="925.8" y="1363.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="928.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="925.8" y="1347.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="928.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="925.8" y="1331.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="925.8" y="1315.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="925.8" y="1299.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="928.8" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="925.8" y="1283.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="928.8" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="925.8" y="1267.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="928.8" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="925.8" y="1251.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="928.8" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="925.8" y="1235.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.8" y="1246.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="925.8" y="1219.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="928.8" y="1230.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="925.8" y="1203.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.8" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="925.8" y="1187.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="928.8" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="925.8" y="1171.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="928.8" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="925.8" y="1155.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (12 samples, 0.69%)</title><rect x="926.5" y="1475.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="929.5" y="1486.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.06%)</title><rect x="926.5" y="1459.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.5" y="1470.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.06%)</title><rect x="926.5" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.5" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (11 samples, 0.63%)</title><rect x="927.2" y="1459.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.2" y="1470.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.23%)</title><rect x="929.2" y="1443.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="932.2" y="1454.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.23%)</title><rect x="929.2" y="1427.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="932.2" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.23%)</title><rect x="929.2" y="1411.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="932.2" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.06%)</title><rect x="931.9" y="1443.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.9" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.11%)</title><rect x="932.6" y="1443.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.6" y="1454.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="932.6" y="1427.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="935.6" y="1438.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="932.6" y="1411.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="935.6" y="1422.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="932.6" y="1395.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="935.6" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="933.9" y="1443.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.9" y="1454.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="933.9" y="1427.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.9" y="1438.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="933.9" y="1411.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="936.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.06%)</title><rect x="934.6" y="1475.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.6" y="1486.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="934.6" y="1459.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="937.6" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="934.6" y="1443.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="937.6" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="934.6" y="1427.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="937.6" y="1438.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="934.6" y="1411.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="937.6" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="934.6" y="1395.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="937.6" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="934.6" y="1379.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (1 samples, 0.06%)</title><rect x="935.3" y="1475.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.3" y="1486.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.06%)</title><rect x="935.3" y="1459.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="938.3" y="1470.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.06%)</title><rect x="935.3" y="1443.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="938.3" y="1454.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.06%)</title><rect x="935.3" y="1427.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.3" y="1438.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="935.3" y="1411.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="938.3" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="935.3" y="1395.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="938.3" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="935.3" y="1379.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.3" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (40 samples, 2.28%)</title><rect x="935.9" y="1475.0" width="27.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.9" y="1486.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (40 samples, 2.28%)</title><rect x="935.9" y="1459.0" width="27.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="938.9" y="1470.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (38 samples, 2.17%)</title><rect x="936.6" y="1443.0" width="25.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="939.6" y="1454.0">s..</text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.06%)</title><rect x="936.6" y="1427.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="939.6" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (24 samples, 1.37%)</title><rect x="937.3" y="1427.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="940.3" y="1438.0"></text>
</g>
<g>
<title>epoll_wait (23 samples, 1.31%)</title><rect x="937.3" y="1411.0" width="15.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="940.3" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.26%)</title><rect x="938.0" y="1395.0" width="14.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.0" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.11%)</title><rect x="938.0" y="1379.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="941.0" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (20 samples, 1.14%)</title><rect x="939.3" y="1379.0" width="13.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="942.3" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (20 samples, 1.14%)</title><rect x="939.3" y="1363.0" width="13.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="942.3" y="1374.0"></text>
</g>
<g>
<title>do_epoll_wait (20 samples, 1.14%)</title><rect x="939.3" y="1347.0" width="13.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="942.3" y="1358.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="940.0" y="1331.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.0" y="1342.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="940.0" y="1315.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="943.0" y="1326.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="940.0" y="1299.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.0" y="1310.0"></text>
</g>
<g>
<title>ep_poll (18 samples, 1.03%)</title><rect x="940.7" y="1331.0" width="12.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="943.7" y="1342.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.57%)</title><rect x="941.3" y="1315.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="944.3" y="1326.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.51%)</title><rect x="942.0" y="1299.0" width="6.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="945.0" y="1310.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="942.7" y="1283.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="945.7" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (5 samples, 0.29%)</title><rect x="943.4" y="1283.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="946.4" y="1294.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.17%)</title><rect x="944.7" y="1267.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="947.7" y="1278.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="946.0" y="1251.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.0" y="1262.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.06%)</title><rect x="946.7" y="1283.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.7" y="1294.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.06%)</title><rect x="947.4" y="1283.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="950.4" y="1294.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.06%)</title><rect x="948.1" y="1315.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="951.1" y="1326.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 0.34%)</title><rect x="948.7" y="1315.0" width="4.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="951.7" y="1326.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.34%)</title><rect x="948.7" y="1299.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="951.7" y="1310.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.34%)</title><rect x="948.7" y="1283.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="951.7" y="1294.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.34%)</title><rect x="948.7" y="1267.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.7" y="1278.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.34%)</title><rect x="948.7" y="1251.0" width="4.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="951.7" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="952.8" y="1411.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="955.8" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="952.8" y="1395.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="955.8" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="952.8" y="1379.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="955.8" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (12 samples, 0.69%)</title><rect x="953.5" y="1427.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.5" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.63%)</title><rect x="953.5" y="1411.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.5" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (11 samples, 0.63%)</title><rect x="953.5" y="1395.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="956.5" y="1406.0"></text>
</g>
<g>
<title>read (10 samples, 0.57%)</title><rect x="954.1" y="1379.0" width="6.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="957.1" y="1390.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.57%)</title><rect x="954.1" y="1363.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="957.1" y="1374.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.57%)</title><rect x="954.1" y="1347.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.1" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_read (9 samples, 0.51%)</title><rect x="954.1" y="1331.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.1" y="1342.0"></text>
</g>
<g>
<title>ksys_read (9 samples, 0.51%)</title><rect x="954.1" y="1315.0" width="6.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="957.1" y="1326.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.06%)</title><rect x="954.1" y="1299.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.1" y="1310.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.46%)</title><rect x="954.8" y="1299.0" width="5.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="957.8" y="1310.0"></text>
</g>
<g>
<title>__vfs_read (7 samples, 0.40%)</title><rect x="954.8" y="1283.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="957.8" y="1294.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.29%)</title><rect x="954.8" y="1267.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.8" y="1278.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="954.8" y="1251.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.8" y="1262.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.06%)</title><rect x="955.5" y="1251.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="958.5" y="1262.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.06%)</title><rect x="956.2" y="1251.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.2" y="1262.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.11%)</title><rect x="956.8" y="1251.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="959.8" y="1262.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.06%)</title><rect x="957.5" y="1235.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="960.5" y="1246.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.06%)</title><rect x="957.5" y="1219.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.5" y="1230.0"></text>
</g>
<g>
<title>pipe_read (2 samples, 0.11%)</title><rect x="958.2" y="1267.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="961.2" y="1278.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.06%)</title><rect x="959.5" y="1283.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="962.5" y="1294.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="959.5" y="1267.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="962.5" y="1278.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="959.5" y="1251.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.5" y="1262.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="959.5" y="1235.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="962.5" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="960.2" y="1331.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="963.2" y="1342.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="960.2" y="1315.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.2" y="1326.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="960.2" y="1299.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.2" y="1310.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="960.2" y="1283.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.2" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.06%)</title><rect x="960.9" y="1411.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="963.9" y="1422.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="960.9" y="1395.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="960.9" y="1379.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="963.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="960.9" y="1363.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.9" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="960.9" y="1347.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="963.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="961.5" y="1427.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="964.5" y="1438.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="961.5" y="1411.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.5" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="961.5" y="1395.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="964.5" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="961.5" y="1379.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="964.5" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="961.5" y="1363.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="964.5" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="961.5" y="1347.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="964.5" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="961.5" y="1331.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="964.5" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="961.5" y="1315.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="964.5" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.ensureOpen (1 samples, 0.06%)</title><rect x="962.2" y="1443.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.2" y="1454.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.isOpen (1 samples, 0.06%)</title><rect x="962.2" y="1427.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.06%)</title><rect x="962.2" y="1411.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.2" y="1422.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="962.2" y="1395.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="965.2" y="1406.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="962.2" y="1379.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="965.2" y="1390.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="962.2" y="1363.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="965.2" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (5 samples, 0.29%)</title><rect x="962.9" y="1475.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.9" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.23%)</title><rect x="962.9" y="1459.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.9" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.23%)</title><rect x="962.9" y="1443.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.9" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.17%)</title><rect x="962.9" y="1427.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.9" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.11%)</title><rect x="962.9" y="1411.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="965.9" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.11%)</title><rect x="962.9" y="1395.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.9" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.11%)</title><rect x="962.9" y="1379.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="965.9" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.11%)</title><rect x="962.9" y="1363.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="965.9" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.11%)</title><rect x="962.9" y="1347.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.9" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.06%)</title><rect x="964.2" y="1411.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.2" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.06%)</title><rect x="964.9" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.9" y="1438.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="964.9" y="1411.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.9" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="964.9" y="1395.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.9" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="964.9" y="1379.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="964.9" y="1363.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.9" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="965.6" y="1459.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.6" y="1470.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="965.6" y="1443.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="968.6" y="1454.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="965.6" y="1427.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.6" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.06%)</title><rect x="966.3" y="1475.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.3" y="1486.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.06%)</title><rect x="966.3" y="1459.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.3" y="1470.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="966.3" y="1443.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.3" y="1454.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="966.3" y="1427.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.3" y="1438.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="966.3" y="1411.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="969.3" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.11%)</title><rect x="966.9" y="1475.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.9" y="1486.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="966.9" y="1459.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.9" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="966.9" y="1443.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="969.9" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="966.9" y="1427.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.9" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="966.9" y="1411.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.9" y="1422.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="967.6" y="1459.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="970.6" y="1470.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="967.6" y="1443.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.6" y="1454.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="967.6" y="1427.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="970.6" y="1438.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (313 samples, 17.88%)</title><rect x="968.3" y="1491.0" width="210.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.3" y="1502.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="969.0" y="1475.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="972.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="969.0" y="1459.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="972.0" y="1470.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="969.0" y="1443.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="972.0" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (62 samples, 3.54%)</title><rect x="969.6" y="1475.0" width="41.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="972.6" y="1486.0">one..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.11%)</title><rect x="969.6" y="1459.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="972.6" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.11%)</title><rect x="969.6" y="1443.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="972.6" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.11%)</title><rect x="969.6" y="1427.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="972.6" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="969.6" y="1411.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="972.6" y="1422.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="969.6" y="1395.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="972.6" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="969.6" y="1379.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="972.6" y="1390.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="969.6" y="1363.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="972.6" y="1374.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="969.6" y="1347.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="972.6" y="1358.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="970.3" y="1411.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="973.3" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (60 samples, 3.43%)</title><rect x="971.0" y="1459.0" width="40.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="974.0" y="1470.0">one..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="972.3" y="1443.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="975.3" y="1454.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="972.3" y="1427.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="975.3" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="972.3" y="1411.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.3" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="972.3" y="1395.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="975.3" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="972.3" y="1379.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.3" y="1390.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="972.3" y="1363.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="975.3" y="1374.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="972.3" y="1347.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.3" y="1358.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="972.3" y="1331.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="975.3" y="1342.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="972.3" y="1315.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.3" y="1326.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="972.3" y="1299.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="975.3" y="1310.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="972.3" y="1283.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="975.3" y="1294.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.17%)</title><rect x="973.0" y="1443.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="976.0" y="1454.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="974.4" y="1427.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="977.4" y="1438.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="974.4" y="1411.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="977.4" y="1422.0"></text>
</g>
<g>
<title>epoll_wait (54 samples, 3.08%)</title><rect x="975.0" y="1443.0" width="36.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="978.0" y="1454.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 2.74%)</title><rect x="979.1" y="1427.0" width="32.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="982.1" y="1438.0">en..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.06%)</title><rect x="979.1" y="1411.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.1" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 2.68%)</title><rect x="979.7" y="1411.0" width="31.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="982.7" y="1422.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (45 samples, 2.57%)</title><rect x="981.1" y="1395.0" width="30.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="984.1" y="1406.0">__..</text>
</g>
<g>
<title>do_epoll_wait (45 samples, 2.57%)</title><rect x="981.1" y="1379.0" width="30.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="984.1" y="1390.0">do..</text>
</g>
<g>
<title>ep_poll (44 samples, 2.51%)</title><rect x="981.1" y="1363.0" width="29.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.1" y="1374.0">ep..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.57%)</title><rect x="981.1" y="1347.0" width="6.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="984.1" y="1358.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.06%)</title><rect x="982.4" y="1331.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="985.4" y="1342.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.40%)</title><rect x="983.1" y="1331.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="986.1" y="1342.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.34%)</title><rect x="983.8" y="1315.0" width="4.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.8" y="1326.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.23%)</title><rect x="985.1" y="1299.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="988.1" y="1310.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.17%)</title><rect x="985.8" y="1283.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="988.8" y="1294.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="987.8" y="1347.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="990.8" y="1358.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (32 samples, 1.83%)</title><rect x="988.5" y="1347.0" width="21.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="991.5" y="1358.0">s..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (32 samples, 1.83%)</title><rect x="988.5" y="1331.0" width="21.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.5" y="1342.0">s..</text>
</g>
<g>
<title>schedule (32 samples, 1.83%)</title><rect x="988.5" y="1315.0" width="21.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="991.5" y="1326.0">s..</text>
</g>
<g>
<title>__schedule (32 samples, 1.83%)</title><rect x="988.5" y="1299.0" width="21.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="991.5" y="1310.0">_..</text>
</g>
<g>
<title>finish_task_switch (26 samples, 1.48%)</title><rect x="992.5" y="1283.0" width="17.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.5" y="1294.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="1010.1" y="1347.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1013.1" y="1358.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="1010.7" y="1363.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1013.7" y="1374.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (247 samples, 14.11%)</title><rect x="1011.4" y="1475.0" width="166.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1014.4" y="1486.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (247 samples, 14.11%)</title><rect x="1011.4" y="1459.0" width="166.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1014.4" y="1470.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (176 samples, 10.05%)</title><rect x="1011.4" y="1443.0" width="118.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.4" y="1454.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.06%)</title><rect x="1015.5" y="1427.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.5" y="1438.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (147 samples, 8.40%)</title><rect x="1016.1" y="1427.0" width="99.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1019.1" y="1438.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (147 samples, 8.40%)</title><rect x="1016.1" y="1411.0" width="99.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1019.1" y="1422.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (137 samples, 7.82%)</title><rect x="1016.8" y="1395.0" width="92.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1019.8" y="1406.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.06%)</title><rect x="1016.8" y="1379.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.8" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1016.8" y="1363.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1019.8" y="1374.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.06%)</title><rect x="1016.8" y="1347.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1019.8" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (136 samples, 7.77%)</title><rect x="1017.5" y="1379.0" width="91.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1020.5" y="1390.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.29%)</title><rect x="1018.2" y="1363.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1019.5" y="1347.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1022.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1019.5" y="1331.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.11%)</title><rect x="1020.2" y="1347.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1023.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.11%)</title><rect x="1020.2" y="1331.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.2" y="1342.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.11%)</title><rect x="1020.2" y="1315.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1023.2" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.11%)</title><rect x="1020.2" y="1299.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.2" y="1310.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1020.9" y="1283.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1023.9" y="1294.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1020.9" y="1267.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1023.9" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1020.9" y="1251.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1023.9" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1020.9" y="1235.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1023.9" y="1246.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.06%)</title><rect x="1020.9" y="1219.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1023.9" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (44 samples, 2.51%)</title><rect x="1021.5" y="1363.0" width="29.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.5" y="1374.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (44 samples, 2.51%)</title><rect x="1021.5" y="1347.0" width="29.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.5" y="1358.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (44 samples, 2.51%)</title><rect x="1021.5" y="1331.0" width="29.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1024.5" y="1342.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (44 samples, 2.51%)</title><rect x="1021.5" y="1315.0" width="29.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.5" y="1326.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (44 samples, 2.51%)</title><rect x="1021.5" y="1299.0" width="29.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1024.5" y="1310.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (42 samples, 2.40%)</title><rect x="1022.9" y="1283.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.9" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="1022.9" y="1267.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1025.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="1022.9" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1025.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="1022.9" y="1235.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1025.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="1022.9" y="1219.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1025.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (41 samples, 2.34%)</title><rect x="1023.5" y="1267.0" width="27.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.5" y="1278.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (41 samples, 2.34%)</title><rect x="1023.5" y="1251.0" width="27.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1026.5" y="1262.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (41 samples, 2.34%)</title><rect x="1023.5" y="1235.0" width="27.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1026.5" y="1246.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 2.34%)</title><rect x="1023.5" y="1219.0" width="27.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1026.5" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 2.34%)</title><rect x="1023.5" y="1203.0" width="27.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1026.5" y="1214.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.34%)</title><rect x="1024.9" y="1187.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1027.9" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="1026.9" y="1171.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.9" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="1027.6" y="1171.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1030.6" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="1028.3" y="1171.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1031.3" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (33 samples, 1.88%)</title><rect x="1028.9" y="1187.0" width="22.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1031.9" y="1198.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.88%)</title><rect x="1028.9" y="1171.0" width="22.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1031.9" y="1182.0">e..</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 1.88%)</title><rect x="1028.9" y="1155.0" width="22.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1031.9" y="1166.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 1.88%)</title><rect x="1028.9" y="1139.0" width="22.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1031.9" y="1150.0">_..</text>
</g>
<g>
<title>do_futex (31 samples, 1.77%)</title><rect x="1029.6" y="1123.0" width="20.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.6" y="1134.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 1.77%)</title><rect x="1029.6" y="1107.0" width="20.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1032.6" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="1030.3" y="1091.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1033.3" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 1.66%)</title><rect x="1031.0" y="1091.0" width="19.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1034.0" y="1102.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 1.66%)</title><rect x="1031.0" y="1075.0" width="19.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1034.0" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (29 samples, 1.66%)</title><rect x="1031.0" y="1059.0" width="19.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1034.0" y="1070.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="1050.5" y="1123.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1053.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (86 samples, 4.91%)</title><rect x="1051.2" y="1363.0" width="57.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1054.2" y="1374.0">ru/mai..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="1052.5" y="1347.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.5" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="1052.5" y="1331.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1055.5" y="1342.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1052.5" y="1315.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1055.5" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1052.5" y="1299.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1055.5" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1052.5" y="1283.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1055.5" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1052.5" y="1267.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.5" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (64 samples, 3.66%)</title><rect x="1053.2" y="1347.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.2" y="1358.0">ru/m..</text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.06%)</title><rect x="1053.2" y="1331.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (44 samples, 2.51%)</title><rect x="1053.9" y="1331.0" width="29.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1056.9" y="1342.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (44 samples, 2.51%)</title><rect x="1053.9" y="1315.0" width="29.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1056.9" y="1326.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (44 samples, 2.51%)</title><rect x="1053.9" y="1299.0" width="29.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1056.9" y="1310.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (44 samples, 2.51%)</title><rect x="1053.9" y="1283.0" width="29.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1056.9" y="1294.0">jd..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1054.5" y="1267.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1057.5" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1054.5" y="1251.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1057.5" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1054.5" y="1235.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.11%)</title><rect x="1055.2" y="1267.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1058.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.11%)</title><rect x="1055.2" y="1251.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1058.2" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1055.9" y="1235.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1058.9" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1055.9" y="1219.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1058.9" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1055.9" y="1203.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1058.9" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1055.9" y="1187.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.9" y="1198.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="1055.9" y="1171.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1058.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (29 samples, 1.66%)</title><rect x="1056.6" y="1267.0" width="19.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1059.6" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.06%)</title><rect x="1056.6" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1059.6" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.34%)</title><rect x="1057.2" y="1251.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1060.2" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.34%)</title><rect x="1057.2" y="1235.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1060.2" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.11%)</title><rect x="1057.2" y="1219.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.2" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1057.9" y="1203.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1060.9" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1057.9" y="1187.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.9" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1057.9" y="1171.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1060.9" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1057.9" y="1155.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1060.9" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1057.9" y="1139.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1060.9" y="1150.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (4 samples, 0.23%)</title><rect x="1058.6" y="1219.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1061.6" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.23%)</title><rect x="1058.6" y="1203.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.6" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (4 samples, 0.23%)</title><rect x="1058.6" y="1187.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1061.6" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.23%)</title><rect x="1058.6" y="1171.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1061.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (4 samples, 0.23%)</title><rect x="1058.6" y="1155.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1061.6" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (2 samples, 0.11%)</title><rect x="1059.3" y="1139.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1062.3" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.11%)</title><rect x="1059.3" y="1123.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1062.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="1059.3" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1062.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="1059.3" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1062.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/867148091.test (1 samples, 0.06%)</title><rect x="1059.3" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.3" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1059.3" y="1059.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1062.3" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1059.3" y="1043.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1062.3" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1059.3" y="1027.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1062.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/867148091.test (1 samples, 0.06%)</title><rect x="1059.9" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1062.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (1 samples, 0.06%)</title><rect x="1059.9" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (1 samples, 0.06%)</title><rect x="1059.9" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1062.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.06%)</title><rect x="1059.9" y="1059.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1062.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.06%)</title><rect x="1059.9" y="1043.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1062.9" y="1054.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.06%)</title><rect x="1060.6" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1063.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (21 samples, 1.20%)</title><rect x="1061.3" y="1251.0" width="14.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1064.3" y="1262.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (21 samples, 1.20%)</title><rect x="1061.3" y="1235.0" width="14.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1064.3" y="1246.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (21 samples, 1.20%)</title><rect x="1061.3" y="1219.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1064.3" y="1230.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (14 samples, 0.80%)</title><rect x="1061.3" y="1203.0" width="9.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1064.3" y="1214.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.06%)</title><rect x="1062.0" y="1187.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1065.0" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.06%)</title><rect x="1062.6" y="1187.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1065.6" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="1062.6" y="1171.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1065.6" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.11%)</title><rect x="1063.3" y="1187.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1066.3" y="1198.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="1063.3" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1066.3" y="1182.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.06%)</title><rect x="1064.0" y="1171.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1067.0" y="1182.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="1064.7" y="1187.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1067.7" y="1198.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.06%)</title><rect x="1065.3" y="1187.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1068.3" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="1066.0" y="1187.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1069.0" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="1066.7" y="1187.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1069.7" y="1198.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (5 samples, 0.29%)</title><rect x="1067.4" y="1187.0" width="3.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1070.4" y="1198.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="1067.4" y="1171.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1070.4" y="1182.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.11%)</title><rect x="1068.0" y="1171.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.0" y="1182.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.11%)</title><rect x="1069.4" y="1171.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1072.4" y="1182.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.11%)</title><rect x="1069.4" y="1155.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1072.4" y="1166.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.11%)</title><rect x="1069.4" y="1139.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1072.4" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.11%)</title><rect x="1070.7" y="1203.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1073.7" y="1214.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="1072.1" y="1203.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.1" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 0.23%)</title><rect x="1072.7" y="1203.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1075.7" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 0.23%)</title><rect x="1072.7" y="1187.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1075.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="1074.8" y="1171.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1077.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="1074.8" y="1155.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1077.8" y="1166.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1074.8" y="1139.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1077.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.06%)</title><rect x="1075.4" y="1251.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3 samples, 0.17%)</title><rect x="1076.1" y="1267.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3 samples, 0.17%)</title><rect x="1076.1" y="1251.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1079.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3 samples, 0.17%)</title><rect x="1076.1" y="1235.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1079.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.06%)</title><rect x="1076.8" y="1219.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1079.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.06%)</title><rect x="1076.8" y="1203.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1079.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.06%)</title><rect x="1076.8" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1079.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.06%)</title><rect x="1077.5" y="1219.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1080.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (8 samples, 0.46%)</title><rect x="1078.1" y="1267.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (3 samples, 0.17%)</title><rect x="1078.1" y="1251.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.17%)</title><rect x="1078.1" y="1235.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.06%)</title><rect x="1078.1" y="1219.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1081.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="1078.1" y="1203.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1081.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="1078.1" y="1187.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="1078.1" y="1171.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1081.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="1078.1" y="1155.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1081.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.11%)</title><rect x="1078.8" y="1219.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1081.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.11%)</title><rect x="1078.8" y="1203.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1081.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.11%)</title><rect x="1078.8" y="1187.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.11%)</title><rect x="1078.8" y="1171.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1081.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.11%)</title><rect x="1078.8" y="1155.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1081.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.11%)</title><rect x="1078.8" y="1139.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1081.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.11%)</title><rect x="1078.8" y="1123.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1081.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.11%)</title><rect x="1078.8" y="1107.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1081.8" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.11%)</title><rect x="1078.8" y="1091.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1081.8" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.11%)</title><rect x="1078.8" y="1075.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1081.8" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.11%)</title><rect x="1078.8" y="1059.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1081.8" y="1070.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.11%)</title><rect x="1078.8" y="1043.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1081.8" y="1054.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.11%)</title><rect x="1078.8" y="1027.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1081.8" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.11%)</title><rect x="1078.8" y="1011.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1081.8" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.11%)</title><rect x="1078.8" y="995.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1081.8" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.11%)</title><rect x="1078.8" y="979.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1081.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5 samples, 0.29%)</title><rect x="1080.2" y="1251.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.29%)</title><rect x="1080.2" y="1235.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1083.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.29%)</title><rect x="1080.2" y="1219.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1083.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1080.2" y="1203.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1080.2" y="1187.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1083.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1080.2" y="1171.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1083.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.17%)</title><rect x="1081.5" y="1203.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1084.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (3 samples, 0.17%)</title><rect x="1081.5" y="1187.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.17%)</title><rect x="1081.5" y="1171.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1084.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (19 samples, 1.09%)</title><rect x="1083.5" y="1331.0" width="12.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.11%)</title><rect x="1084.2" y="1315.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1087.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.11%)</title><rect x="1084.2" y="1299.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.2" y="1310.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.11%)</title><rect x="1084.2" y="1283.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1087.2" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.11%)</title><rect x="1084.2" y="1267.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1087.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.11%)</title><rect x="1084.2" y="1251.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1087.2" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (2 samples, 0.11%)</title><rect x="1084.2" y="1235.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1087.2" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.11%)</title><rect x="1084.2" y="1219.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.2" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.11%)</title><rect x="1084.2" y="1203.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.2" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (2 samples, 0.11%)</title><rect x="1084.2" y="1187.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.2" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.11%)</title><rect x="1084.2" y="1171.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.11%)</title><rect x="1084.2" y="1155.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.11%)</title><rect x="1084.2" y="1139.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1087.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.11%)</title><rect x="1085.5" y="1315.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.5" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1086.2" y="1299.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1089.2" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1086.2" y="1283.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1089.2" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1086.2" y="1267.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.2" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (14 samples, 0.80%)</title><rect x="1086.9" y="1315.0" width="9.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1089.9" y="1326.0"></text>
</g>
<g>
<title>java/net/URI.create (8 samples, 0.46%)</title><rect x="1086.9" y="1299.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.9" y="1310.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (8 samples, 0.46%)</title><rect x="1086.9" y="1283.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.9" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (8 samples, 0.46%)</title><rect x="1086.9" y="1267.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.9" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (8 samples, 0.46%)</title><rect x="1086.9" y="1251.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1089.9" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.17%)</title><rect x="1086.9" y="1235.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.9" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.17%)</title><rect x="1086.9" y="1219.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1089.9" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (5 samples, 0.29%)</title><rect x="1088.9" y="1235.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1091.9" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.23%)</title><rect x="1088.9" y="1219.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.9" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.17%)</title><rect x="1088.9" y="1203.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1091.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.17%)</title><rect x="1088.9" y="1187.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1091.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.17%)</title><rect x="1088.9" y="1171.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1091.9" y="1182.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.06%)</title><rect x="1090.3" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1093.3" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1090.3" y="1139.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1093.3" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1090.3" y="1123.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1093.3" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1090.3" y="1107.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.3" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1090.3" y="1091.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1093.3" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1090.3" y="1075.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1093.3" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1090.3" y="1059.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1093.3" y="1070.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="1090.3" y="1043.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1093.3" y="1054.0"></text>
</g>
<g>
<title>DefNewGeneration::should_allocate(unsigned long, bool) (1 samples, 0.06%)</title><rect x="1090.3" y="1027.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1093.3" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.06%)</title><rect x="1090.9" y="1203.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.9" y="1214.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.06%)</title><rect x="1090.9" y="1187.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.9" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1090.9" y="1171.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.9" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1091.6" y="1219.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.6" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (3 samples, 0.17%)</title><rect x="1092.3" y="1299.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.3" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1092.3" y="1283.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1095.3" y="1294.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.06%)</title><rect x="1093.0" y="1283.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1096.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1093.6" y="1283.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1096.6" y="1294.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="1093.6" y="1267.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1096.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.17%)</title><rect x="1094.3" y="1299.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.17%)</title><rect x="1094.3" y="1283.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (2 samples, 0.11%)</title><rect x="1094.3" y="1267.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1097.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (2 samples, 0.11%)</title><rect x="1094.3" y="1251.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1097.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.11%)</title><rect x="1094.3" y="1235.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.3" y="1246.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.11%)</title><rect x="1094.3" y="1219.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1097.3" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.11%)</title><rect x="1094.3" y="1203.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1097.3" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.11%)</title><rect x="1094.3" y="1187.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1097.3" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.11%)</title><rect x="1094.3" y="1171.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1097.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (1 samples, 0.06%)</title><rect x="1095.7" y="1267.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1098.7" y="1278.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (1 samples, 0.06%)</title><rect x="1095.7" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.06%)</title><rect x="1095.7" y="1235.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.06%)</title><rect x="1095.7" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.7" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.06%)</title><rect x="1095.7" y="1203.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="1095.7" y="1187.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.06%)</title><rect x="1095.7" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1098.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.06%)</title><rect x="1095.7" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1098.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 0.06%)</title><rect x="1095.7" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (10 samples, 0.57%)</title><rect x="1096.3" y="1347.0" width="6.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.3" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (10 samples, 0.57%)</title><rect x="1096.3" y="1331.0" width="6.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1099.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (10 samples, 0.57%)</title><rect x="1096.3" y="1315.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1099.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (10 samples, 0.57%)</title><rect x="1096.3" y="1299.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1099.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.57%)</title><rect x="1096.3" y="1283.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1099.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (10 samples, 0.57%)</title><rect x="1096.3" y="1267.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="1096.3" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1099.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="1096.3" y="1235.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1099.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="1096.3" y="1219.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1099.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="1096.3" y="1203.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="1097.0" y="1251.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1100.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.06%)</title><rect x="1097.0" y="1235.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1100.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.06%)</title><rect x="1097.0" y="1219.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="1097.0" y="1203.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="1097.0" y="1187.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1100.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="1097.0" y="1171.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1100.0" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.06%)</title><rect x="1097.0" y="1155.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1100.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="1097.0" y="1139.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1100.0" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1097.0" y="1123.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1100.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1097.0" y="1107.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1100.0" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="1097.0" y="1091.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1100.0" y="1102.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="1097.0" y="1075.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.0" y="1086.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="1097.0" y="1059.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1100.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.46%)</title><rect x="1097.7" y="1251.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1100.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.46%)</title><rect x="1097.7" y="1235.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.46%)</title><rect x="1097.7" y="1219.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.46%)</title><rect x="1097.7" y="1203.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.46%)</title><rect x="1097.7" y="1187.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1100.7" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.46%)</title><rect x="1097.7" y="1171.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1100.7" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.46%)</title><rect x="1097.7" y="1155.0" width="5.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1100.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.46%)</title><rect x="1097.7" y="1139.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1100.7" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.46%)</title><rect x="1097.7" y="1123.0" width="5.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1100.7" y="1134.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.46%)</title><rect x="1097.7" y="1107.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1100.7" y="1118.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.46%)</title><rect x="1097.7" y="1091.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1100.7" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.40%)</title><rect x="1098.3" y="1075.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1101.3" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.40%)</title><rect x="1098.3" y="1059.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1101.3" y="1070.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.40%)</title><rect x="1098.3" y="1043.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1101.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (1 samples, 0.06%)</title><rect x="1103.1" y="1347.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1106.1" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="1103.1" y="1331.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.1" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$131/220516475.accept (1 samples, 0.06%)</title><rect x="1103.1" y="1315.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1106.1" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (1 samples, 0.06%)</title><rect x="1103.1" y="1299.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="1103.1" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="1103.1" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="1103.1" y="1251.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1106.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="1103.1" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1106.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1103.1" y="1219.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.1" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (8 samples, 0.46%)</title><rect x="1103.7" y="1347.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.7" y="1358.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (4 samples, 0.23%)</title><rect x="1103.7" y="1331.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.7" y="1342.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.sort (4 samples, 0.23%)</title><rect x="1103.7" y="1315.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.7" y="1326.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.binarySort (2 samples, 0.11%)</title><rect x="1104.4" y="1299.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.4" y="1310.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.countRunAndMakeAscending (1 samples, 0.06%)</title><rect x="1105.8" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.8" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.11%)</title><rect x="1106.4" y="1331.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.4" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.11%)</title><rect x="1106.4" y="1315.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1109.4" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.11%)</title><rect x="1106.4" y="1299.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1109.4" y="1310.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1107.8" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1110.8" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1107.8" y="1315.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1110.8" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="1107.8" y="1299.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1110.8" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.06%)</title><rect x="1107.8" y="1283.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1110.8" y="1294.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.06%)</title><rect x="1108.5" y="1331.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1111.5" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.06%)</title><rect x="1108.5" y="1315.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1111.5" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1108.5" y="1299.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.5" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1108.5" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1111.5" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.51%)</title><rect x="1109.1" y="1395.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1112.1" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.51%)</title><rect x="1109.1" y="1379.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.1" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.51%)</title><rect x="1109.1" y="1363.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1112.1" y="1374.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.06%)</title><rect x="1113.2" y="1347.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.2" y="1358.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.11%)</title><rect x="1113.8" y="1347.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1116.8" y="1358.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.51%)</title><rect x="1115.2" y="1427.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.2" y="1438.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1115.2" y="1411.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1118.2" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1115.2" y="1395.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1118.2" y="1406.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1115.2" y="1379.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1118.2" y="1390.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1115.2" y="1363.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1118.2" y="1374.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1115.2" y="1347.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.2" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1115.2" y="1331.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1118.2" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1115.9" y="1411.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1118.9" y="1422.0"></text>
</g>
<g>
<title>oopFactory::new_objArray(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1115.9" y="1395.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1118.9" y="1406.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.40%)</title><rect x="1116.5" y="1411.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1119.5" y="1422.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.34%)</title><rect x="1117.2" y="1395.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1120.2" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.06%)</title><rect x="1117.2" y="1379.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.2" y="1390.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.06%)</title><rect x="1117.9" y="1379.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.9" y="1390.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.11%)</title><rect x="1118.6" y="1379.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.6" y="1390.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.11%)</title><rect x="1118.6" y="1363.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.6" y="1374.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.11%)</title><rect x="1118.6" y="1347.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.6" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.11%)</title><rect x="1118.6" y="1331.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.6" y="1342.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="1118.6" y="1315.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.6" y="1326.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.06%)</title><rect x="1119.2" y="1315.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.2" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.11%)</title><rect x="1119.9" y="1379.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1122.9" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.11%)</title><rect x="1119.9" y="1363.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.9" y="1374.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.11%)</title><rect x="1119.9" y="1347.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1122.9" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1119.9" y="1331.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.9" y="1342.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1120.6" y="1331.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1123.6" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.06%)</title><rect x="1121.3" y="1427.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.3" y="1438.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1121.3" y="1411.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1124.3" y="1422.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1121.3" y="1395.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.3" y="1406.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1121.3" y="1379.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.3" y="1390.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="1121.3" y="1363.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1124.3" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.06%)</title><rect x="1121.9" y="1427.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.9" y="1438.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1121.9" y="1411.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.9" y="1422.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="1122.6" y="1427.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1125.6" y="1438.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.51%)</title><rect x="1123.3" y="1427.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.3" y="1438.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.46%)</title><rect x="1124.0" y="1411.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1127.0" y="1422.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1127.3" y="1395.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.3" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1127.3" y="1379.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.3" y="1390.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1127.3" y="1363.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1130.3" y="1374.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1127.3" y="1347.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.3" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1127.3" y="1331.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.3" y="1342.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1127.3" y="1315.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1130.3" y="1326.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="1127.3" y="1299.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.3" y="1310.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned long, bool, bool*) (1 samples, 0.06%)</title><rect x="1127.3" y="1283.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1130.3" y="1294.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1128.0" y="1395.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1131.0" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.7" y="1395.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1128.7" y="1379.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1131.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="1128.7" y="1363.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1131.7" y="1374.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1128.7" y="1347.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.7" y="1358.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1128.7" y="1331.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.7" y="1342.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1128.7" y="1315.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1131.7" y="1326.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1128.7" y="1299.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.7" y="1310.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.06%)</title><rect x="1128.7" y="1283.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1131.7" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1129.3" y="1427.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1132.3" y="1438.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1129.3" y="1411.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1132.3" y="1422.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1129.3" y="1395.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1132.3" y="1406.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.06%)</title><rect x="1130.0" y="1443.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (70 samples, 4.00%)</title><rect x="1130.7" y="1443.0" width="47.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1133.7" y="1454.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (69 samples, 3.94%)</title><rect x="1131.4" y="1427.0" width="46.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1134.4" y="1438.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.34%)</title><rect x="1131.4" y="1411.0" width="4.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1134.4" y="1422.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="1132.0" y="1395.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1135.0" y="1406.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.23%)</title><rect x="1132.7" y="1395.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1135.7" y="1406.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.11%)</title><rect x="1134.1" y="1379.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1137.1" y="1390.0"></text>
</g>
<g>
<title>__recv (61 samples, 3.48%)</title><rect x="1135.4" y="1411.0" width="41.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1138.4" y="1422.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 3.48%)</title><rect x="1135.4" y="1395.0" width="41.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1138.4" y="1406.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (61 samples, 3.48%)</title><rect x="1135.4" y="1379.0" width="41.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1138.4" y="1390.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.06%)</title><rect x="1135.4" y="1363.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1138.4" y="1374.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (60 samples, 3.43%)</title><rect x="1136.1" y="1363.0" width="40.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1139.1" y="1374.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (60 samples, 3.43%)</title><rect x="1136.1" y="1347.0" width="40.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1139.1" y="1358.0">__s..</text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.06%)</title><rect x="1136.1" y="1331.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1139.1" y="1342.0"></text>
</g>
<g>
<title>sock_recvmsg (55 samples, 3.14%)</title><rect x="1136.8" y="1331.0" width="37.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1139.8" y="1342.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (53 samples, 3.03%)</title><rect x="1136.8" y="1315.0" width="35.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1139.8" y="1326.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 3.03%)</title><rect x="1136.8" y="1299.0" width="35.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1139.8" y="1310.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.17%)</title><rect x="1137.4" y="1283.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.4" y="1294.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.17%)</title><rect x="1137.4" y="1267.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.4" y="1278.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="1137.4" y="1251.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1140.4" y="1262.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.11%)</title><rect x="1138.1" y="1251.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1141.1" y="1262.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="1139.5" y="1283.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1142.5" y="1294.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="1140.1" y="1283.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1143.1" y="1294.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="1140.1" y="1267.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1143.1" y="1278.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.06%)</title><rect x="1140.1" y="1251.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1143.1" y="1262.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.11%)</title><rect x="1140.8" y="1283.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1143.8" y="1294.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.11%)</title><rect x="1142.2" y="1283.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1145.2" y="1294.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.11%)</title><rect x="1142.2" y="1267.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.2" y="1278.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.06%)</title><rect x="1142.8" y="1251.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.8" y="1262.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="1142.8" y="1235.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1145.8" y="1246.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (38 samples, 2.17%)</title><rect x="1143.5" y="1283.0" width="25.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.5" y="1294.0">t..</text>
</g>
<g>
<title>tcp_send_ack (38 samples, 2.17%)</title><rect x="1143.5" y="1267.0" width="25.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1146.5" y="1278.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (38 samples, 2.17%)</title><rect x="1143.5" y="1251.0" width="25.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1146.5" y="1262.0">_..</text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.17%)</title><rect x="1143.5" y="1235.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.5" y="1246.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.11%)</title><rect x="1143.5" y="1219.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.5" y="1230.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="1143.5" y="1203.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1146.5" y="1214.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="1144.2" y="1203.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1147.2" y="1214.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="1144.8" y="1219.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1147.8" y="1230.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (35 samples, 2.00%)</title><rect x="1145.5" y="1235.0" width="23.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1148.5" y="1246.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="1147.5" y="1219.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1150.5" y="1230.0"></text>
</g>
<g>
<title>ip_queue_xmit (31 samples, 1.77%)</title><rect x="1148.2" y="1219.0" width="20.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1151.2" y="1230.0"></text>
</g>
<g>
<title>__ip_queue_xmit (31 samples, 1.77%)</title><rect x="1148.2" y="1203.0" width="20.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1151.2" y="1214.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 1.71%)</title><rect x="1148.9" y="1187.0" width="20.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1151.9" y="1198.0"></text>
</g>
<g>
<title>ip_output (30 samples, 1.71%)</title><rect x="1148.9" y="1171.0" width="20.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1151.9" y="1182.0"></text>
</g>
<g>
<title>ip_finish_output (30 samples, 1.71%)</title><rect x="1148.9" y="1155.0" width="20.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1151.9" y="1166.0"></text>
</g>
<g>
<title>__ip_finish_output (30 samples, 1.71%)</title><rect x="1148.9" y="1139.0" width="20.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1151.9" y="1150.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="1148.9" y="1123.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1151.9" y="1134.0"></text>
</g>
<g>
<title>ip_finish_output2 (29 samples, 1.66%)</title><rect x="1149.6" y="1123.0" width="19.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1152.6" y="1134.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (26 samples, 1.48%)</title><rect x="1150.9" y="1107.0" width="17.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1153.9" y="1118.0"></text>
</g>
<g>
<title>do_softirq.part.0 (26 samples, 1.48%)</title><rect x="1150.9" y="1091.0" width="17.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.9" y="1102.0"></text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 1.37%)</title><rect x="1152.3" y="1075.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1155.3" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (23 samples, 1.31%)</title><rect x="1152.3" y="1059.0" width="15.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.3" y="1070.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="1152.3" y="1043.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.3" y="1054.0"></text>
</g>
<g>
<title>net_rx_action (22 samples, 1.26%)</title><rect x="1152.9" y="1043.0" width="14.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.9" y="1054.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 1.26%)</title><rect x="1152.9" y="1027.0" width="14.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1155.9" y="1038.0"></text>
</g>
<g>
<title>__netif_receive_skb (21 samples, 1.20%)</title><rect x="1153.6" y="1011.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1156.6" y="1022.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (21 samples, 1.20%)</title><rect x="1153.6" y="995.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1156.6" y="1006.0"></text>
</g>
<g>
<title>ip_rcv (21 samples, 1.20%)</title><rect x="1153.6" y="979.0" width="14.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1156.6" y="990.0"></text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 1.20%)</title><rect x="1153.6" y="963.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1156.6" y="974.0"></text>
</g>
<g>
<title>ip_local_deliver (21 samples, 1.20%)</title><rect x="1153.6" y="947.0" width="14.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1156.6" y="958.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (20 samples, 1.14%)</title><rect x="1154.3" y="931.0" width="13.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1157.3" y="942.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (20 samples, 1.14%)</title><rect x="1154.3" y="915.0" width="13.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1157.3" y="926.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="1154.3" y="899.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.3" y="910.0"></text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 1.09%)</title><rect x="1155.0" y="899.0" width="12.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.0" y="910.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.17%)</title><rect x="1157.0" y="883.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1160.0" y="894.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.11%)</title><rect x="1159.0" y="883.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.0" y="894.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="1159.0" y="867.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1162.0" y="878.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.06%)</title><rect x="1159.7" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.7" y="878.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="1160.3" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1163.3" y="894.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 0.57%)</title><rect x="1161.0" y="883.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1164.0" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_established (10 samples, 0.57%)</title><rect x="1161.0" y="867.0" width="6.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1164.0" y="878.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.46%)</title><rect x="1161.0" y="851.0" width="5.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1164.0" y="862.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.06%)</title><rect x="1162.4" y="835.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1165.4" y="846.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.29%)</title><rect x="1163.0" y="835.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1166.0" y="846.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.17%)</title><rect x="1163.7" y="819.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.7" y="830.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="1163.7" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.7" y="814.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.06%)</title><rect x="1163.7" y="787.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.7" y="798.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.11%)</title><rect x="1164.4" y="803.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1167.4" y="814.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.11%)</title><rect x="1164.4" y="787.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1167.4" y="798.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.11%)</title><rect x="1164.4" y="771.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.4" y="782.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.11%)</title><rect x="1164.4" y="755.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1167.4" y="766.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.11%)</title><rect x="1164.4" y="739.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1167.4" y="750.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.06%)</title><rect x="1165.1" y="723.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1168.1" y="734.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.06%)</title><rect x="1165.7" y="819.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1168.7" y="830.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.11%)</title><rect x="1166.4" y="851.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1169.4" y="862.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="1167.8" y="1059.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1170.8" y="1070.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="1168.4" y="1107.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1171.4" y="1118.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="1168.4" y="1091.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1171.4" y="1102.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="1168.4" y="1075.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1171.4" y="1086.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.23%)</title><rect x="1169.1" y="1283.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.1" y="1294.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (4 samples, 0.23%)</title><rect x="1169.1" y="1267.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.1" y="1278.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.17%)</title><rect x="1169.8" y="1251.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1172.8" y="1262.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.06%)</title><rect x="1171.8" y="1283.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1174.8" y="1294.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.11%)</title><rect x="1172.5" y="1315.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.5" y="1326.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="1173.2" y="1299.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1176.2" y="1310.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="1173.2" y="1283.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1176.2" y="1294.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.23%)</title><rect x="1173.8" y="1331.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.8" y="1342.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.23%)</title><rect x="1173.8" y="1315.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1176.8" y="1326.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.23%)</title><rect x="1173.8" y="1299.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1176.8" y="1310.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.23%)</title><rect x="1173.8" y="1283.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1176.8" y="1294.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.11%)</title><rect x="1176.5" y="1411.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1179.5" y="1422.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.11%)</title><rect x="1177.9" y="1475.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.9" y="1486.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="1178.5" y="1459.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1181.5" y="1470.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="1178.5" y="1443.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1181.5" y="1454.0"></text>
</g>
<g>
<title>start_thread (16 samples, 0.91%)</title><rect x="1179.2" y="1491.0" width="10.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1182.2" y="1502.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (16 samples, 0.91%)</title><rect x="1179.2" y="1475.0" width="10.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1182.2" y="1486.0"></text>
</g>
<g>
<title>Thread::call_run() (16 samples, 0.91%)</title><rect x="1179.2" y="1459.0" width="10.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.2" y="1470.0"></text>
</g>
<g>
<title>VMThread::run() (16 samples, 0.91%)</title><rect x="1179.2" y="1443.0" width="10.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.2" y="1454.0"></text>
</g>
<g>
<title>VMThread::loop() (16 samples, 0.91%)</title><rect x="1179.2" y="1427.0" width="10.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.2" y="1438.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.06%)</title><rect x="1179.2" y="1411.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.2" y="1422.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.06%)</title><rect x="1179.2" y="1395.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.2" y="1406.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.11%)</title><rect x="1179.9" y="1411.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.9" y="1422.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.06%)</title><rect x="1180.6" y="1395.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.6" y="1406.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.06%)</title><rect x="1180.6" y="1379.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.6" y="1390.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.06%)</title><rect x="1180.6" y="1363.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.6" y="1374.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.0] (1 samples, 0.06%)</title><rect x="1180.6" y="1347.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.6" y="1358.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="1180.6" y="1331.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.6" y="1342.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="1180.6" y="1315.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.6" y="1326.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.06%)</title><rect x="1180.6" y="1299.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.6" y="1310.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (12 samples, 0.69%)</title><rect x="1181.2" y="1411.0" width="8.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.2" y="1422.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (12 samples, 0.69%)</title><rect x="1181.2" y="1395.0" width="8.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.2" y="1406.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (12 samples, 0.69%)</title><rect x="1181.2" y="1379.0" width="8.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.2" y="1390.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (12 samples, 0.69%)</title><rect x="1181.2" y="1363.0" width="8.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.2" y="1374.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (12 samples, 0.69%)</title><rect x="1181.2" y="1347.0" width="8.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.2" y="1358.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool) (12 samples, 0.69%)</title><rect x="1181.2" y="1331.0" width="8.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.2" y="1342.0"></text>
</g>
<g>
<title>BiasedLocking::preserve_marks() (1 samples, 0.06%)</title><rect x="1181.2" y="1315.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.2" y="1326.0"></text>
</g>
<g>
<title>vframe::java_sender() const (1 samples, 0.06%)</title><rect x="1181.2" y="1299.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.2" y="1310.0"></text>
</g>
<g>
<title>compiledVFrame::sender() const (1 samples, 0.06%)</title><rect x="1181.2" y="1283.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.2" y="1294.0"></text>
</g>
<g>
<title>vframe::sender() const (1 samples, 0.06%)</title><rect x="1181.2" y="1267.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.2" y="1278.0"></text>
</g>
<g>
<title>frame::real_sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1181.2" y="1251.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="1262.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1181.2" y="1235.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="1246.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned long, bool) (9 samples, 0.51%)</title><rect x="1181.9" y="1315.0" width="6.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.9" y="1326.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (1 samples, 0.06%)</title><rect x="1181.9" y="1299.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.9" y="1310.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (1 samples, 0.06%)</title><rect x="1181.9" y="1283.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.9" y="1294.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(FastScanClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="1181.9" y="1267.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.9" y="1278.0"></text>
</g>
<g>
<title>DefNewGeneration::copy_to_survivor_space(oopDesc*) (1 samples, 0.06%)</title><rect x="1181.9" y="1251.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.9" y="1262.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1181.9" y="1235.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.9" y="1246.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1181.9" y="1219.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.9" y="1230.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1181.9" y="1203.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.9" y="1214.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1181.9" y="1187.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.9" y="1198.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1181.9" y="1171.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.9" y="1182.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1181.9" y="1155.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1184.9" y="1166.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1181.9" y="1139.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.9" y="1150.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="1181.9" y="1123.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1184.9" y="1134.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="1181.9" y="1107.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.9" y="1118.0"></text>
</g>
<g>
<title>blk_finish_plug (1 samples, 0.06%)</title><rect x="1181.9" y="1091.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1184.9" y="1102.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.06%)</title><rect x="1181.9" y="1075.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1184.9" y="1086.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.06%)</title><rect x="1181.9" y="1059.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1184.9" y="1070.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (1 samples, 0.06%)</title><rect x="1181.9" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1184.9" y="1054.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1181.9" y="1027.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1184.9" y="1038.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.06%)</title><rect x="1181.9" y="1011.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1184.9" y="1022.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1181.9" y="995.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.9" y="1006.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="1181.9" y="979.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1184.9" y="990.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (1 samples, 0.06%)</title><rect x="1181.9" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.9" y="974.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="1181.9" y="947.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1184.9" y="958.0"></text>
</g>
<g>
<title>scsi_queue_rq (1 samples, 0.06%)</title><rect x="1181.9" y="931.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1184.9" y="942.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (1 samples, 0.06%)</title><rect x="1181.9" y="915.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1184.9" y="926.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1181.9" y="899.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1184.9" y="910.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (6 samples, 0.34%)</title><rect x="1182.6" y="1299.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="1310.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (5 samples, 0.29%)</title><rect x="1182.6" y="1283.0" width="3.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.6" y="1294.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (5 samples, 0.29%)</title><rect x="1182.6" y="1267.0" width="3.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.6" y="1278.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (4 samples, 0.23%)</title><rect x="1182.6" y="1251.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.6" y="1262.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (4 samples, 0.23%)</title><rect x="1182.6" y="1235.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.6" y="1246.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (1 samples, 0.06%)</title><rect x="1182.6" y="1219.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.6" y="1230.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (1 samples, 0.06%)</title><rect x="1182.6" y="1203.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.6" y="1214.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (3 samples, 0.17%)</title><rect x="1183.3" y="1219.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.3" y="1230.0"></text>
</g>
<g>
<title>ContiguousSpaceDCTOC::walk_mem_region_with_cl(MemRegion, HeapWord*, HeapWord*, FilteringClosure*) (3 samples, 0.17%)</title><rect x="1183.3" y="1203.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="1214.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.11%)</title><rect x="1183.3" y="1187.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="1198.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(FilteringClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="1184.6" y="1187.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="1198.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(unsigned int*) (1 samples, 0.06%)</title><rect x="1184.6" y="1171.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="1182.0"></text>
</g>
<g>
<title>DefNewGeneration::copy_to_survivor_space(oopDesc*) (1 samples, 0.06%)</title><rect x="1184.6" y="1155.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.6" y="1166.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (1 samples, 0.06%)</title><rect x="1185.3" y="1251.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.3" y="1262.0"></text>
</g>
<g>
<title>GenCollectedHeap::process_roots(StrongRootsScope*, GenCollectedHeap::ScanningOption, OopClosure*, CLDClosure*, CLDClosure*, CodeBlobToOopClosure*) (1 samples, 0.06%)</title><rect x="1186.0" y="1283.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="1294.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="1186.0" y="1267.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.0" y="1278.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="1186.0" y="1251.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.0" y="1262.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.06%)</title><rect x="1186.0" y="1235.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="1246.0"></text>
</g>
<g>
<title>WeakProcessor::weak_oops_do(BoolObjectClosure*, OopClosure*) (2 samples, 0.11%)</title><rect x="1186.6" y="1299.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.6" y="1310.0"></text>
</g>
<g>
<title>DefNewGeneration::FastKeepAliveClosure::do_oop(oopDesc**) (1 samples, 0.06%)</title><rect x="1186.6" y="1283.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.6" y="1294.0"></text>
</g>
<g>
<title>JvmtiTagMap::weak_oops_do(BoolObjectClosure*, OopClosure*) (1 samples, 0.06%)</title><rect x="1187.3" y="1283.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.3" y="1294.0"></text>
</g>
<g>
<title>JvmtiTagMap::do_weak_oops(BoolObjectClosure*, OopClosure*) (1 samples, 0.06%)</title><rect x="1187.3" y="1267.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.3" y="1278.0"></text>
</g>
<g>
<title>TenuredGeneration::collect(bool, bool, unsigned long, bool) (2 samples, 0.11%)</title><rect x="1188.0" y="1315.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.0" y="1326.0"></text>
</g>
<g>
<title>GenMarkSweep::invoke_at_safepoint(ReferenceProcessor*, bool) (2 samples, 0.11%)</title><rect x="1188.0" y="1299.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.0" y="1310.0"></text>
</g>
<g>
<title>GenMarkSweep::mark_sweep_phase2() (1 samples, 0.06%)</title><rect x="1188.0" y="1283.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.0" y="1294.0"></text>
</g>
<g>
<title>GenCollectedHeap::prepare_for_compaction() (1 samples, 0.06%)</title><rect x="1188.0" y="1267.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.0" y="1278.0"></text>
</g>
<g>
<title>Generation::prepare_for_compaction(CompactPoint*) (1 samples, 0.06%)</title><rect x="1188.0" y="1251.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="1262.0"></text>
</g>
<g>
<title>ContiguousSpace::prepare_for_compaction(CompactPoint*) (1 samples, 0.06%)</title><rect x="1188.0" y="1235.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.0" y="1246.0"></text>
</g>
<g>
<title>CompactibleSpace::forward(oopDesc*, unsigned long, CompactPoint*, HeapWord*) (1 samples, 0.06%)</title><rect x="1188.0" y="1219.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.0" y="1230.0"></text>
</g>
<g>
<title>GenMarkSweep::mark_sweep_phase3() (1 samples, 0.06%)</title><rect x="1188.7" y="1283.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.7" y="1294.0"></text>
</g>
<g>
<title>GenCollectedHeap::generation_iterate(GenCollectedHeap::GenClosure*, bool) (1 samples, 0.06%)</title><rect x="1188.7" y="1267.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.7" y="1278.0"></text>
</g>
<g>
<title>Generation::adjust_pointers() (1 samples, 0.06%)</title><rect x="1188.7" y="1251.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.7" y="1262.0"></text>
</g>
<g>
<title>CompactibleSpace::adjust_pointers() (1 samples, 0.06%)</title><rect x="1188.7" y="1235.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="1246.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;AdjustPointerClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(AdjustPointerClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="1188.7" y="1219.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.7" y="1230.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.06%)</title><rect x="1189.3" y="1411.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.3" y="1422.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1189.3" y="1395.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1192.3" y="1406.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1189.3" y="1379.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1192.3" y="1390.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.06%)</title><rect x="1189.3" y="1363.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.3" y="1374.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.06%)</title><rect x="1189.3" y="1347.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1192.3" y="1358.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="1189.3" y="1331.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.3" y="1342.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="1189.3" y="1315.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.3" y="1326.0"></text>
</g>
</g>
</svg>
