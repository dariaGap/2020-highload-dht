<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1510" onload="init(evt)" viewBox="0 0 1200 1510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1493"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1493"> </text>
<g id="frames">
<g>
<title>all (2,105 samples, 100.00%)</title><rect x="10.0" y="1459.0" width="1180.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="1470.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (10 samples, 0.48%)</title><rect x="10.0" y="1443.0" width="5.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.0" y="1454.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.05%)</title><rect x="10.0" y="1427.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (9 samples, 0.43%)</title><rect x="10.6" y="1427.0" width="5.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.6" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (8 samples, 0.38%)</title><rect x="10.6" y="1411.0" width="4.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.6" y="1422.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.19%)</title><rect x="10.6" y="1395.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.6" y="1406.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.14%)</title><rect x="12.8" y="1395.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="15.8" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="13.4" y="1379.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.4" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="13.4" y="1363.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="16.4" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="13.4" y="1347.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="16.4" y="1358.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="14.5" y="1395.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="17.5" y="1406.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.05%)</title><rect x="15.0" y="1411.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="18.0" y="1422.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.24%)</title><rect x="15.6" y="1443.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="18.6" y="1454.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.05%)</title><rect x="15.6" y="1427.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.6" y="1438.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.05%)</title><rect x="16.2" y="1427.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.2" y="1438.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.05%)</title><rect x="16.7" y="1427.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="19.7" y="1438.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (2 samples, 0.10%)</title><rect x="17.3" y="1427.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.62%)</title><rect x="18.4" y="1443.0" width="7.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="21.4" y="1454.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.19%)</title><rect x="18.4" y="1427.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="21.4" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.19%)</title><rect x="18.4" y="1411.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="21.4" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.19%)</title><rect x="18.4" y="1395.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="21.4" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.19%)</title><rect x="18.4" y="1379.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="21.4" y="1390.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.19%)</title><rect x="18.4" y="1363.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="21.4" y="1374.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.19%)</title><rect x="18.4" y="1347.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="21.4" y="1358.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.10%)</title><rect x="18.4" y="1331.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="21.4" y="1342.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.10%)</title><rect x="18.4" y="1315.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="21.4" y="1326.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.10%)</title><rect x="18.4" y="1299.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.4" y="1310.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.10%)</title><rect x="18.4" y="1283.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="21.4" y="1294.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.10%)</title><rect x="19.5" y="1331.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="22.5" y="1342.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.05%)</title><rect x="20.7" y="1427.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.7" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="20.7" y="1411.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.7" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="20.7" y="1395.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.7" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="20.7" y="1379.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="23.7" y="1390.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="20.7" y="1363.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.7" y="1374.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="20.7" y="1347.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="23.7" y="1358.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (8 samples, 0.38%)</title><rect x="21.2" y="1427.0" width="4.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="24.2" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.33%)</title><rect x="21.8" y="1411.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.8" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.33%)</title><rect x="21.8" y="1395.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.8" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.33%)</title><rect x="21.8" y="1379.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="24.8" y="1390.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.33%)</title><rect x="21.8" y="1363.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.8" y="1374.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 0.33%)</title><rect x="21.8" y="1347.0" width="3.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="24.8" y="1358.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.33%)</title><rect x="21.8" y="1331.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="24.8" y="1342.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.29%)</title><rect x="22.3" y="1315.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="25.3" y="1326.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.29%)</title><rect x="22.3" y="1299.0" width="3.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="25.3" y="1310.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.29%)</title><rect x="22.3" y="1283.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="25.3" y="1294.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.57%)</title><rect x="25.7" y="1443.0" width="6.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="28.7" y="1454.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.05%)</title><rect x="25.7" y="1427.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="28.7" y="1438.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.05%)</title><rect x="25.7" y="1411.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="28.7" y="1422.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="25.7" y="1395.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="28.7" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.05%)</title><rect x="26.3" y="1427.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="29.3" y="1438.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.24%)</title><rect x="26.8" y="1427.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="29.8" y="1438.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.24%)</title><rect x="26.8" y="1411.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="29.8" y="1422.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.24%)</title><rect x="26.8" y="1395.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.8" y="1406.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.24%)</title><rect x="26.8" y="1379.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.8" y="1390.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.24%)</title><rect x="26.8" y="1363.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.8" y="1374.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.24%)</title><rect x="26.8" y="1347.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="29.8" y="1358.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="26.8" y="1331.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.8" y="1342.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.19%)</title><rect x="27.4" y="1331.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="30.4" y="1342.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.19%)</title><rect x="27.4" y="1315.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="30.4" y="1326.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.19%)</title><rect x="27.4" y="1299.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="30.4" y="1310.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.24%)</title><rect x="29.6" y="1427.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="32.6" y="1438.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.14%)</title><rect x="30.2" y="1411.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="33.2" y="1422.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.14%)</title><rect x="30.2" y="1395.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="33.2" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="31.3" y="1379.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.3" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="31.3" y="1363.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.3" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="31.3" y="1347.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="34.3" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="31.9" y="1411.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="34.9" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="31.9" y="1395.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.9" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="31.9" y="1379.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.9" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.05%)</title><rect x="32.4" y="1443.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="35.4" y="1454.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="32.4" y="1427.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="35.4" y="1438.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="32.4" y="1411.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.4" y="1422.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="32.4" y="1395.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="35.4" y="1406.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="32.4" y="1379.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.4" y="1390.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="32.4" y="1363.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="35.4" y="1374.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="32.4" y="1347.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="35.4" y="1358.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="32.4" y="1331.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.4" y="1342.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="32.4" y="1315.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,467 samples, 69.69%)</title><rect x="33.0" y="1443.0" width="822.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.0" y="1454.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,467 samples, 69.69%)</title><rect x="33.0" y="1427.0" width="822.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.0" y="1438.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,467 samples, 69.69%)</title><rect x="33.0" y="1411.0" width="822.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="36.0" y="1422.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (630 samples, 29.93%)</title><rect x="33.5" y="1395.0" width="353.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.5" y="1406.0">java/util/concurrent/CompletableFuture$AsyncSupp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (244 samples, 11.59%)</title><rect x="34.1" y="1379.0" width="136.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="37.1" y="1390.0">java/util/concurr..</text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="35.2" y="1363.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="38.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (127 samples, 6.03%)</title><rect x="36.9" y="1363.0" width="71.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.9" y="1374.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.apply (127 samples, 6.03%)</title><rect x="36.9" y="1347.0" width="71.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.9" y="1358.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (127 samples, 6.03%)</title><rect x="36.9" y="1331.0" width="71.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.9" y="1342.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (127 samples, 6.03%)</title><rect x="36.9" y="1315.0" width="71.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.9" y="1326.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.05%)</title><rect x="36.9" y="1299.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.05%)</title><rect x="36.9" y="1283.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="36.9" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="39.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="37.5" y="1299.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="37.5" y="1283.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="37.5" y="1267.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.5" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="37.5" y="1251.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.5" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="37.5" y="1235.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="40.5" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="37.5" y="1219.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="40.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (105 samples, 4.99%)</title><rect x="38.0" y="1299.0" width="58.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.0" y="1310.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (105 samples, 4.99%)</title><rect x="38.0" y="1283.0" width="58.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="41.0" y="1294.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (105 samples, 4.99%)</title><rect x="38.0" y="1267.0" width="58.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.0" y="1278.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (61 samples, 2.90%)</title><rect x="38.0" y="1251.0" width="34.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.0" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (61 samples, 2.90%)</title><rect x="38.0" y="1235.0" width="34.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="41.0" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (61 samples, 2.90%)</title><rect x="38.0" y="1219.0" width="34.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.0" y="1230.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.apply (61 samples, 2.90%)</title><rect x="38.0" y="1203.0" width="34.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.0" y="1214.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (61 samples, 2.90%)</title><rect x="38.0" y="1187.0" width="34.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="41.0" y="1198.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (61 samples, 2.90%)</title><rect x="38.0" y="1171.0" width="34.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.0" y="1182.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (61 samples, 2.90%)</title><rect x="38.0" y="1155.0" width="34.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.0" y="1166.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (61 samples, 2.90%)</title><rect x="38.0" y="1139.0" width="34.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.0" y="1150.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.05%)</title><rect x="38.0" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.05%)</title><rect x="38.0" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.05%)</title><rect x="38.0" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="41.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (60 samples, 2.85%)</title><rect x="38.6" y="1123.0" width="33.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.6" y="1134.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (50 samples, 2.38%)</title><rect x="39.7" y="1107.0" width="28.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.7" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (50 samples, 2.38%)</title><rect x="39.7" y="1091.0" width="28.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.7" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.10%)</title><rect x="40.3" y="1075.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.3" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="40.3" y="1059.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="43.3" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="40.3" y="1043.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.3" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="40.3" y="1027.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.3" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="40.3" y="1011.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$238/349903448.apply (1 samples, 0.05%)</title><rect x="40.8" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (47 samples, 2.23%)</title><rect x="41.4" y="1075.0" width="26.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.4" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (47 samples, 2.23%)</title><rect x="41.4" y="1059.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.4" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.14%)</title><rect x="42.0" y="1043.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="45.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.14%)</title><rect x="42.0" y="1027.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.14%)</title><rect x="42.0" y="1011.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.14%)</title><rect x="42.0" y="995.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.14%)</title><rect x="42.0" y="979.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.14%)</title><rect x="42.0" y="963.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.14%)</title><rect x="42.0" y="947.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (1 samples, 0.05%)</title><rect x="42.5" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.05%)</title><rect x="43.1" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.05%)</title><rect x="43.1" y="915.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.05%)</title><rect x="43.1" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.05%)</title><rect x="43.1" y="883.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.05%)</title><rect x="43.1" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.05%)</title><rect x="43.1" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.1" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.05%)</title><rect x="43.1" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.05%)</title><rect x="43.1" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="43.1" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.1" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.05%)</title><rect x="43.1" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.05%)</title><rect x="43.1" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.05%)</title><rect x="43.1" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.1" y="766.0"></text>
</g>
<g>
<title>writev (1 samples, 0.05%)</title><rect x="43.1" y="739.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="46.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="43.1" y="723.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="43.1" y="707.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.05%)</title><rect x="43.1" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="46.1" y="702.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.05%)</title><rect x="43.1" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.1" y="686.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.05%)</title><rect x="43.1" y="659.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="46.1" y="670.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.05%)</title><rect x="43.1" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.1" y="654.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.05%)</title><rect x="43.1" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.1" y="638.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.05%)</title><rect x="43.1" y="611.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.1" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.05%)</title><rect x="43.1" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.1" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.05%)</title><rect x="43.1" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="46.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.05%)</title><rect x="43.1" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="46.1" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.05%)</title><rect x="43.1" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="46.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="43.1" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.1" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.05%)</title><rect x="43.1" y="515.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="46.1" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="43.1" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="46.1" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="43.1" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.1" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="43.1" y="467.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.1" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.05%)</title><rect x="43.1" y="451.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="46.1" y="462.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.05%)</title><rect x="43.1" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.1" y="446.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="43.1" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.1" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.05%)</title><rect x="43.1" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.1" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.05%)</title><rect x="43.1" y="387.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.1" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.05%)</title><rect x="43.1" y="371.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.1" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="43.1" y="355.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="46.1" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.05%)</title><rect x="43.1" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.1" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.05%)</title><rect x="43.1" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="46.1" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="43.1" y="307.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.1" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="43.1" y="291.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="46.1" y="302.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="43.1" y="275.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="46.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.05%)</title><rect x="43.1" y="259.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="46.1" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="43.1" y="243.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.05%)</title><rect x="43.1" y="227.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.05%)</title><rect x="43.1" y="211.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.1" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.05%)</title><rect x="43.1" y="195.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.1" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.05%)</title><rect x="43.1" y="179.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.1" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.05%)</title><rect x="43.1" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.05%)</title><rect x="43.1" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.1" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.05%)</title><rect x="43.1" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="46.1" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.05%)</title><rect x="43.1" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="46.1" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.05%)</title><rect x="43.1" y="99.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.1" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="43.1" y="83.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="43.1" y="67.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.05%)</title><rect x="43.1" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="46.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="43.1" y="35.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="46.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (14 samples, 0.67%)</title><rect x="43.6" y="1043.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (14 samples, 0.67%)</title><rect x="43.6" y="1027.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (3 samples, 0.14%)</title><rect x="43.6" y="1011.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.14%)</title><rect x="43.6" y="995.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.14%)</title><rect x="43.6" y="979.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.14%)</title><rect x="43.6" y="963.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.14%)</title><rect x="43.6" y="947.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="46.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.14%)</title><rect x="43.6" y="931.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="44.2" y="915.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.2" y="926.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.05%)</title><rect x="44.2" y="899.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="47.2" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="44.8" y="915.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="47.8" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="44.8" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.8" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="44.8" y="883.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="47.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (11 samples, 0.52%)</title><rect x="45.3" y="1011.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (11 samples, 0.52%)</title><rect x="45.3" y="995.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.33%)</title><rect x="45.3" y="979.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.33%)</title><rect x="45.3" y="963.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.33%)</title><rect x="45.3" y="947.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.3" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="46.4" y="931.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="49.4" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="46.4" y="915.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="49.4" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="46.4" y="899.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="49.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.19%)</title><rect x="47.0" y="931.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.14%)</title><rect x="47.6" y="915.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.6" y="926.0"></text>
</g>
<g>
<title>__write (3 samples, 0.14%)</title><rect x="47.6" y="899.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="50.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.14%)</title><rect x="47.6" y="883.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="50.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.14%)</title><rect x="47.6" y="867.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.14%)</title><rect x="47.6" y="851.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.6" y="862.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.14%)</title><rect x="47.6" y="835.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="50.6" y="846.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="47.6" y="819.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="50.6" y="830.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="47.6" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="50.6" y="814.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="47.6" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="50.6" y="798.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.10%)</title><rect x="48.1" y="819.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="51.1" y="830.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.10%)</title><rect x="48.1" y="803.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="51.1" y="814.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.10%)</title><rect x="48.1" y="787.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.1" y="798.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.10%)</title><rect x="48.1" y="771.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.1" y="782.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.10%)</title><rect x="48.1" y="755.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="51.1" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="48.1" y="739.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.1" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="48.1" y="723.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="51.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4 samples, 0.19%)</title><rect x="49.2" y="979.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (4 samples, 0.19%)</title><rect x="49.2" y="963.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.19%)</title><rect x="49.2" y="947.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.2" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="50.9" y="931.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.9" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="50.9" y="915.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="53.9" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="50.9" y="899.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="53.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (28 samples, 1.33%)</title><rect x="51.5" y="1043.0" width="15.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.14%)</title><rect x="51.5" y="1027.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.14%)</title><rect x="51.5" y="1011.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="54.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.14%)</title><rect x="51.5" y="995.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.5" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="52.6" y="979.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="55.6" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="52.6" y="963.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.6" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="52.6" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="55.6" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.10%)</title><rect x="53.2" y="1027.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="53.2" y="1011.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="53.7" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.05%)</title><rect x="53.7" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.7" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="53.7" y="979.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="56.7" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="53.7" y="963.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="56.7" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="53.7" y="947.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="56.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (15 samples, 0.71%)</title><rect x="54.3" y="1027.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.19%)</title><rect x="54.3" y="1011.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.3" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.19%)</title><rect x="54.3" y="995.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.3" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.19%)</title><rect x="54.3" y="979.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.19%)</title><rect x="54.3" y="963.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.19%)</title><rect x="54.3" y="947.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.3" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="55.4" y="931.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="58.4" y="942.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="55.4" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="58.4" y="926.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="56.0" y="931.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="59.0" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="56.0" y="915.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="59.0" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="56.0" y="899.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.0" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="56.0" y="883.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="59.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (7 samples, 0.33%)</title><rect x="56.5" y="1011.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.5" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.05%)</title><rect x="58.8" y="995.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.05%)</title><rect x="58.8" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.8" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.05%)</title><rect x="58.8" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.8" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.05%)</title><rect x="58.8" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.8" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.05%)</title><rect x="58.8" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="58.8" y="915.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="61.8" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="58.8" y="899.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="61.8" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="58.8" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.8" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="58.8" y="867.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.8" y="878.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/792662632.test (2 samples, 0.10%)</title><rect x="59.3" y="995.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.3" y="1006.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.10%)</title><rect x="59.3" y="979.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1127224355.test (2 samples, 0.10%)</title><rect x="59.3" y="963.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2 samples, 0.10%)</title><rect x="59.3" y="947.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="958.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/416153648.test (2 samples, 0.10%)</title><rect x="59.3" y="931.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.3" y="942.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2 samples, 0.10%)</title><rect x="59.3" y="915.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/815674463.test (2 samples, 0.10%)</title><rect x="59.3" y="899.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2 samples, 0.10%)</title><rect x="59.3" y="883.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.10%)</title><rect x="59.3" y="867.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="59.3" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="59.3" y="835.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="59.3" y="819.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.05%)</title><rect x="59.3" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.3" y="814.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="59.3" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.05%)</title><rect x="59.9" y="819.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.05%)</title><rect x="59.9" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (4 samples, 0.19%)</title><rect x="60.5" y="1011.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.5" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.19%)</title><rect x="60.5" y="995.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.5" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.19%)</title><rect x="60.5" y="979.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="63.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.19%)</title><rect x="60.5" y="963.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="63.5" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (4 samples, 0.19%)</title><rect x="60.5" y="947.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.5" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.19%)</title><rect x="60.5" y="931.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="63.5" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.05%)</title><rect x="61.6" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="64.6" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="61.6" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.6" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="62.1" y="915.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="65.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (1 samples, 0.05%)</title><rect x="62.7" y="1027.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (1 samples, 0.05%)</title><rect x="62.7" y="1011.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (1 samples, 0.05%)</title><rect x="62.7" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.7" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="62.7" y="979.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="65.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (7 samples, 0.33%)</title><rect x="63.3" y="1027.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.14%)</title><rect x="64.4" y="1011.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="64.9" y="995.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="64.9" y="979.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.10%)</title><rect x="64.9" y="963.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.9" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.10%)</title><rect x="66.1" y="1011.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="69.1" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="67.2" y="1043.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="70.2" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="67.2" y="1027.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.2" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="67.2" y="1011.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (7 samples, 0.33%)</title><rect x="67.7" y="1107.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.33%)</title><rect x="67.7" y="1091.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.14%)</title><rect x="67.7" y="1075.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.14%)</title><rect x="67.7" y="1059.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.19%)</title><rect x="69.4" y="1075.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.14%)</title><rect x="69.4" y="1059.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.14%)</title><rect x="69.4" y="1043.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.14%)</title><rect x="69.4" y="1027.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.05%)</title><rect x="69.4" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="69.4" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.10%)</title><rect x="70.0" y="1011.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (2 samples, 0.10%)</title><rect x="70.0" y="995.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.10%)</title><rect x="70.0" y="979.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="73.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.10%)</title><rect x="70.0" y="963.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.05%)</title><rect x="70.5" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.05%)</title><rect x="70.5" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="70.5" y="915.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="70.5" y="899.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.5" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="71.1" y="1059.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="74.1" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="71.1" y="1043.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="74.1" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="71.1" y="1027.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="74.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.05%)</title><rect x="71.7" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="72.2" y="1251.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="72.2" y="1235.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="72.2" y="1219.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.2" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="72.2" y="1203.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="75.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (43 samples, 2.04%)</title><rect x="72.8" y="1251.0" width="24.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.8" y="1262.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="72.8" y="1235.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.05%)</title><rect x="72.8" y="1219.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/575256480.apply (1 samples, 0.05%)</title><rect x="72.8" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.05%)</title><rect x="72.8" y="1187.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.05%)</title><rect x="72.8" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="72.8" y="1155.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="72.8" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="73.3" y="1235.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="73.3" y="1219.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="73.3" y="1203.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1480893218.accept (1 samples, 0.05%)</title><rect x="73.3" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$1 (1 samples, 0.05%)</title><rect x="73.3" y="1171.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (41 samples, 1.95%)</title><rect x="73.9" y="1235.0" width="23.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.9" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (41 samples, 1.95%)</title><rect x="73.9" y="1219.0" width="23.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.9" y="1230.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (41 samples, 1.95%)</title><rect x="73.9" y="1203.0" width="23.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.9" y="1214.0">j..</text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.05%)</title><rect x="73.9" y="1187.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.9" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.05%)</title><rect x="73.9" y="1171.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.9" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (1 samples, 0.05%)</title><rect x="73.9" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.05%)</title><rect x="73.9" y="1139.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (1 samples, 0.05%)</title><rect x="74.5" y="1187.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (3 samples, 0.14%)</title><rect x="75.0" y="1187.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.14%)</title><rect x="75.0" y="1171.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.14%)</title><rect x="75.0" y="1155.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.0" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="76.1" y="1139.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="79.1" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="76.1" y="1123.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="79.1" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="76.1" y="1107.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (12 samples, 0.57%)</title><rect x="76.7" y="1187.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (12 samples, 0.57%)</title><rect x="76.7" y="1171.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.7" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="78.4" y="1155.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="81.4" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="78.4" y="1139.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="81.4" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="78.4" y="1123.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="81.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (8 samples, 0.38%)</title><rect x="79.0" y="1155.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.0" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.14%)</title><rect x="79.0" y="1139.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="82.0" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.14%)</title><rect x="79.0" y="1123.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.10%)</title><rect x="79.0" y="1107.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.10%)</title><rect x="79.0" y="1091.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.0" y="1102.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.10%)</title><rect x="79.0" y="1075.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.0" y="1086.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.10%)</title><rect x="79.0" y="1059.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.0" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="79.5" y="1043.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="82.5" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="79.5" y="1027.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="82.5" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="79.5" y="1011.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="82.5" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="80.1" y="1107.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="83.1" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="80.1" y="1091.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="83.1" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="80.1" y="1075.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="83.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (5 samples, 0.24%)</title><rect x="80.6" y="1139.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.6" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (5 samples, 0.24%)</title><rect x="80.6" y="1123.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.6" y="1134.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (5 samples, 0.24%)</title><rect x="80.6" y="1107.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.6" y="1118.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (5 samples, 0.24%)</title><rect x="80.6" y="1091.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.6" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (5 samples, 0.24%)</title><rect x="80.6" y="1075.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (21 samples, 1.00%)</title><rect x="83.4" y="1187.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.4" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (20 samples, 0.95%)</title><rect x="84.0" y="1171.0" width="11.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.0" y="1182.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.05%)</title><rect x="84.6" y="1155.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="87.6" y="1166.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (9 samples, 0.43%)</title><rect x="85.1" y="1155.0" width="5.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="88.1" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="85.1" y="1139.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="88.1" y="1150.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.10%)</title><rect x="85.7" y="1139.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="88.7" y="1150.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.05%)</title><rect x="85.7" y="1123.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="88.7" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="85.7" y="1107.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="88.7" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="85.7" y="1091.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.7" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="85.7" y="1075.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="88.7" y="1086.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="86.2" y="1123.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="89.2" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="86.2" y="1107.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="89.2" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="86.2" y="1091.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.2" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="86.2" y="1075.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="89.2" y="1086.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.05%)</title><rect x="86.8" y="1139.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="89.8" y="1150.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.10%)</title><rect x="87.4" y="1139.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="90.4" y="1150.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="88.5" y="1139.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="91.5" y="1150.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="88.5" y="1123.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.5" y="1134.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="88.5" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="91.5" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="88.5" y="1091.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.5" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="88.5" y="1075.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="91.5" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="88.5" y="1059.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.5" y="1070.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.10%)</title><rect x="89.0" y="1139.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="92.0" y="1150.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="89.0" y="1123.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="92.0" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="89.6" y="1123.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.6" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="89.6" y="1107.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="92.6" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="89.6" y="1091.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="92.6" y="1102.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.05%)</title><rect x="90.2" y="1155.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="93.2" y="1166.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.10%)</title><rect x="90.7" y="1155.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="93.7" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="91.3" y="1139.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.3" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="91.3" y="1123.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="94.3" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="91.3" y="1107.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="94.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1183055826.run (6 samples, 0.29%)</title><rect x="91.8" y="1155.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (6 samples, 0.29%)</title><rect x="91.8" y="1139.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.8" y="1150.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (6 samples, 0.29%)</title><rect x="91.8" y="1123.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.8" y="1134.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (6 samples, 0.29%)</title><rect x="91.8" y="1107.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.8" y="1118.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.29%)</title><rect x="91.8" y="1091.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.8" y="1102.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.29%)</title><rect x="91.8" y="1075.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="91.8" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.05%)</title><rect x="91.8" y="1043.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="94.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.05%)</title><rect x="91.8" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.8" y="1038.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (1 samples, 0.05%)</title><rect x="91.8" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.8" y="1022.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.24%)</title><rect x="92.4" y="1059.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.19%)</title><rect x="92.4" y="1043.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.19%)</title><rect x="92.4" y="1027.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="95.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.19%)</title><rect x="92.4" y="1011.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.4" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="94.1" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="97.1" y="1006.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="94.6" y="1043.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="97.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.10%)</title><rect x="95.2" y="1187.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.10%)</title><rect x="95.2" y="1171.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="98.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.10%)</title><rect x="95.2" y="1155.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="98.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.05%)</title><rect x="95.8" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.8" y="1150.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.05%)</title><rect x="95.8" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.8" y="1134.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.05%)</title><rect x="95.8" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.8" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="96.3" y="1187.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="99.3" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="96.3" y="1171.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="99.3" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="96.3" y="1155.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (13 samples, 0.62%)</title><rect x="96.9" y="1299.0" width="7.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.9" y="1310.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="96.9" y="1283.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="99.9" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.10%)</title><rect x="96.9" y="1267.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="99.9" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="96.9" y="1251.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="99.9" y="1262.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="97.4" y="1251.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="100.4" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (1 samples, 0.05%)</title><rect x="98.0" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.0" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="98.0" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (9 samples, 0.43%)</title><rect x="98.6" y="1283.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.6" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (9 samples, 0.43%)</title><rect x="98.6" y="1267.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.6" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (9 samples, 0.43%)</title><rect x="98.6" y="1251.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.6" y="1262.0"></text>
</g>
<g>
<title>__write (8 samples, 0.38%)</title><rect x="98.6" y="1235.0" width="4.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="101.6" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.38%)</title><rect x="98.6" y="1219.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.6" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.38%)</title><rect x="98.6" y="1203.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.6" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_write (8 samples, 0.38%)</title><rect x="98.6" y="1187.0" width="4.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.6" y="1198.0"></text>
</g>
<g>
<title>ksys_write (8 samples, 0.38%)</title><rect x="98.6" y="1171.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.6" y="1182.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="98.6" y="1155.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.6" y="1166.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="98.6" y="1139.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.6" y="1150.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="98.6" y="1123.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.6" y="1134.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.33%)</title><rect x="99.1" y="1155.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.1" y="1166.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.05%)</title><rect x="99.1" y="1139.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="102.1" y="1150.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 0.29%)</title><rect x="99.7" y="1139.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="102.7" y="1150.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.29%)</title><rect x="99.7" y="1123.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.7" y="1134.0"></text>
</g>
<g>
<title>pipe_write (6 samples, 0.29%)</title><rect x="99.7" y="1107.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="102.7" y="1118.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 0.29%)</title><rect x="99.7" y="1091.0" width="3.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="102.7" y="1102.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.29%)</title><rect x="99.7" y="1075.0" width="3.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="102.7" y="1086.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 0.29%)</title><rect x="99.7" y="1059.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="102.7" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="103.1" y="1235.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.1" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="103.1" y="1219.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.1" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="103.1" y="1203.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="106.1" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="103.6" y="1283.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="106.6" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="103.6" y="1267.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="106.6" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="103.6" y="1251.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (6 samples, 0.29%)</title><rect x="104.2" y="1299.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (6 samples, 0.29%)</title><rect x="104.2" y="1283.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.24%)</title><rect x="104.7" y="1267.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.7" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="105.9" y="1251.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="108.9" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="105.9" y="1235.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="108.9" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="105.9" y="1219.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="108.9" y="1230.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.10%)</title><rect x="106.4" y="1251.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.4" y="1262.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (2 samples, 0.10%)</title><rect x="106.4" y="1235.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.10%)</title><rect x="106.4" y="1219.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.4" y="1230.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="106.4" y="1203.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="109.4" y="1214.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.05%)</title><rect x="107.0" y="1203.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="110.0" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="107.0" y="1187.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="110.0" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="107.5" y="1299.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="110.5" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="107.5" y="1283.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="110.5" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="107.5" y="1267.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (112 samples, 5.32%)</title><rect x="108.1" y="1363.0" width="62.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.1" y="1374.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (112 samples, 5.32%)</title><rect x="108.1" y="1347.0" width="62.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.1" y="1358.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="108.1" y="1331.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.1" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (1 samples, 0.05%)</title><rect x="108.1" y="1315.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.1" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (1 samples, 0.05%)</title><rect x="108.7" y="1315.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="111.7" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (110 samples, 5.23%)</title><rect x="109.2" y="1331.0" width="61.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.2" y="1342.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (109 samples, 5.18%)</title><rect x="109.8" y="1315.0" width="61.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.8" y="1326.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (109 samples, 5.18%)</title><rect x="109.8" y="1299.0" width="61.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.8" y="1310.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.14%)</title><rect x="110.3" y="1283.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.14%)</title><rect x="110.3" y="1267.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="113.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.14%)</title><rect x="110.3" y="1251.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.3" y="1262.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="110.3" y="1235.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="113.3" y="1246.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="111.5" y="1235.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="114.5" y="1246.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="111.5" y="1219.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="114.5" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="111.5" y="1203.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="114.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (104 samples, 4.94%)</title><rect x="112.0" y="1283.0" width="58.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.0" y="1294.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="112.0" y="1267.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="115.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 4.89%)</title><rect x="112.6" y="1267.0" width="57.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.6" y="1278.0">one/ni..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="112.6" y="1251.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="115.6" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="112.6" y="1235.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.6" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="112.6" y="1219.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="115.6" y="1230.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="112.6" y="1203.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="115.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 4.85%)</title><rect x="113.1" y="1251.0" width="57.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.1" y="1262.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (102 samples, 4.85%)</title><rect x="113.1" y="1235.0" width="57.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.1" y="1246.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (102 samples, 4.85%)</title><rect x="113.1" y="1219.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.1" y="1230.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.19%)</title><rect x="114.3" y="1203.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="117.3" y="1214.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.05%)</title><rect x="115.9" y="1187.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="118.9" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="115.9" y="1171.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="118.9" y="1182.0"></text>
</g>
<g>
<title>send (96 samples, 4.56%)</title><rect x="116.5" y="1203.0" width="53.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="119.5" y="1214.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 4.37%)</title><rect x="118.8" y="1187.0" width="51.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="121.8" y="1198.0">entry..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.05%)</title><rect x="118.8" y="1171.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="121.8" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (91 samples, 4.32%)</title><rect x="119.3" y="1171.0" width="51.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="122.3" y="1182.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (91 samples, 4.32%)</title><rect x="119.3" y="1155.0" width="51.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.3" y="1166.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (91 samples, 4.32%)</title><rect x="119.3" y="1139.0" width="51.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="122.3" y="1150.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (88 samples, 4.18%)</title><rect x="119.9" y="1123.0" width="49.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="122.9" y="1134.0">sock_..</text>
</g>
<g>
<title>inet6_sendmsg (84 samples, 3.99%)</title><rect x="121.0" y="1107.0" width="47.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.0" y="1118.0">inet..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="121.0" y="1091.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="124.0" y="1102.0"></text>
</g>
<g>
<title>tcp_sendmsg (83 samples, 3.94%)</title><rect x="121.6" y="1091.0" width="46.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="124.6" y="1102.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="121.6" y="1075.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="124.6" y="1086.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="121.6" y="1059.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.6" y="1070.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (81 samples, 3.85%)</title><rect x="122.1" y="1075.0" width="45.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="125.1" y="1086.0">tcp_..</text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.10%)</title><rect x="122.1" y="1059.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="125.1" y="1070.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.10%)</title><rect x="122.1" y="1043.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="125.1" y="1054.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="123.2" y="1059.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="126.2" y="1070.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="123.2" y="1043.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="126.2" y="1054.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.33%)</title><rect x="123.8" y="1059.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="126.8" y="1070.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.33%)</title><rect x="123.8" y="1043.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="126.8" y="1054.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.05%)</title><rect x="124.4" y="1027.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="127.4" y="1038.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.14%)</title><rect x="124.9" y="1027.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.9" y="1038.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="124.9" y="1011.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="127.9" y="1022.0"></text>
</g>
<g>
<title>memset (1 samples, 0.05%)</title><rect x="126.0" y="1011.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="129.0" y="1022.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.10%)</title><rect x="126.6" y="1027.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.6" y="1038.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.05%)</title><rect x="127.7" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="130.7" y="1070.0"></text>
</g>
<g>
<title>tcp_push (66 samples, 3.14%)</title><rect x="128.3" y="1059.0" width="37.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="131.3" y="1070.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (65 samples, 3.09%)</title><rect x="128.3" y="1043.0" width="36.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="131.3" y="1054.0">__t..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.05%)</title><rect x="128.3" y="1027.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.3" y="1038.0"></text>
</g>
<g>
<title>tcp_write_xmit (64 samples, 3.04%)</title><rect x="128.8" y="1027.0" width="35.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.8" y="1038.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (61 samples, 2.90%)</title><rect x="129.4" y="1011.0" width="34.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="132.4" y="1022.0">__..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.05%)</title><rect x="130.0" y="995.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="133.0" y="1006.0"></text>
</g>
<g>
<title>ip_queue_xmit (59 samples, 2.80%)</title><rect x="130.5" y="995.0" width="33.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.5" y="1006.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (59 samples, 2.80%)</title><rect x="130.5" y="979.0" width="33.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="133.5" y="990.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="130.5" y="963.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="133.5" y="974.0"></text>
</g>
<g>
<title>ip_local_out (57 samples, 2.71%)</title><rect x="131.1" y="963.0" width="31.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="134.1" y="974.0">ip..</text>
</g>
<g>
<title>ip_output (57 samples, 2.71%)</title><rect x="131.1" y="947.0" width="31.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="134.1" y="958.0">ip..</text>
</g>
<g>
<title>ip_finish_output (57 samples, 2.71%)</title><rect x="131.1" y="931.0" width="31.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="134.1" y="942.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (57 samples, 2.71%)</title><rect x="131.1" y="915.0" width="31.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="134.1" y="926.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (57 samples, 2.71%)</title><rect x="131.1" y="899.0" width="31.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.1" y="910.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (48 samples, 2.28%)</title><rect x="133.3" y="883.0" width="26.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="136.3" y="894.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (47 samples, 2.23%)</title><rect x="133.9" y="867.0" width="26.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="136.9" y="878.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (47 samples, 2.23%)</title><rect x="133.9" y="851.0" width="26.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="136.9" y="862.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (46 samples, 2.19%)</title><rect x="133.9" y="835.0" width="25.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.9" y="846.0">_..</text>
</g>
<g>
<title>net_rx_action (44 samples, 2.09%)</title><rect x="134.4" y="819.0" width="24.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="137.4" y="830.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.05%)</title><rect x="134.4" y="803.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="137.4" y="814.0"></text>
</g>
<g>
<title>process_backlog (43 samples, 2.04%)</title><rect x="135.0" y="803.0" width="24.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.0" y="814.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 2.04%)</title><rect x="135.0" y="787.0" width="24.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.0" y="798.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (42 samples, 2.00%)</title><rect x="135.6" y="771.0" width="23.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.6" y="782.0">_..</text>
</g>
<g>
<title>ip_rcv (42 samples, 2.00%)</title><rect x="135.6" y="755.0" width="23.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.6" y="766.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (42 samples, 2.00%)</title><rect x="135.6" y="739.0" width="23.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="138.6" y="750.0">i..</text>
</g>
<g>
<title>ip_local_deliver (42 samples, 2.00%)</title><rect x="135.6" y="723.0" width="23.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="138.6" y="734.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (41 samples, 1.95%)</title><rect x="136.1" y="707.0" width="23.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.1" y="718.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (41 samples, 1.95%)</title><rect x="136.1" y="691.0" width="23.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.1" y="702.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.05%)</title><rect x="136.1" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.1" y="686.0"></text>
</g>
<g>
<title>tcp_v4_rcv (40 samples, 1.90%)</title><rect x="136.7" y="675.0" width="22.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="139.7" y="686.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.10%)</title><rect x="136.7" y="659.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.7" y="670.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.05%)</title><rect x="137.8" y="659.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="140.8" y="670.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.10%)</title><rect x="138.4" y="659.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="141.4" y="670.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="138.4" y="643.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="141.4" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="138.9" y="643.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="141.9" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (35 samples, 1.66%)</title><rect x="139.5" y="659.0" width="19.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="142.5" y="670.0"></text>
</g>
<g>
<title>tcp_rcv_established (35 samples, 1.66%)</title><rect x="139.5" y="643.0" width="19.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="142.5" y="654.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.05%)</title><rect x="140.1" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="143.1" y="638.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.05%)</title><rect x="140.1" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="143.1" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="140.1" y="595.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.1" y="606.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.52%)</title><rect x="140.6" y="627.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.6" y="638.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="141.2" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="144.2" y="622.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.38%)</title><rect x="141.7" y="611.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="144.7" y="622.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.29%)</title><rect x="142.9" y="595.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="145.9" y="606.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="142.9" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="145.9" y="590.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.19%)</title><rect x="143.4" y="579.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.4" y="590.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.19%)</title><rect x="143.4" y="563.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="146.4" y="574.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.05%)</title><rect x="145.7" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="148.7" y="590.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="146.2" y="611.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="149.2" y="622.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.10%)</title><rect x="146.8" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="149.8" y="638.0"></text>
</g>
<g>
<title>tcp_data_ready (20 samples, 0.95%)</title><rect x="147.9" y="627.0" width="11.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="150.9" y="638.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="147.9" y="611.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="150.9" y="622.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.90%)</title><rect x="148.5" y="611.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.5" y="622.0"></text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 0.90%)</title><rect x="148.5" y="595.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="151.5" y="606.0"></text>
</g>
<g>
<title>__wake_up_common_lock (18 samples, 0.86%)</title><rect x="148.5" y="579.0" width="10.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="151.5" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.81%)</title><rect x="148.5" y="563.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="151.5" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="158.0" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="161.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.05%)</title><rect x="158.6" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="161.6" y="590.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.05%)</title><rect x="159.1" y="819.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="162.1" y="830.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="159.7" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="162.7" y="846.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.24%)</title><rect x="160.2" y="883.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.2" y="894.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.24%)</title><rect x="160.2" y="867.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="163.2" y="878.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="160.2" y="851.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.2" y="862.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.19%)</title><rect x="160.8" y="851.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.8" y="862.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.10%)</title><rect x="161.9" y="835.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.9" y="846.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.05%)</title><rect x="163.0" y="963.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="166.0" y="974.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="163.6" y="1011.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="166.6" y="1022.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.05%)</title><rect x="163.6" y="995.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="166.6" y="1006.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.05%)</title><rect x="163.6" y="979.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="166.6" y="990.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.05%)</title><rect x="163.6" y="963.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="166.6" y="974.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.05%)</title><rect x="164.2" y="1011.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.2" y="1022.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="164.7" y="1043.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.7" y="1054.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.14%)</title><rect x="165.3" y="1059.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.3" y="1070.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="165.3" y="1043.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="168.3" y="1054.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.10%)</title><rect x="165.8" y="1043.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="168.8" y="1054.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.05%)</title><rect x="167.0" y="1059.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="170.0" y="1070.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="167.5" y="1075.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="170.5" y="1086.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.10%)</title><rect x="168.1" y="1107.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="171.1" y="1118.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="168.6" y="1091.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="171.6" y="1102.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="168.6" y="1075.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="171.6" y="1086.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.10%)</title><rect x="169.2" y="1123.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="172.2" y="1134.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="169.2" y="1107.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.2" y="1118.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="169.2" y="1091.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.2" y="1102.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="169.2" y="1075.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="170.3" y="1283.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.3" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$297/247412214.get (385 samples, 18.29%)</title><rect x="170.9" y="1379.0" width="215.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.9" y="1390.0">ru/mail/polis/service/dariag..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$get$0 (385 samples, 18.29%)</title><rect x="170.9" y="1363.0" width="215.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.9" y="1374.0">ru/mail/polis/service/dariag..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="173.1" y="1347.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.1" y="1358.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.05%)</title><rect x="173.1" y="1331.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.1" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (380 samples, 18.05%)</title><rect x="173.7" y="1347.0" width="213.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.7" y="1358.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.10%)</title><rect x="173.7" y="1331.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.7" y="1342.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.10%)</title><rect x="173.7" y="1315.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.7" y="1326.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.05%)</title><rect x="173.7" y="1299.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.7" y="1310.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.05%)</title><rect x="174.2" y="1299.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="177.2" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.05%)</title><rect x="174.8" y="1331.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="177.8" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.05%)</title><rect x="174.8" y="1315.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="177.8" y="1326.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.05%)</title><rect x="174.8" y="1299.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="177.8" y="1310.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="174.8" y="1283.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="177.8" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="174.8" y="1267.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="177.8" y="1278.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="174.8" y="1251.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="177.8" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.10%)</title><rect x="175.4" y="1331.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.4" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.10%)</title><rect x="175.4" y="1315.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="178.4" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.10%)</title><rect x="175.4" y="1299.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="178.4" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.10%)</title><rect x="175.4" y="1283.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="178.4" y="1294.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.10%)</title><rect x="175.4" y="1267.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="178.4" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.10%)</title><rect x="175.4" y="1251.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="178.4" y="1262.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="175.4" y="1235.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="178.4" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="175.9" y="1235.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="178.9" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="175.9" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="178.9" y="1230.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.05%)</title><rect x="175.9" y="1203.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="178.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.hasNext (3 samples, 0.14%)</title><rect x="176.5" y="1331.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.5" y="1342.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (3 samples, 0.14%)</title><rect x="176.5" y="1315.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.5" y="1326.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.05%)</title><rect x="177.0" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.0" y="1310.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (1 samples, 0.05%)</title><rect x="177.6" y="1299.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.6" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (51 samples, 2.42%)</title><rect x="178.2" y="1331.0" width="28.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="181.2" y="1342.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (51 samples, 2.42%)</title><rect x="178.2" y="1315.0" width="28.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="181.2" y="1326.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.10%)</title><rect x="178.2" y="1299.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="181.2" y="1310.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.10%)</title><rect x="178.2" y="1283.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="181.2" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.05%)</title><rect x="178.2" y="1267.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="181.2" y="1278.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.05%)</title><rect x="178.7" y="1267.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="181.7" y="1278.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (23 samples, 1.09%)</title><rect x="179.3" y="1299.0" width="12.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.3" y="1310.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (23 samples, 1.09%)</title><rect x="179.3" y="1283.0" width="12.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.3" y="1294.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (23 samples, 1.09%)</title><rect x="179.3" y="1267.0" width="12.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="182.3" y="1278.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="179.9" y="1251.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="182.9" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="180.4" y="1251.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="183.4" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (18 samples, 0.86%)</title><rect x="181.0" y="1251.0" width="10.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="184.0" y="1262.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (1 samples, 0.05%)</title><rect x="182.1" y="1235.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="185.1" y="1246.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="182.7" y="1235.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="185.7" y="1246.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (14 samples, 0.67%)</title><rect x="183.2" y="1235.0" width="7.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="186.2" y="1246.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="183.8" y="1219.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="186.8" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="184.3" y="1219.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="187.3" y="1230.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.05%)</title><rect x="184.9" y="1219.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="187.9" y="1230.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (10 samples, 0.48%)</title><rect x="185.5" y="1219.0" width="5.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="188.5" y="1230.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (1 samples, 0.05%)</title><rect x="187.7" y="1203.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="190.7" y="1214.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="188.3" y="1203.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="191.3" y="1214.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.10%)</title><rect x="188.8" y="1203.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="191.8" y="1214.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.05%)</title><rect x="189.9" y="1203.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="192.9" y="1214.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.05%)</title><rect x="190.5" y="1203.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="193.5" y="1214.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (1 samples, 0.05%)</title><rect x="190.5" y="1187.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="193.5" y="1198.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (2 samples, 0.10%)</title><rect x="191.1" y="1251.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="194.1" y="1262.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="191.6" y="1235.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="194.6" y="1246.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (19 samples, 0.90%)</title><rect x="192.2" y="1299.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.2" y="1310.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (19 samples, 0.90%)</title><rect x="192.2" y="1283.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="195.2" y="1294.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (15 samples, 0.71%)</title><rect x="192.2" y="1267.0" width="8.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="195.2" y="1278.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.10%)</title><rect x="192.7" y="1251.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="195.7" y="1262.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 0.48%)</title><rect x="193.9" y="1251.0" width="5.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="196.9" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="195.0" y="1235.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="198.0" y="1246.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.05%)</title><rect x="196.1" y="1235.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="199.1" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.24%)</title><rect x="196.7" y="1235.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="199.7" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.10%)</title><rect x="198.4" y="1219.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="201.4" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="198.4" y="1203.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="201.4" y="1214.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.05%)</title><rect x="198.4" y="1187.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="201.4" y="1198.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="198.9" y="1203.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="201.9" y="1214.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.10%)</title><rect x="199.5" y="1251.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="202.5" y="1262.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="200.0" y="1235.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="203.0" y="1246.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.14%)</title><rect x="200.6" y="1267.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="203.6" y="1278.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::key() const (1 samples, 0.05%)</title><rect x="202.3" y="1267.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="205.3" y="1278.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (4 samples, 0.19%)</title><rect x="202.8" y="1299.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.8" y="1310.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (4 samples, 0.19%)</title><rect x="202.8" y="1283.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.8" y="1294.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (3 samples, 0.14%)</title><rect x="202.8" y="1267.0" width="1.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="205.8" y="1278.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.05%)</title><rect x="202.8" y="1251.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="205.8" y="1262.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="202.8" y="1235.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="205.8" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="202.8" y="1219.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="205.8" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="202.8" y="1203.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="205.8" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="202.8" y="1187.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="205.8" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="202.8" y="1171.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="205.8" y="1182.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.05%)</title><rect x="202.8" y="1155.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="205.8" y="1166.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.05%)</title><rect x="202.8" y="1139.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="205.8" y="1150.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.05%)</title><rect x="202.8" y="1123.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="205.8" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.10%)</title><rect x="203.4" y="1251.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="206.4" y="1262.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.05%)</title><rect x="203.4" y="1235.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="206.4" y="1246.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="204.0" y="1235.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="207.0" y="1246.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (1 samples, 0.05%)</title><rect x="204.5" y="1267.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="207.5" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (3 samples, 0.14%)</title><rect x="205.1" y="1299.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.1" y="1310.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.10%)</title><rect x="205.6" y="1283.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.6" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.10%)</title><rect x="205.6" y="1267.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.6" y="1278.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="205.6" y="1251.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.6" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="205.6" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="208.6" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.10%)</title><rect x="205.6" y="1219.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.6" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.10%)</title><rect x="205.6" y="1203.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.6" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.10%)</title><rect x="205.6" y="1187.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.6" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.10%)</title><rect x="205.6" y="1171.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (321 samples, 15.25%)</title><rect x="206.8" y="1331.0" width="179.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.8" y="1342.0">ru/mail/polis/dao/daria..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (185 samples, 8.79%)</title><rect x="206.8" y="1315.0" width="103.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.8" y="1326.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (185 samples, 8.79%)</title><rect x="206.8" y="1299.0" width="103.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.8" y="1310.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (174 samples, 8.27%)</title><rect x="206.8" y="1283.0" width="97.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="209.8" y="1294.0">Java_org_ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="206.8" y="1267.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="209.8" y="1278.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.05%)</title><rect x="207.3" y="1267.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="210.3" y="1278.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.10%)</title><rect x="207.9" y="1267.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="210.9" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="208.4" y="1251.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.4" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="208.4" y="1235.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="211.4" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="208.4" y="1219.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="211.4" y="1230.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (3 samples, 0.14%)</title><rect x="209.0" y="1267.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="212.0" y="1278.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.05%)</title><rect x="209.6" y="1251.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="212.6" y="1262.0"></text>
</g>
<g>
<title>malloc@plt (1 samples, 0.05%)</title><rect x="210.1" y="1251.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="213.1" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="210.1" y="1235.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="213.1" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="210.1" y="1219.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="213.1" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="210.1" y="1203.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="213.1" y="1214.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.05%)</title><rect x="210.7" y="1267.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="213.7" y="1278.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (160 samples, 7.60%)</title><rect x="211.2" y="1267.0" width="89.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="214.2" y="1278.0">rocksdb::D..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="212.9" y="1251.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="215.9" y="1262.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="213.5" y="1251.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="216.5" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="214.0" y="1251.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="217.0" y="1262.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="214.6" y="1251.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="217.6" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (6 samples, 0.29%)</title><rect x="215.2" y="1251.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="218.2" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (4 samples, 0.19%)</title><rect x="215.2" y="1235.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="218.2" y="1246.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::PrepareValue() (1 samples, 0.05%)</title><rect x="216.3" y="1219.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="219.3" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="216.3" y="1203.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="219.3" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="216.3" y="1187.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="219.3" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="216.3" y="1171.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="219.3" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="216.9" y="1219.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="219.9" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="216.9" y="1203.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="219.9" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="216.9" y="1187.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="219.9" y="1198.0"></text>
</g>
<g>
<title>rocksdb::DBIter::IsVisible(unsigned long, rocksdb::Slice const&amp;, bool*) (1 samples, 0.05%)</title><rect x="217.4" y="1235.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="220.4" y="1246.0"></text>
</g>
<g>
<title>rocksdb::DBIter::ParseKey(rocksdb::ParsedInternalKey*) [clone .plt] (1 samples, 0.05%)</title><rect x="218.0" y="1235.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="221.0" y="1246.0"></text>
</g>
<g>
<title>rocksdb::DBIter::SetSavedKeyToSeekTarget(rocksdb::Slice const&amp;) (3 samples, 0.14%)</title><rect x="218.5" y="1251.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="221.5" y="1262.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="220.2" y="1251.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="223.2" y="1262.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.05%)</title><rect x="220.8" y="1251.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="223.8" y="1262.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.05%)</title><rect x="221.3" y="1251.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="224.3" y="1262.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::ClearHeaps() (1 samples, 0.05%)</title><rect x="221.9" y="1251.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="224.9" y="1262.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (137 samples, 6.51%)</title><rect x="222.5" y="1251.0" width="76.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="225.5" y="1262.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr@plt (2 samples, 0.10%)</title><rect x="226.4" y="1235.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="229.4" y="1246.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (2 samples, 0.10%)</title><rect x="227.5" y="1235.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="230.5" y="1246.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (82 samples, 3.90%)</title><rect x="228.6" y="1235.0" width="46.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="231.6" y="1246.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (28 samples, 1.33%)</title><rect x="229.2" y="1219.0" width="15.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="232.2" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.10%)</title><rect x="229.7" y="1203.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="232.7" y="1214.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (25 samples, 1.19%)</title><rect x="230.9" y="1203.0" width="14.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="233.9" y="1214.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (3 samples, 0.14%)</title><rect x="232.0" y="1187.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="235.0" y="1198.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (3 samples, 0.14%)</title><rect x="232.0" y="1171.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="235.0" y="1182.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (20 samples, 0.95%)</title><rect x="233.7" y="1187.0" width="11.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="236.7" y="1198.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (20 samples, 0.95%)</title><rect x="233.7" y="1171.0" width="11.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="236.7" y="1182.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.05%)</title><rect x="234.8" y="1155.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="237.8" y="1166.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.05%)</title><rect x="235.3" y="1155.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="238.3" y="1166.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (15 samples, 0.71%)</title><rect x="235.9" y="1155.0" width="8.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="238.9" y="1166.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (14 samples, 0.67%)</title><rect x="236.5" y="1139.0" width="7.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="239.5" y="1150.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.05%)</title><rect x="236.5" y="1123.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="239.5" y="1134.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (12 samples, 0.57%)</title><rect x="237.0" y="1123.0" width="6.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="240.0" y="1134.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.05%)</title><rect x="237.0" y="1107.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="240.0" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="237.0" y="1091.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.0" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="237.0" y="1075.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="240.0" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="237.0" y="1059.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="240.0" y="1070.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="237.0" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="240.0" y="1054.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="237.0" y="1027.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.0" y="1038.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.05%)</title><rect x="237.0" y="1011.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.0" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="237.6" y="1107.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="240.6" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="237.6" y="1091.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="240.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="237.6" y="1075.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="240.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="237.6" y="1059.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="240.6" y="1070.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="237.6" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.6" y="1054.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="237.6" y="1027.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="240.6" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="237.6" y="1011.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.6" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="237.6" y="995.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="240.6" y="1006.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="237.6" y="979.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="240.6" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="238.2" y="1107.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="241.2" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="238.7" y="1107.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="241.7" y="1118.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (8 samples, 0.38%)</title><rect x="239.3" y="1107.0" width="4.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="242.3" y="1118.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (8 samples, 0.38%)</title><rect x="239.3" y="1091.0" width="4.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="242.3" y="1102.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.05%)</title><rect x="243.8" y="1123.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="246.8" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="244.3" y="1155.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="247.3" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="244.3" y="1139.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.3" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="244.3" y="1123.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.3" y="1134.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (2 samples, 0.10%)</title><rect x="244.9" y="1219.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="247.9" y="1230.0"></text>
</g>
<g>
<title>rocksdb::BlockPrefetcher::PrefetchIfNeeded(rocksdb::BlockBasedTable::Rep const*, rocksdb::BlockHandle const&amp;, unsigned long, bool) (1 samples, 0.05%)</title><rect x="246.0" y="1219.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="249.0" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (29 samples, 1.38%)</title><rect x="246.6" y="1219.0" width="16.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="249.6" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="249.4" y="1203.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="252.4" y="1214.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (19 samples, 0.90%)</title><rect x="249.9" y="1203.0" width="10.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="252.9" y="1214.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.05%)</title><rect x="252.2" y="1187.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="255.2" y="1198.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.05%)</title><rect x="252.7" y="1187.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.7" y="1198.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (7 samples, 0.33%)</title><rect x="253.3" y="1187.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="256.3" y="1198.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 0.29%)</title><rect x="257.2" y="1187.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="260.2" y="1198.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (2 samples, 0.10%)</title><rect x="258.9" y="1171.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="261.9" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="259.5" y="1155.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="262.5" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="259.5" y="1139.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="262.5" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="259.5" y="1123.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="262.5" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="260.0" y="1171.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="263.0" y="1182.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (2 samples, 0.10%)</title><rect x="260.6" y="1203.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="263.6" y="1214.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.10%)</title><rect x="261.7" y="1203.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="264.7" y="1214.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (1 samples, 0.05%)</title><rect x="261.7" y="1187.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="264.7" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="261.7" y="1171.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="264.7" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="261.7" y="1155.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.7" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="261.7" y="1139.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="264.7" y="1150.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.05%)</title><rect x="262.3" y="1187.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="265.3" y="1198.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (19 samples, 0.90%)</title><rect x="262.8" y="1219.0" width="10.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="265.8" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.19%)</title><rect x="269.0" y="1203.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="272.0" y="1214.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.05%)</title><rect x="271.2" y="1203.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="274.2" y="1214.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.05%)</title><rect x="271.2" y="1187.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="274.2" y="1198.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.10%)</title><rect x="271.8" y="1203.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="274.8" y="1214.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="271.8" y="1187.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="274.8" y="1198.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="272.3" y="1187.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="275.3" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="272.9" y="1203.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.9" y="1214.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="272.9" y="1187.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.9" y="1198.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="272.9" y="1171.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.9" y="1182.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.05%)</title><rect x="273.5" y="1219.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="276.5" y="1230.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) [clone .plt] (1 samples, 0.05%)</title><rect x="274.0" y="1219.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="277.0" y="1230.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.10%)</title><rect x="274.6" y="1235.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="277.6" y="1246.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (36 samples, 1.71%)</title><rect x="275.7" y="1235.0" width="20.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="278.7" y="1246.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (34 samples, 1.62%)</title><rect x="276.8" y="1219.0" width="19.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="279.8" y="1230.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (34 samples, 1.62%)</title><rect x="276.8" y="1203.0" width="19.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="279.8" y="1214.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.05%)</title><rect x="292.0" y="1187.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="295.0" y="1198.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.29%)</title><rect x="292.5" y="1187.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="295.5" y="1198.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.10%)</title><rect x="293.6" y="1171.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="296.6" y="1182.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.05%)</title><rect x="294.8" y="1171.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="297.8" y="1182.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.05%)</title><rect x="295.3" y="1171.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="298.3" y="1182.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (5 samples, 0.24%)</title><rect x="295.9" y="1235.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="298.9" y="1246.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="298.1" y="1219.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="301.1" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="298.7" y="1235.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.7" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="298.7" y="1219.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="301.7" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="298.7" y="1203.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="301.7" y="1214.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.05%)</title><rect x="299.3" y="1251.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="302.3" y="1262.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.05%)</title><rect x="299.8" y="1251.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="302.8" y="1262.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) [clone .plt] (1 samples, 0.05%)</title><rect x="300.4" y="1251.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="303.4" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBIter::SetSavedKeyToSeekTarget(rocksdb::Slice const&amp;) (2 samples, 0.10%)</title><rect x="300.9" y="1267.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="303.9" y="1278.0"></text>
</g>
<g>
<title>rocksdb::DBIter::SetSavedKeyToSeekTarget(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.05%)</title><rect x="302.1" y="1267.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="305.1" y="1278.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::key() const (2 samples, 0.10%)</title><rect x="302.6" y="1267.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="305.6" y="1278.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.05%)</title><rect x="303.7" y="1267.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="306.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.29%)</title><rect x="304.3" y="1283.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="307.3" y="1294.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (4 samples, 0.19%)</title><rect x="304.3" y="1267.0" width="2.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="307.3" y="1278.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.10%)</title><rect x="306.5" y="1267.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="309.5" y="1278.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.10%)</title><rect x="307.7" y="1283.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="310.7" y="1294.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.05%)</title><rect x="308.8" y="1283.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="311.8" y="1294.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (2 samples, 0.10%)</title><rect x="309.3" y="1283.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="312.3" y="1294.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (133 samples, 6.32%)</title><rect x="310.5" y="1315.0" width="74.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.5" y="1326.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (117 samples, 5.56%)</title><rect x="310.5" y="1299.0" width="65.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.5" y="1310.0">org/roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (28 samples, 1.33%)</title><rect x="311.0" y="1283.0" width="15.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="314.0" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="326.2" y="1267.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="329.2" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="326.2" y="1251.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="329.2" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="326.2" y="1235.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="329.2" y="1246.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (73 samples, 3.47%)</title><rect x="326.7" y="1283.0" width="40.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="329.7" y="1294.0">Jav..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.05%)</title><rect x="327.3" y="1267.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="330.3" y="1278.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.05%)</title><rect x="327.8" y="1267.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="330.8" y="1278.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (68 samples, 3.23%)</title><rect x="328.4" y="1267.0" width="38.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="331.4" y="1278.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) [clone .plt] (1 samples, 0.05%)</title><rect x="329.0" y="1251.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="332.0" y="1262.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (66 samples, 3.14%)</title><rect x="329.5" y="1251.0" width="37.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="332.5" y="1262.0">roc..</text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.05%)</title><rect x="330.1" y="1235.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="333.1" y="1246.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.10%)</title><rect x="330.6" y="1235.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="333.6" y="1246.0"></text>
</g>
<g>
<title>rocksdb::Arena::Arena(unsigned long, rocksdb::AllocTracker*, unsigned long) (1 samples, 0.05%)</title><rect x="331.8" y="1235.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="334.8" y="1246.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.05%)</title><rect x="332.3" y="1235.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="335.3" y="1246.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (7 samples, 0.33%)</title><rect x="332.9" y="1235.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="335.9" y="1246.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (5 samples, 0.24%)</title><rect x="332.9" y="1219.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="335.9" y="1230.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.14%)</title><rect x="334.0" y="1203.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="337.0" y="1214.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.05%)</title><rect x="335.7" y="1219.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="338.7" y="1230.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.05%)</title><rect x="336.3" y="1219.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="339.3" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (39 samples, 1.85%)</title><rect x="336.8" y="1235.0" width="21.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="339.8" y="1246.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (1 samples, 0.05%)</title><rect x="336.8" y="1219.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="339.8" y="1230.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (2 samples, 0.10%)</title><rect x="337.4" y="1219.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="340.4" y="1230.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.05%)</title><rect x="337.9" y="1203.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="340.9" y="1214.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::MergeIteratorBuilder(rocksdb::InternalKeyComparator const*, rocksdb::Arena*, bool) (1 samples, 0.05%)</title><rect x="338.5" y="1219.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="341.5" y="1230.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.05%)</title><rect x="338.5" y="1203.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="341.5" y="1214.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::~MergeIteratorBuilder() (1 samples, 0.05%)</title><rect x="339.1" y="1219.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="342.1" y="1230.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (34 samples, 1.62%)</title><rect x="339.6" y="1219.0" width="19.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="342.6" y="1230.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.05%)</title><rect x="340.2" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="343.2" y="1214.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (32 samples, 1.52%)</title><rect x="340.7" y="1203.0" width="18.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="343.7" y="1214.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (2 samples, 0.10%)</title><rect x="341.9" y="1187.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="344.9" y="1198.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.05%)</title><rect x="343.0" y="1187.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="346.0" y="1198.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (5 samples, 0.24%)</title><rect x="343.5" y="1187.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="346.5" y="1198.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (3 samples, 0.14%)</title><rect x="344.7" y="1171.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="347.7" y="1182.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) [clone .plt] (2 samples, 0.10%)</title><rect x="346.3" y="1187.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="349.3" y="1198.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (19 samples, 0.90%)</title><rect x="347.5" y="1187.0" width="10.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="350.5" y="1198.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.10%)</title><rect x="349.1" y="1171.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="352.1" y="1182.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.05%)</title><rect x="350.3" y="1171.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="353.3" y="1182.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.05%)</title><rect x="350.8" y="1171.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="353.8" y="1182.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (2 samples, 0.10%)</title><rect x="351.4" y="1171.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="354.4" y="1182.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (7 samples, 0.33%)</title><rect x="352.5" y="1171.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="355.5" y="1182.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (2 samples, 0.10%)</title><rect x="353.1" y="1155.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="356.1" y="1166.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.05%)</title><rect x="353.6" y="1139.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="356.6" y="1150.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (3 samples, 0.14%)</title><rect x="354.2" y="1155.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="357.2" y="1166.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (2 samples, 0.10%)</title><rect x="354.2" y="1139.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="357.2" y="1150.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.05%)</title><rect x="355.3" y="1139.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="358.3" y="1150.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (1 samples, 0.05%)</title><rect x="355.9" y="1155.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="358.9" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="355.9" y="1139.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.9" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="355.9" y="1123.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="358.9" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="355.9" y="1107.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="358.9" y="1118.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.10%)</title><rect x="356.4" y="1171.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="359.4" y="1182.0"></text>
</g>
<g>
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.05%)</title><rect x="357.6" y="1171.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="360.6" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="358.1" y="1187.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="361.1" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="358.1" y="1171.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="361.1" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="358.1" y="1155.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="361.1" y="1166.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::MergeIteratorBuilder*) (1 samples, 0.05%)</title><rect x="358.7" y="1235.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="361.7" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="358.7" y="1219.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="361.7" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="358.7" y="1203.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="361.7" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="358.7" y="1187.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="361.7" y="1198.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::Finish() [clone .plt] (1 samples, 0.05%)</title><rect x="359.2" y="1235.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="362.2" y="1246.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::MergeIteratorBuilder(rocksdb::InternalKeyComparator const*, rocksdb::Arena*, bool) [clone .plt] (1 samples, 0.05%)</title><rect x="359.8" y="1235.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="362.8" y="1246.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (11 samples, 0.52%)</title><rect x="360.4" y="1235.0" width="6.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="363.4" y="1246.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.05%)</title><rect x="362.0" y="1219.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="365.0" y="1230.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (6 samples, 0.29%)</title><rect x="362.6" y="1219.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="365.6" y="1230.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.05%)</title><rect x="363.2" y="1203.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="366.2" y="1214.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (2 samples, 0.10%)</title><rect x="363.7" y="1203.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="366.7" y="1214.0"></text>
</g>
<g>
<title>rocksdb::ForwardRangeDelIterator::ForwardRangeDelIterator(rocksdb::InternalKeyComparator const*) (2 samples, 0.10%)</title><rect x="364.8" y="1203.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="367.8" y="1214.0"></text>
</g>
<g>
<title>rocksdb::OptimizeBlockSize(unsigned long) (1 samples, 0.05%)</title><rect x="366.0" y="1219.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="369.0" y="1230.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (1 samples, 0.05%)</title><rect x="366.5" y="1267.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="369.5" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="367.1" y="1267.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="370.1" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="367.1" y="1251.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.1" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="367.1" y="1235.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.1" y="1246.0"></text>
</g>
<g>
<title>__libc_malloc (8 samples, 0.38%)</title><rect x="367.6" y="1283.0" width="4.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="370.6" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="371.6" y="1267.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="374.6" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="371.6" y="1251.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.6" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="371.6" y="1235.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="374.6" y="1246.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="371.6" y="1219.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="374.6" y="1230.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="371.6" y="1203.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.6" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="371.6" y="1187.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="374.6" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="371.6" y="1171.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="374.6" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="371.6" y="1155.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="374.6" y="1166.0"></text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.10%)</title><rect x="372.1" y="1283.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="375.1" y="1294.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (2 samples, 0.10%)</title><rect x="373.2" y="1283.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="376.2" y="1294.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.10%)</title><rect x="374.4" y="1283.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="377.4" y="1294.0"></text>
</g>
<g>
<title>rocksdb_iterator_helper(rocksdb::DB*, rocksdb::ReadOptions, rocksdb::ColumnFamilyHandle*) [clone .plt] (1 samples, 0.05%)</title><rect x="375.5" y="1283.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="378.5" y="1294.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (16 samples, 0.76%)</title><rect x="376.1" y="1299.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.1" y="1310.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (16 samples, 0.76%)</title><rect x="376.1" y="1283.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.1" y="1294.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (16 samples, 0.76%)</title><rect x="376.1" y="1267.0" width="8.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.1" y="1278.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (16 samples, 0.76%)</title><rect x="376.1" y="1251.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="379.1" y="1262.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (16 samples, 0.76%)</title><rect x="376.1" y="1235.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="379.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (16 samples, 0.76%)</title><rect x="376.1" y="1219.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.1" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.05%)</title><rect x="376.1" y="1203.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="379.1" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (15 samples, 0.71%)</title><rect x="376.6" y="1203.0" width="8.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="379.6" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (5 samples, 0.24%)</title><rect x="376.6" y="1187.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="379.6" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (8 samples, 0.38%)</title><rect x="379.4" y="1187.0" width="4.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="382.4" y="1198.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.05%)</title><rect x="379.4" y="1171.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="382.4" y="1182.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="380.0" y="1171.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="383.0" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 0.24%)</title><rect x="380.5" y="1171.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="383.5" y="1182.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (4 samples, 0.19%)</title><rect x="381.1" y="1155.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="384.1" y="1166.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (3 samples, 0.14%)</title><rect x="381.7" y="1139.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="384.7" y="1150.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.05%)</title><rect x="383.3" y="1171.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="386.3" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.05%)</title><rect x="383.9" y="1187.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="386.9" y="1198.0"></text>
</g>
<g>
<title>LatestMethodCache::get_method() (1 samples, 0.05%)</title><rect x="384.5" y="1187.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="387.5" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (3 samples, 0.14%)</title><rect x="385.0" y="1315.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="385.6" y="1299.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="388.6" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.05%)</title><rect x="385.6" y="1283.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.6" y="1294.0"></text>
</g>
<g>
<title>_register_finalizer_Java (1 samples, 0.05%)</title><rect x="386.1" y="1299.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="389.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (121 samples, 5.75%)</title><rect x="386.7" y="1395.0" width="67.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.7" y="1406.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (121 samples, 5.75%)</title><rect x="386.7" y="1379.0" width="67.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.7" y="1390.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (102 samples, 4.85%)</title><rect x="386.7" y="1363.0" width="57.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.7" y="1374.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (102 samples, 4.85%)</title><rect x="386.7" y="1347.0" width="57.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.7" y="1358.0">java/u..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="386.7" y="1331.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="389.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (100 samples, 4.75%)</title><rect x="387.3" y="1331.0" width="56.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.3" y="1342.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (99 samples, 4.70%)</title><rect x="387.8" y="1315.0" width="55.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="390.8" y="1326.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="387.8" y="1299.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="390.8" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="388.4" y="1283.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="391.4" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (6 samples, 0.29%)</title><rect x="388.9" y="1299.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.9" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (6 samples, 0.29%)</title><rect x="388.9" y="1283.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.29%)</title><rect x="388.9" y="1267.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.29%)</title><rect x="388.9" y="1251.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="391.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.19%)</title><rect x="390.1" y="1235.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.19%)</title><rect x="390.1" y="1219.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="393.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.19%)</title><rect x="390.1" y="1203.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="393.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.19%)</title><rect x="390.1" y="1187.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.19%)</title><rect x="390.1" y="1171.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.19%)</title><rect x="390.1" y="1155.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.19%)</title><rect x="390.1" y="1139.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.19%)</title><rect x="390.1" y="1123.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="393.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.19%)</title><rect x="390.1" y="1107.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="393.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.19%)</title><rect x="390.1" y="1091.0" width="2.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="393.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.19%)</title><rect x="390.1" y="1075.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.1" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.19%)</title><rect x="390.1" y="1059.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="393.1" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.19%)</title><rect x="390.1" y="1043.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="393.1" y="1054.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.19%)</title><rect x="390.1" y="1027.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="393.1" y="1038.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.19%)</title><rect x="390.1" y="1011.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.1" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.19%)</title><rect x="390.1" y="995.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="393.1" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.19%)</title><rect x="390.1" y="979.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="393.1" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.19%)</title><rect x="390.1" y="963.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (91 samples, 4.32%)</title><rect x="392.3" y="1299.0" width="51.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="1310.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (91 samples, 4.32%)</title><rect x="392.3" y="1283.0" width="51.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.3" y="1294.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 4.32%)</title><rect x="392.3" y="1267.0" width="51.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="1278.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 4.28%)</title><rect x="392.3" y="1251.0" width="50.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.3" y="1262.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.05%)</title><rect x="392.3" y="1235.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.3" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.05%)</title><rect x="392.3" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (89 samples, 4.23%)</title><rect x="392.9" y="1235.0" width="49.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.9" y="1246.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (89 samples, 4.23%)</title><rect x="392.9" y="1219.0" width="49.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="395.9" y="1230.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (89 samples, 4.23%)</title><rect x="392.9" y="1203.0" width="49.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="395.9" y="1214.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (89 samples, 4.23%)</title><rect x="392.9" y="1187.0" width="49.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.9" y="1198.0">one/n..</text>
</g>
<g>
<title>send (88 samples, 4.18%)</title><rect x="393.4" y="1171.0" width="49.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="396.4" y="1182.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 4.18%)</title><rect x="393.4" y="1155.0" width="49.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="396.4" y="1166.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (88 samples, 4.18%)</title><rect x="393.4" y="1139.0" width="49.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="396.4" y="1150.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (86 samples, 4.09%)</title><rect x="394.0" y="1123.0" width="48.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.0" y="1134.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (86 samples, 4.09%)</title><rect x="394.0" y="1107.0" width="48.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.0" y="1118.0">__sy..</text>
</g>
<g>
<title>__fdget (1 samples, 0.05%)</title><rect x="394.0" y="1091.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.0" y="1102.0"></text>
</g>
<g>
<title>sock_sendmsg (83 samples, 3.94%)</title><rect x="394.6" y="1091.0" width="46.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.6" y="1102.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (83 samples, 3.94%)</title><rect x="394.6" y="1075.0" width="46.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.6" y="1086.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 3.90%)</title><rect x="395.1" y="1059.0" width="46.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="398.1" y="1070.0">tcp_..</text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="395.1" y="1043.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="398.1" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="395.7" y="1043.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="398.7" y="1054.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.05%)</title><rect x="396.2" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="399.2" y="1054.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.05%)</title><rect x="396.8" y="1043.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="399.8" y="1054.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (77 samples, 3.66%)</title><rect x="397.4" y="1043.0" width="43.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.4" y="1054.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.14%)</title><rect x="397.9" y="1027.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="400.9" y="1038.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.14%)</title><rect x="397.9" y="1011.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.9" y="1022.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.10%)</title><rect x="397.9" y="995.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="400.9" y="1006.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.10%)</title><rect x="397.9" y="979.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="400.9" y="990.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="398.5" y="963.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="401.5" y="974.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.05%)</title><rect x="399.0" y="995.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="402.0" y="1006.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.05%)</title><rect x="399.0" y="979.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="402.0" y="990.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.10%)</title><rect x="399.6" y="1027.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="402.6" y="1038.0"></text>
</g>
<g>
<title>tcp_push (71 samples, 3.37%)</title><rect x="400.7" y="1027.0" width="39.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="403.7" y="1038.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (70 samples, 3.33%)</title><rect x="400.7" y="1011.0" width="39.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="403.7" y="1022.0">__t..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.05%)</title><rect x="400.7" y="995.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="403.7" y="1006.0"></text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 3.28%)</title><rect x="401.3" y="995.0" width="38.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="404.3" y="1006.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (65 samples, 3.09%)</title><rect x="401.8" y="979.0" width="36.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="404.8" y="990.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (63 samples, 2.99%)</title><rect x="401.8" y="963.0" width="35.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="404.8" y="974.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (61 samples, 2.90%)</title><rect x="403.0" y="947.0" width="34.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="406.0" y="958.0">__..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="403.5" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="406.5" y="942.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="403.5" y="915.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.5" y="926.0"></text>
</g>
<g>
<title>ip_local_out (58 samples, 2.76%)</title><rect x="404.1" y="931.0" width="32.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="407.1" y="942.0">ip..</text>
</g>
<g>
<title>ip_output (58 samples, 2.76%)</title><rect x="404.1" y="915.0" width="32.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="407.1" y="926.0">ip..</text>
</g>
<g>
<title>ip_finish_output (58 samples, 2.76%)</title><rect x="404.1" y="899.0" width="32.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="407.1" y="910.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (58 samples, 2.76%)</title><rect x="404.1" y="883.0" width="32.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="407.1" y="894.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (58 samples, 2.76%)</title><rect x="404.1" y="867.0" width="32.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="407.1" y="878.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (54 samples, 2.57%)</title><rect x="404.6" y="851.0" width="30.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="407.6" y="862.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (53 samples, 2.52%)</title><rect x="405.2" y="835.0" width="29.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="408.2" y="846.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (53 samples, 2.52%)</title><rect x="405.2" y="819.0" width="29.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="408.2" y="830.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (53 samples, 2.52%)</title><rect x="405.2" y="803.0" width="29.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="408.2" y="814.0">__..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="405.8" y="787.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.8" y="798.0"></text>
</g>
<g>
<title>net_rx_action (51 samples, 2.42%)</title><rect x="406.3" y="787.0" width="28.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.3" y="798.0">ne..</text>
</g>
<g>
<title>process_backlog (50 samples, 2.38%)</title><rect x="406.9" y="771.0" width="28.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="409.9" y="782.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (50 samples, 2.38%)</title><rect x="406.9" y="755.0" width="28.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="409.9" y="766.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (50 samples, 2.38%)</title><rect x="406.9" y="739.0" width="28.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="409.9" y="750.0">__..</text>
</g>
<g>
<title>ip_rcv (50 samples, 2.38%)</title><rect x="406.9" y="723.0" width="28.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="409.9" y="734.0">ip..</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.05%)</title><rect x="406.9" y="707.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="409.9" y="718.0"></text>
</g>
<g>
<title>ip_rcv_finish (49 samples, 2.33%)</title><rect x="407.4" y="707.0" width="27.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="410.4" y="718.0">i..</text>
</g>
<g>
<title>ip_local_deliver (49 samples, 2.33%)</title><rect x="407.4" y="691.0" width="27.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="410.4" y="702.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (49 samples, 2.33%)</title><rect x="407.4" y="675.0" width="27.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.4" y="686.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (49 samples, 2.33%)</title><rect x="407.4" y="659.0" width="27.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="410.4" y="670.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 2.33%)</title><rect x="407.4" y="643.0" width="27.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.4" y="654.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.14%)</title><rect x="408.0" y="627.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="411.0" y="638.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.05%)</title><rect x="409.7" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.7" y="638.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 2.09%)</title><rect x="410.2" y="627.0" width="24.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.2" y="638.0">t..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="410.2" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="413.2" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (43 samples, 2.04%)</title><rect x="410.8" y="611.0" width="24.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="413.8" y="622.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.10%)</title><rect x="411.9" y="595.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="414.9" y="606.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.10%)</title><rect x="411.9" y="579.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.9" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.10%)</title><rect x="411.9" y="563.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="414.9" y="574.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.10%)</title><rect x="411.9" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="414.9" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="411.9" y="531.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="414.9" y="542.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.05%)</title><rect x="413.0" y="595.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.0" y="606.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.43%)</title><rect x="413.6" y="595.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="416.6" y="606.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.29%)</title><rect x="415.3" y="579.0" width="3.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.3" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.14%)</title><rect x="416.4" y="563.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="419.4" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="416.4" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="419.4" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.05%)</title><rect x="416.4" y="531.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.4" y="542.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.10%)</title><rect x="417.0" y="547.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="420.0" y="558.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.10%)</title><rect x="417.0" y="531.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="420.0" y="542.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.05%)</title><rect x="417.5" y="515.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="420.5" y="526.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.05%)</title><rect x="417.5" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="420.5" y="510.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="418.1" y="563.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="421.1" y="574.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="418.7" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="421.7" y="606.0"></text>
</g>
<g>
<title>tcp_data_ready (27 samples, 1.28%)</title><rect x="419.2" y="595.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.2" y="606.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 1.28%)</title><rect x="419.2" y="579.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="422.2" y="590.0"></text>
</g>
<g>
<title>__wake_up_sync_key (27 samples, 1.28%)</title><rect x="419.2" y="563.0" width="15.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="422.2" y="574.0"></text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 1.28%)</title><rect x="419.2" y="547.0" width="15.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.2" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (27 samples, 1.28%)</title><rect x="419.2" y="531.0" width="15.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="422.2" y="542.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.05%)</title><rect x="434.4" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="437.4" y="606.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.14%)</title><rect x="434.9" y="851.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.9" y="862.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.14%)</title><rect x="434.9" y="835.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="437.9" y="846.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.05%)</title><rect x="435.5" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.5" y="830.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="435.5" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.5" y="814.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="436.0" y="819.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="439.0" y="830.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.05%)</title><rect x="436.6" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.6" y="942.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.10%)</title><rect x="437.2" y="963.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="440.2" y="974.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="437.2" y="947.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="440.2" y="958.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="437.7" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="440.7" y="958.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="438.3" y="979.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="441.3" y="990.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="438.8" y="979.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.8" y="990.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="439.4" y="979.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="442.4" y="990.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.05%)</title><rect x="440.0" y="1011.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.0" y="1022.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="440.5" y="1043.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="443.5" y="1054.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.10%)</title><rect x="441.1" y="1091.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.1" y="1102.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="441.1" y="1075.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="444.1" y="1086.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="441.1" y="1059.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="444.1" y="1070.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="441.1" y="1043.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.1" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="442.2" y="1123.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="445.2" y="1134.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="442.2" y="1107.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="445.2" y="1118.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="442.2" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="445.2" y="1102.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="442.2" y="1075.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="445.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="442.8" y="1251.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.8" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="442.8" y="1235.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="445.8" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="442.8" y="1219.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.8" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="442.8" y="1203.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.8" y="1214.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="443.3" y="1331.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="446.3" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$136/2054529164.apply (1 samples, 0.05%)</title><rect x="443.9" y="1363.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.9" y="1374.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$proxy$3 (1 samples, 0.05%)</title><rect x="443.9" y="1347.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.9" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$145/1854348690.apply (17 samples, 0.81%)</title><rect x="444.4" y="1363.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.4" y="1374.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (17 samples, 0.81%)</title><rect x="444.4" y="1347.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.4" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (16 samples, 0.76%)</title><rect x="445.0" y="1331.0" width="9.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.0" y="1342.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.19%)</title><rect x="446.1" y="1315.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (1 samples, 0.05%)</title><rect x="446.1" y="1299.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.1" y="1310.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (1 samples, 0.05%)</title><rect x="446.1" y="1283.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.1" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.14%)</title><rect x="446.7" y="1299.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="449.7" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.14%)</title><rect x="446.7" y="1283.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.7" y="1294.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="447.8" y="1267.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="450.8" y="1278.0"></text>
</g>
<g>
<title>java/util/Optional.map (1 samples, 0.05%)</title><rect x="448.4" y="1315.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.4" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$312/103219410.apply (1 samples, 0.05%)</title><rect x="448.4" y="1299.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.4" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$2 (1 samples, 0.05%)</title><rect x="448.4" y="1283.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.4" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampByData (1 samples, 0.05%)</title><rect x="448.4" y="1267.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="451.4" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.05%)</title><rect x="448.4" y="1251.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="451.4" y="1262.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="448.4" y="1235.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="451.4" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (8 samples, 0.38%)</title><rect x="448.9" y="1315.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="451.9" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (8 samples, 0.38%)</title><rect x="448.9" y="1299.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.9" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.38%)</title><rect x="448.9" y="1283.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.9" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="448.9" y="1267.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="451.9" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (7 samples, 0.33%)</title><rect x="449.5" y="1267.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.5" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.33%)</title><rect x="449.5" y="1251.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="452.5" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (7 samples, 0.33%)</title><rect x="449.5" y="1235.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="452.5" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="450.0" y="1219.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="453.0" y="1230.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (5 samples, 0.24%)</title><rect x="450.6" y="1219.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.6" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (5 samples, 0.24%)</title><rect x="450.6" y="1203.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.6" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (5 samples, 0.24%)</title><rect x="450.6" y="1187.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.6" y="1198.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$311/1711067505.apply (5 samples, 0.24%)</title><rect x="450.6" y="1171.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.6" y="1182.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (5 samples, 0.24%)</title><rect x="450.6" y="1155.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.6" y="1166.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/553540362.compare (5 samples, 0.24%)</title><rect x="450.6" y="1139.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.6" y="1150.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (5 samples, 0.24%)</title><rect x="450.6" y="1123.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$307/1071552911.applyAsLong (5 samples, 0.24%)</title><rect x="450.6" y="1107.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$1 (5 samples, 0.24%)</title><rect x="450.6" y="1091.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.24%)</title><rect x="450.6" y="1075.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.24%)</title><rect x="450.6" y="1059.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.14%)</title><rect x="451.7" y="1043.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.14%)</title><rect x="451.7" y="1027.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.05%)</title><rect x="452.3" y="1011.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.3" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="452.9" y="1011.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.9" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="452.9" y="995.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.9" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="452.9" y="979.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="455.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.05%)</title><rect x="453.4" y="1315.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.4" y="1326.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.05%)</title><rect x="453.4" y="1299.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="456.4" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="454.0" y="1363.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.0" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="454.0" y="1347.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.0" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="454.0" y="1331.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.19%)</title><rect x="454.5" y="1395.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.19%)</title><rect x="454.5" y="1379.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.19%)</title><rect x="454.5" y="1363.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.19%)</title><rect x="454.5" y="1347.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.5" y="1358.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="454.5" y="1331.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="457.5" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="455.1" y="1315.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="458.1" y="1326.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="455.1" y="1299.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.1" y="1310.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="455.1" y="1283.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="458.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (1 samples, 0.05%)</title><rect x="455.7" y="1331.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.7" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="456.2" y="1331.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="459.2" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="456.2" y="1315.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="459.2" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="456.2" y="1299.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="459.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (190 samples, 9.03%)</title><rect x="456.8" y="1395.0" width="106.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.8" y="1406.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (134 samples, 6.37%)</title><rect x="457.3" y="1379.0" width="75.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="460.3" y="1390.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (83 samples, 3.94%)</title><rect x="458.5" y="1363.0" width="46.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.5" y="1374.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (15 samples, 0.71%)</title><rect x="459.0" y="1347.0" width="8.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.71%)</title><rect x="459.0" y="1331.0" width="8.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.67%)</title><rect x="459.6" y="1315.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.67%)</title><rect x="459.6" y="1299.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.05%)</title><rect x="459.6" y="1283.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.6" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="459.6" y="1267.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.6" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="459.6" y="1251.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.6" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="459.6" y="1235.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.62%)</title><rect x="460.1" y="1283.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.1" y="1294.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="460.1" y="1267.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="463.1" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.57%)</title><rect x="460.7" y="1267.0" width="6.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="463.7" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.52%)</title><rect x="461.3" y="1251.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.3" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.52%)</title><rect x="461.3" y="1235.0" width="6.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="464.3" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.52%)</title><rect x="461.3" y="1219.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="464.3" y="1230.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.52%)</title><rect x="461.3" y="1203.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="464.3" y="1214.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.52%)</title><rect x="461.3" y="1187.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="464.3" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.48%)</title><rect x="461.8" y="1171.0" width="5.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="464.8" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.48%)</title><rect x="461.8" y="1155.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="464.8" y="1166.0"></text>
</g>
<g>
<title>__lock_text_start (10 samples, 0.48%)</title><rect x="461.8" y="1139.0" width="5.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (66 samples, 3.14%)</title><rect x="467.4" y="1347.0" width="37.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.4" y="1358.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (64 samples, 3.04%)</title><rect x="468.5" y="1331.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.5" y="1342.0">jdk..</text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.52%)</title><rect x="469.1" y="1315.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="472.1" y="1326.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="470.2" y="1299.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="473.2" y="1310.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.24%)</title><rect x="470.8" y="1299.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="473.8" y="1310.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="471.9" y="1283.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="474.9" y="1294.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="472.5" y="1283.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="475.5" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="473.0" y="1283.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.0" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="473.0" y="1267.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="476.0" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="473.0" y="1251.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.0" y="1262.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.05%)</title><rect x="473.6" y="1299.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="476.6" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="473.6" y="1283.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.6" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="473.6" y="1267.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="476.6" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="473.6" y="1251.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="476.6" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="474.2" y="1299.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="477.2" y="1310.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="474.7" y="1299.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="477.7" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="474.7" y="1283.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="477.7" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="474.7" y="1267.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.7" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="474.7" y="1251.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.7" y="1262.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="474.7" y="1235.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.7" y="1246.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="474.7" y="1219.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="477.7" y="1230.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="474.7" y="1203.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="477.7" y="1214.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="474.7" y="1187.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="477.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 2.38%)</title><rect x="475.3" y="1315.0" width="28.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="478.3" y="1326.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.10%)</title><rect x="475.3" y="1299.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="478.3" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_wait (45 samples, 2.14%)</title><rect x="476.4" y="1299.0" width="25.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="479.4" y="1310.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.76%)</title><rect x="480.9" y="1283.0" width="20.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.9" y="1294.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="480.9" y="1267.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.9" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.71%)</title><rect x="481.4" y="1267.0" width="20.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.4" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (36 samples, 1.71%)</title><rect x="481.4" y="1251.0" width="20.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="484.4" y="1262.0"></text>
</g>
<g>
<title>do_futex (35 samples, 1.66%)</title><rect x="482.0" y="1235.0" width="19.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.0" y="1246.0"></text>
</g>
<g>
<title>futex_wait (35 samples, 1.66%)</title><rect x="482.0" y="1219.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="485.0" y="1230.0"></text>
</g>
<g>
<title>futex_wait_queue_me (28 samples, 1.33%)</title><rect x="483.1" y="1203.0" width="15.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.1" y="1214.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="484.2" y="1187.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.2" y="1198.0"></text>
</g>
<g>
<title>schedule (25 samples, 1.19%)</title><rect x="484.8" y="1187.0" width="14.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.8" y="1198.0"></text>
</g>
<g>
<title>__schedule (24 samples, 1.14%)</title><rect x="485.4" y="1171.0" width="13.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="488.4" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 1.14%)</title><rect x="485.4" y="1155.0" width="13.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.4" y="1166.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.19%)</title><rect x="498.8" y="1203.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="501.8" y="1214.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.05%)</title><rect x="500.5" y="1187.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="503.5" y="1198.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="501.1" y="1203.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="504.1" y="1214.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.10%)</title><rect x="501.6" y="1299.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="504.6" y="1310.0"></text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.05%)</title><rect x="502.7" y="1299.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="505.7" y="1310.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.10%)</title><rect x="503.3" y="1315.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="506.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="504.4" y="1347.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.05%)</title><rect x="505.0" y="1363.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.05%)</title><rect x="505.0" y="1347.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.05%)</title><rect x="505.0" y="1331.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (48 samples, 2.28%)</title><rect x="505.5" y="1363.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.5" y="1374.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (48 samples, 2.28%)</title><rect x="505.5" y="1347.0" width="27.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="508.5" y="1358.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (48 samples, 2.28%)</title><rect x="505.5" y="1331.0" width="27.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="508.5" y="1342.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (48 samples, 2.28%)</title><rect x="505.5" y="1315.0" width="27.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.5" y="1326.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 2.28%)</title><rect x="505.5" y="1299.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="1310.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.19%)</title><rect x="505.5" y="1283.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="508.5" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="505.5" y="1267.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="508.5" y="1278.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.10%)</title><rect x="506.7" y="1267.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="509.7" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 2.09%)</title><rect x="507.8" y="1283.0" width="24.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="510.8" y="1294.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 2.04%)</title><rect x="508.3" y="1267.0" width="24.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.3" y="1278.0">e..</text>
</g>
<g>
<title>do_syscall_64 (43 samples, 2.04%)</title><rect x="508.3" y="1251.0" width="24.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.3" y="1262.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 2.04%)</title><rect x="508.3" y="1235.0" width="24.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="511.3" y="1246.0">_..</text>
</g>
<g>
<title>do_futex (43 samples, 2.04%)</title><rect x="508.3" y="1219.0" width="24.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.3" y="1230.0">d..</text>
</g>
<g>
<title>futex_wake (42 samples, 2.00%)</title><rect x="508.9" y="1203.0" width="23.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="511.9" y="1214.0">f..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.10%)</title><rect x="510.6" y="1187.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="513.6" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 1.76%)</title><rect x="511.7" y="1187.0" width="20.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.7" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 1.76%)</title><rect x="511.7" y="1171.0" width="20.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.7" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (37 samples, 1.76%)</title><rect x="511.7" y="1155.0" width="20.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="514.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (54 samples, 2.57%)</title><rect x="532.5" y="1379.0" width="30.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.5" y="1390.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (29 samples, 1.38%)</title><rect x="533.0" y="1363.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (3 samples, 0.14%)</title><rect x="533.0" y="1347.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.14%)</title><rect x="533.0" y="1331.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="536.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="533.6" y="1315.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="533.6" y="1299.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="536.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.10%)</title><rect x="533.6" y="1283.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.6" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.10%)</title><rect x="533.6" y="1267.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="536.6" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="533.6" y="1251.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="536.6" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="533.6" y="1235.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.6" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="533.6" y="1219.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="536.6" y="1230.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="533.6" y="1203.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="536.6" y="1214.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="533.6" y="1187.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.6" y="1198.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.10%)</title><rect x="533.6" y="1171.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.6" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.10%)</title><rect x="533.6" y="1155.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="536.6" y="1166.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="533.6" y="1139.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="536.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 1.24%)</title><rect x="534.7" y="1347.0" width="14.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (26 samples, 1.24%)</title><rect x="534.7" y="1331.0" width="14.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.7" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.10%)</title><rect x="534.7" y="1315.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="537.7" y="1326.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="534.7" y="1299.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="537.7" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="534.7" y="1283.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="537.7" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="534.7" y="1267.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="537.7" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="534.7" y="1251.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="537.7" y="1262.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.05%)</title><rect x="535.3" y="1299.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="538.3" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="535.3" y="1283.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="538.3" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="535.3" y="1267.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="538.3" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="535.3" y="1251.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="538.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 1.05%)</title><rect x="535.8" y="1315.0" width="12.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="538.8" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_wait (22 samples, 1.05%)</title><rect x="535.8" y="1299.0" width="12.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="538.8" y="1310.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.81%)</title><rect x="538.6" y="1283.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="541.6" y="1294.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.81%)</title><rect x="538.6" y="1267.0" width="9.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="541.6" y="1278.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.76%)</title><rect x="539.2" y="1251.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.2" y="1262.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.76%)</title><rect x="539.2" y="1235.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="542.2" y="1246.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.71%)</title><rect x="539.7" y="1219.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="542.7" y="1230.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.67%)</title><rect x="540.3" y="1203.0" width="7.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.3" y="1214.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.62%)</title><rect x="540.9" y="1187.0" width="7.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="543.9" y="1198.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.62%)</title><rect x="540.9" y="1171.0" width="7.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.9" y="1182.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.62%)</title><rect x="540.9" y="1155.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="543.9" y="1166.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.10%)</title><rect x="548.1" y="1315.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="551.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="549.3" y="1363.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.3" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="549.3" y="1347.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.3" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="549.3" y="1331.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="552.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.10%)</title><rect x="549.8" y="1363.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.10%)</title><rect x="549.8" y="1347.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.10%)</title><rect x="549.8" y="1331.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="549.8" y="1315.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="549.8" y="1299.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="549.8" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.8" y="1294.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="549.8" y="1267.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="552.8" y="1278.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="549.8" y="1251.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="552.8" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="549.8" y="1235.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="552.8" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="549.8" y="1219.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="552.8" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="549.8" y="1203.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="552.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.05%)</title><rect x="550.4" y="1315.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (19 samples, 0.90%)</title><rect x="551.0" y="1363.0" width="10.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="554.0" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.90%)</title><rect x="551.0" y="1347.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="554.0" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.90%)</title><rect x="551.0" y="1331.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.90%)</title><rect x="551.0" y="1315.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="554.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.71%)</title><rect x="552.6" y="1299.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.6" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.10%)</title><rect x="552.6" y="1283.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="555.6" y="1294.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="552.6" y="1267.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="555.6" y="1278.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="553.2" y="1267.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="556.2" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="553.2" y="1251.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="556.2" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="553.2" y="1235.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="556.2" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="553.2" y="1219.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.2" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.62%)</title><rect x="553.8" y="1283.0" width="7.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="556.8" y="1294.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.62%)</title><rect x="553.8" y="1267.0" width="7.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="556.8" y="1278.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.62%)</title><rect x="553.8" y="1251.0" width="7.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.8" y="1262.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.57%)</title><rect x="554.3" y="1235.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="557.3" y="1246.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.57%)</title><rect x="554.3" y="1219.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="557.3" y="1230.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.57%)</title><rect x="554.3" y="1203.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="557.3" y="1214.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.52%)</title><rect x="554.9" y="1187.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="557.9" y="1198.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.52%)</title><rect x="554.9" y="1171.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="557.9" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.52%)</title><rect x="554.9" y="1155.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="557.9" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="561.0" y="1299.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="564.0" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="561.0" y="1283.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.0" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="561.0" y="1267.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.0" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="561.6" y="1363.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="564.6" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="561.6" y="1347.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="564.6" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="561.6" y="1331.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="564.6" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="562.7" y="1379.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="565.7" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="562.7" y="1363.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="565.7" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="562.7" y="1347.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="565.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (203 samples, 9.64%)</title><rect x="563.3" y="1395.0" width="113.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.3" y="1406.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (203 samples, 9.64%)</title><rect x="563.3" y="1379.0" width="113.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.3" y="1390.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (203 samples, 9.64%)</title><rect x="563.3" y="1363.0" width="113.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.3" y="1374.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (200 samples, 9.50%)</title><rect x="563.8" y="1347.0" width="112.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.8" y="1358.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (200 samples, 9.50%)</title><rect x="563.8" y="1331.0" width="112.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="566.8" y="1342.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (200 samples, 9.50%)</title><rect x="563.8" y="1315.0" width="112.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="566.8" y="1326.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (198 samples, 9.41%)</title><rect x="564.4" y="1299.0" width="111.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.4" y="1310.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="564.4" y="1283.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="564.4" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="564.4" y="1251.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="564.4" y="1235.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="564.4" y="1219.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.4" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="564.4" y="1203.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="567.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (197 samples, 9.36%)</title><rect x="565.0" y="1283.0" width="110.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.0" y="1294.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (197 samples, 9.36%)</title><rect x="565.0" y="1267.0" width="110.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.0" y="1278.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (196 samples, 9.31%)</title><rect x="565.5" y="1251.0" width="109.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.5" y="1262.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (196 samples, 9.31%)</title><rect x="565.5" y="1235.0" width="109.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.5" y="1246.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (22 samples, 1.05%)</title><rect x="565.5" y="1219.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="568.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (19 samples, 0.90%)</title><rect x="565.5" y="1203.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (19 samples, 0.90%)</title><rect x="565.5" y="1187.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (19 samples, 0.90%)</title><rect x="565.5" y="1171.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.90%)</title><rect x="565.5" y="1155.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.38%)</title><rect x="566.1" y="1139.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/2129579493.apply (2 samples, 0.10%)</title><rect x="566.6" y="1123.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.6" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="567.2" y="1107.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="570.2" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="567.2" y="1091.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.2" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="567.2" y="1075.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="570.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (5 samples, 0.24%)</title><rect x="567.8" y="1123.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.24%)</title><rect x="567.8" y="1107.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="570.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (5 samples, 0.24%)</title><rect x="567.8" y="1091.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5 samples, 0.24%)</title><rect x="567.8" y="1075.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5 samples, 0.24%)</title><rect x="567.8" y="1059.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.24%)</title><rect x="567.8" y="1043.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (5 samples, 0.24%)</title><rect x="567.8" y="1027.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5 samples, 0.24%)</title><rect x="567.8" y="1011.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (5 samples, 0.24%)</title><rect x="567.8" y="995.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (5 samples, 0.24%)</title><rect x="567.8" y="979.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.24%)</title><rect x="567.8" y="963.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.24%)</title><rect x="567.8" y="947.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.24%)</title><rect x="567.8" y="931.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.24%)</title><rect x="567.8" y="915.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (5 samples, 0.24%)</title><rect x="567.8" y="899.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (5 samples, 0.24%)</title><rect x="567.8" y="883.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (5 samples, 0.24%)</title><rect x="567.8" y="867.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.8" y="878.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (5 samples, 0.24%)</title><rect x="567.8" y="851.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.8" y="862.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (5 samples, 0.24%)</title><rect x="567.8" y="835.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.24%)</title><rect x="567.8" y="819.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.8" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.19%)</title><rect x="567.8" y="803.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.19%)</title><rect x="567.8" y="787.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.8" y="798.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.19%)</title><rect x="567.8" y="771.0" width="2.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="570.8" y="782.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.19%)</title><rect x="567.8" y="755.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="570.8" y="766.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (4 samples, 0.19%)</title><rect x="567.8" y="739.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="570.8" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.05%)</title><rect x="567.8" y="723.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="570.8" y="734.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.14%)</title><rect x="568.3" y="723.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="571.3" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.05%)</title><rect x="568.3" y="707.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="571.3" y="718.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="568.3" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="571.3" y="702.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="568.9" y="707.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="571.9" y="718.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="568.9" y="691.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.9" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="568.9" y="675.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="571.9" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="569.4" y="707.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="572.4" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="569.4" y="691.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.4" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="569.4" y="675.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="572.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.toString (1 samples, 0.05%)</title><rect x="570.0" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="573.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.05%)</title><rect x="570.0" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="573.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.19%)</title><rect x="570.6" y="1139.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.10%)</title><rect x="571.1" y="1123.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1550627049.apply (2 samples, 0.10%)</title><rect x="571.1" y="1107.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.10%)</title><rect x="571.1" y="1091.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.10%)</title><rect x="571.1" y="1075.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.apply (1 samples, 0.05%)</title><rect x="571.1" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.05%)</title><rect x="571.1" y="1043.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.05%)</title><rect x="571.1" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="571.1" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.05%)</title><rect x="571.1" y="995.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="571.1" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="571.1" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.05%)</title><rect x="571.1" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.1" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="571.1" y="931.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="574.1" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="571.1" y="915.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="574.1" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="571.1" y="899.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="574.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (1 samples, 0.05%)</title><rect x="571.7" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.05%)</title><rect x="571.7" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.05%)</title><rect x="571.7" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.apply (1 samples, 0.05%)</title><rect x="571.7" y="1011.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.7" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="571.7" y="995.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.7" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="571.7" y="979.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="574.7" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="571.7" y="963.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="574.7" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="572.3" y="1123.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.3" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="572.3" y="1107.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="575.3" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="572.3" y="1091.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="575.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.05%)</title><rect x="572.8" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.8" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="572.8" y="1123.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="575.8" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="572.8" y="1107.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="575.8" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="572.8" y="1091.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="575.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.14%)</title><rect x="573.4" y="1139.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="573.4" y="1123.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.10%)</title><rect x="573.4" y="1107.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.10%)</title><rect x="573.4" y="1091.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="576.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.10%)</title><rect x="573.4" y="1075.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="576.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.10%)</title><rect x="573.4" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.10%)</title><rect x="573.4" y="1043.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.10%)</title><rect x="573.4" y="1027.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.10%)</title><rect x="573.4" y="1011.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.4" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.10%)</title><rect x="573.4" y="995.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="576.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="573.4" y="979.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="576.4" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="573.4" y="963.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="576.4" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="573.4" y="947.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="576.4" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="573.4" y="931.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="576.4" y="942.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.10%)</title><rect x="573.4" y="915.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.4" y="926.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.10%)</title><rect x="573.4" y="899.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="576.4" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.10%)</title><rect x="573.4" y="883.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="576.4" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="573.4" y="867.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="576.4" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="574.5" y="1123.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="577.5" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="574.5" y="1107.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="577.5" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="574.5" y="1091.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="577.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$258/1749464899.get (1 samples, 0.05%)</title><rect x="575.1" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.1" y="1150.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="575.6" y="1139.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="578.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.14%)</title><rect x="576.2" y="1203.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.14%)</title><rect x="576.2" y="1187.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.10%)</title><rect x="576.7" y="1171.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="579.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.10%)</title><rect x="576.7" y="1155.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.7" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="577.3" y="1139.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.3" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="577.3" y="1123.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="580.3" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="577.3" y="1107.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.05%)</title><rect x="577.9" y="1219.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="580.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.05%)</title><rect x="577.9" y="1203.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.05%)</title><rect x="577.9" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.9" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="577.9" y="1171.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.9" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="577.9" y="1155.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="580.9" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="577.9" y="1139.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="580.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (173 samples, 8.22%)</title><rect x="578.4" y="1219.0" width="97.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.4" y="1230.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (173 samples, 8.22%)</title><rect x="578.4" y="1203.0" width="97.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.4" y="1214.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (173 samples, 8.22%)</title><rect x="578.4" y="1187.0" width="97.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.4" y="1198.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (173 samples, 8.22%)</title><rect x="578.4" y="1171.0" width="97.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="581.4" y="1182.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$264/1541613763.run (2 samples, 0.10%)</title><rect x="579.5" y="1155.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.10%)</title><rect x="579.5" y="1139.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.05%)</title><rect x="579.5" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (1 samples, 0.05%)</title><rect x="579.5" y="1107.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="579.5" y="1091.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.05%)</title><rect x="580.1" y="1123.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (168 samples, 7.98%)</title><rect x="580.7" y="1155.0" width="94.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.7" y="1166.0">jdk/interna..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (166 samples, 7.89%)</title><rect x="580.7" y="1139.0" width="93.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.7" y="1150.0">java/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (166 samples, 7.89%)</title><rect x="580.7" y="1123.0" width="93.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.7" y="1134.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (166 samples, 7.89%)</title><rect x="580.7" y="1107.0" width="93.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.7" y="1118.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (164 samples, 7.79%)</title><rect x="580.7" y="1091.0" width="91.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.7" y="1102.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.29%)</title><rect x="580.7" y="1075.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (6 samples, 0.29%)</title><rect x="580.7" y="1059.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.7" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.19%)</title><rect x="581.8" y="1043.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.8" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.19%)</title><rect x="581.8" y="1027.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="584.8" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.19%)</title><rect x="581.8" y="1011.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.8" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (158 samples, 7.51%)</title><rect x="584.0" y="1075.0" width="88.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.0" y="1086.0">sun/nio/ch..</text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="584.0" y="1059.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="587.0" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="584.0" y="1043.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="587.0" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="584.0" y="1027.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="587.0" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="584.0" y="1011.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="587.0" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (156 samples, 7.41%)</title><rect x="584.6" y="1059.0" width="87.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.6" y="1070.0">sun/nio/ch..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so (1 samples, 0.05%)</title><rect x="585.7" y="1043.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="588.7" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="585.7" y="1027.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.7" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="585.7" y="1011.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.7" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="585.7" y="995.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="588.7" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="586.3" y="1043.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="589.3" y="1054.0"></text>
</g>
<g>
<title>writev (152 samples, 7.22%)</title><rect x="586.8" y="1043.0" width="85.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="589.8" y="1054.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (150 samples, 7.13%)</title><rect x="587.4" y="1027.0" width="84.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="590.4" y="1038.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (150 samples, 7.13%)</title><rect x="587.4" y="1011.0" width="84.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="590.4" y="1022.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_writev (144 samples, 6.84%)</title><rect x="589.1" y="995.0" width="80.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.1" y="1006.0">__x64_sys..</text>
</g>
<g>
<title>do_writev (144 samples, 6.84%)</title><rect x="589.1" y="979.0" width="80.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.1" y="990.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.14%)</title><rect x="589.1" y="963.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="592.1" y="974.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.14%)</title><rect x="589.1" y="947.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="592.1" y="958.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.14%)</title><rect x="589.1" y="931.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.1" y="942.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="590.8" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="593.8" y="974.0"></text>
</g>
<g>
<title>vfs_writev (140 samples, 6.65%)</title><rect x="591.3" y="963.0" width="78.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="594.3" y="974.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (137 samples, 6.51%)</title><rect x="593.0" y="947.0" width="76.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="596.0" y="958.0">do_iter_..</text>
</g>
<g>
<title>do_iter_readv_writev (132 samples, 6.27%)</title><rect x="594.1" y="931.0" width="74.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="597.1" y="942.0">do_iter_..</text>
</g>
<g>
<title>sock_write_iter (132 samples, 6.27%)</title><rect x="594.1" y="915.0" width="74.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="597.1" y="926.0">sock_wri..</text>
</g>
<g>
<title>sock_sendmsg (131 samples, 6.22%)</title><rect x="594.7" y="899.0" width="73.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="597.7" y="910.0">sock_sen..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.05%)</title><rect x="595.2" y="883.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="598.2" y="894.0"></text>
</g>
<g>
<title>inet6_sendmsg (129 samples, 6.13%)</title><rect x="595.8" y="883.0" width="72.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.8" y="894.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (127 samples, 6.03%)</title><rect x="596.9" y="867.0" width="71.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="599.9" y="878.0">tcp_send..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.05%)</title><rect x="596.9" y="851.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.14%)</title><rect x="597.5" y="851.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.5" y="862.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="599.2" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.2" y="862.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.05%)</title><rect x="599.2" y="835.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="602.2" y="846.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.05%)</title><rect x="599.7" y="851.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.7" y="862.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (120 samples, 5.70%)</title><rect x="600.3" y="851.0" width="67.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.3" y="862.0">tcp_sen..</text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.19%)</title><rect x="600.8" y="835.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.8" y="846.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.19%)</title><rect x="600.8" y="819.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="603.8" y="830.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.05%)</title><rect x="603.1" y="835.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="606.1" y="846.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.05%)</title><rect x="603.1" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="606.1" y="830.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.29%)</title><rect x="603.6" y="835.0" width="3.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="606.6" y="846.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.29%)</title><rect x="603.6" y="819.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.6" y="830.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (5 samples, 0.24%)</title><rect x="603.6" y="803.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="606.6" y="814.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.19%)</title><rect x="603.6" y="787.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="606.6" y="798.0"></text>
</g>
<g>
<title>__slab_alloc (3 samples, 0.14%)</title><rect x="604.2" y="771.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="607.2" y="782.0"></text>
</g>
<g>
<title>memset (1 samples, 0.05%)</title><rect x="605.9" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="608.9" y="798.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.05%)</title><rect x="606.4" y="803.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.4" y="814.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.05%)</title><rect x="606.4" y="787.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="609.4" y="798.0"></text>
</g>
<g>
<title>tcp_push (107 samples, 5.08%)</title><rect x="607.0" y="835.0" width="60.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.0" y="846.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (107 samples, 5.08%)</title><rect x="607.0" y="819.0" width="60.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.0" y="830.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (107 samples, 5.08%)</title><rect x="607.0" y="803.0" width="60.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.0" y="814.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (101 samples, 4.80%)</title><rect x="607.6" y="787.0" width="56.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="610.6" y="798.0">__tcp_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.05%)</title><rect x="608.7" y="771.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="611.7" y="782.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="609.2" y="771.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="612.2" y="782.0"></text>
</g>
<g>
<title>ip_queue_xmit (96 samples, 4.56%)</title><rect x="609.8" y="771.0" width="53.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="612.8" y="782.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (95 samples, 4.51%)</title><rect x="609.8" y="755.0" width="53.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="612.8" y="766.0">__ip_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.05%)</title><rect x="610.4" y="739.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="613.4" y="750.0"></text>
</g>
<g>
<title>ip_local_out (93 samples, 4.42%)</title><rect x="610.9" y="739.0" width="52.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="613.9" y="750.0">ip_lo..</text>
</g>
<g>
<title>ip_output (93 samples, 4.42%)</title><rect x="610.9" y="723.0" width="52.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="613.9" y="734.0">ip_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.05%)</title><rect x="611.5" y="707.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="614.5" y="718.0"></text>
</g>
<g>
<title>ip_finish_output (91 samples, 4.32%)</title><rect x="612.1" y="707.0" width="51.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="615.1" y="718.0">ip_fi..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.14%)</title><rect x="612.1" y="691.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="615.1" y="702.0"></text>
</g>
<g>
<title>__ip_finish_output (88 samples, 4.18%)</title><rect x="613.7" y="691.0" width="49.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.7" y="702.0">__ip_..</text>
</g>
<g>
<title>ip_finish_output2 (87 samples, 4.13%)</title><rect x="614.3" y="675.0" width="48.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="617.3" y="686.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (77 samples, 3.66%)</title><rect x="615.4" y="659.0" width="43.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="618.4" y="670.0">__lo..</text>
</g>
<g>
<title>do_softirq.part.0 (77 samples, 3.66%)</title><rect x="615.4" y="643.0" width="43.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="618.4" y="654.0">do_s..</text>
</g>
<g>
<title>do_softirq_own_stack (77 samples, 3.66%)</title><rect x="615.4" y="627.0" width="43.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="618.4" y="638.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (76 samples, 3.61%)</title><rect x="615.4" y="611.0" width="42.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="618.4" y="622.0">__so..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.05%)</title><rect x="616.0" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="619.0" y="606.0"></text>
</g>
<g>
<title>net_rx_action (74 samples, 3.52%)</title><rect x="616.5" y="595.0" width="41.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="619.5" y="606.0">net..</text>
</g>
<g>
<title>process_backlog (73 samples, 3.47%)</title><rect x="617.1" y="579.0" width="40.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.1" y="590.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (72 samples, 3.42%)</title><rect x="617.1" y="563.0" width="40.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="620.1" y="574.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (72 samples, 3.42%)</title><rect x="617.1" y="547.0" width="40.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.1" y="558.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.05%)</title><rect x="617.1" y="531.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.1" y="542.0"></text>
</g>
<g>
<title>ip_rcv (71 samples, 3.37%)</title><rect x="617.7" y="531.0" width="39.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.7" y="542.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (71 samples, 3.37%)</title><rect x="617.7" y="515.0" width="39.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="620.7" y="526.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (71 samples, 3.37%)</title><rect x="617.7" y="499.0" width="39.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="620.7" y="510.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (71 samples, 3.37%)</title><rect x="617.7" y="483.0" width="39.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="620.7" y="494.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (71 samples, 3.37%)</title><rect x="617.7" y="467.0" width="39.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="620.7" y="478.0">ip_..</text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="617.7" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.7" y="462.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.05%)</title><rect x="618.2" y="451.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="621.2" y="462.0"></text>
</g>
<g>
<title>tcp_v4_rcv (69 samples, 3.28%)</title><rect x="618.8" y="451.0" width="38.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="621.8" y="462.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.29%)</title><rect x="618.8" y="435.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="621.8" y="446.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.05%)</title><rect x="622.1" y="435.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="625.1" y="446.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.05%)</title><rect x="622.1" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="625.1" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (61 samples, 2.90%)</title><rect x="622.7" y="435.0" width="34.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="625.7" y="446.0">tc..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.05%)</title><rect x="622.7" y="419.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="625.7" y="430.0"></text>
</g>
<g>
<title>tcp_rcv_established (60 samples, 2.85%)</title><rect x="623.3" y="419.0" width="33.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="626.3" y="430.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.10%)</title><rect x="624.9" y="403.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="627.9" y="414.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.10%)</title><rect x="624.9" y="387.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="627.9" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.10%)</title><rect x="624.9" y="371.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="627.9" y="382.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.10%)</title><rect x="624.9" y="355.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="627.9" y="366.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="624.9" y="339.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="627.9" y="350.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.05%)</title><rect x="626.1" y="403.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="629.1" y="414.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.57%)</title><rect x="626.6" y="403.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.6" y="414.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.10%)</title><rect x="627.7" y="387.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.7" y="398.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.29%)</title><rect x="628.9" y="387.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="631.9" y="398.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.24%)</title><rect x="628.9" y="371.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="631.9" y="382.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.24%)</title><rect x="628.9" y="355.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.9" y="366.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.24%)</title><rect x="628.9" y="339.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.9" y="350.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.14%)</title><rect x="630.0" y="323.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.0" y="334.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.14%)</title><rect x="630.0" y="307.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.0" y="318.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.05%)</title><rect x="631.1" y="291.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.1" y="302.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.05%)</title><rect x="631.7" y="371.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="634.7" y="382.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.05%)</title><rect x="632.2" y="387.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="635.2" y="398.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.05%)</title><rect x="632.8" y="387.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="635.8" y="398.0"></text>
</g>
<g>
<title>tcp_data_ready (39 samples, 1.85%)</title><rect x="633.4" y="403.0" width="21.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="636.4" y="414.0">t..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.05%)</title><rect x="633.4" y="387.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="636.4" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (38 samples, 1.81%)</title><rect x="633.9" y="387.0" width="21.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.9" y="398.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (38 samples, 1.81%)</title><rect x="633.9" y="371.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="636.9" y="382.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (38 samples, 1.81%)</title><rect x="633.9" y="355.0" width="21.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="636.9" y="366.0">_..</text>
</g>
<g>
<title>__lock_text_start (38 samples, 1.81%)</title><rect x="633.9" y="339.0" width="21.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="636.9" y="350.0">_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.14%)</title><rect x="655.2" y="403.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.2" y="414.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.10%)</title><rect x="655.2" y="387.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.2" y="398.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="656.3" y="387.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.3" y="398.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.05%)</title><rect x="656.9" y="435.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.9" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.05%)</title><rect x="657.5" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="660.5" y="574.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.05%)</title><rect x="658.0" y="611.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="661.0" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.38%)</title><rect x="658.6" y="659.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="661.6" y="670.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.38%)</title><rect x="658.6" y="643.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="661.6" y="654.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.19%)</title><rect x="659.1" y="627.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="662.1" y="638.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="659.7" y="611.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.7" y="622.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="660.3" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="663.3" y="622.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.05%)</title><rect x="660.3" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="663.3" y="606.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.05%)</title><rect x="660.8" y="611.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="663.8" y="622.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.05%)</title><rect x="661.4" y="627.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="664.4" y="638.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.05%)</title><rect x="661.9" y="627.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.9" y="638.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.05%)</title><rect x="662.5" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="665.5" y="638.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.05%)</title><rect x="663.1" y="755.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.1" y="766.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.05%)</title><rect x="663.6" y="771.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="666.6" y="782.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.05%)</title><rect x="663.6" y="755.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="666.6" y="766.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.05%)</title><rect x="663.6" y="739.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="666.6" y="750.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.05%)</title><rect x="664.2" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="667.2" y="798.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.05%)</title><rect x="664.7" y="787.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="667.7" y="798.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.05%)</title><rect x="665.3" y="787.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.3" y="798.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.05%)</title><rect x="665.9" y="787.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="668.9" y="798.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.05%)</title><rect x="666.4" y="787.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="669.4" y="798.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.05%)</title><rect x="667.0" y="835.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="670.0" y="846.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.05%)</title><rect x="667.0" y="819.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="670.0" y="830.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="667.5" y="851.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="670.5" y="862.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.14%)</title><rect x="668.1" y="931.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="671.1" y="942.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.10%)</title><rect x="668.7" y="915.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="671.7" y="926.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.10%)</title><rect x="668.7" y="899.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="671.7" y="910.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.10%)</title><rect x="668.7" y="883.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="671.7" y="894.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="669.2" y="867.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="672.2" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="669.8" y="995.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="672.8" y="1006.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.14%)</title><rect x="669.8" y="979.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.8" y="990.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.14%)</title><rect x="669.8" y="963.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="672.8" y="974.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.14%)</title><rect x="669.8" y="947.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="672.8" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="671.5" y="1027.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="674.5" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="671.5" y="1011.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="674.5" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="671.5" y="995.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.5" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="672.0" y="1059.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="675.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="672.0" y="1043.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="675.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="672.0" y="1027.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="675.0" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="672.6" y="1091.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="675.6" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="672.6" y="1075.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="675.6" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="672.6" y="1059.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.6" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.10%)</title><rect x="673.7" y="1139.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="676.7" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="674.3" y="1123.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="677.3" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="674.3" y="1107.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.3" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="674.3" y="1091.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="677.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="674.8" y="1155.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="677.8" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="674.8" y="1139.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="677.8" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="674.8" y="1123.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="677.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.05%)</title><rect x="675.4" y="1299.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.4" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="675.4" y="1283.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.4" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="675.4" y="1267.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="678.4" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="675.4" y="1251.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="676.0" y="1347.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.0" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="676.5" y="1347.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.5" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="676.5" y="1331.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="679.5" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="676.5" y="1315.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="679.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (318 samples, 15.11%)</title><rect x="677.1" y="1395.0" width="178.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.1" y="1406.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (318 samples, 15.11%)</title><rect x="677.1" y="1379.0" width="178.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.1" y="1390.0">jdk/internal/net/http/c..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (113 samples, 5.37%)</title><rect x="677.1" y="1363.0" width="63.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.1" y="1374.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (113 samples, 5.37%)</title><rect x="677.1" y="1347.0" width="63.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.1" y="1358.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (112 samples, 5.32%)</title><rect x="677.6" y="1331.0" width="62.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.6" y="1342.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (21 samples, 1.00%)</title><rect x="677.6" y="1315.0" width="11.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (21 samples, 1.00%)</title><rect x="677.6" y="1299.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="680.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (21 samples, 1.00%)</title><rect x="677.6" y="1283.0" width="11.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="680.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (21 samples, 1.00%)</title><rect x="677.6" y="1267.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.95%)</title><rect x="677.6" y="1251.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (20 samples, 0.95%)</title><rect x="677.6" y="1235.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (20 samples, 0.95%)</title><rect x="677.6" y="1219.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="680.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (18 samples, 0.86%)</title><rect x="678.8" y="1203.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="681.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (18 samples, 0.86%)</title><rect x="678.8" y="1187.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.8" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="678.8" y="1171.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="681.8" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="678.8" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="681.8" y="1166.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.05%)</title><rect x="678.8" y="1139.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="681.8" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (17 samples, 0.81%)</title><rect x="679.3" y="1171.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.3" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (17 samples, 0.81%)</title><rect x="679.3" y="1155.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.3" y="1166.0"></text>
</g>
<g>
<title>__write (17 samples, 0.81%)</title><rect x="679.3" y="1139.0" width="9.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="682.3" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.81%)</title><rect x="679.3" y="1123.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.3" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.81%)</title><rect x="679.3" y="1107.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="682.3" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_write (17 samples, 0.81%)</title><rect x="679.3" y="1091.0" width="9.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.3" y="1102.0"></text>
</g>
<g>
<title>ksys_write (17 samples, 0.81%)</title><rect x="679.3" y="1075.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="682.3" y="1086.0"></text>
</g>
<g>
<title>vfs_write (16 samples, 0.76%)</title><rect x="679.9" y="1059.0" width="9.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="682.9" y="1070.0"></text>
</g>
<g>
<title>__vfs_write (16 samples, 0.76%)</title><rect x="679.9" y="1043.0" width="9.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="682.9" y="1054.0"></text>
</g>
<g>
<title>new_sync_write (16 samples, 0.76%)</title><rect x="679.9" y="1027.0" width="9.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="682.9" y="1038.0"></text>
</g>
<g>
<title>pipe_write (16 samples, 0.76%)</title><rect x="679.9" y="1011.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="682.9" y="1022.0"></text>
</g>
<g>
<title>__wake_up_sync_key (14 samples, 0.67%)</title><rect x="679.9" y="995.0" width="7.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="682.9" y="1006.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.67%)</title><rect x="679.9" y="979.0" width="7.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="682.9" y="990.0"></text>
</g>
<g>
<title>__lock_text_start (14 samples, 0.67%)</title><rect x="679.9" y="963.0" width="7.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="682.9" y="974.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.10%)</title><rect x="687.7" y="995.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="690.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.05%)</title><rect x="688.9" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.9" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="688.9" y="1235.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="691.9" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="688.9" y="1219.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="691.9" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="688.9" y="1203.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (91 samples, 4.32%)</title><rect x="689.4" y="1315.0" width="51.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="692.4" y="1326.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (90 samples, 4.28%)</title><rect x="690.0" y="1299.0" width="50.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.0" y="1310.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (90 samples, 4.28%)</title><rect x="690.0" y="1283.0" width="50.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="693.0" y="1294.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (90 samples, 4.28%)</title><rect x="690.0" y="1267.0" width="50.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.0" y="1278.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (62 samples, 2.95%)</title><rect x="690.0" y="1251.0" width="34.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.0" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (62 samples, 2.95%)</title><rect x="690.0" y="1235.0" width="34.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.0" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (62 samples, 2.95%)</title><rect x="690.0" y="1219.0" width="34.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.0" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (61 samples, 2.90%)</title><rect x="690.0" y="1203.0" width="34.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="693.0" y="1214.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (61 samples, 2.90%)</title><rect x="690.0" y="1187.0" width="34.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.0" y="1198.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (60 samples, 2.85%)</title><rect x="690.0" y="1171.0" width="33.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.0" y="1182.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (60 samples, 2.85%)</title><rect x="690.0" y="1155.0" width="33.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.0" y="1166.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (60 samples, 2.85%)</title><rect x="690.0" y="1139.0" width="33.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.0" y="1150.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (59 samples, 2.80%)</title><rect x="690.5" y="1123.0" width="33.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.5" y="1134.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (50 samples, 2.38%)</title><rect x="690.5" y="1107.0" width="28.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="693.5" y="1118.0">ja..</text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="690.5" y="1091.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="693.5" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="691.1" y="1075.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="694.1" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="691.1" y="1059.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="694.1" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="691.1" y="1043.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="694.1" y="1054.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/1857815974.apply (1 samples, 0.05%)</title><rect x="691.7" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="694.7" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="691.7" y="1075.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="694.7" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="691.7" y="1059.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.7" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="691.7" y="1043.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="694.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (36 samples, 1.71%)</title><rect x="692.2" y="1091.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (36 samples, 1.71%)</title><rect x="692.2" y="1075.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.05%)</title><rect x="693.3" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="696.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.05%)</title><rect x="693.3" y="1043.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="693.3" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.3" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="693.3" y="1011.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="696.3" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="693.3" y="995.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="696.3" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="693.3" y="979.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (33 samples, 1.57%)</title><rect x="693.9" y="1059.0" width="18.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (31 samples, 1.47%)</title><rect x="695.0" y="1043.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (31 samples, 1.47%)</title><rect x="695.0" y="1027.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.0" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (11 samples, 0.52%)</title><rect x="695.0" y="1011.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.0" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.14%)</title><rect x="695.0" y="995.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.0" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.14%)</title><rect x="695.0" y="979.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.0" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.14%)</title><rect x="695.0" y="963.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.0" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.14%)</title><rect x="695.0" y="947.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="698.0" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.14%)</title><rect x="695.0" y="931.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.14%)</title><rect x="695.0" y="915.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.14%)</title><rect x="695.0" y="899.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.14%)</title><rect x="695.0" y="883.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.0" y="894.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.05%)</title><rect x="696.1" y="867.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.1" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.05%)</title><rect x="696.7" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.7" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.05%)</title><rect x="696.7" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.7" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.05%)</title><rect x="696.7" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.7" y="974.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.33%)</title><rect x="697.3" y="995.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="700.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.33%)</title><rect x="697.3" y="979.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.3" y="990.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.14%)</title><rect x="697.3" y="963.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="700.3" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.19%)</title><rect x="698.9" y="963.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="701.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.19%)</title><rect x="698.9" y="947.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.05%)</title><rect x="698.9" y="931.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.9" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.05%)</title><rect x="698.9" y="915.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.9" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.05%)</title><rect x="698.9" y="899.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.14%)</title><rect x="699.5" y="931.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="702.5" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (3 samples, 0.14%)</title><rect x="699.5" y="915.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="702.5" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (3 samples, 0.14%)</title><rect x="699.5" y="899.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="702.5" y="910.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (3 samples, 0.14%)</title><rect x="699.5" y="883.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="702.5" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="700.6" y="867.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="700.6" y="851.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="703.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="700.6" y="835.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="703.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.10%)</title><rect x="701.2" y="1011.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="704.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.10%)</title><rect x="701.2" y="995.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.10%)</title><rect x="701.2" y="979.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="701.7" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="704.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.05%)</title><rect x="701.7" y="947.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.7" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="701.7" y="931.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.7" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="701.7" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="704.7" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="701.7" y="899.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="704.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (1 samples, 0.05%)</title><rect x="702.3" y="1011.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.05%)</title><rect x="702.3" y="995.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="702.3" y="979.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="702.3" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="702.3" y="947.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (17 samples, 0.81%)</title><rect x="702.9" y="1011.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (17 samples, 0.81%)</title><rect x="702.9" y="995.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (17 samples, 0.81%)</title><rect x="702.9" y="979.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="703.4" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="703.4" y="947.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.14%)</title><rect x="704.0" y="963.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.14%)</title><rect x="704.0" y="947.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (1 samples, 0.05%)</title><rect x="704.5" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.05%)</title><rect x="705.1" y="931.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.1" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="705.1" y="915.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.1" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="705.1" y="899.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.1" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="705.1" y="883.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="708.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (10 samples, 0.48%)</title><rect x="705.7" y="963.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (10 samples, 0.48%)</title><rect x="705.7" y="947.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.7" y="958.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (3 samples, 0.14%)</title><rect x="706.2" y="931.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.2" y="942.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (3 samples, 0.14%)</title><rect x="706.2" y="915.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.2" y="926.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.14%)</title><rect x="706.2" y="899.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.2" y="910.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.14%)</title><rect x="706.2" y="883.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="709.2" y="894.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.05%)</title><rect x="706.2" y="867.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="709.2" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="706.2" y="851.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="709.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="706.2" y="835.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="709.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="706.2" y="819.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.2" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.10%)</title><rect x="706.8" y="867.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="709.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.24%)</title><rect x="707.9" y="931.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.24%)</title><rect x="707.9" y="915.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.24%)</title><rect x="707.9" y="899.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.24%)</title><rect x="707.9" y="883.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$287/731272226.accept (5 samples, 0.24%)</title><rect x="707.9" y="867.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (5 samples, 0.24%)</title><rect x="707.9" y="851.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (5 samples, 0.24%)</title><rect x="707.9" y="835.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.9" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="709.6" y="819.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="712.6" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="709.6" y="803.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.6" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="709.6" y="787.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.6" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="710.7" y="931.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="713.7" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="710.7" y="915.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.7" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="710.7" y="899.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="713.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.10%)</title><rect x="711.3" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (11 samples, 0.52%)</title><rect x="712.4" y="1091.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (11 samples, 0.52%)</title><rect x="712.4" y="1075.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (11 samples, 0.52%)</title><rect x="712.4" y="1059.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (7 samples, 0.33%)</title><rect x="714.6" y="1043.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.33%)</title><rect x="714.6" y="1027.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="717.6" y="1038.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (7 samples, 0.33%)</title><rect x="714.6" y="1011.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="717.6" y="1022.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.eq (2 samples, 0.10%)</title><rect x="714.6" y="995.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="717.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (2 samples, 0.10%)</title><rect x="714.6" y="979.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.6" y="990.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (5 samples, 0.24%)</title><rect x="715.8" y="995.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (5 samples, 0.24%)</title><rect x="715.8" y="979.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="718.8" y="990.0"></text>
</g>
<g>
<title>JVM_IHashCode (5 samples, 0.24%)</title><rect x="715.8" y="963.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="718.8" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.14%)</title><rect x="716.3" y="947.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="719.3" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="718.0" y="947.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="721.0" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="718.0" y="931.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.0" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="718.0" y="915.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="721.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (7 samples, 0.33%)</title><rect x="718.6" y="1107.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.33%)</title><rect x="718.6" y="1091.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (7 samples, 0.33%)</title><rect x="718.6" y="1075.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (7 samples, 0.33%)</title><rect x="718.6" y="1059.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (5 samples, 0.24%)</title><rect x="718.6" y="1043.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (5 samples, 0.24%)</title><rect x="718.6" y="1027.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.6" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="718.6" y="1011.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.6" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="718.6" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="721.6" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="718.6" y="979.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="721.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (4 samples, 0.19%)</title><rect x="719.1" y="1011.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="722.1" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (3 samples, 0.14%)</title><rect x="719.1" y="995.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.1" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (1 samples, 0.05%)</title><rect x="719.1" y="979.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.1" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="719.1" y="963.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="722.1" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="719.7" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="722.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.05%)</title><rect x="719.7" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="722.7" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="719.7" y="947.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="722.7" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="719.7" y="931.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.7" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="719.7" y="915.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="722.7" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="720.2" y="963.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.2" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="720.2" y="947.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="723.2" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="720.2" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.2" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="720.8" y="995.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.8" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="720.8" y="979.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="723.8" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="720.8" y="963.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="723.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.10%)</title><rect x="721.4" y="1043.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.10%)</title><rect x="721.4" y="1027.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.10%)</title><rect x="721.4" y="1011.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.10%)</title><rect x="722.5" y="1107.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="723.0" y="1091.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="723.0" y="1075.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="726.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="723.6" y="1171.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="723.6" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="726.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="723.6" y="1139.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="723.6" y="1123.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="723.6" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.6" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="723.6" y="1091.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="726.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="724.2" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="727.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="724.2" y="1187.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.2" y="1198.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="724.2" y="1171.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="727.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (26 samples, 1.24%)</title><rect x="724.7" y="1251.0" width="14.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (5 samples, 0.24%)</title><rect x="724.7" y="1235.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.05%)</title><rect x="726.4" y="1219.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="729.4" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="727.0" y="1219.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="730.0" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="727.0" y="1203.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="730.0" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="727.0" y="1187.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (3 samples, 0.14%)</title><rect x="727.5" y="1235.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.10%)</title><rect x="727.5" y="1219.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.10%)</title><rect x="727.5" y="1203.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.5" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="728.7" y="1219.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="731.7" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="728.7" y="1203.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.7" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="728.7" y="1187.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="731.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (1 samples, 0.05%)</title><rect x="729.2" y="1235.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.05%)</title><rect x="729.2" y="1219.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.05%)</title><rect x="729.2" y="1203.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="732.2" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="729.2" y="1187.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="732.2" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="729.2" y="1171.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="732.2" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="729.2" y="1155.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="732.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.38%)</title><rect x="729.8" y="1235.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="732.8" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.38%)</title><rect x="729.8" y="1219.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.8" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.38%)</title><rect x="729.8" y="1203.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="732.8" y="1214.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="729.8" y="1187.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="732.8" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="730.3" y="1171.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="733.3" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="730.3" y="1155.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="733.3" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="730.3" y="1139.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="733.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.29%)</title><rect x="730.9" y="1187.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.9" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (6 samples, 0.29%)</title><rect x="730.9" y="1171.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.9" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.29%)</title><rect x="730.9" y="1155.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.9" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.24%)</title><rect x="731.5" y="1139.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.5" y="1150.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.10%)</title><rect x="731.5" y="1123.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="734.5" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="732.0" y="1107.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="735.0" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="732.0" y="1091.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="735.0" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="732.0" y="1075.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="735.0" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (2 samples, 0.10%)</title><rect x="732.6" y="1123.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="735.6" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.10%)</title><rect x="732.6" y="1107.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$67/580718781.test (1 samples, 0.05%)</title><rect x="733.7" y="1123.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.7" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="733.7" y="1107.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.7" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="733.7" y="1091.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.7" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="733.7" y="1075.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="736.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (8 samples, 0.38%)</title><rect x="734.3" y="1235.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 0.38%)</title><rect x="734.3" y="1219.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="734.3" y="1203.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.10%)</title><rect x="734.3" y="1187.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="737.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.10%)</title><rect x="734.3" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="737.3" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="734.8" y="1155.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.8" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="734.8" y="1139.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="737.8" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="734.8" y="1123.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="737.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.10%)</title><rect x="735.4" y="1203.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="735.9" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.05%)</title><rect x="736.5" y="1203.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="739.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="736.5" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.5" y="1198.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.05%)</title><rect x="736.5" y="1171.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="739.5" y="1182.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="736.5" y="1155.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="739.5" y="1166.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="736.5" y="1139.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.5" y="1150.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="736.5" y="1123.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="739.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.14%)</title><rect x="737.1" y="1203.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.1" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.10%)</title><rect x="737.6" y="1187.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="738.2" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="741.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="738.2" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.2" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="738.7" y="1235.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="741.7" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="738.7" y="1219.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="741.7" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="738.7" y="1203.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="741.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/952689076.accept (2 samples, 0.10%)</title><rect x="739.3" y="1251.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="742.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.10%)</title><rect x="739.3" y="1235.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.05%)</title><rect x="739.9" y="1219.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="742.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (205 samples, 9.74%)</title><rect x="740.4" y="1363.0" width="114.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.4" y="1374.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (204 samples, 9.69%)</title><rect x="740.4" y="1347.0" width="114.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="743.4" y="1358.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (203 samples, 9.64%)</title><rect x="740.4" y="1331.0" width="113.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="743.4" y="1342.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (203 samples, 9.64%)</title><rect x="740.4" y="1315.0" width="113.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.4" y="1326.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (203 samples, 9.64%)</title><rect x="740.4" y="1299.0" width="113.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="743.4" y="1310.0">jdk/internal/n..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.05%)</title><rect x="740.4" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="743.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.05%)</title><rect x="740.4" y="1267.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.4" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="740.4" y="1251.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="743.4" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="740.4" y="1235.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.4" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="740.4" y="1219.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="743.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (1 samples, 0.05%)</title><rect x="741.0" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.14%)</title><rect x="741.5" y="1283.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.10%)</title><rect x="741.5" y="1267.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="744.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.10%)</title><rect x="741.5" y="1251.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="744.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="741.5" y="1235.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="744.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="741.5" y="1219.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.5" y="1230.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="742.7" y="1267.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="745.7" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="742.7" y="1251.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="745.7" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="742.7" y="1235.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (195 samples, 9.26%)</title><rect x="743.2" y="1283.0" width="109.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.2" y="1294.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (195 samples, 9.26%)</title><rect x="743.2" y="1267.0" width="109.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.2" y="1278.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (195 samples, 9.26%)</title><rect x="743.2" y="1251.0" width="109.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.2" y="1262.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (195 samples, 9.26%)</title><rect x="743.2" y="1235.0" width="109.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.2" y="1246.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (195 samples, 9.26%)</title><rect x="743.2" y="1219.0" width="109.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.2" y="1230.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (195 samples, 9.26%)</title><rect x="743.2" y="1203.0" width="109.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.2" y="1214.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (86 samples, 4.09%)</title><rect x="743.2" y="1187.0" width="48.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.2" y="1198.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (86 samples, 4.09%)</title><rect x="743.2" y="1171.0" width="48.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.2" y="1182.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (86 samples, 4.09%)</title><rect x="743.2" y="1155.0" width="48.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="746.2" y="1166.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.29%)</title><rect x="743.2" y="1139.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.2" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.10%)</title><rect x="743.2" y="1123.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="746.2" y="1134.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.10%)</title><rect x="743.2" y="1107.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="746.2" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.10%)</title><rect x="743.2" y="1091.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.2" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.10%)</title><rect x="743.2" y="1075.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="746.2" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.10%)</title><rect x="743.2" y="1059.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="746.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="743.2" y="1043.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.10%)</title><rect x="743.2" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="746.2" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="743.2" y="1011.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="746.2" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="743.2" y="995.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="746.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="743.8" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.05%)</title><rect x="743.8" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.05%)</title><rect x="743.8" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.8" y="990.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.10%)</title><rect x="744.3" y="1123.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.10%)</title><rect x="744.3" y="1107.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.10%)</title><rect x="744.3" y="1091.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.3" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (1 samples, 0.05%)</title><rect x="744.3" y="1075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="747.3" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="744.9" y="1075.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="747.9" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="744.9" y="1059.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="747.9" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="744.9" y="1043.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="747.9" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.10%)</title><rect x="745.5" y="1123.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="748.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.10%)</title><rect x="745.5" y="1107.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="748.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (80 samples, 3.80%)</title><rect x="746.6" y="1139.0" width="44.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="749.6" y="1150.0">jdk/..</text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.10%)</title><rect x="746.6" y="1123.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.6" y="1134.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.10%)</title><rect x="746.6" y="1107.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="746.6" y="1091.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="749.6" y="1102.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.10%)</title><rect x="746.6" y="1075.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="749.6" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="746.6" y="1059.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="749.6" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.05%)</title><rect x="747.1" y="1059.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="750.1" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="747.1" y="1043.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="750.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (78 samples, 3.71%)</title><rect x="747.7" y="1123.0" width="43.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.7" y="1134.0">jdk/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.14%)</title><rect x="748.8" y="1107.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="751.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.14%)</title><rect x="748.8" y="1091.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="751.8" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.14%)</title><rect x="748.8" y="1075.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="751.8" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="750.0" y="1059.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="753.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="750.0" y="1043.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="753.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="750.0" y="1027.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="753.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (35 samples, 1.66%)</title><rect x="750.5" y="1107.0" width="19.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.5" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (15 samples, 0.71%)</title><rect x="761.7" y="1091.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="764.7" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (15 samples, 0.71%)</title><rect x="761.7" y="1075.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="764.7" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 0.71%)</title><rect x="761.7" y="1059.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="764.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (36 samples, 1.71%)</title><rect x="770.1" y="1107.0" width="20.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (36 samples, 1.71%)</title><rect x="770.1" y="1091.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.05%)</title><rect x="770.1" y="1075.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.05%)</title><rect x="770.1" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.05%)</title><rect x="770.1" y="1043.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="773.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.05%)</title><rect x="770.1" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="773.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="770.1" y="1011.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="773.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.05%)</title><rect x="770.1" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="773.1" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="770.1" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.1" y="990.0"></text>
</g>
<g>
<title>__write (1 samples, 0.05%)</title><rect x="770.1" y="963.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="773.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="770.1" y="947.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="773.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="770.1" y="931.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="773.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.05%)</title><rect x="770.1" y="915.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.1" y="926.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="770.1" y="899.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="773.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (35 samples, 1.66%)</title><rect x="770.7" y="1075.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="773.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (35 samples, 1.66%)</title><rect x="770.7" y="1059.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="773.7" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="770.7" y="1043.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="773.7" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*) (1 samples, 0.05%)</title><rect x="770.7" y="1027.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="773.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (32 samples, 1.52%)</title><rect x="771.3" y="1043.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="774.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (32 samples, 1.52%)</title><rect x="771.3" y="1027.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (32 samples, 1.52%)</title><rect x="771.3" y="1011.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="774.3" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="772.4" y="995.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="775.4" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.05%)</title><rect x="772.4" y="979.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="775.4" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.05%)</title><rect x="772.4" y="963.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="775.4" y="974.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.05%)</title><rect x="772.9" y="995.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="775.9" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (28 samples, 1.33%)</title><rect x="773.5" y="995.0" width="15.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.5" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (25 samples, 1.19%)</title><rect x="774.6" y="979.0" width="14.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="777.6" y="990.0"></text>
</g>
<g>
<title>__write (25 samples, 1.19%)</title><rect x="774.6" y="963.0" width="14.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="777.6" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 1.19%)</title><rect x="774.6" y="947.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="777.6" y="958.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.05%)</title><rect x="774.6" y="931.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="777.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 1.14%)</title><rect x="775.2" y="931.0" width="13.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="778.2" y="942.0"></text>
</g>
<g>
<title>__x64_sys_write (24 samples, 1.14%)</title><rect x="775.2" y="915.0" width="13.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="778.2" y="926.0"></text>
</g>
<g>
<title>ksys_write (24 samples, 1.14%)</title><rect x="775.2" y="899.0" width="13.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="778.2" y="910.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="775.7" y="883.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.7" y="894.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="775.7" y="867.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="778.7" y="878.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="775.7" y="851.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="778.7" y="862.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="776.3" y="883.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="779.3" y="894.0"></text>
</g>
<g>
<title>vfs_write (21 samples, 1.00%)</title><rect x="776.9" y="883.0" width="11.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="779.9" y="894.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 0.90%)</title><rect x="777.4" y="867.0" width="10.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="780.4" y="878.0"></text>
</g>
<g>
<title>new_sync_write (19 samples, 0.90%)</title><rect x="777.4" y="851.0" width="10.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="780.4" y="862.0"></text>
</g>
<g>
<title>pipe_write (19 samples, 0.90%)</title><rect x="777.4" y="835.0" width="10.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="780.4" y="846.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 0.81%)</title><rect x="777.4" y="819.0" width="9.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="780.4" y="830.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.81%)</title><rect x="777.4" y="803.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="780.4" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.81%)</title><rect x="777.4" y="787.0" width="9.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.4" y="798.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.05%)</title><rect x="787.0" y="819.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.0" y="830.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="787.5" y="819.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="790.5" y="830.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.05%)</title><rect x="788.1" y="867.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="791.1" y="878.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="788.1" y="851.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="791.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="788.6" y="979.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="791.6" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="788.6" y="963.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="791.6" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="788.6" y="947.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="791.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.05%)</title><rect x="789.2" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/FlowTube.asTubeSubscriber (1 samples, 0.05%)</title><rect x="789.8" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="792.8" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.05%)</title><rect x="789.8" y="1027.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="792.8" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="790.3" y="1107.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="793.3" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="790.3" y="1091.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.3" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="790.3" y="1075.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="793.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1373007332.accept (7 samples, 0.33%)</title><rect x="791.4" y="1187.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (7 samples, 0.33%)</title><rect x="791.4" y="1171.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (7 samples, 0.33%)</title><rect x="791.4" y="1155.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.29%)</title><rect x="791.4" y="1139.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.29%)</title><rect x="791.4" y="1123.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="794.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.29%)</title><rect x="791.4" y="1107.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.29%)</title><rect x="791.4" y="1091.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$287/731272226.accept (6 samples, 0.29%)</title><rect x="791.4" y="1075.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.4" y="1086.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (1 samples, 0.05%)</title><rect x="792.0" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="795.0" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="792.0" y="1043.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="795.0" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="792.0" y="1027.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="795.0" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="792.0" y="1011.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="795.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (4 samples, 0.19%)</title><rect x="792.6" y="1059.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (4 samples, 0.19%)</title><rect x="792.6" y="1043.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.6" y="1054.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.10%)</title><rect x="793.1" y="1027.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.1" y="1038.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.05%)</title><rect x="793.7" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.7" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="793.7" y="995.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="796.7" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="793.7" y="979.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="796.7" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="793.7" y="963.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="796.7" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="794.2" y="1027.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="797.2" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="794.2" y="1011.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.2" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="794.2" y="995.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="797.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$215/1791198728.accept (1 samples, 0.05%)</title><rect x="794.8" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.05%)</title><rect x="794.8" y="1123.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.05%)</title><rect x="794.8" y="1107.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (98 samples, 4.66%)</title><rect x="795.4" y="1187.0" width="54.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.4" y="1198.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (98 samples, 4.66%)</title><rect x="795.4" y="1171.0" width="54.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.4" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (98 samples, 4.66%)</title><rect x="795.4" y="1155.0" width="54.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.4" y="1166.0">jdk/i..</text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.05%)</title><rect x="795.4" y="1139.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (97 samples, 4.61%)</title><rect x="795.9" y="1139.0" width="54.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.9" y="1150.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (97 samples, 4.61%)</title><rect x="795.9" y="1123.0" width="54.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.9" y="1134.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (97 samples, 4.61%)</title><rect x="795.9" y="1107.0" width="54.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.9" y="1118.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (97 samples, 4.61%)</title><rect x="795.9" y="1091.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.9" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="795.9" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.9" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="795.9" y="1059.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="798.9" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="795.9" y="1043.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="798.9" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="795.9" y="1027.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="798.9" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="795.9" y="1011.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="798.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1864376279.accept (96 samples, 4.56%)</title><rect x="796.5" y="1075.0" width="53.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.5" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (96 samples, 4.56%)</title><rect x="796.5" y="1059.0" width="53.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.5" y="1070.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (96 samples, 4.56%)</title><rect x="796.5" y="1043.0" width="53.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.5" y="1054.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (96 samples, 4.56%)</title><rect x="796.5" y="1027.0" width="53.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.5" y="1038.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (96 samples, 4.56%)</title><rect x="796.5" y="1011.0" width="53.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.5" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (96 samples, 4.56%)</title><rect x="796.5" y="995.0" width="53.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.5" y="1006.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (92 samples, 4.37%)</title><rect x="796.5" y="979.0" width="51.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.5" y="990.0">java/..</text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="797.6" y="963.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="800.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (87 samples, 4.13%)</title><rect x="798.2" y="963.0" width="48.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="801.2" y="974.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (87 samples, 4.13%)</title><rect x="798.2" y="947.0" width="48.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="801.2" y="958.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (87 samples, 4.13%)</title><rect x="798.2" y="931.0" width="48.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.2" y="942.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (85 samples, 4.04%)</title><rect x="799.3" y="915.0" width="47.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="802.3" y="926.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (85 samples, 4.04%)</title><rect x="799.3" y="899.0" width="47.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.3" y="910.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (81 samples, 3.85%)</title><rect x="801.0" y="883.0" width="45.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.0" y="894.0">jdk/..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.14%)</title><rect x="801.0" y="867.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="804.0" y="878.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="801.0" y="851.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="804.0" y="862.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.10%)</title><rect x="801.5" y="851.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="804.5" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="802.1" y="835.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="805.1" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="802.1" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="805.1" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="802.1" y="803.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="805.1" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (77 samples, 3.66%)</title><rect x="802.6" y="867.0" width="43.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="805.6" y="878.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 3.61%)</title><rect x="803.2" y="851.0" width="42.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="806.2" y="862.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (76 samples, 3.61%)</title><rect x="803.2" y="835.0" width="42.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="806.2" y="846.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (72 samples, 3.42%)</title><rect x="803.8" y="819.0" width="40.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.8" y="830.0">__x..</text>
</g>
<g>
<title>do_futex (71 samples, 3.37%)</title><rect x="804.3" y="803.0" width="39.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="807.3" y="814.0">do_..</text>
</g>
<g>
<title>futex_wake (70 samples, 3.33%)</title><rect x="804.3" y="787.0" width="39.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="807.3" y="798.0">fut..</text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.10%)</title><rect x="807.1" y="771.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="810.1" y="782.0"></text>
</g>
<g>
<title>wake_up_q (63 samples, 2.99%)</title><rect x="808.3" y="771.0" width="35.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="811.3" y="782.0">wak..</text>
</g>
<g>
<title>try_to_wake_up (63 samples, 2.99%)</title><rect x="808.3" y="755.0" width="35.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="811.3" y="766.0">try..</text>
</g>
<g>
<title>__lock_text_start (63 samples, 2.99%)</title><rect x="808.3" y="739.0" width="35.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="811.3" y="750.0">__l..</text>
</g>
<g>
<title>hash_futex (1 samples, 0.05%)</title><rect x="843.6" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.6" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.14%)</title><rect x="844.1" y="819.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="847.1" y="830.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.14%)</title><rect x="844.1" y="803.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="847.1" y="814.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.14%)</title><rect x="844.1" y="787.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="847.1" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.14%)</title><rect x="844.1" y="771.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="847.1" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.05%)</title><rect x="845.8" y="867.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="848.8" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="846.4" y="883.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.4" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="846.4" y="867.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.4" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="846.4" y="851.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.05%)</title><rect x="846.9" y="963.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.9" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="846.9" y="947.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="849.9" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="846.9" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="849.9" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="846.9" y="915.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="849.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/2093423394.accept (1 samples, 0.05%)</title><rect x="847.5" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$292/1701406684.accept (1 samples, 0.05%)</title><rect x="848.1" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.05%)</title><rect x="848.1" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/478252441.accept (3 samples, 0.14%)</title><rect x="848.6" y="979.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (3 samples, 0.14%)</title><rect x="848.6" y="963.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (3 samples, 0.14%)</title><rect x="848.6" y="947.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (3 samples, 0.14%)</title><rect x="848.6" y="931.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="851.6" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="849.2" y="915.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="852.2" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="849.2" y="899.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="852.2" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="849.2" y="883.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="852.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.19%)</title><rect x="850.3" y="1187.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.19%)</title><rect x="850.3" y="1171.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.19%)</title><rect x="850.3" y="1155.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (4 samples, 0.19%)</title><rect x="850.3" y="1139.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="853.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (4 samples, 0.19%)</title><rect x="850.3" y="1123.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.3" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (4 samples, 0.19%)</title><rect x="850.3" y="1107.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="853.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="851.4" y="1091.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="854.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="851.4" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="851.4" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="854.4" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="852.0" y="1091.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="855.0" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="852.0" y="1075.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="855.0" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="852.0" y="1059.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="855.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3 samples, 0.14%)</title><rect x="852.5" y="1283.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3 samples, 0.14%)</title><rect x="852.5" y="1267.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3 samples, 0.14%)</title><rect x="852.5" y="1251.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="855.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3 samples, 0.14%)</title><rect x="852.5" y="1235.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="855.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.05%)</title><rect x="852.5" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="852.5" y="1203.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.05%)</title><rect x="852.5" y="1187.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.05%)</title><rect x="852.5" y="1171.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="852.5" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="855.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.05%)</title><rect x="852.5" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="855.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.05%)</title><rect x="852.5" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="855.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="852.5" y="1107.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="852.5" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.05%)</title><rect x="852.5" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (1 samples, 0.05%)</title><rect x="852.5" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (1 samples, 0.05%)</title><rect x="852.5" y="1043.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="855.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (1 samples, 0.05%)</title><rect x="852.5" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="855.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.05%)</title><rect x="853.1" y="1219.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1 samples, 0.05%)</title><rect x="853.1" y="1203.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1 samples, 0.05%)</title><rect x="853.1" y="1187.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="856.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="853.1" y="1171.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.05%)</title><rect x="853.1" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="856.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.05%)</title><rect x="853.1" y="1139.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="856.1" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="853.1" y="1123.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="856.1" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="853.1" y="1107.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="856.1" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="853.1" y="1091.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="856.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/952689076.accept (1 samples, 0.05%)</title><rect x="853.7" y="1219.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="856.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.05%)</title><rect x="853.7" y="1203.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="856.7" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="853.7" y="1187.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.7" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="853.7" y="1171.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.7" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="853.7" y="1155.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="856.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.05%)</title><rect x="854.2" y="1331.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.2" y="1342.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="854.8" y="1347.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="857.8" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="854.8" y="1331.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="857.8" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="854.8" y="1315.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="857.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (22 samples, 1.05%)</title><rect x="855.3" y="1443.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (21 samples, 1.00%)</title><rect x="855.3" y="1427.0" width="11.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="858.3" y="1438.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (21 samples, 1.00%)</title><rect x="855.3" y="1411.0" width="11.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="858.3" y="1422.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (21 samples, 1.00%)</title><rect x="855.3" y="1395.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.3" y="1406.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (21 samples, 1.00%)</title><rect x="855.3" y="1379.0" width="11.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.3" y="1390.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (21 samples, 1.00%)</title><rect x="855.3" y="1363.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.3" y="1374.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (21 samples, 1.00%)</title><rect x="855.3" y="1347.0" width="11.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.3" y="1358.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (21 samples, 1.00%)</title><rect x="855.3" y="1331.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="858.3" y="1342.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.10%)</title><rect x="855.3" y="1315.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="858.3" y="1326.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (3 samples, 0.14%)</title><rect x="856.5" y="1315.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="859.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.29%)</title><rect x="858.1" y="1315.0" width="3.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="861.1" y="1326.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.29%)</title><rect x="858.1" y="1299.0" width="3.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="861.1" y="1310.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (10 samples, 0.48%)</title><rect x="861.5" y="1315.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="864.5" y="1326.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (10 samples, 0.48%)</title><rect x="861.5" y="1299.0" width="5.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="864.5" y="1310.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.05%)</title><rect x="863.2" y="1283.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="866.2" y="1294.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni1230137463760480119.so (1 samples, 0.05%)</title><rect x="863.2" y="1267.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="866.2" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="863.2" y="1251.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="866.2" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="863.2" y="1235.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="866.2" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="863.2" y="1219.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="866.2" y="1230.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::~MergingIterator() (5 samples, 0.24%)</title><rect x="863.7" y="1283.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="866.7" y="1294.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::~BlockBasedTableIterator() (5 samples, 0.24%)</title><rect x="863.7" y="1267.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="866.7" y="1278.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.05%)</title><rect x="864.3" y="1251.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="867.3" y="1262.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.05%)</title><rect x="864.9" y="1251.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="867.9" y="1262.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.05%)</title><rect x="864.9" y="1235.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="867.9" y="1246.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.05%)</title><rect x="864.9" y="1219.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="867.9" y="1230.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (1 samples, 0.05%)</title><rect x="865.4" y="1251.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="868.4" y="1262.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.05%)</title><rect x="866.0" y="1251.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="869.0" y="1262.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.05%)</title><rect x="866.6" y="1283.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="869.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.05%)</title><rect x="867.1" y="1427.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.05%)</title><rect x="867.1" y="1411.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="870.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (2 samples, 0.10%)</title><rect x="867.7" y="1443.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.7" y="1454.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.05%)</title><rect x="868.2" y="1427.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="871.2" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (75 samples, 3.56%)</title><rect x="868.8" y="1443.0" width="42.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="871.8" y="1454.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (75 samples, 3.56%)</title><rect x="868.8" y="1427.0" width="42.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="871.8" y="1438.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (26 samples, 1.24%)</title><rect x="869.4" y="1411.0" width="14.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="872.4" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (20 samples, 0.95%)</title><rect x="869.4" y="1395.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="872.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (1 samples, 0.05%)</title><rect x="869.4" y="1379.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="869.4" y="1363.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="872.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (19 samples, 0.90%)</title><rect x="869.9" y="1379.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (19 samples, 0.90%)</title><rect x="869.9" y="1363.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="872.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (19 samples, 0.90%)</title><rect x="869.9" y="1347.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="872.9" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.81%)</title><rect x="869.9" y="1331.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="872.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.81%)</title><rect x="869.9" y="1315.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="872.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (16 samples, 0.76%)</title><rect x="870.5" y="1299.0" width="8.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (15 samples, 0.71%)</title><rect x="870.5" y="1283.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.71%)</title><rect x="870.5" y="1267.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 0.71%)</title><rect x="870.5" y="1251.0" width="8.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="870.5" y="1235.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="870.5" y="1219.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="870.5" y="1203.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="870.5" y="1187.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="873.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="870.5" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="870.5" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="870.5" y="1139.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="873.5" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.05%)</title><rect x="870.5" y="1123.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="873.5" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="870.5" y="1107.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="873.5" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="870.5" y="1091.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.5" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="870.5" y="1075.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.5" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="870.5" y="1059.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.5" y="1070.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.05%)</title><rect x="870.5" y="1043.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.5" y="1054.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.05%)</title><rect x="870.5" y="1027.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="873.5" y="1038.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="870.5" y="1011.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.5" y="1022.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="870.5" y="995.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="873.5" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="870.5" y="979.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="873.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.67%)</title><rect x="871.0" y="1235.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.67%)</title><rect x="871.0" y="1219.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.67%)</title><rect x="871.0" y="1203.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.52%)</title><rect x="872.7" y="1187.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.52%)</title><rect x="872.7" y="1171.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.7" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (11 samples, 0.52%)</title><rect x="872.7" y="1155.0" width="6.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="875.7" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.52%)</title><rect x="872.7" y="1139.0" width="6.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="875.7" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.52%)</title><rect x="872.7" y="1123.0" width="6.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="875.7" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.52%)</title><rect x="872.7" y="1107.0" width="6.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="875.7" y="1118.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.52%)</title><rect x="872.7" y="1091.0" width="6.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.7" y="1102.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.52%)</title><rect x="872.7" y="1075.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="875.7" y="1086.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="872.7" y="1059.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="875.7" y="1070.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="872.7" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="875.7" y="1054.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="873.3" y="1059.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="876.3" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (9 samples, 0.43%)</title><rect x="873.8" y="1059.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="876.8" y="1070.0"></text>
</g>
<g>
<title>try_to_wake_up (9 samples, 0.43%)</title><rect x="873.8" y="1043.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="876.8" y="1054.0"></text>
</g>
<g>
<title>__lock_text_start (9 samples, 0.43%)</title><rect x="873.8" y="1027.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="876.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.05%)</title><rect x="878.9" y="1283.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.05%)</title><rect x="878.9" y="1267.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="881.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="878.9" y="1251.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.10%)</title><rect x="879.4" y="1331.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="882.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.29%)</title><rect x="880.6" y="1395.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="883.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.29%)</title><rect x="880.6" y="1379.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="883.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.29%)</title><rect x="880.6" y="1363.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="883.6" y="1374.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="880.6" y="1347.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="883.6" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="880.6" y="1331.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="883.6" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="880.6" y="1315.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.6" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="880.6" y="1299.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="883.6" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.24%)</title><rect x="881.1" y="1347.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="884.1" y="1358.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.24%)</title><rect x="881.1" y="1331.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.1" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.24%)</title><rect x="881.1" y="1315.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.1" y="1326.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.24%)</title><rect x="881.1" y="1299.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="884.1" y="1310.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.24%)</title><rect x="881.1" y="1283.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="884.1" y="1294.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.24%)</title><rect x="881.1" y="1267.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="884.1" y="1278.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.24%)</title><rect x="881.1" y="1251.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.1" y="1262.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.24%)</title><rect x="881.1" y="1235.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="884.1" y="1246.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.24%)</title><rect x="881.1" y="1219.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="884.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.38%)</title><rect x="883.9" y="1411.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.9" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2 samples, 0.10%)</title><rect x="884.5" y="1395.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.5" y="1406.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="885.0" y="1379.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="888.0" y="1390.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="885.0" y="1363.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="888.0" y="1374.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="885.0" y="1347.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="888.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.24%)</title><rect x="885.6" y="1395.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.6" y="1406.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.10%)</title><rect x="885.6" y="1379.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="888.6" y="1390.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.10%)</title><rect x="885.6" y="1363.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="888.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.14%)</title><rect x="886.7" y="1379.0" width="1.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="889.7" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.10%)</title><rect x="886.7" y="1363.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="889.7" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="886.7" y="1347.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="889.7" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="886.7" y="1331.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="889.7" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.10%)</title><rect x="886.7" y="1315.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="889.7" y="1326.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.10%)</title><rect x="886.7" y="1299.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.7" y="1310.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.10%)</title><rect x="886.7" y="1283.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.7" y="1294.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.10%)</title><rect x="886.7" y="1267.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="889.7" y="1278.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.10%)</title><rect x="886.7" y="1251.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.7" y="1262.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.10%)</title><rect x="886.7" y="1235.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="889.7" y="1246.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="887.3" y="1219.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="890.3" y="1230.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.05%)</title><rect x="887.9" y="1363.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="890.9" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (39 samples, 1.85%)</title><rect x="888.4" y="1411.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.4" y="1422.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 1.85%)</title><rect x="888.4" y="1395.0" width="21.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.4" y="1406.0">j..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="888.4" y="1379.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="891.4" y="1390.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.52%)</title><rect x="889.0" y="1379.0" width="6.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="892.0" y="1390.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="889.0" y="1363.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="892.0" y="1374.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.05%)</title><rect x="889.5" y="1363.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="892.5" y="1374.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.24%)</title><rect x="890.1" y="1363.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.1" y="1374.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="890.7" y="1347.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="893.7" y="1358.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.14%)</title><rect x="891.2" y="1347.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="894.2" y="1358.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.10%)</title><rect x="891.8" y="1331.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="894.8" y="1342.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="892.3" y="1315.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="895.3" y="1326.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.05%)</title><rect x="892.9" y="1363.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="895.9" y="1374.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.10%)</title><rect x="893.5" y="1363.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="896.5" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.10%)</title><rect x="893.5" y="1347.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="896.5" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.10%)</title><rect x="893.5" y="1331.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="896.5" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="894.0" y="1315.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.0" y="1326.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="894.0" y="1299.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="897.0" y="1310.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="894.0" y="1283.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="897.0" y="1294.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.05%)</title><rect x="894.6" y="1363.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="897.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.28%)</title><rect x="895.1" y="1379.0" width="15.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="898.1" y="1390.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.10%)</title><rect x="895.1" y="1363.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="898.1" y="1374.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.14%)</title><rect x="896.3" y="1363.0" width="1.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="899.3" y="1374.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (22 samples, 1.05%)</title><rect x="897.9" y="1363.0" width="12.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="900.9" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.05%)</title><rect x="897.9" y="1347.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="900.9" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.05%)</title><rect x="897.9" y="1331.0" width="12.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="900.9" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_futex (21 samples, 1.00%)</title><rect x="897.9" y="1315.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="900.9" y="1326.0"></text>
</g>
<g>
<title>do_futex (20 samples, 0.95%)</title><rect x="897.9" y="1299.0" width="11.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.9" y="1310.0"></text>
</g>
<g>
<title>futex_wait (19 samples, 0.90%)</title><rect x="898.5" y="1283.0" width="10.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="901.5" y="1294.0"></text>
</g>
<g>
<title>futex_wait_queue_me (15 samples, 0.71%)</title><rect x="899.6" y="1267.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="902.6" y="1278.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (2 samples, 0.10%)</title><rect x="899.6" y="1251.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="902.6" y="1262.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (2 samples, 0.10%)</title><rect x="899.6" y="1235.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.6" y="1246.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="899.6" y="1219.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="902.6" y="1230.0"></text>
</g>
<g>
<title>lock_hrtimer_base (1 samples, 0.05%)</title><rect x="900.2" y="1219.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="903.2" y="1230.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.62%)</title><rect x="900.7" y="1251.0" width="7.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="903.7" y="1262.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.62%)</title><rect x="900.7" y="1235.0" width="7.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="903.7" y="1246.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.62%)</title><rect x="900.7" y="1219.0" width="7.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="903.7" y="1230.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.10%)</title><rect x="908.0" y="1267.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="911.0" y="1278.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.10%)</title><rect x="908.0" y="1251.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="911.0" y="1262.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="908.0" y="1235.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="911.0" y="1246.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="909.2" y="1299.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="912.2" y="1310.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.05%)</title><rect x="909.2" y="1283.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="912.2" y="1294.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.05%)</title><rect x="909.7" y="1315.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.7" y="1326.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="910.3" y="1411.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="913.3" y="1422.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.05%)</title><rect x="910.3" y="1395.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="913.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (182 samples, 8.65%)</title><rect x="910.8" y="1443.0" width="102.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.8" y="1454.0">jdk/internal..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.05%)</title><rect x="912.5" y="1427.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="915.5" y="1438.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.05%)</title><rect x="912.5" y="1411.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="915.5" y="1422.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.05%)</title><rect x="912.5" y="1395.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="915.5" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (5 samples, 0.24%)</title><rect x="913.1" y="1427.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="916.1" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (5 samples, 0.24%)</title><rect x="913.1" y="1411.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.1" y="1422.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.19%)</title><rect x="913.6" y="1395.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="916.6" y="1406.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.19%)</title><rect x="913.6" y="1379.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="916.6" y="1390.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.19%)</title><rect x="913.6" y="1363.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.6" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (70 samples, 3.33%)</title><rect x="915.9" y="1427.0" width="39.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.9" y="1438.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1514835762.accept (68 samples, 3.23%)</title><rect x="915.9" y="1411.0" width="38.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.9" y="1422.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (68 samples, 3.23%)</title><rect x="915.9" y="1395.0" width="38.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.9" y="1406.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (68 samples, 3.23%)</title><rect x="915.9" y="1379.0" width="38.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.9" y="1390.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (68 samples, 3.23%)</title><rect x="915.9" y="1363.0" width="38.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.9" y="1374.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (68 samples, 3.23%)</title><rect x="915.9" y="1347.0" width="38.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.9" y="1358.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.24%)</title><rect x="915.9" y="1331.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.19%)</title><rect x="916.4" y="1315.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.4" y="1326.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.10%)</title><rect x="916.4" y="1299.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.05%)</title><rect x="917.6" y="1299.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.6" y="1310.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.05%)</title><rect x="917.6" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="920.6" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="917.6" y="1267.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="920.6" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="917.6" y="1251.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.6" y="1262.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="917.6" y="1235.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.6" y="1246.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="917.6" y="1219.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="920.6" y="1230.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="917.6" y="1203.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="920.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.05%)</title><rect x="918.1" y="1299.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.1" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="918.1" y="1283.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="921.1" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="918.1" y="1267.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.1" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="918.1" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="921.1" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="918.1" y="1235.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="921.1" y="1246.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="918.1" y="1219.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.05%)</title><rect x="918.1" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="921.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (63 samples, 2.99%)</title><rect x="918.7" y="1331.0" width="35.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.7" y="1342.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (63 samples, 2.99%)</title><rect x="918.7" y="1315.0" width="35.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.7" y="1326.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (63 samples, 2.99%)</title><rect x="918.7" y="1299.0" width="35.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.7" y="1310.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (63 samples, 2.99%)</title><rect x="918.7" y="1283.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.7" y="1294.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (63 samples, 2.99%)</title><rect x="918.7" y="1267.0" width="35.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.7" y="1278.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (63 samples, 2.99%)</title><rect x="918.7" y="1251.0" width="35.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="921.7" y="1262.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (63 samples, 2.99%)</title><rect x="918.7" y="1235.0" width="35.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.7" y="1246.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (16 samples, 0.76%)</title><rect x="919.8" y="1219.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="922.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (16 samples, 0.76%)</title><rect x="919.8" y="1203.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (16 samples, 0.76%)</title><rect x="919.8" y="1187.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="922.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.76%)</title><rect x="919.8" y="1171.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="922.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (16 samples, 0.76%)</title><rect x="919.8" y="1155.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.62%)</title><rect x="921.5" y="1139.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.62%)</title><rect x="921.5" y="1123.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="924.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.62%)</title><rect x="921.5" y="1107.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="924.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.43%)</title><rect x="921.5" y="1091.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.05%)</title><rect x="921.5" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.05%)</title><rect x="921.5" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="924.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.05%)</title><rect x="921.5" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="924.5" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="921.5" y="1027.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="924.5" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="921.5" y="1011.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="924.5" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="921.5" y="995.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="924.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.38%)</title><rect x="922.0" y="1075.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.38%)</title><rect x="922.0" y="1059.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.38%)</title><rect x="922.0" y="1043.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="925.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.38%)</title><rect x="922.0" y="1027.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="925.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.38%)</title><rect x="922.0" y="1011.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.0" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.38%)</title><rect x="922.0" y="995.0" width="4.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="925.0" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.38%)</title><rect x="922.0" y="979.0" width="4.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="925.0" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.38%)</title><rect x="922.0" y="963.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="925.0" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.38%)</title><rect x="922.0" y="947.0" width="4.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="925.0" y="958.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.38%)</title><rect x="922.0" y="931.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="925.0" y="942.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.38%)</title><rect x="922.0" y="915.0" width="4.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.0" y="926.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.33%)</title><rect x="922.6" y="899.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="925.6" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.33%)</title><rect x="922.6" y="883.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="925.6" y="894.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.33%)</title><rect x="922.6" y="867.0" width="3.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="925.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.19%)</title><rect x="926.5" y="1091.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="929.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.19%)</title><rect x="926.5" y="1075.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.19%)</title><rect x="926.5" y="1059.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="929.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.05%)</title><rect x="928.8" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.05%)</title><rect x="929.3" y="1219.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.05%)</title><rect x="929.3" y="1203.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.05%)</title><rect x="929.3" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.3" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="929.3" y="1171.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.3" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="929.3" y="1155.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="932.3" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="929.3" y="1139.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="932.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (42 samples, 2.00%)</title><rect x="929.9" y="1219.0" width="23.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.9" y="1230.0">j..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (42 samples, 2.00%)</title><rect x="929.9" y="1203.0" width="23.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="932.9" y="1214.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (41 samples, 1.95%)</title><rect x="929.9" y="1187.0" width="23.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.9" y="1198.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (41 samples, 1.95%)</title><rect x="929.9" y="1171.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.9" y="1182.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (41 samples, 1.95%)</title><rect x="929.9" y="1155.0" width="23.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.9" y="1166.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (41 samples, 1.95%)</title><rect x="929.9" y="1139.0" width="23.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.9" y="1150.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (40 samples, 1.90%)</title><rect x="929.9" y="1123.0" width="22.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="932.9" y="1134.0">s..</text>
</g>
<g>
<title>read (40 samples, 1.90%)</title><rect x="929.9" y="1107.0" width="22.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="932.9" y="1118.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.81%)</title><rect x="930.5" y="1091.0" width="21.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="933.5" y="1102.0">e..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 1.81%)</title><rect x="930.5" y="1075.0" width="21.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.5" y="1086.0">d..</text>
</g>
<g>
<title>__x64_sys_read (36 samples, 1.71%)</title><rect x="931.0" y="1059.0" width="20.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="934.0" y="1070.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="931.0" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="934.0" y="1054.0"></text>
</g>
<g>
<title>ksys_read (35 samples, 1.66%)</title><rect x="931.6" y="1043.0" width="19.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="934.6" y="1054.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="931.6" y="1027.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="934.6" y="1038.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="931.6" y="1011.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="934.6" y="1022.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="931.6" y="995.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="934.6" y="1006.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.05%)</title><rect x="932.1" y="1027.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.1" y="1038.0"></text>
</g>
<g>
<title>vfs_read (33 samples, 1.57%)</title><rect x="932.7" y="1027.0" width="18.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="935.7" y="1038.0"></text>
</g>
<g>
<title>__vfs_read (26 samples, 1.24%)</title><rect x="934.4" y="1011.0" width="14.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="937.4" y="1022.0"></text>
</g>
<g>
<title>new_sync_read (26 samples, 1.24%)</title><rect x="934.4" y="995.0" width="14.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="937.4" y="1006.0"></text>
</g>
<g>
<title>sock_read_iter (26 samples, 1.24%)</title><rect x="934.4" y="979.0" width="14.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="937.4" y="990.0"></text>
</g>
<g>
<title>sock_recvmsg (25 samples, 1.19%)</title><rect x="934.9" y="963.0" width="14.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="937.9" y="974.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.05%)</title><rect x="934.9" y="947.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="937.9" y="958.0"></text>
</g>
<g>
<title>inet6_recvmsg (23 samples, 1.09%)</title><rect x="935.5" y="947.0" width="12.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.5" y="958.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="936.1" y="931.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="939.1" y="942.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 1.00%)</title><rect x="936.6" y="931.0" width="11.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="939.6" y="942.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.05%)</title><rect x="938.9" y="915.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.9" y="926.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.05%)</title><rect x="938.9" y="899.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="941.9" y="910.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.05%)</title><rect x="938.9" y="883.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="941.9" y="894.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.05%)</title><rect x="938.9" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="941.9" y="878.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.05%)</title><rect x="939.4" y="915.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="942.4" y="926.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="940.0" y="915.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.0" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="940.0" y="899.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="943.0" y="910.0"></text>
</g>
<g>
<title>__pv_queued_spin_lock_slowpath (1 samples, 0.05%)</title><rect x="940.0" y="883.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.0" y="894.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.48%)</title><rect x="940.5" y="915.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="943.5" y="926.0"></text>
</g>
<g>
<title>__skb_datagram_iter (10 samples, 0.48%)</title><rect x="940.5" y="899.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="943.5" y="910.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.24%)</title><rect x="943.3" y="883.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="946.3" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="943.3" y="867.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="946.3" y="878.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.19%)</title><rect x="943.9" y="867.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="946.9" y="878.0"></text>
</g>
<g>
<title>copy_user_generic_string (4 samples, 0.19%)</title><rect x="943.9" y="851.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="946.9" y="862.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.14%)</title><rect x="946.2" y="915.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="949.2" y="926.0"></text>
</g>
<g>
<title>tcp_send_ack (3 samples, 0.14%)</title><rect x="946.2" y="899.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="949.2" y="910.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (3 samples, 0.14%)</title><rect x="946.2" y="883.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.2" y="894.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.14%)</title><rect x="946.2" y="867.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.2" y="878.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.14%)</title><rect x="946.2" y="851.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="949.2" y="862.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.14%)</title><rect x="946.2" y="835.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.2" y="846.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.14%)</title><rect x="946.2" y="819.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.2" y="830.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.14%)</title><rect x="946.2" y="803.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.2" y="814.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.14%)</title><rect x="946.2" y="787.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="949.2" y="798.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.14%)</title><rect x="946.2" y="771.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.2" y="782.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.14%)</title><rect x="946.2" y="755.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="949.2" y="766.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.10%)</title><rect x="946.7" y="739.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="949.7" y="750.0"></text>
</g>
<g>
<title>do_softirq.part.0 (2 samples, 0.10%)</title><rect x="946.7" y="723.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.7" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.10%)</title><rect x="946.7" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.7" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.10%)</title><rect x="946.7" y="691.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="949.7" y="702.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.10%)</title><rect x="946.7" y="675.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.7" y="686.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.10%)</title><rect x="946.7" y="659.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="949.7" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.10%)</title><rect x="946.7" y="643.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="949.7" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.10%)</title><rect x="946.7" y="627.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.7" y="638.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.10%)</title><rect x="946.7" y="611.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="949.7" y="622.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.10%)</title><rect x="946.7" y="595.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="949.7" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.10%)</title><rect x="946.7" y="579.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="949.7" y="590.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.10%)</title><rect x="946.7" y="563.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.7" y="574.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.10%)</title><rect x="946.7" y="547.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="949.7" y="558.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.05%)</title><rect x="946.7" y="531.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="949.7" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.05%)</title><rect x="947.3" y="531.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.05%)</title><rect x="947.3" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="950.3" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.05%)</title><rect x="947.3" y="499.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="950.3" y="510.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.05%)</title><rect x="947.3" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="950.3" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.05%)</title><rect x="947.3" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="950.3" y="478.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.05%)</title><rect x="947.3" y="451.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.3" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.05%)</title><rect x="947.8" y="915.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="950.8" y="926.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.05%)</title><rect x="948.4" y="947.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.4" y="958.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.05%)</title><rect x="948.4" y="931.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.4" y="942.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.19%)</title><rect x="949.0" y="1011.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="952.0" y="1022.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.19%)</title><rect x="949.0" y="995.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="952.0" y="1006.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.10%)</title><rect x="949.0" y="979.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="952.0" y="990.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.05%)</title><rect x="950.1" y="979.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.1" y="990.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="950.1" y="963.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="953.1" y="974.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.05%)</title><rect x="950.1" y="947.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.1" y="958.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.05%)</title><rect x="950.6" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="953.6" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="951.2" y="1059.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="954.2" y="1070.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="951.2" y="1043.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="954.2" y="1054.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="951.2" y="1027.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="954.2" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="951.2" y="1011.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="954.2" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="951.8" y="1091.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="954.8" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="951.8" y="1075.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="954.8" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="951.8" y="1059.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="954.8" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="952.3" y="1123.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.3" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="952.3" y="1107.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="955.3" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="952.3" y="1091.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="955.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="952.9" y="1187.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="955.9" y="1198.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="952.9" y="1171.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.9" y="1182.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="952.9" y="1155.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.9" y="1166.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="953.4" y="1219.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.4" y="1230.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="953.4" y="1203.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="956.4" y="1214.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="953.4" y="1187.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="956.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/2133118391.accept (1 samples, 0.05%)</title><rect x="954.0" y="1411.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="957.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (1 samples, 0.05%)</title><rect x="954.0" y="1395.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/526911886.run (1 samples, 0.05%)</title><rect x="954.0" y="1379.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="957.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.05%)</title><rect x="954.0" y="1363.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.05%)</title><rect x="954.0" y="1347.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.0" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="954.6" y="1411.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="957.6" y="1422.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="954.6" y="1395.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="957.6" y="1406.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="954.6" y="1379.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.6" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (8 samples, 0.38%)</title><rect x="955.1" y="1427.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="958.1" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.38%)</title><rect x="955.1" y="1411.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="958.1" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (8 samples, 0.38%)</title><rect x="955.1" y="1395.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.1" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (8 samples, 0.38%)</title><rect x="955.1" y="1379.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.1" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (8 samples, 0.38%)</title><rect x="955.1" y="1363.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.1" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (6 samples, 0.29%)</title><rect x="955.1" y="1347.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="958.1" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (5 samples, 0.24%)</title><rect x="955.1" y="1331.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.1" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.14%)</title><rect x="955.7" y="1315.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.7" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.10%)</title><rect x="955.7" y="1299.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.7" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1354189177.accept (2 samples, 0.10%)</title><rect x="955.7" y="1283.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="958.7" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="956.2" y="1267.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="959.2" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="956.2" y="1251.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="959.2" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="956.2" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.2" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="956.2" y="1219.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="959.2" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.05%)</title><rect x="956.2" y="1203.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="959.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$247/1379068579.test (1 samples, 0.05%)</title><rect x="956.8" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.lambda$events$0 (1 samples, 0.05%)</title><rect x="956.8" y="1283.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="959.8" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="956.8" y="1267.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="959.8" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="956.8" y="1251.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.8" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="956.8" y="1235.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.8" y="1246.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="957.4" y="1315.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="960.4" y="1326.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="957.4" y="1299.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.4" y="1310.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="957.4" y="1283.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.4" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="957.9" y="1331.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="960.9" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="957.9" y="1315.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="960.9" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="957.9" y="1299.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="960.9" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.10%)</title><rect x="958.5" y="1347.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.5" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="959.0" y="1331.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="962.0" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="959.0" y="1315.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="962.0" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="959.0" y="1299.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="962.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (15 samples, 0.71%)</title><rect x="959.6" y="1427.0" width="8.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/856242411.run (10 samples, 0.48%)</title><rect x="959.6" y="1411.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (10 samples, 0.48%)</title><rect x="959.6" y="1395.0" width="5.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.48%)</title><rect x="959.6" y="1379.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="962.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.48%)</title><rect x="959.6" y="1363.0" width="5.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.48%)</title><rect x="959.6" y="1347.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.6" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (10 samples, 0.48%)</title><rect x="959.6" y="1331.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (10 samples, 0.48%)</title><rect x="959.6" y="1315.0" width="5.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="962.6" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (10 samples, 0.48%)</title><rect x="959.6" y="1299.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (10 samples, 0.48%)</title><rect x="959.6" y="1283.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="962.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4 samples, 0.19%)</title><rect x="962.4" y="1267.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="965.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.10%)</title><rect x="962.4" y="1251.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.10%)</title><rect x="962.4" y="1235.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.10%)</title><rect x="962.4" y="1219.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="965.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.10%)</title><rect x="962.4" y="1203.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="965.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.10%)</title><rect x="962.4" y="1187.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.10%)</title><rect x="962.4" y="1171.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.10%)</title><rect x="962.4" y="1155.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="965.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.10%)</title><rect x="962.4" y="1139.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="965.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.10%)</title><rect x="962.4" y="1123.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.4" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="963.0" y="1107.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="966.0" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="963.0" y="1091.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="966.0" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="963.0" y="1075.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="966.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.10%)</title><rect x="963.5" y="1251.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="966.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="963.5" y="1235.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="966.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.10%)</title><rect x="963.5" y="1219.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.05%)</title><rect x="964.1" y="1203.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="967.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.05%)</title><rect x="964.1" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="964.1" y="1171.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="964.1" y="1155.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="967.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="964.1" y="1139.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="964.1" y="1123.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.1" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="964.7" y="1267.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="967.7" y="1278.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="964.7" y="1251.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="967.7" y="1262.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="964.7" y="1235.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="967.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/2094894093.run (5 samples, 0.24%)</title><rect x="965.2" y="1411.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (5 samples, 0.24%)</title><rect x="965.2" y="1395.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.24%)</title><rect x="965.2" y="1379.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.24%)</title><rect x="965.2" y="1363.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.24%)</title><rect x="965.2" y="1347.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.24%)</title><rect x="965.2" y="1331.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.24%)</title><rect x="965.2" y="1315.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="968.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.24%)</title><rect x="965.2" y="1299.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.2" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.24%)</title><rect x="965.2" y="1283.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.24%)</title><rect x="965.2" y="1267.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.24%)</title><rect x="965.2" y="1251.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.2" y="1262.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.05%)</title><rect x="965.2" y="1235.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="968.2" y="1246.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.05%)</title><rect x="965.2" y="1219.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="968.2" y="1230.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.19%)</title><rect x="965.8" y="1235.0" width="2.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="968.8" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.19%)</title><rect x="965.8" y="1219.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="968.8" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.19%)</title><rect x="965.8" y="1203.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.8" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.19%)</title><rect x="965.8" y="1187.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.8" y="1198.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.19%)</title><rect x="965.8" y="1171.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.8" y="1182.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.19%)</title><rect x="965.8" y="1155.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="968.8" y="1166.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.05%)</title><rect x="965.8" y="1139.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.8" y="1150.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.14%)</title><rect x="966.3" y="1139.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="969.3" y="1150.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.14%)</title><rect x="966.3" y="1123.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="969.3" y="1134.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="966.3" y="1107.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.14%)</title><rect x="968.0" y="1427.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="971.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (3 samples, 0.14%)</title><rect x="968.0" y="1411.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="971.0" y="1422.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.10%)</title><rect x="968.6" y="1395.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="971.6" y="1406.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.10%)</title><rect x="968.6" y="1379.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="971.6" y="1390.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.10%)</title><rect x="968.6" y="1363.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="971.6" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5 samples, 0.24%)</title><rect x="969.7" y="1427.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.7" y="1438.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.14%)</title><rect x="969.7" y="1411.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.7" y="1422.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.14%)</title><rect x="969.7" y="1395.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="972.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.14%)</title><rect x="969.7" y="1379.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.7" y="1390.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.05%)</title><rect x="969.7" y="1363.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="972.7" y="1374.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.05%)</title><rect x="969.7" y="1347.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="972.7" y="1358.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="969.7" y="1331.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="972.7" y="1342.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="969.7" y="1315.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="972.7" y="1326.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="969.7" y="1299.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="972.7" y="1310.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.10%)</title><rect x="970.3" y="1363.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="973.3" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="970.8" y="1347.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="973.8" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="970.8" y="1331.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="973.8" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="970.8" y="1315.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="973.8" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.05%)</title><rect x="971.4" y="1411.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="974.4" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.05%)</title><rect x="971.4" y="1395.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="974.4" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.05%)</title><rect x="971.4" y="1379.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.4" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.05%)</title><rect x="971.9" y="1411.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="974.9" y="1422.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="971.9" y="1395.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="974.9" y="1406.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.05%)</title><rect x="971.9" y="1379.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="974.9" y="1390.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.05%)</title><rect x="971.9" y="1363.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.9" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (61 samples, 2.90%)</title><rect x="972.5" y="1427.0" width="34.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="975.5" y="1438.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (61 samples, 2.90%)</title><rect x="972.5" y="1411.0" width="34.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.5" y="1422.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (60 samples, 2.85%)</title><rect x="972.5" y="1395.0" width="33.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.5" y="1406.0">su..</text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.05%)</title><rect x="972.5" y="1379.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="975.5" y="1390.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="972.5" y="1363.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="975.5" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="972.5" y="1347.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.5" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="972.5" y="1331.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="975.5" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (35 samples, 1.66%)</title><rect x="973.1" y="1379.0" width="19.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.1" y="1390.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.10%)</title><rect x="974.2" y="1363.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="977.2" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="974.2" y="1347.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.2" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="974.2" y="1331.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="977.2" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="974.2" y="1315.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.2" y="1326.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 1.43%)</title><rect x="975.3" y="1363.0" width="16.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="978.3" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 1.33%)</title><rect x="975.3" y="1347.0" width="15.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.3" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.10%)</title><rect x="975.3" y="1331.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="978.3" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.24%)</title><rect x="976.4" y="1331.0" width="14.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="979.4" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 1.19%)</title><rect x="977.0" y="1315.0" width="14.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.0" y="1326.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 1.19%)</title><rect x="977.0" y="1299.0" width="14.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="980.0" y="1310.0"></text>
</g>
<g>
<title>ep_poll (23 samples, 1.09%)</title><rect x="977.5" y="1283.0" width="12.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="980.5" y="1294.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 0.48%)</title><rect x="977.5" y="1267.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="980.5" y="1278.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.43%)</title><rect x="978.1" y="1251.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="981.1" y="1262.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.29%)</title><rect x="979.2" y="1235.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="982.2" y="1246.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.05%)</title><rect x="979.8" y="1219.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="982.8" y="1230.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.19%)</title><rect x="980.3" y="1219.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="983.3" y="1230.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.05%)</title><rect x="980.9" y="1203.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="983.9" y="1214.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.10%)</title><rect x="981.5" y="1203.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="984.5" y="1214.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.05%)</title><rect x="982.6" y="1235.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="985.6" y="1246.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (11 samples, 0.52%)</title><rect x="983.1" y="1267.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="986.1" y="1278.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (11 samples, 0.52%)</title><rect x="983.1" y="1251.0" width="6.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="986.1" y="1262.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.05%)</title><rect x="983.1" y="1235.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="986.1" y="1246.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="983.1" y="1219.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="986.1" y="1230.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.48%)</title><rect x="983.7" y="1235.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.7" y="1246.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.48%)</title><rect x="983.7" y="1219.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="986.7" y="1230.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 0.38%)</title><rect x="984.8" y="1203.0" width="4.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="987.8" y="1214.0"></text>
</g>
<g>
<title>select_estimate_accuracy (2 samples, 0.10%)</title><rect x="989.3" y="1267.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.3" y="1278.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.05%)</title><rect x="989.9" y="1251.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="992.9" y="1262.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.05%)</title><rect x="990.4" y="1283.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="993.4" y="1294.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.10%)</title><rect x="991.0" y="1347.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="994.0" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.10%)</title><rect x="991.0" y="1331.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.0" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.10%)</title><rect x="991.0" y="1315.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="994.0" y="1326.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="991.6" y="1299.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.6" y="1310.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="991.6" y="1283.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.6" y="1294.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="991.6" y="1267.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.6" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="992.1" y="1363.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.1" y="1374.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="992.1" y="1347.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="995.1" y="1358.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="992.1" y="1331.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="995.1" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (21 samples, 1.00%)</title><rect x="992.7" y="1379.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.7" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.10%)</title><rect x="992.7" y="1363.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="995.7" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="992.7" y="1347.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="995.7" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="993.2" y="1347.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="996.2" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (17 samples, 0.81%)</title><rect x="993.8" y="1363.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="996.8" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (16 samples, 0.76%)</title><rect x="994.4" y="1347.0" width="8.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="997.4" y="1358.0"></text>
</g>
<g>
<title>read (16 samples, 0.76%)</title><rect x="994.4" y="1331.0" width="8.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="997.4" y="1342.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.71%)</title><rect x="994.9" y="1315.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="997.9" y="1326.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.71%)</title><rect x="994.9" y="1299.0" width="8.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.9" y="1310.0"></text>
</g>
<g>
<title>__x64_sys_read (14 samples, 0.67%)</title><rect x="995.5" y="1283.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="998.5" y="1294.0"></text>
</g>
<g>
<title>ksys_read (14 samples, 0.67%)</title><rect x="995.5" y="1267.0" width="7.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="998.5" y="1278.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.05%)</title><rect x="995.5" y="1251.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="998.5" y="1262.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.05%)</title><rect x="995.5" y="1235.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.5" y="1246.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.05%)</title><rect x="995.5" y="1219.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="998.5" y="1230.0"></text>
</g>
<g>
<title>fput (1 samples, 0.05%)</title><rect x="996.0" y="1251.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="999.0" y="1262.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.57%)</title><rect x="996.6" y="1251.0" width="6.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.6" y="1262.0"></text>
</g>
<g>
<title>__vfs_read (9 samples, 0.43%)</title><rect x="996.6" y="1235.0" width="5.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.6" y="1246.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.29%)</title><rect x="996.6" y="1219.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="999.6" y="1230.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.10%)</title><rect x="996.6" y="1203.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="999.6" y="1214.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.14%)</title><rect x="997.7" y="1203.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1000.7" y="1214.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.10%)</title><rect x="997.7" y="1187.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1000.7" y="1198.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.10%)</title><rect x="997.7" y="1171.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.7" y="1182.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.10%)</title><rect x="997.7" y="1155.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.7" y="1166.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.05%)</title><rect x="998.8" y="1187.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1001.8" y="1198.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.05%)</title><rect x="998.8" y="1171.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1001.8" y="1182.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.05%)</title><rect x="998.8" y="1155.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1001.8" y="1166.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.05%)</title><rect x="999.4" y="1203.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.4" y="1214.0"></text>
</g>
<g>
<title>pipe_read (3 samples, 0.14%)</title><rect x="1000.0" y="1219.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.0" y="1230.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.14%)</title><rect x="1001.6" y="1235.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1004.6" y="1246.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.14%)</title><rect x="1001.6" y="1219.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1004.6" y="1230.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.10%)</title><rect x="1001.6" y="1203.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1004.6" y="1214.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.10%)</title><rect x="1001.6" y="1187.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1004.6" y="1198.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.05%)</title><rect x="1002.8" y="1203.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1005.8" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.10%)</title><rect x="1003.3" y="1363.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.05%)</title><rect x="1003.3" y="1347.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1006.3" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.05%)</title><rect x="1003.3" y="1331.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1006.3" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1003.3" y="1315.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1006.3" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.05%)</title><rect x="1003.3" y="1299.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.3" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1003.3" y="1283.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1006.3" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1003.3" y="1267.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1006.3" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1003.3" y="1251.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1006.3" y="1262.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.05%)</title><rect x="1003.3" y="1235.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.3" y="1246.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.05%)</title><rect x="1003.3" y="1219.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.3" y="1230.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.05%)</title><rect x="1003.3" y="1203.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1006.3" y="1214.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1003.9" y="1347.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1006.9" y="1358.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1003.9" y="1331.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1006.9" y="1342.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1003.9" y="1315.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1006.9" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.05%)</title><rect x="1004.5" y="1379.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1007.5" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.putIfAbsent (1 samples, 0.05%)</title><rect x="1004.5" y="1363.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1007.5" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="1004.5" y="1347.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1007.5" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.10%)</title><rect x="1005.0" y="1379.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.0" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (2 samples, 0.10%)</title><rect x="1005.0" y="1363.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1008.0" y="1374.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.05%)</title><rect x="1005.6" y="1347.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.05%)</title><rect x="1005.6" y="1331.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1008.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.05%)</title><rect x="1005.6" y="1315.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1008.6" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1006.1" y="1395.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.1" y="1406.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1006.1" y="1379.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1009.1" y="1390.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1006.1" y="1363.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1009.1" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (8 samples, 0.38%)</title><rect x="1006.7" y="1427.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.7" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (8 samples, 0.38%)</title><rect x="1006.7" y="1411.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1009.7" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (8 samples, 0.38%)</title><rect x="1006.7" y="1395.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.7" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (6 samples, 0.29%)</title><rect x="1006.7" y="1379.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1009.7" y="1390.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="1006.7" y="1363.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1009.7" y="1374.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.24%)</title><rect x="1007.3" y="1363.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1010.3" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.24%)</title><rect x="1007.3" y="1347.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1010.3" y="1358.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.24%)</title><rect x="1007.3" y="1331.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1010.3" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.19%)</title><rect x="1007.8" y="1315.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1010.8" y="1326.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.19%)</title><rect x="1007.8" y="1299.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1010.8" y="1310.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.14%)</title><rect x="1008.4" y="1283.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1011.4" y="1294.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.14%)</title><rect x="1008.4" y="1267.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1011.4" y="1278.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.10%)</title><rect x="1008.4" y="1251.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1011.4" y="1262.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.10%)</title><rect x="1008.4" y="1235.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1011.4" y="1246.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="1008.4" y="1219.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1011.4" y="1230.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.05%)</title><rect x="1008.4" y="1203.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1011.4" y="1214.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.05%)</title><rect x="1008.9" y="1203.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1011.9" y="1214.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.05%)</title><rect x="1009.5" y="1251.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.5" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.05%)</title><rect x="1010.1" y="1379.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1013.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.05%)</title><rect x="1010.1" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.1" y="1374.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.05%)</title><rect x="1010.1" y="1347.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1013.1" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.05%)</title><rect x="1010.1" y="1331.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1013.1" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1010.1" y="1315.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1013.1" y="1326.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1010.1" y="1299.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1013.1" y="1310.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1010.1" y="1283.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.1" y="1294.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1010.1" y="1267.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1013.1" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.05%)</title><rect x="1010.6" y="1379.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1013.6" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.getFDVal (1 samples, 0.05%)</title><rect x="1010.6" y="1363.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.6" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.10%)</title><rect x="1011.2" y="1427.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.2" y="1438.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.10%)</title><rect x="1011.2" y="1411.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1014.2" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.10%)</title><rect x="1011.2" y="1395.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.2" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1011.2" y="1379.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.2" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1011.2" y="1363.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.2" y="1374.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1012.3" y="1427.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.3" y="1438.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1012.3" y="1411.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1015.3" y="1422.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1012.3" y="1395.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1015.3" y="1406.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (294 samples, 13.97%)</title><rect x="1012.9" y="1443.0" width="164.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1015.9" y="1454.0">one/nio/server/Select..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1012.9" y="1427.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1015.9" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1012.9" y="1411.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1015.9" y="1422.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1012.9" y="1395.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1015.9" y="1406.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.05%)</title><rect x="1013.4" y="1427.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.4" y="1438.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.05%)</title><rect x="1013.4" y="1411.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.4" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.05%)</title><rect x="1013.4" y="1395.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1016.4" y="1406.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (42 samples, 2.00%)</title><rect x="1014.0" y="1427.0" width="23.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.0" y="1438.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1014.0" y="1411.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1017.0" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1014.0" y="1395.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1017.0" y="1406.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1014.0" y="1379.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1017.0" y="1390.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1014.0" y="1363.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1017.0" y="1374.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1014.0" y="1347.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1017.0" y="1358.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1014.0" y="1331.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1017.0" y="1342.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="1014.0" y="1315.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1017.0" y="1326.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.05%)</title><rect x="1014.0" y="1299.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1017.0" y="1310.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.05%)</title><rect x="1014.0" y="1283.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1017.0" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (41 samples, 1.95%)</title><rect x="1014.5" y="1411.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.5" y="1422.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.05%)</title><rect x="1016.2" y="1395.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1019.2" y="1406.0"></text>
</g>
<g>
<title>epoll_wait (37 samples, 1.76%)</title><rect x="1016.8" y="1395.0" width="20.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1019.8" y="1406.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 1.66%)</title><rect x="1017.9" y="1379.0" width="19.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1020.9" y="1390.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 1.66%)</title><rect x="1017.9" y="1363.0" width="19.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1020.9" y="1374.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (33 samples, 1.57%)</title><rect x="1019.0" y="1347.0" width="18.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1022.0" y="1358.0"></text>
</g>
<g>
<title>do_epoll_wait (33 samples, 1.57%)</title><rect x="1019.0" y="1331.0" width="18.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1022.0" y="1342.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.10%)</title><rect x="1019.0" y="1315.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1022.0" y="1326.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.10%)</title><rect x="1019.0" y="1299.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1022.0" y="1310.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.10%)</title><rect x="1019.0" y="1283.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1022.0" y="1294.0"></text>
</g>
<g>
<title>ep_poll (30 samples, 1.43%)</title><rect x="1020.1" y="1315.0" width="16.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1023.1" y="1326.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (9 samples, 0.43%)</title><rect x="1020.7" y="1299.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.7" y="1310.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.33%)</title><rect x="1021.8" y="1283.0" width="4.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.8" y="1294.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.14%)</title><rect x="1022.4" y="1267.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1025.4" y="1278.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.10%)</title><rect x="1023.0" y="1251.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1026.0" y="1262.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.14%)</title><rect x="1024.1" y="1267.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1027.1" y="1278.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.05%)</title><rect x="1025.8" y="1299.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1028.8" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (19 samples, 0.90%)</title><rect x="1026.3" y="1299.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1029.3" y="1310.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (19 samples, 0.90%)</title><rect x="1026.3" y="1283.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1029.3" y="1294.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.86%)</title><rect x="1026.9" y="1267.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1029.9" y="1278.0"></text>
</g>
<g>
<title>__schedule (18 samples, 0.86%)</title><rect x="1026.9" y="1251.0" width="10.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1029.9" y="1262.0"></text>
</g>
<g>
<title>finish_task_switch (17 samples, 0.81%)</title><rect x="1027.4" y="1235.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1030.4" y="1246.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.05%)</title><rect x="1037.0" y="1315.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1040.0" y="1326.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (249 samples, 11.83%)</title><rect x="1037.5" y="1427.0" width="139.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1040.5" y="1438.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (248 samples, 11.78%)</title><rect x="1038.1" y="1411.0" width="139.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.1" y="1422.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (217 samples, 10.31%)</title><rect x="1038.1" y="1395.0" width="121.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.1" y="1406.0">one/nio/http/Ht..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.05%)</title><rect x="1040.3" y="1379.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1043.3" y="1390.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.05%)</title><rect x="1040.3" y="1363.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1043.3" y="1374.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.05%)</title><rect x="1040.3" y="1347.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.3" y="1358.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.05%)</title><rect x="1040.3" y="1331.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1043.3" y="1342.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.05%)</title><rect x="1040.3" y="1315.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1043.3" y="1326.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.05%)</title><rect x="1040.3" y="1299.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1043.3" y="1310.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1040.3" y="1283.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.05%)</title><rect x="1040.9" y="1379.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.9" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (200 samples, 9.50%)</title><rect x="1041.4" y="1379.0" width="112.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1044.4" y="1390.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (198 samples, 9.41%)</title><rect x="1042.6" y="1363.0" width="111.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.6" y="1374.0">one/nio/http/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (191 samples, 9.07%)</title><rect x="1042.6" y="1347.0" width="107.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.6" y="1358.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.05%)</title><rect x="1042.6" y="1331.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1042.6" y="1315.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1045.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1042.6" y="1299.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1045.6" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (190 samples, 9.03%)</title><rect x="1043.1" y="1331.0" width="106.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1046.1" y="1342.0">ru/mail/polis..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.05%)</title><rect x="1043.7" y="1315.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.05%)</title><rect x="1043.7" y="1299.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1046.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.05%)</title><rect x="1043.7" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1046.7" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (69 samples, 3.28%)</title><rect x="1044.3" y="1315.0" width="38.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1047.3" y="1326.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (69 samples, 3.28%)</title><rect x="1044.3" y="1299.0" width="38.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1047.3" y="1310.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (69 samples, 3.28%)</title><rect x="1044.3" y="1283.0" width="38.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1047.3" y="1294.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (69 samples, 3.28%)</title><rect x="1044.3" y="1267.0" width="38.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.3" y="1278.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (66 samples, 3.14%)</title><rect x="1045.9" y="1251.0" width="37.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.9" y="1262.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (65 samples, 3.09%)</title><rect x="1045.9" y="1235.0" width="36.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.9" y="1246.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (65 samples, 3.09%)</title><rect x="1045.9" y="1219.0" width="36.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1048.9" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (65 samples, 3.09%)</title><rect x="1045.9" y="1203.0" width="36.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1048.9" y="1214.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (65 samples, 3.09%)</title><rect x="1045.9" y="1187.0" width="36.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1048.9" y="1198.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (61 samples, 2.90%)</title><rect x="1048.2" y="1171.0" width="34.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.2" y="1182.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (61 samples, 2.90%)</title><rect x="1048.2" y="1155.0" width="34.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1051.2" y="1166.0">jd..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.05%)</title><rect x="1048.2" y="1139.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1051.2" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.14%)</title><rect x="1048.7" y="1139.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1051.7" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.10%)</title><rect x="1049.3" y="1123.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1052.3" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (56 samples, 2.66%)</title><rect x="1050.4" y="1139.0" width="31.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1053.4" y="1150.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 2.61%)</title><rect x="1051.0" y="1123.0" width="30.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1054.0" y="1134.0">en..</text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="1051.0" y="1107.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1054.0" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.57%)</title><rect x="1051.5" y="1107.0" width="30.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.5" y="1118.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (53 samples, 2.52%)</title><rect x="1051.5" y="1091.0" width="29.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1054.5" y="1102.0">__..</text>
</g>
<g>
<title>do_futex (52 samples, 2.47%)</title><rect x="1051.5" y="1075.0" width="29.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1054.5" y="1086.0">do..</text>
</g>
<g>
<title>futex_wake (52 samples, 2.47%)</title><rect x="1051.5" y="1059.0" width="29.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1054.5" y="1070.0">fu..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.05%)</title><rect x="1052.7" y="1043.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1055.7" y="1054.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.05%)</title><rect x="1052.7" y="1027.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1055.7" y="1038.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.19%)</title><rect x="1053.2" y="1043.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1056.2" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (45 samples, 2.14%)</title><rect x="1055.5" y="1043.0" width="25.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1058.5" y="1054.0">w..</text>
</g>
<g>
<title>try_to_wake_up (45 samples, 2.14%)</title><rect x="1055.5" y="1027.0" width="25.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1058.5" y="1038.0">t..</text>
</g>
<g>
<title>__lock_text_start (45 samples, 2.14%)</title><rect x="1055.5" y="1011.0" width="25.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1058.5" y="1022.0">_..</text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="1080.7" y="1075.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1083.7" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1081.2" y="1091.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1084.2" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.05%)</title><rect x="1081.8" y="1139.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1084.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.05%)</title><rect x="1082.4" y="1235.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.05%)</title><rect x="1082.4" y="1219.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.05%)</title><rect x="1082.4" y="1203.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.05%)</title><rect x="1082.4" y="1187.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.05%)</title><rect x="1082.4" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.4" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (118 samples, 5.61%)</title><rect x="1082.9" y="1315.0" width="66.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.9" y="1326.0">ru/mail..</text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.05%)</title><rect x="1084.1" y="1299.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1087.1" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.05%)</title><rect x="1084.1" y="1283.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1087.1" y="1294.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1084.6" y="1299.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.6" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1084.6" y="1283.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1087.6" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1084.6" y="1267.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1087.6" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1084.6" y="1251.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.6" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (98 samples, 4.66%)</title><rect x="1085.2" y="1299.0" width="54.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.2" y="1310.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (72 samples, 3.42%)</title><rect x="1085.7" y="1283.0" width="40.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1088.7" y="1294.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (72 samples, 3.42%)</title><rect x="1085.7" y="1267.0" width="40.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.7" y="1278.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (72 samples, 3.42%)</title><rect x="1085.7" y="1251.0" width="40.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1088.7" y="1262.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (72 samples, 3.42%)</title><rect x="1085.7" y="1235.0" width="40.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.7" y="1246.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (49 samples, 2.33%)</title><rect x="1085.7" y="1219.0" width="27.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1088.7" y="1230.0">j..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="1086.3" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1089.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1 samples, 0.05%)</title><rect x="1086.3" y="1187.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1089.3" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (7 samples, 0.33%)</title><rect x="1086.9" y="1203.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1089.9" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.05%)</title><rect x="1086.9" y="1187.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1089.9" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.05%)</title><rect x="1086.9" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1089.9" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.05%)</title><rect x="1086.9" y="1155.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.9" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="1086.9" y="1139.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1089.9" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="1086.9" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="1086.9" y="1107.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1089.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="1086.9" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1089.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="1086.9" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1089.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.05%)</title><rect x="1086.9" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1089.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.05%)</title><rect x="1086.9" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1089.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.10%)</title><rect x="1087.4" y="1187.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1090.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.10%)</title><rect x="1087.4" y="1171.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1090.4" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.10%)</title><rect x="1087.4" y="1155.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1090.4" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.19%)</title><rect x="1088.5" y="1187.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1091.5" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.19%)</title><rect x="1088.5" y="1171.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1091.5" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.14%)</title><rect x="1089.1" y="1155.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1092.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.14%)</title><rect x="1089.1" y="1139.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1092.1" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.10%)</title><rect x="1089.1" y="1123.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.10%)</title><rect x="1089.1" y="1107.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1092.1" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.05%)</title><rect x="1089.1" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1092.1" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.05%)</title><rect x="1089.7" y="1091.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1092.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.05%)</title><rect x="1090.2" y="1123.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.2" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.14%)</title><rect x="1090.8" y="1203.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.8" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.14%)</title><rect x="1090.8" y="1187.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.8" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (3 samples, 0.14%)</title><rect x="1090.8" y="1171.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1093.8" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.14%)</title><rect x="1090.8" y="1155.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1093.8" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (3 samples, 0.14%)</title><rect x="1090.8" y="1139.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1093.8" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.14%)</title><rect x="1090.8" y="1123.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1093.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.10%)</title><rect x="1090.8" y="1107.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1093.8" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (2 samples, 0.10%)</title><rect x="1090.8" y="1091.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1093.8" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.10%)</title><rect x="1090.8" y="1075.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$69/867148091.test (2 samples, 0.10%)</title><rect x="1090.8" y="1059.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1093.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.10%)</title><rect x="1090.8" y="1043.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (1 samples, 0.05%)</title><rect x="1090.8" y="1027.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1093.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.05%)</title><rect x="1090.8" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1093.8" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.05%)</title><rect x="1090.8" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1093.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.05%)</title><rect x="1090.8" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1093.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.05%)</title><rect x="1090.8" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1093.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.05%)</title><rect x="1090.8" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.05%)</title><rect x="1090.8" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1093.8" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.05%)</title><rect x="1090.8" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.05%)</title><rect x="1091.3" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.05%)</title><rect x="1091.9" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1094.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.05%)</title><rect x="1091.9" y="1091.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1094.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.05%)</title><rect x="1092.5" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1095.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.05%)</title><rect x="1092.5" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1095.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (33 samples, 1.57%)</title><rect x="1093.0" y="1203.0" width="18.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.0" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (33 samples, 1.57%)</title><rect x="1093.0" y="1187.0" width="18.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1096.0" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (32 samples, 1.52%)</title><rect x="1093.6" y="1171.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.6" y="1182.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libjava.so (1 samples, 0.05%)</title><rect x="1093.6" y="1155.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1096.6" y="1166.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.05%)</title><rect x="1094.1" y="1155.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1097.1" y="1166.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (22 samples, 1.05%)</title><rect x="1094.7" y="1155.0" width="12.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1097.7" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.05%)</title><rect x="1096.4" y="1139.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1099.4" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="1096.4" y="1123.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1099.4" y="1134.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.14%)</title><rect x="1096.9" y="1139.0" width="1.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.9" y="1150.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.05%)</title><rect x="1097.5" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1100.5" y="1134.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.05%)</title><rect x="1098.1" y="1123.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1101.1" y="1134.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.05%)</title><rect x="1098.6" y="1139.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.6" y="1150.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.10%)</title><rect x="1099.2" y="1139.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1102.2" y="1150.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.10%)</title><rect x="1100.3" y="1139.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1103.3" y="1150.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1100.9" y="1123.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1103.9" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1100.9" y="1107.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1103.9" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1100.9" y="1091.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1103.9" y="1102.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.05%)</title><rect x="1101.4" y="1139.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1104.4" y="1150.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.24%)</title><rect x="1102.0" y="1139.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.0" y="1150.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.24%)</title><rect x="1102.0" y="1123.0" width="2.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1105.0" y="1134.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (5 samples, 0.24%)</title><rect x="1102.0" y="1107.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.0" y="1118.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.19%)</title><rect x="1104.8" y="1139.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1107.8" y="1150.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.10%)</title><rect x="1104.8" y="1123.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1107.8" y="1134.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.05%)</title><rect x="1105.9" y="1123.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1108.9" y="1134.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.05%)</title><rect x="1106.5" y="1123.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.5" y="1134.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.05%)</title><rect x="1106.5" y="1107.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1109.5" y="1118.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.05%)</title><rect x="1106.5" y="1091.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1109.5" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.10%)</title><rect x="1107.0" y="1155.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1110.0" y="1166.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.29%)</title><rect x="1108.2" y="1155.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1111.2" y="1166.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 0.19%)</title><rect x="1108.7" y="1139.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1111.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.10%)</title><rect x="1109.3" y="1123.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1112.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="1109.3" y="1107.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1112.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="1109.3" y="1091.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1112.3" y="1102.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (1 samples, 0.05%)</title><rect x="1110.4" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (1 samples, 0.05%)</title><rect x="1110.4" y="1107.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1113.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="1110.4" y="1091.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1113.4" y="1102.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.05%)</title><rect x="1110.4" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1113.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.05%)</title><rect x="1110.4" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1113.4" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1111.0" y="1139.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1114.0" y="1150.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1111.0" y="1123.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1114.0" y="1134.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1111.0" y="1107.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1114.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.05%)</title><rect x="1111.5" y="1203.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1114.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.10%)</title><rect x="1112.1" y="1203.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1115.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (13 samples, 0.62%)</title><rect x="1113.2" y="1219.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (5 samples, 0.24%)</title><rect x="1113.2" y="1203.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1116.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.24%)</title><rect x="1113.2" y="1187.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1116.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.24%)</title><rect x="1113.2" y="1171.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1116.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.24%)</title><rect x="1113.2" y="1155.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.24%)</title><rect x="1113.2" y="1139.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1116.2" y="1150.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (5 samples, 0.24%)</title><rect x="1113.2" y="1123.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1116.2" y="1134.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (2 samples, 0.10%)</title><rect x="1114.9" y="1107.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1117.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (8 samples, 0.38%)</title><rect x="1116.0" y="1203.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1119.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.24%)</title><rect x="1116.6" y="1187.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (4 samples, 0.19%)</title><rect x="1116.6" y="1171.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1119.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.05%)</title><rect x="1116.6" y="1155.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1119.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (1 samples, 0.05%)</title><rect x="1116.6" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (1 samples, 0.05%)</title><rect x="1116.6" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1119.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (3 samples, 0.14%)</title><rect x="1117.1" y="1155.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.05%)</title><rect x="1118.2" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1121.2" y="1150.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.05%)</title><rect x="1118.8" y="1171.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1121.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1119.4" y="1187.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1122.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (10 samples, 0.48%)</title><rect x="1120.5" y="1219.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (6 samples, 0.29%)</title><rect x="1120.5" y="1203.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.29%)</title><rect x="1120.5" y="1187.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.29%)</title><rect x="1120.5" y="1171.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1123.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.19%)</title><rect x="1120.5" y="1155.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1123.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.19%)</title><rect x="1120.5" y="1139.0" width="2.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1123.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.19%)</title><rect x="1120.5" y="1123.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1123.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.19%)</title><rect x="1120.5" y="1107.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1123.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.19%)</title><rect x="1120.5" y="1091.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1123.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.19%)</title><rect x="1120.5" y="1075.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1123.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.19%)</title><rect x="1120.5" y="1059.0" width="2.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1123.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.19%)</title><rect x="1120.5" y="1043.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1123.5" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.19%)</title><rect x="1120.5" y="1027.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1123.5" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.19%)</title><rect x="1120.5" y="1011.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1123.5" y="1022.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.19%)</title><rect x="1120.5" y="995.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1123.5" y="1006.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.19%)</title><rect x="1120.5" y="979.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1123.5" y="990.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.19%)</title><rect x="1120.5" y="963.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1123.5" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.19%)</title><rect x="1120.5" y="947.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1123.5" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.19%)</title><rect x="1120.5" y="931.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1123.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.10%)</title><rect x="1122.7" y="1155.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1125.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.10%)</title><rect x="1122.7" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1125.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.10%)</title><rect x="1122.7" y="1123.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1125.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (4 samples, 0.19%)</title><rect x="1123.9" y="1203.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.14%)</title><rect x="1124.4" y="1187.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.14%)</title><rect x="1124.4" y="1171.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.10%)</title><rect x="1124.4" y="1155.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1127.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="1125.5" y="1155.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.05%)</title><rect x="1125.5" y="1139.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1128.5" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1125.5" y="1123.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.5" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1125.5" y="1107.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.5" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1125.5" y="1091.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.5" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1125.5" y="1075.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.5" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1125.5" y="1059.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1128.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (25 samples, 1.19%)</title><rect x="1126.1" y="1283.0" width="14.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.10%)</title><rect x="1126.1" y="1267.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1129.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.10%)</title><rect x="1126.1" y="1251.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.1" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.10%)</title><rect x="1126.1" y="1235.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.1" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.10%)</title><rect x="1126.1" y="1219.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1129.1" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.10%)</title><rect x="1126.1" y="1203.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1129.1" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (2 samples, 0.10%)</title><rect x="1126.1" y="1187.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1129.1" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.10%)</title><rect x="1126.1" y="1171.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.1" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.05%)</title><rect x="1126.7" y="1155.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1129.7" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (1 samples, 0.05%)</title><rect x="1126.7" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1129.7" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.05%)</title><rect x="1126.7" y="1123.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1129.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (1 samples, 0.05%)</title><rect x="1126.7" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.05%)</title><rect x="1126.7" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1129.7" y="1102.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.05%)</title><rect x="1126.7" y="1075.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.7" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.05%)</title><rect x="1126.7" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1129.7" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.05%)</title><rect x="1126.7" y="1043.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.7" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="1126.7" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.7" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="1126.7" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (23 samples, 1.09%)</title><rect x="1127.2" y="1267.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.05%)</title><rect x="1127.8" y="1251.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1130.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (1 samples, 0.05%)</title><rect x="1127.8" y="1235.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1130.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (1 samples, 0.05%)</title><rect x="1127.8" y="1219.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1130.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.05%)</title><rect x="1127.8" y="1203.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1130.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.05%)</title><rect x="1127.8" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.05%)</title><rect x="1127.8" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1130.8" y="1182.0"></text>
</g>
<g>
<title>java/net/URI.create (13 samples, 0.62%)</title><rect x="1128.3" y="1251.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.3" y="1262.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (13 samples, 0.62%)</title><rect x="1128.3" y="1235.0" width="7.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1131.3" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (13 samples, 0.62%)</title><rect x="1128.3" y="1219.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1131.3" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (10 samples, 0.48%)</title><rect x="1130.0" y="1203.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1133.0" y="1214.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (4 samples, 0.19%)</title><rect x="1130.0" y="1187.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1133.0" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.19%)</title><rect x="1130.0" y="1171.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1133.0" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (6 samples, 0.29%)</title><rect x="1132.3" y="1187.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1135.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.05%)</title><rect x="1132.3" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1135.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.05%)</title><rect x="1132.3" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1135.3" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.10%)</title><rect x="1132.8" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1135.8" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.05%)</title><rect x="1132.8" y="1155.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1135.8" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1132.8" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1135.8" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.05%)</title><rect x="1132.8" y="1123.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1135.8" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.05%)</title><rect x="1133.4" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1136.4" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.05%)</title><rect x="1133.4" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.4" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.14%)</title><rect x="1133.9" y="1171.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1136.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (5 samples, 0.24%)</title><rect x="1135.6" y="1251.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1138.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (5 samples, 0.24%)</title><rect x="1135.6" y="1235.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (2 samples, 0.10%)</title><rect x="1135.6" y="1219.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (1 samples, 0.05%)</title><rect x="1135.6" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1138.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.05%)</title><rect x="1135.6" y="1187.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.6" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.05%)</title><rect x="1135.6" y="1171.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1138.6" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.05%)</title><rect x="1135.6" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1138.6" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.05%)</title><rect x="1135.6" y="1139.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1138.6" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.05%)</title><rect x="1135.6" y="1123.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1138.6" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.05%)</title><rect x="1135.6" y="1107.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.05%)</title><rect x="1136.2" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.14%)</title><rect x="1136.7" y="1219.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.7" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="1136.7" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.05%)</title><rect x="1136.7" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1139.7" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="1136.7" y="1171.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.7" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.05%)</title><rect x="1136.7" y="1155.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1139.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.05%)</title><rect x="1136.7" y="1139.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1139.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.05%)</title><rect x="1136.7" y="1123.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1139.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.10%)</title><rect x="1137.3" y="1203.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1140.3" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.10%)</title><rect x="1137.3" y="1187.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1140.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="1137.9" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1140.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.05%)</title><rect x="1137.9" y="1155.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1140.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.05%)</title><rect x="1137.9" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1140.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.14%)</title><rect x="1138.4" y="1251.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (3 samples, 0.14%)</title><rect x="1138.4" y="1235.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1141.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.14%)</title><rect x="1138.4" y="1219.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.14%)</title><rect x="1138.4" y="1203.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1141.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.05%)</title><rect x="1139.0" y="1187.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1142.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (1 samples, 0.05%)</title><rect x="1139.5" y="1187.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1142.5" y="1198.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1139.5" y="1171.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1142.5" y="1182.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1139.5" y="1155.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.5" y="1166.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1139.5" y="1139.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1142.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (5 samples, 0.24%)</title><rect x="1140.1" y="1299.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1143.1" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (5 samples, 0.24%)</title><rect x="1140.1" y="1283.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1143.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 0.24%)</title><rect x="1140.1" y="1267.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1143.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (5 samples, 0.24%)</title><rect x="1140.1" y="1251.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.19%)</title><rect x="1140.7" y="1235.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.19%)</title><rect x="1140.7" y="1219.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1143.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.05%)</title><rect x="1140.7" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.05%)</title><rect x="1140.7" y="1187.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.05%)</title><rect x="1140.7" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.05%)</title><rect x="1140.7" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1143.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.05%)</title><rect x="1140.7" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1143.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.05%)</title><rect x="1140.7" y="1123.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.7" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.05%)</title><rect x="1140.7" y="1107.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1143.7" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.05%)</title><rect x="1140.7" y="1091.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.7" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.05%)</title><rect x="1140.7" y="1075.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.14%)</title><rect x="1141.2" y="1203.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.14%)</title><rect x="1141.2" y="1187.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.14%)</title><rect x="1141.2" y="1171.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.14%)</title><rect x="1141.2" y="1155.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1144.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.14%)</title><rect x="1141.2" y="1139.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1144.2" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.14%)</title><rect x="1141.2" y="1123.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1144.2" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.14%)</title><rect x="1141.2" y="1107.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1144.2" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.14%)</title><rect x="1141.2" y="1091.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1144.2" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.14%)</title><rect x="1141.2" y="1075.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1144.2" y="1086.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.14%)</title><rect x="1141.2" y="1059.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.2" y="1070.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.14%)</title><rect x="1141.2" y="1043.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1144.2" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.14%)</title><rect x="1141.2" y="1027.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.2" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.14%)</title><rect x="1141.2" y="1011.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1144.2" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.14%)</title><rect x="1141.2" y="995.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (4 samples, 0.19%)</title><rect x="1142.9" y="1299.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.9" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.10%)</title><rect x="1142.9" y="1283.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1145.9" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.accept (2 samples, 0.10%)</title><rect x="1142.9" y="1267.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1145.9" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (2 samples, 0.10%)</title><rect x="1142.9" y="1251.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.10%)</title><rect x="1142.9" y="1235.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="1143.5" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1146.5" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.05%)</title><rect x="1143.5" y="1203.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.5" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.05%)</title><rect x="1143.5" y="1187.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.5" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.05%)</title><rect x="1143.5" y="1171.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1146.5" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.05%)</title><rect x="1143.5" y="1155.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.5" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.05%)</title><rect x="1143.5" y="1139.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1146.5" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.05%)</title><rect x="1143.5" y="1123.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1146.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.accept (2 samples, 0.10%)</title><rect x="1144.0" y="1283.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1147.0" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (7 samples, 0.33%)</title><rect x="1145.2" y="1299.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1148.2" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.10%)</title><rect x="1145.7" y="1283.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1148.7" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.05%)</title><rect x="1146.8" y="1283.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.8" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.05%)</title><rect x="1146.8" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1149.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.05%)</title><rect x="1146.8" y="1251.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1149.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (1 samples, 0.05%)</title><rect x="1146.8" y="1235.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1149.8" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.10%)</title><rect x="1147.4" y="1283.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.4" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.10%)</title><rect x="1147.4" y="1267.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1150.4" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.10%)</title><rect x="1147.4" y="1251.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1150.4" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.05%)</title><rect x="1148.0" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1151.0" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.05%)</title><rect x="1148.5" y="1283.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.5" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.05%)</title><rect x="1148.5" y="1267.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1151.5" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1148.5" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.5" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.05%)</title><rect x="1148.5" y="1235.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1151.5" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.sendResponseFromFuture (1 samples, 0.05%)</title><rect x="1149.1" y="1315.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1152.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.05%)</title><rect x="1149.1" y="1299.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1152.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.05%)</title><rect x="1149.1" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1152.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.05%)</title><rect x="1149.1" y="1267.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1152.1" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.14%)</title><rect x="1149.6" y="1347.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1152.6" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.14%)</title><rect x="1149.6" y="1331.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1152.6" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.05%)</title><rect x="1149.6" y="1315.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1152.6" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.10%)</title><rect x="1150.2" y="1315.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1153.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.10%)</title><rect x="1150.2" y="1299.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.10%)</title><rect x="1150.2" y="1283.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.19%)</title><rect x="1151.3" y="1347.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1154.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.19%)</title><rect x="1151.3" y="1331.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.19%)</title><rect x="1151.3" y="1315.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.3" y="1326.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.14%)</title><rect x="1151.3" y="1299.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1154.3" y="1310.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1152.4" y="1283.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.4" y="1294.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1152.4" y="1267.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.4" y="1278.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1152.4" y="1251.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1155.4" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.05%)</title><rect x="1153.0" y="1299.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1156.0" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.24%)</title><rect x="1153.6" y="1379.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.6" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1154.1" y="1363.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1157.1" y="1374.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.14%)</title><rect x="1154.1" y="1347.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.1" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1155.2" y="1331.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.2" y="1342.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1155.2" y="1315.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.2" y="1326.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.05%)</title><rect x="1155.2" y="1299.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.2" y="1310.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.05%)</title><rect x="1155.2" y="1283.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.05%)</title><rect x="1155.8" y="1363.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1158.8" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.10%)</title><rect x="1156.4" y="1379.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1159.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.10%)</title><rect x="1156.4" y="1363.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.10%)</title><rect x="1156.4" y="1347.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.4" y="1358.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.19%)</title><rect x="1157.5" y="1379.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.5" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.19%)</title><rect x="1157.5" y="1363.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1160.5" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.05%)</title><rect x="1159.2" y="1347.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1162.2" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.05%)</title><rect x="1159.2" y="1331.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.2" y="1342.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (31 samples, 1.47%)</title><rect x="1159.7" y="1395.0" width="17.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1162.7" y="1406.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (31 samples, 1.47%)</title><rect x="1159.7" y="1379.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1162.7" y="1390.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.48%)</title><rect x="1159.7" y="1363.0" width="5.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1162.7" y="1374.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="1160.3" y="1347.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.3" y="1358.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.05%)</title><rect x="1160.9" y="1347.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1163.9" y="1358.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.33%)</title><rect x="1161.4" y="1347.0" width="3.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1164.4" y="1358.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.14%)</title><rect x="1161.4" y="1331.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.4" y="1342.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.19%)</title><rect x="1163.1" y="1331.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1166.1" y="1342.0"></text>
</g>
<g>
<title>__recv (21 samples, 1.00%)</title><rect x="1165.3" y="1363.0" width="11.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1168.3" y="1374.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.95%)</title><rect x="1165.9" y="1347.0" width="11.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1168.9" y="1358.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.14%)</title><rect x="1165.9" y="1331.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.9" y="1342.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.81%)</title><rect x="1167.6" y="1331.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1170.6" y="1342.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.76%)</title><rect x="1168.1" y="1315.0" width="9.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.1" y="1326.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.71%)</title><rect x="1168.1" y="1299.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1171.1" y="1310.0"></text>
</g>
<g>
<title>sock_recvmsg (15 samples, 0.71%)</title><rect x="1168.1" y="1283.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.1" y="1294.0"></text>
</g>
<g>
<title>inet6_recvmsg (13 samples, 0.62%)</title><rect x="1168.1" y="1267.0" width="7.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1171.1" y="1278.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.05%)</title><rect x="1168.1" y="1251.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1171.1" y="1262.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.57%)</title><rect x="1168.7" y="1251.0" width="6.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1171.7" y="1262.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.05%)</title><rect x="1169.8" y="1235.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1172.8" y="1246.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.05%)</title><rect x="1170.4" y="1235.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1173.4" y="1246.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.14%)</title><rect x="1170.9" y="1235.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.9" y="1246.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.14%)</title><rect x="1170.9" y="1219.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.9" y="1230.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.10%)</title><rect x="1171.5" y="1203.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1174.5" y="1214.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.05%)</title><rect x="1171.5" y="1187.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1174.5" y="1198.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.05%)</title><rect x="1171.5" y="1171.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1174.5" y="1182.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.05%)</title><rect x="1172.1" y="1187.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.1" y="1198.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.05%)</title><rect x="1172.1" y="1171.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1175.1" y="1182.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.05%)</title><rect x="1172.6" y="1235.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.6" y="1246.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.05%)</title><rect x="1173.2" y="1235.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1176.2" y="1246.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.10%)</title><rect x="1173.7" y="1235.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.7" y="1246.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.10%)</title><rect x="1173.7" y="1219.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1176.7" y="1230.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.05%)</title><rect x="1174.3" y="1203.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.3" y="1214.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.05%)</title><rect x="1174.9" y="1235.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.9" y="1246.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.10%)</title><rect x="1175.4" y="1267.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.4" y="1278.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.10%)</title><rect x="1175.4" y="1251.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1178.4" y="1262.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.10%)</title><rect x="1175.4" y="1235.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.4" y="1246.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.05%)</title><rect x="1176.5" y="1299.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1179.5" y="1310.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.05%)</title><rect x="1177.1" y="1427.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.1" y="1438.0"></text>
</g>
<g>
<title>start_thread (21 samples, 1.00%)</title><rect x="1177.7" y="1443.0" width="11.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1180.7" y="1454.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (21 samples, 1.00%)</title><rect x="1177.7" y="1427.0" width="11.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1180.7" y="1438.0"></text>
</g>
<g>
<title>Thread::call_run() (21 samples, 1.00%)</title><rect x="1177.7" y="1411.0" width="11.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1180.7" y="1422.0"></text>
</g>
<g>
<title>GangWorker::loop() (16 samples, 0.76%)</title><rect x="1177.7" y="1395.0" width="8.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.7" y="1406.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (11 samples, 0.52%)</title><rect x="1177.7" y="1379.0" width="6.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.7" y="1390.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.10%)</title><rect x="1177.7" y="1363.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.7" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.05%)</title><rect x="1177.7" y="1347.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.7" y="1358.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (1 samples, 0.05%)</title><rect x="1178.2" y="1347.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.2" y="1358.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (7 samples, 0.33%)</title><rect x="1178.8" y="1363.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.8" y="1374.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.33%)</title><rect x="1178.8" y="1347.0" width="3.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.8" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (7 samples, 0.33%)</title><rect x="1178.8" y="1331.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.8" y="1342.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (7 samples, 0.33%)</title><rect x="1178.8" y="1315.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.8" y="1326.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (7 samples, 0.33%)</title><rect x="1178.8" y="1299.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.8" y="1310.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.14%)</title><rect x="1179.9" y="1283.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.9" y="1294.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.05%)</title><rect x="1180.5" y="1267.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1183.5" y="1278.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.05%)</title><rect x="1181.0" y="1267.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.0" y="1278.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (2 samples, 0.10%)</title><rect x="1181.6" y="1283.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.6" y="1294.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.10%)</title><rect x="1181.6" y="1267.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="1278.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1181.6" y="1251.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.6" y="1262.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.05%)</title><rect x="1182.2" y="1251.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.2" y="1262.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.05%)</title><rect x="1182.2" y="1235.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.2" y="1246.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1182.7" y="1363.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.7" y="1374.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.05%)</title><rect x="1182.7" y="1347.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.7" y="1358.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.05%)</title><rect x="1182.7" y="1331.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.7" y="1342.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.05%)</title><rect x="1182.7" y="1315.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.7" y="1326.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (1 samples, 0.05%)</title><rect x="1182.7" y="1299.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.7" y="1310.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (1 samples, 0.05%)</title><rect x="1182.7" y="1283.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.7" y="1294.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.05%)</title><rect x="1183.3" y="1363.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="1374.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.05%)</title><rect x="1183.3" y="1347.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.3" y="1358.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1183.3" y="1331.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="1342.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.05%)</title><rect x="1183.3" y="1315.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.3" y="1326.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.05%)</title><rect x="1183.3" y="1299.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.3" y="1310.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (5 samples, 0.24%)</title><rect x="1183.8" y="1379.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="1390.0"></text>
</g>
<g>
<title>RefProcPhase2Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.05%)</title><rect x="1183.8" y="1363.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.8" y="1374.0"></text>
</g>
<g>
<title>G1STWIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.05%)</title><rect x="1183.8" y="1347.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="1358.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (4 samples, 0.19%)</title><rect x="1184.4" y="1363.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.4" y="1374.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (4 samples, 0.19%)</title><rect x="1184.4" y="1347.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.4" y="1358.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.19%)</title><rect x="1184.4" y="1331.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.4" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.10%)</title><rect x="1184.4" y="1315.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.4" y="1326.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.10%)</title><rect x="1184.4" y="1299.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.4" y="1310.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.05%)</title><rect x="1185.5" y="1315.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.5" y="1326.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.05%)</title><rect x="1186.1" y="1315.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.1" y="1326.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (4 samples, 0.19%)</title><rect x="1186.6" y="1395.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.6" y="1406.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (4 samples, 0.19%)</title><rect x="1186.6" y="1379.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.6" y="1390.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (4 samples, 0.19%)</title><rect x="1186.6" y="1363.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.6" y="1374.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.19%)</title><rect x="1186.6" y="1347.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.6" y="1358.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (4 samples, 0.19%)</title><rect x="1186.6" y="1331.0" width="2.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="1342.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.14%)</title><rect x="1186.6" y="1315.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.6" y="1326.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (3 samples, 0.14%)</title><rect x="1186.6" y="1299.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.6" y="1310.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.05%)</title><rect x="1186.6" y="1283.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.6" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.05%)</title><rect x="1187.2" y="1283.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.2" y="1294.0"></text>
</g>
<g>
<title>rRegIOper::type() const (1 samples, 0.05%)</title><rect x="1187.2" y="1267.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.2" y="1278.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1187.2" y="1251.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.2" y="1262.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1187.2" y="1235.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1190.2" y="1246.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1187.2" y="1219.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.2" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.05%)</title><rect x="1187.8" y="1283.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.8" y="1294.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.05%)</title><rect x="1188.3" y="1315.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="1326.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.05%)</title><rect x="1188.3" y="1299.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.3" y="1310.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.05%)</title><rect x="1188.3" y="1283.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.3" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.05%)</title><rect x="1188.3" y="1267.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.3" y="1278.0"></text>
</g>
<g>
<title>IdealLoopTree::is_member(IdealLoopTree const*) const (1 samples, 0.05%)</title><rect x="1188.3" y="1251.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.3" y="1262.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.05%)</title><rect x="1188.9" y="1395.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1406.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.05%)</title><rect x="1188.9" y="1379.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.9" y="1390.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.05%)</title><rect x="1188.9" y="1363.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="1374.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.05%)</title><rect x="1188.9" y="1347.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.9" y="1358.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.05%)</title><rect x="1188.9" y="1331.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="1342.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.05%)</title><rect x="1188.9" y="1315.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.9" y="1326.0"></text>
</g>
<g>
<title>G1CollectedHeap::evacuate_collection_set(G1ParScanThreadStateSet*) (1 samples, 0.05%)</title><rect x="1188.9" y="1299.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.9" y="1310.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.05%)</title><rect x="1188.9" y="1283.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1294.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.05%)</title><rect x="1188.9" y="1267.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.9" y="1278.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.05%)</title><rect x="1188.9" y="1251.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1191.9" y="1262.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.05%)</title><rect x="1188.9" y="1235.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1191.9" y="1246.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.05%)</title><rect x="1188.9" y="1219.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1191.9" y="1230.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.05%)</title><rect x="1188.9" y="1203.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.9" y="1214.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.05%)</title><rect x="1188.9" y="1187.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1191.9" y="1198.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.05%)</title><rect x="1188.9" y="1171.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1191.9" y="1182.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.05%)</title><rect x="1188.9" y="1155.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1191.9" y="1166.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.05%)</title><rect x="1188.9" y="1139.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.9" y="1150.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.05%)</title><rect x="1188.9" y="1123.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1191.9" y="1134.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.05%)</title><rect x="1189.4" y="1443.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.4" y="1454.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.05%)</title><rect x="1189.4" y="1427.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1192.4" y="1438.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.05%)</title><rect x="1189.4" y="1411.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.4" y="1422.0"></text>
</g>
</g>
</svg>
