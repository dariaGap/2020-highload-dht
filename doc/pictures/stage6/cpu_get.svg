<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1189"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1189"> </text>
<g id="frames">
<g>
<title>all (1,718 samples, 100.00%)</title><rect x="10.0" y="1155.0" width="1180.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="1166.0">all</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="10.0" y="1139.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="13.0" y="1150.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="10.0" y="1123.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="13.0" y="1134.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="10.0" y="1107.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="13.0" y="1118.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="10.0" y="1091.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="10.0" y="1075.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="10.0" y="1059.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="10.0" y="1043.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="10.0" y="1027.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="10.0" y="1011.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="13.0" y="1022.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="10.0" y="995.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="13.0" y="1006.0"></text>
</g>
<g>
<title>swap_readpage (1 samples, 0.06%)</title><rect x="10.0" y="979.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>submit_bio (1 samples, 0.06%)</title><rect x="10.0" y="963.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>psi_memstall_leave (1 samples, 0.06%)</title><rect x="10.0" y="947.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="13.0" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.70%)</title><rect x="10.7" y="1139.0" width="8.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.7" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.70%)</title><rect x="10.7" y="1123.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.7" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (11 samples, 0.64%)</title><rect x="10.7" y="1107.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (7 samples, 0.41%)</title><rect x="10.7" y="1091.0" width="4.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.7" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="14.8" y="1075.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="17.8" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="14.8" y="1059.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="17.8" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="14.8" y="1043.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="17.8" y="1054.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.12%)</title><rect x="15.5" y="1091.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="18.5" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="16.9" y="1091.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="19.9" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="16.9" y="1075.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="19.9" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="16.9" y="1059.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="19.9" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="18.2" y="1107.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="21.2" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="18.2" y="1091.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="21.2" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="18.2" y="1075.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.2" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="18.2" y="1059.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="21.2" y="1070.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="18.2" y="1043.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="21.2" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="18.2" y="1027.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="21.2" y="1038.0"></text>
</g>
<g>
<title>[not_walkable_Java] (5 samples, 0.29%)</title><rect x="18.9" y="1139.0" width="3.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="21.9" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (5 samples, 0.29%)</title><rect x="18.9" y="1123.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.9" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (5 samples, 0.29%)</title><rect x="18.9" y="1107.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.9" y="1118.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.06%)</title><rect x="18.9" y="1091.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="21.9" y="1102.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="18.9" y="1075.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="21.9" y="1086.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.23%)</title><rect x="19.6" y="1091.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.6" y="1102.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.06%)</title><rect x="20.3" y="1075.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.3" y="1086.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.12%)</title><rect x="21.0" y="1075.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.0" y="1086.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="21.0" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.0" y="1070.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.06%)</title><rect x="21.7" y="1059.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="24.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="22.4" y="1139.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="25.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.06%)</title><rect x="22.4" y="1123.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="25.4" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="22.4" y="1107.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="25.4" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="22.4" y="1091.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.4" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="22.4" y="1075.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="25.4" y="1086.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="22.4" y="1059.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="25.4" y="1070.0"></text>
</g>
<g>
<title>[unknown_Java] (16 samples, 0.93%)</title><rect x="23.1" y="1139.0" width="10.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="26.1" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="23.1" y="1123.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="26.1" y="1134.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (1 samples, 0.06%)</title><rect x="23.1" y="1107.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="26.1" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.23%)</title><rect x="23.7" y="1123.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.7" y="1134.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (4 samples, 0.23%)</title><rect x="23.7" y="1107.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="26.7" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.17%)</title><rect x="26.5" y="1123.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="29.5" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.41%)</title><rect x="28.5" y="1123.0" width="4.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="31.5" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.35%)</title><rect x="29.2" y="1107.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.2" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="29.2" y="1091.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="32.2" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="29.9" y="1091.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="32.9" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.29%)</title><rect x="29.9" y="1075.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.9" y="1086.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.29%)</title><rect x="29.9" y="1059.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.9" y="1070.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.29%)</title><rect x="29.9" y="1043.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.9" y="1054.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.29%)</title><rect x="29.9" y="1027.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="32.9" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.29%)</title><rect x="29.9" y="1011.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.9" y="1022.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.29%)</title><rect x="29.9" y="995.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="32.9" y="1006.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="33.4" y="1123.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="36.4" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="34.0" y="1139.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="37.0" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="34.0" y="1123.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="37.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="34.0" y="1107.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="37.0" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="34.0" y="1091.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.0" y="1102.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="34.0" y="1075.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="37.0" y="1086.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="34.0" y="1059.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.0" y="1070.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="34.0" y="1043.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.0" y="1054.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="34.0" y="1027.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="37.0" y="1038.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="34.0" y="1011.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="37.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,130 samples, 65.77%)</title><rect x="34.7" y="1139.0" width="776.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.7" y="1150.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,130 samples, 65.77%)</title><rect x="34.7" y="1123.0" width="776.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="37.7" y="1134.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,130 samples, 65.77%)</title><rect x="34.7" y="1107.0" width="776.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="37.7" y="1118.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (478 samples, 27.82%)</title><rect x="36.8" y="1091.0" width="328.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.8" y="1102.0">java/util/concurrent/CompletableFuture$Async..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (188 samples, 10.94%)</title><rect x="38.8" y="1075.0" width="129.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="41.8" y="1086.0">java/util/concur..</text>
</g>
<g>
<title>itable stub (3 samples, 0.17%)</title><rect x="39.5" y="1059.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="42.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (104 samples, 6.05%)</title><rect x="41.6" y="1059.0" width="71.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.6" y="1070.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.17%)</title><rect x="41.6" y="1043.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.apply (101 samples, 5.88%)</title><rect x="43.7" y="1043.0" width="69.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.7" y="1054.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (101 samples, 5.88%)</title><rect x="43.7" y="1027.0" width="69.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.7" y="1038.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (101 samples, 5.88%)</title><rect x="43.7" y="1011.0" width="69.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="46.7" y="1022.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.06%)</title><rect x="44.3" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.06%)</title><rect x="44.3" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (79 samples, 4.60%)</title><rect x="45.0" y="995.0" width="54.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.0" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (79 samples, 4.60%)</title><rect x="45.0" y="979.0" width="54.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.0" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (79 samples, 4.60%)</title><rect x="45.0" y="963.0" width="54.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.0" y="974.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (45 samples, 2.62%)</title><rect x="45.0" y="947.0" width="30.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.0" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (45 samples, 2.62%)</title><rect x="45.0" y="931.0" width="30.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.0" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (1 samples, 0.06%)</title><rect x="45.0" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="45.0" y="899.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="45.0" y="883.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.06%)</title><rect x="45.0" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (44 samples, 2.56%)</title><rect x="45.7" y="915.0" width="30.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.7" y="926.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.apply (44 samples, 2.56%)</title><rect x="45.7" y="899.0" width="30.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.7" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (44 samples, 2.56%)</title><rect x="45.7" y="883.0" width="30.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.7" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (44 samples, 2.56%)</title><rect x="45.7" y="867.0" width="30.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.7" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (44 samples, 2.56%)</title><rect x="45.7" y="851.0" width="30.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="48.7" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (44 samples, 2.56%)</title><rect x="45.7" y="835.0" width="30.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.7" y="846.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.06%)</title><rect x="45.7" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.06%)</title><rect x="45.7" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.06%)</title><rect x="45.7" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.apply (1 samples, 0.06%)</title><rect x="45.7" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.06%)</title><rect x="45.7" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.06%)</title><rect x="45.7" y="739.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (1 samples, 0.06%)</title><rect x="45.7" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.06%)</title><rect x="45.7" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (43 samples, 2.50%)</title><rect x="46.4" y="819.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.4" y="830.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (36 samples, 2.10%)</title><rect x="46.4" y="803.0" width="24.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.4" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (36 samples, 2.10%)</title><rect x="46.4" y="787.0" width="24.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.4" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.apply (36 samples, 2.10%)</title><rect x="46.4" y="771.0" width="24.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.4" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (36 samples, 2.10%)</title><rect x="46.4" y="755.0" width="24.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.12%)</title><rect x="46.4" y="739.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.12%)</title><rect x="46.4" y="723.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="46.4" y="707.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="47.1" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.12%)</title><rect x="47.8" y="739.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.12%)</title><rect x="47.8" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="47.8" y="707.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.12%)</title><rect x="47.8" y="691.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (8 samples, 0.47%)</title><rect x="49.2" y="739.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="52.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (8 samples, 0.47%)</title><rect x="49.2" y="723.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (1 samples, 0.06%)</title><rect x="49.2" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.06%)</title><rect x="49.2" y="691.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="49.2" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="49.2" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="49.2" y="643.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="49.2" y="627.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.06%)</title><rect x="49.2" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.2" y="622.0"></text>
</g>
<g>
<title>__write (1 samples, 0.06%)</title><rect x="49.2" y="595.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="52.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="49.2" y="579.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="49.2" y="563.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="52.2" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.06%)</title><rect x="49.2" y="547.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="52.2" y="558.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.06%)</title><rect x="49.2" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="52.2" y="542.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="49.2" y="515.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="52.2" y="526.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="49.2" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.2" y="510.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="49.2" y="483.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="52.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7 samples, 0.41%)</title><rect x="49.8" y="707.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="52.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.41%)</title><rect x="49.8" y="691.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5 samples, 0.29%)</title><rect x="49.8" y="675.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.29%)</title><rect x="49.8" y="659.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.29%)</title><rect x="49.8" y="643.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.8" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="49.8" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="49.8" y="611.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="52.8" y="622.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.06%)</title><rect x="49.8" y="595.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.23%)</title><rect x="50.5" y="627.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.5" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="51.2" y="611.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="54.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="51.2" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="54.2" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="51.2" y="579.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="54.2" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="51.2" y="563.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="54.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.12%)</title><rect x="51.9" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.9" y="622.0"></text>
</g>
<g>
<title>__write (2 samples, 0.12%)</title><rect x="51.9" y="595.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="54.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="51.9" y="579.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="51.9" y="563.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="54.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.12%)</title><rect x="51.9" y="547.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.9" y="558.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.12%)</title><rect x="51.9" y="531.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.9" y="542.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.12%)</title><rect x="51.9" y="515.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="54.9" y="526.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.12%)</title><rect x="51.9" y="499.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.9" y="510.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.12%)</title><rect x="51.9" y="483.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="54.9" y="494.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.12%)</title><rect x="51.9" y="467.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="54.9" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.12%)</title><rect x="51.9" y="451.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="54.9" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="51.9" y="435.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="54.9" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="51.9" y="419.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="53.3" y="675.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.06%)</title><rect x="54.0" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (1 samples, 0.06%)</title><rect x="54.0" y="659.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="57.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (1 samples, 0.06%)</title><rect x="54.0" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (1 samples, 0.06%)</title><rect x="54.0" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="54.0" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (24 samples, 1.40%)</title><rect x="54.6" y="739.0" width="16.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="57.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.23%)</title><rect x="54.6" y="723.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.6" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.23%)</title><rect x="54.6" y="707.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.6" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.06%)</title><rect x="54.6" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.6" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.17%)</title><rect x="55.3" y="691.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="57.4" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="57.4" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="60.4" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (1 samples, 0.06%)</title><rect x="57.4" y="691.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="57.4" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="60.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="57.4" y="659.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="60.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="57.4" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="60.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (9 samples, 0.52%)</title><rect x="58.1" y="723.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (5 samples, 0.29%)</title><rect x="58.1" y="707.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.1" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$249/740179033.test (1 samples, 0.06%)</title><rect x="59.5" y="691.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (1 samples, 0.06%)</title><rect x="59.5" y="675.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.5" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="60.1" y="691.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="63.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="60.8" y="691.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="63.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (1 samples, 0.06%)</title><rect x="61.5" y="707.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (1 samples, 0.06%)</title><rect x="61.5" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="64.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.06%)</title><rect x="61.5" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="61.5" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.5" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="61.5" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (3 samples, 0.17%)</title><rect x="62.2" y="707.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="65.2" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.17%)</title><rect x="62.2" y="691.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.2" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.17%)</title><rect x="62.2" y="675.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.17%)</title><rect x="62.2" y="659.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.2" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (2 samples, 0.12%)</title><rect x="62.9" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.9" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.12%)</title><rect x="62.9" y="627.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="62.9" y="611.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.9" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (1 samples, 0.06%)</title><rect x="62.9" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.9" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="62.9" y="579.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="63.6" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.06%)</title><rect x="63.6" y="595.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.29%)</title><rect x="64.3" y="723.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.3" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.06%)</title><rect x="64.3" y="707.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.06%)</title><rect x="64.3" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.23%)</title><rect x="64.9" y="707.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.23%)</title><rect x="64.9" y="691.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (4 samples, 0.23%)</title><rect x="64.9" y="675.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.17%)</title><rect x="64.9" y="659.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="67.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.12%)</title><rect x="64.9" y="643.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.9" y="654.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.06%)</title><rect x="64.9" y="627.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="67.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="65.6" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="68.6" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="65.6" y="611.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="68.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.06%)</title><rect x="66.3" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.3" y="654.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="66.3" y="627.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.3" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1160460865.invoke (1 samples, 0.06%)</title><rect x="67.0" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="67.0" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.0" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.06%)</title><rect x="67.0" y="627.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="70.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.06%)</title><rect x="67.0" y="611.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.0" y="622.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.06%)</title><rect x="67.0" y="595.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="70.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (4 samples, 0.23%)</title><rect x="67.7" y="723.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.12%)</title><rect x="67.7" y="707.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.06%)</title><rect x="68.4" y="691.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.4" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="68.4" y="675.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="71.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="68.4" y="659.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="71.4" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="68.4" y="643.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="71.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (2 samples, 0.12%)</title><rect x="69.1" y="707.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.12%)</title><rect x="69.1" y="691.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.1" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.12%)</title><rect x="69.1" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (2 samples, 0.12%)</title><rect x="69.1" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.1" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.12%)</title><rect x="69.1" y="643.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.12%)</title><rect x="69.1" y="627.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.06%)</title><rect x="69.8" y="611.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.8" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="69.8" y="595.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="72.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (1 samples, 0.06%)</title><rect x="70.4" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="70.4" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (1 samples, 0.06%)</title><rect x="71.1" y="803.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (6 samples, 0.35%)</title><rect x="71.8" y="803.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.35%)</title><rect x="71.8" y="787.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="72.5" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="72.5" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.23%)</title><rect x="73.2" y="771.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.23%)</title><rect x="73.2" y="755.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.23%)</title><rect x="73.2" y="739.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.23%)</title><rect x="73.2" y="723.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.17%)</title><rect x="73.2" y="707.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (3 samples, 0.17%)</title><rect x="73.2" y="691.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.17%)</title><rect x="73.2" y="675.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.17%)</title><rect x="73.2" y="659.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.06%)</title><rect x="74.6" y="643.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="74.6" y="627.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="74.6" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.06%)</title><rect x="75.3" y="707.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.06%)</title><rect x="75.3" y="691.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="78.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.06%)</title><rect x="75.3" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (1 samples, 0.06%)</title><rect x="75.3" y="659.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.06%)</title><rect x="75.3" y="643.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (1 samples, 0.06%)</title><rect x="75.3" y="627.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="75.3" y="611.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="75.3" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="78.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="75.3" y="579.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (34 samples, 1.98%)</title><rect x="75.9" y="947.0" width="23.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.9" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="75.9" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="75.9" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.06%)</title><rect x="75.9" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.06%)</title><rect x="75.9" y="883.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="75.9" y="867.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (33 samples, 1.92%)</title><rect x="76.6" y="931.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.6" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (33 samples, 1.92%)</title><rect x="76.6" y="915.0" width="22.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.6" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (31 samples, 1.80%)</title><rect x="77.3" y="899.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.3" y="910.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (1 samples, 0.06%)</title><rect x="77.3" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.06%)</title><rect x="77.3" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (1 samples, 0.06%)</title><rect x="77.3" y="851.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.3" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.06%)</title><rect x="77.3" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="80.3" y="846.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="77.3" y="819.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="80.3" y="830.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="77.3" y="803.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="80.3" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="77.3" y="787.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="80.3" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="77.3" y="771.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="80.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (15 samples, 0.87%)</title><rect x="78.0" y="883.0" width="10.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (15 samples, 0.87%)</title><rect x="78.0" y="867.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.0" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.12%)</title><rect x="79.4" y="851.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="82.4" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="79.4" y="835.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="82.4" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="79.4" y="819.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="82.4" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="80.1" y="819.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="83.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (10 samples, 0.58%)</title><rect x="80.7" y="851.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.7" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.35%)</title><rect x="80.7" y="835.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="80.7" y="819.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.12%)</title><rect x="80.7" y="803.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="83.7" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.12%)</title><rect x="80.7" y="787.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.7" y="798.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.12%)</title><rect x="80.7" y="771.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.7" y="782.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.12%)</title><rect x="80.7" y="755.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="81.4" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="84.4" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="81.4" y="723.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="84.4" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="81.4" y="707.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="84.4" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (4 samples, 0.23%)</title><rect x="82.1" y="819.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.23%)</title><rect x="82.1" y="803.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.1" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.hash (4 samples, 0.23%)</title><rect x="82.1" y="787.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.1" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (4 samples, 0.23%)</title><rect x="82.1" y="771.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="85.1" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="84.2" y="755.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="87.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="84.2" y="739.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="87.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="84.2" y="723.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="87.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (4 samples, 0.23%)</title><rect x="84.9" y="835.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.9" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="84.9" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="87.9" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.06%)</title><rect x="84.9" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="87.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="84.9" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="87.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="84.9" y="771.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="87.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="84.9" y="755.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="87.9" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (3 samples, 0.17%)</title><rect x="85.6" y="819.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.6" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="86.9" y="803.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.9" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="86.9" y="787.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.9" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="86.9" y="771.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="89.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="87.6" y="851.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.6" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="87.6" y="835.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.6" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="87.6" y="819.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (15 samples, 0.87%)</title><rect x="88.3" y="883.0" width="10.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.3" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (13 samples, 0.76%)</title><rect x="89.7" y="867.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.7" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libjava.so (1 samples, 0.06%)</title><rect x="89.7" y="851.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="92.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="89.7" y="835.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="92.7" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="89.7" y="819.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.7" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="89.7" y="803.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="92.7" y="814.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (10 samples, 0.58%)</title><rect x="90.4" y="851.0" width="6.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="93.4" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.06%)</title><rect x="91.0" y="835.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="94.0" y="846.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="91.0" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="94.0" y="830.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="91.0" y="803.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.0" y="814.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="91.0" y="787.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="94.0" y="798.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="91.0" y="771.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="94.0" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="91.0" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="94.0" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="91.0" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="94.0" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="91.7" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.7" y="846.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.06%)</title><rect x="92.4" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="95.4" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="92.4" y="819.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="95.4" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="92.4" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="95.4" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="92.4" y="787.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="95.4" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.17%)</title><rect x="93.1" y="835.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="96.1" y="846.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.06%)</title><rect x="93.1" y="819.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="96.1" y="830.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.12%)</title><rect x="93.8" y="819.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="96.8" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.12%)</title><rect x="93.8" y="803.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="96.8" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.17%)</title><rect x="95.2" y="835.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.2" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.06%)</title><rect x="96.5" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="99.5" y="830.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.06%)</title><rect x="97.2" y="851.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="100.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/1042709263.run (1 samples, 0.06%)</title><rect x="97.9" y="851.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="100.9" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="97.9" y="835.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="100.9" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="97.9" y="819.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.9" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="97.9" y="803.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="100.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1 samples, 0.06%)</title><rect x="98.6" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (11 samples, 0.64%)</title><rect x="99.3" y="995.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.3" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="100.0" y="979.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="103.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="100.0" y="963.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="103.0" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="100.0" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="103.0" y="958.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (3 samples, 0.17%)</title><rect x="100.7" y="979.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.17%)</title><rect x="100.7" y="963.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="103.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.06%)</title><rect x="101.4" y="947.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.4" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="101.4" y="931.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.4" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="101.4" y="915.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="104.4" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="101.4" y="899.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="102.0" y="947.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (5 samples, 0.29%)</title><rect x="102.7" y="979.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.7" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.29%)</title><rect x="102.7" y="963.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.29%)</title><rect x="102.7" y="947.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.7" y="958.0"></text>
</g>
<g>
<title>__write (5 samples, 0.29%)</title><rect x="102.7" y="931.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="105.7" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="102.7" y="915.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.7" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.29%)</title><rect x="102.7" y="899.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_write (5 samples, 0.29%)</title><rect x="102.7" y="883.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.7" y="894.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.29%)</title><rect x="102.7" y="867.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="105.7" y="878.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.29%)</title><rect x="102.7" y="851.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.7" y="862.0"></text>
</g>
<g>
<title>__vfs_write (5 samples, 0.29%)</title><rect x="102.7" y="835.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="105.7" y="846.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.29%)</title><rect x="102.7" y="819.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.7" y="830.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.29%)</title><rect x="102.7" y="803.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.7" y="814.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 0.29%)</title><rect x="102.7" y="787.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.7" y="798.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 0.29%)</title><rect x="102.7" y="771.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="105.7" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 0.29%)</title><rect x="102.7" y="755.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.7" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="106.2" y="979.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="109.2" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="106.2" y="963.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.2" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="106.2" y="947.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="109.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (7 samples, 0.41%)</title><rect x="106.8" y="995.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (4 samples, 0.23%)</title><rect x="107.5" y="979.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (2 samples, 0.12%)</title><rect x="107.5" y="963.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (1 samples, 0.06%)</title><rect x="108.9" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.9" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="108.9" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="111.9" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="108.9" y="931.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="111.9" y="942.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="108.9" y="915.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="111.9" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="108.9" y="899.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.9" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="108.9" y="883.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.9" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="108.9" y="867.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="111.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getProxyURI (1 samples, 0.06%)</title><rect x="109.6" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (1 samples, 0.06%)</title><rect x="110.3" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.3" y="990.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="111.0" y="979.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.0" y="990.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="111.0" y="963.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="114.0" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="111.0" y="947.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="114.0" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="111.0" y="931.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="114.0" y="942.0"></text>
</g>
<g>
<title>blk_done_softirq (1 samples, 0.06%)</title><rect x="111.0" y="915.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="114.0" y="926.0"></text>
</g>
<g>
<title>scsi_softirq_done (1 samples, 0.06%)</title><rect x="111.0" y="899.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.0" y="910.0"></text>
</g>
<g>
<title>scsi_finish_command (1 samples, 0.06%)</title><rect x="111.0" y="883.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="114.0" y="894.0"></text>
</g>
<g>
<title>scsi_io_completion (1 samples, 0.06%)</title><rect x="111.0" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.0" y="878.0"></text>
</g>
<g>
<title>scsi_end_request (1 samples, 0.06%)</title><rect x="111.0" y="851.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="114.0" y="862.0"></text>
</g>
<g>
<title>scsi_mq_uninit_cmd (1 samples, 0.06%)</title><rect x="111.0" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="114.0" y="846.0"></text>
</g>
<g>
<title>scsi_free_sgtables (1 samples, 0.06%)</title><rect x="111.0" y="819.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="114.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (2 samples, 0.12%)</title><rect x="111.7" y="995.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (2 samples, 0.12%)</title><rect x="111.7" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (2 samples, 0.12%)</title><rect x="111.7" y="963.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.7" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.12%)</title><rect x="111.7" y="947.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.7" y="958.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.12%)</title><rect x="111.7" y="931.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.7" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.06%)</title><rect x="111.7" y="915.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.7" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.06%)</title><rect x="111.7" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.7" y="910.0"></text>
</g>
<g>
<title>java/time/Instant.&lt;init&gt; (1 samples, 0.06%)</title><rect x="111.7" y="883.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="112.3" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.3" y="926.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="112.3" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="115.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (79 samples, 4.60%)</title><rect x="113.0" y="1059.0" width="54.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.0" y="1070.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (78 samples, 4.54%)</title><rect x="113.7" y="1043.0" width="53.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.7" y="1054.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="113.7" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.06%)</title><rect x="113.7" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (77 samples, 4.48%)</title><rect x="114.4" y="1027.0" width="52.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="117.4" y="1038.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (77 samples, 4.48%)</title><rect x="114.4" y="1011.0" width="52.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.4" y="1022.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 4.48%)</title><rect x="114.4" y="995.0" width="52.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="117.4" y="1006.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (74 samples, 4.31%)</title><rect x="115.8" y="979.0" width="50.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.8" y="990.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.17%)</title><rect x="115.8" y="963.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="117.1" y="947.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="120.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 4.13%)</title><rect x="117.8" y="963.0" width="48.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.8" y="974.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 4.13%)</title><rect x="117.8" y="947.0" width="48.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.8" y="958.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (71 samples, 4.13%)</title><rect x="117.8" y="931.0" width="48.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.8" y="942.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (71 samples, 4.13%)</title><rect x="117.8" y="915.0" width="48.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.8" y="926.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="117.8" y="899.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="120.8" y="910.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.06%)</title><rect x="118.5" y="883.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="121.5" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="118.5" y="867.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="118.5" y="851.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="121.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="118.5" y="835.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="121.5" y="846.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.06%)</title><rect x="119.2" y="899.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="122.2" y="910.0"></text>
</g>
<g>
<title>send (68 samples, 3.96%)</title><rect x="119.9" y="899.0" width="46.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="122.9" y="910.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 3.78%)</title><rect x="121.3" y="883.0" width="44.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.3" y="894.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (65 samples, 3.78%)</title><rect x="121.3" y="867.0" width="44.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.3" y="878.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (64 samples, 3.73%)</title><rect x="122.0" y="851.0" width="43.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="125.0" y="862.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (63 samples, 3.67%)</title><rect x="122.0" y="835.0" width="43.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="125.0" y="846.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (60 samples, 3.49%)</title><rect x="124.0" y="819.0" width="41.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="127.0" y="830.0">soc..</text>
</g>
<g>
<title>inet6_sendmsg (57 samples, 3.32%)</title><rect x="124.7" y="803.0" width="39.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="127.7" y="814.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (55 samples, 3.20%)</title><rect x="126.1" y="787.0" width="37.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="129.1" y="798.0">tcp..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="126.1" y="771.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.1" y="782.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.06%)</title><rect x="126.8" y="771.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="129.8" y="782.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (52 samples, 3.03%)</title><rect x="127.5" y="771.0" width="35.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.5" y="782.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.06%)</title><rect x="128.1" y="755.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="131.1" y="766.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="128.1" y="739.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="131.1" y="750.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="128.8" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="131.8" y="766.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="128.8" y="739.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="131.8" y="750.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.52%)</title><rect x="129.5" y="755.0" width="6.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="132.5" y="766.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.41%)</title><rect x="129.5" y="739.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="132.5" y="750.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (3 samples, 0.17%)</title><rect x="130.9" y="723.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="133.9" y="734.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="130.9" y="707.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.9" y="718.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="131.6" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="134.6" y="702.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="132.3" y="707.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="135.3" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="132.9" y="723.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="135.9" y="734.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="133.6" y="723.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="136.6" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="134.3" y="739.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="137.3" y="750.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.06%)</title><rect x="135.0" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.0" y="750.0"></text>
</g>
<g>
<title>tcp_push (38 samples, 2.21%)</title><rect x="135.7" y="755.0" width="26.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.7" y="766.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (38 samples, 2.21%)</title><rect x="135.7" y="739.0" width="26.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="138.7" y="750.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (38 samples, 2.21%)</title><rect x="135.7" y="723.0" width="26.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="138.7" y="734.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (33 samples, 1.92%)</title><rect x="135.7" y="707.0" width="22.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.7" y="718.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (31 samples, 1.80%)</title><rect x="136.4" y="691.0" width="21.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="139.4" y="702.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (31 samples, 1.80%)</title><rect x="136.4" y="675.0" width="21.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="139.4" y="686.0">_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="136.4" y="659.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="139.4" y="670.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="136.4" y="643.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="139.4" y="654.0"></text>
</g>
<g>
<title>ip_local_out (29 samples, 1.69%)</title><rect x="137.1" y="659.0" width="19.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="140.1" y="670.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="137.8" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="140.8" y="654.0"></text>
</g>
<g>
<title>ip_output (27 samples, 1.57%)</title><rect x="138.4" y="643.0" width="18.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="141.4" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (27 samples, 1.57%)</title><rect x="138.4" y="627.0" width="18.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.4" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (27 samples, 1.57%)</title><rect x="138.4" y="611.0" width="18.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="141.4" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="138.4" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="141.4" y="606.0"></text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 1.51%)</title><rect x="139.1" y="595.0" width="17.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="142.1" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (20 samples, 1.16%)</title><rect x="140.5" y="579.0" width="13.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="143.5" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.0 (20 samples, 1.16%)</title><rect x="140.5" y="563.0" width="13.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="143.5" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (20 samples, 1.16%)</title><rect x="140.5" y="547.0" width="13.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="143.5" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (20 samples, 1.16%)</title><rect x="140.5" y="531.0" width="13.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.5" y="542.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.06%)</title><rect x="140.5" y="515.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="143.5" y="526.0"></text>
</g>
<g>
<title>net_rx_action (18 samples, 1.05%)</title><rect x="141.2" y="515.0" width="12.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="144.2" y="526.0"></text>
</g>
<g>
<title>process_backlog (18 samples, 1.05%)</title><rect x="141.2" y="499.0" width="12.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="144.2" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 0.99%)</title><rect x="141.9" y="483.0" width="11.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.9" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (17 samples, 0.99%)</title><rect x="141.9" y="467.0" width="11.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="144.9" y="478.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="141.9" y="451.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="144.9" y="462.0"></text>
</g>
<g>
<title>ip_rcv (16 samples, 0.93%)</title><rect x="142.6" y="451.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="145.6" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (16 samples, 0.93%)</title><rect x="142.6" y="435.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="145.6" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (15 samples, 0.87%)</title><rect x="142.6" y="419.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="145.6" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (15 samples, 0.87%)</title><rect x="142.6" y="403.0" width="10.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.6" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (15 samples, 0.87%)</title><rect x="142.6" y="387.0" width="10.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="145.6" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 0.87%)</title><rect x="142.6" y="371.0" width="10.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="145.6" y="382.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.12%)</title><rect x="142.6" y="355.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.6" y="366.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="143.9" y="355.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="146.9" y="366.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="143.9" y="339.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="146.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.70%)</title><rect x="144.6" y="355.0" width="8.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.6" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (12 samples, 0.70%)</title><rect x="144.6" y="339.0" width="8.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="147.6" y="350.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="146.0" y="323.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="149.0" y="334.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.06%)</title><rect x="146.0" y="307.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="149.0" y="318.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.06%)</title><rect x="146.0" y="291.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="149.0" y="302.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="146.0" y="275.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="149.0" y="286.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="146.0" y="259.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="149.0" y="270.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="146.0" y="243.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="149.0" y="254.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="146.0" y="227.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="149.0" y="238.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="146.0" y="211.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.0" y="222.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="146.0" y="195.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="149.0" y="206.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="146.0" y="179.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="149.0" y="190.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="146.0" y="163.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="149.0" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.06%)</title><rect x="146.0" y="147.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.0" y="158.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="146.0" y="131.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="149.0" y="142.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.06%)</title><rect x="146.0" y="115.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="149.0" y="126.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="146.0" y="99.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.0" y="110.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="146.0" y="83.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.0" y="94.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="146.0" y="67.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.0" y="78.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="146.0" y="51.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.0" y="62.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.29%)</title><rect x="146.7" y="323.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="149.7" y="334.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.23%)</title><rect x="146.7" y="307.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="149.7" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.12%)</title><rect x="147.4" y="291.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="150.4" y="302.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.12%)</title><rect x="147.4" y="275.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="150.4" y="286.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.12%)</title><rect x="147.4" y="259.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="150.4" y="270.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="148.1" y="243.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="151.1" y="254.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="148.1" y="227.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="151.1" y="238.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.06%)</title><rect x="148.1" y="211.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="151.1" y="222.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.06%)</title><rect x="148.7" y="291.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="151.7" y="302.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.06%)</title><rect x="149.4" y="307.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="152.4" y="318.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.17%)</title><rect x="150.1" y="323.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="153.1" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.17%)</title><rect x="150.1" y="307.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="153.1" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.17%)</title><rect x="150.1" y="291.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.1" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.12%)</title><rect x="150.8" y="275.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="153.8" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="150.8" y="259.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="153.8" y="270.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.06%)</title><rect x="152.2" y="323.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="155.2" y="334.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="152.9" y="419.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="155.9" y="430.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.06%)</title><rect x="153.6" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="156.6" y="526.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.23%)</title><rect x="154.2" y="579.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="157.2" y="590.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.23%)</title><rect x="154.2" y="563.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="157.2" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.12%)</title><rect x="154.9" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="157.9" y="558.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="155.6" y="531.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="158.6" y="542.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="156.3" y="547.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="159.3" y="558.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="157.0" y="659.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="160.0" y="670.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.06%)</title><rect x="157.7" y="691.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="160.7" y="702.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.06%)</title><rect x="158.4" y="707.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="161.4" y="718.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="159.0" y="707.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="162.0" y="718.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.12%)</title><rect x="159.7" y="707.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.7" y="718.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.12%)</title><rect x="159.7" y="691.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="162.7" y="702.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="159.7" y="675.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="162.7" y="686.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="159.7" y="659.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="162.7" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.06%)</title><rect x="161.1" y="707.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="164.1" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.12%)</title><rect x="161.8" y="755.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.8" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="161.8" y="739.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="164.8" y="750.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="162.5" y="739.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="165.5" y="750.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="162.5" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="165.5" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="163.2" y="771.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="166.2" y="782.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.06%)</title><rect x="163.9" y="803.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="166.9" y="814.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="164.5" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.5" y="814.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="164.5" y="787.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.5" y="798.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="164.5" y="771.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="167.5" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="165.2" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.2" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="165.9" y="883.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.9" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="165.9" y="867.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="168.9" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="165.9" y="851.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="168.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="166.6" y="979.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.6" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="167.3" y="1059.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="170.3" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="167.3" y="1043.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="170.3" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="167.3" y="1027.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="170.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$315/52309652.get (287 samples, 16.71%)</title><rect x="168.0" y="1075.0" width="197.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="171.0" y="1086.0">ru/mail/polis/service/dari..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$get$0 (287 samples, 16.71%)</title><rect x="168.0" y="1059.0" width="197.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="171.0" y="1070.0">ru/mail/polis/service/dari..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="168.0" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="168.0" y="1027.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="171.0" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="168.0" y="1011.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="171.0" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="168.0" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="171.0" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="168.0" y="979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="171.0" y="990.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="168.0" y="963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="171.0" y="974.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="168.0" y="947.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="171.0" y="958.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.06%)</title><rect x="168.0" y="931.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="171.0" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="168.7" y="1011.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.7" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="168.7" y="995.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="171.7" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="168.7" y="979.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="171.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (284 samples, 16.53%)</title><rect x="169.3" y="1043.0" width="195.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.3" y="1054.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (2 samples, 0.12%)</title><rect x="169.3" y="1027.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.12%)</title><rect x="169.3" y="1011.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.12%)</title><rect x="169.3" y="995.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="169.3" y="979.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="169.3" y="963.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="172.3" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="169.3" y="947.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="172.3" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="169.3" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.3" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="169.3" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.06%)</title><rect x="169.3" y="899.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="170.0" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.0" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.06%)</title><rect x="170.0" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="173.0" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.06%)</title><rect x="170.0" y="899.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="173.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (30 samples, 1.75%)</title><rect x="170.7" y="1027.0" width="20.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (30 samples, 1.75%)</title><rect x="170.7" y="1011.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.7" y="1022.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (18 samples, 1.05%)</title><rect x="170.7" y="995.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="173.7" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (17 samples, 0.99%)</title><rect x="170.7" y="979.0" width="11.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (17 samples, 0.99%)</title><rect x="170.7" y="963.0" width="11.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="173.7" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (12 samples, 0.70%)</title><rect x="172.1" y="947.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="175.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (11 samples, 0.64%)</title><rect x="172.8" y="931.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="175.8" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="173.5" y="915.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.5" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="174.8" y="915.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="177.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBIter::IsVisible(unsigned long, rocksdb::Slice const&amp;, bool*) (1 samples, 0.06%)</title><rect x="175.5" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="178.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (6 samples, 0.35%)</title><rect x="176.2" y="915.0" width="4.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="179.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.06%)</title><rect x="179.0" y="899.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="182.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (1 samples, 0.06%)</title><rect x="179.0" y="883.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="182.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.06%)</title><rect x="179.0" y="867.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="182.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.06%)</title><rect x="179.7" y="899.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="182.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.06%)</title><rect x="180.3" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="183.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (2 samples, 0.12%)</title><rect x="181.0" y="947.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="184.0" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.06%)</title><rect x="182.4" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.4" y="990.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (7 samples, 0.41%)</title><rect x="183.1" y="995.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.1" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (7 samples, 0.41%)</title><rect x="183.1" y="979.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.1" y="990.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (6 samples, 0.35%)</title><rect x="183.1" y="963.0" width="4.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="186.1" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_handle(oopDesc*) (1 samples, 0.06%)</title><rect x="183.8" y="947.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="186.8" y="958.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.17%)</title><rect x="184.5" y="947.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="187.5" y="958.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.12%)</title><rect x="185.1" y="931.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="188.1" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="185.1" y="915.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="188.1" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="185.1" y="899.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="188.1" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="185.8" y="915.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="188.8" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="186.5" y="947.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="189.5" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.06%)</title><rect x="186.5" y="931.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="189.5" y="942.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.06%)</title><rect x="187.2" y="963.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="190.2" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (2 samples, 0.12%)</title><rect x="187.9" y="995.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.9" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (2 samples, 0.12%)</title><rect x="187.9" y="979.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.9" y="990.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (2 samples, 0.12%)</title><rect x="187.9" y="963.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="190.9" y="974.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.06%)</title><rect x="187.9" y="947.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="190.9" y="958.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="187.9" y="931.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="190.9" y="942.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="187.9" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="190.9" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="187.9" y="899.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="190.9" y="910.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.06%)</title><rect x="187.9" y="883.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="190.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.06%)</title><rect x="188.6" y="947.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="191.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.hasNext (1 samples, 0.06%)</title><rect x="189.3" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="192.3" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.06%)</title><rect x="189.3" y="979.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="192.3" y="990.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.06%)</title><rect x="189.3" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (2 samples, 0.12%)</title><rect x="190.0" y="995.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="190.0" y="979.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.12%)</title><rect x="190.0" y="963.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.0" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="190.0" y="947.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.0" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="190.0" y="931.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.0" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.12%)</title><rect x="190.0" y="915.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.0" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="190.0" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.06%)</title><rect x="190.6" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (252 samples, 14.67%)</title><rect x="191.3" y="1027.0" width="173.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.3" y="1038.0">ru/mail/polis/dao/dari..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (111 samples, 6.46%)</title><rect x="191.3" y="1011.0" width="76.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.3" y="1022.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (111 samples, 6.46%)</title><rect x="191.3" y="995.0" width="76.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.3" y="1006.0">org/rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.29%)</title><rect x="191.3" y="979.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="194.3" y="990.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (95 samples, 5.53%)</title><rect x="194.8" y="979.0" width="65.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="197.8" y="990.0">Java_or..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="194.8" y="963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="197.8" y="974.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.06%)</title><rect x="195.4" y="963.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="198.4" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="196.1" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="199.1" y="974.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (1 samples, 0.06%)</title><rect x="196.8" y="963.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="199.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::TraceIteratorSeek(unsigned int const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="197.5" y="963.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="200.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (1 samples, 0.06%)</title><rect x="198.2" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="201.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (87 samples, 5.06%)</title><rect x="198.9" y="963.0" width="59.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="201.9" y="974.0">rocksd..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="199.6" y="947.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="202.6" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="199.6" y="931.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="202.6" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="199.6" y="915.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.6" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="199.6" y="899.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="202.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="200.3" y="947.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="203.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (1 samples, 0.06%)</title><rect x="200.9" y="947.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="203.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) [clone .plt] (1 samples, 0.06%)</title><rect x="201.6" y="947.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="204.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (3 samples, 0.17%)</title><rect x="202.3" y="947.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (2 samples, 0.12%)</title><rect x="202.3" y="931.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="205.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::PrepareValue() (1 samples, 0.06%)</title><rect x="203.0" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="206.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBIter::TooManyInternalKeysSkipped(bool) (1 samples, 0.06%)</title><rect x="203.7" y="931.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="206.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="204.4" y="947.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="207.4" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="204.4" y="931.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.4" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="204.4" y="915.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="207.4" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="204.4" y="899.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="207.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (1 samples, 0.06%)</title><rect x="205.1" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="208.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (76 samples, 4.42%)</title><rect x="205.8" y="947.0" width="52.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="208.8" y="958.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (2 samples, 0.12%)</title><rect x="207.1" y="931.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="210.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (41 samples, 2.39%)</title><rect x="208.5" y="931.0" width="28.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="211.5" y="942.0">ro..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="208.5" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="211.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::CheckDataBlockWithinUpperBound() [clone .plt] (1 samples, 0.06%)</title><rect x="209.2" y="915.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="212.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (21 samples, 1.22%)</title><rect x="209.9" y="915.0" width="14.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="212.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (21 samples, 1.22%)</title><rect x="209.9" y="899.0" width="14.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="212.9" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="211.2" y="883.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="214.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.06%)</title><rect x="211.9" y="883.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="214.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (17 samples, 0.99%)</title><rect x="212.6" y="883.0" width="11.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="215.6" y="894.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (16 samples, 0.93%)</title><rect x="213.3" y="867.0" width="11.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="216.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.06%)</title><rect x="213.3" y="851.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="216.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (15 samples, 0.87%)</title><rect x="214.0" y="851.0" width="10.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="217.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (12 samples, 0.70%)</title><rect x="214.0" y="835.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="217.0" y="846.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (2 samples, 0.12%)</title><rect x="214.7" y="819.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="217.7" y="830.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits@plt (1 samples, 0.06%)</title><rect x="216.1" y="819.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="219.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::UpdateCacheHitMetrics(rocksdb::BlockType, rocksdb::GetContext*, unsigned long) const (1 samples, 0.06%)</title><rect x="216.7" y="819.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="219.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetShard(int) (1 samples, 0.06%)</title><rect x="217.4" y="819.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="220.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 0.29%)</title><rect x="218.1" y="819.0" width="3.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="221.1" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.12%)</title><rect x="218.1" y="803.0" width="1.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="221.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.17%)</title><rect x="219.5" y="803.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="222.5" y="814.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.17%)</title><rect x="219.5" y="787.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="222.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.06%)</title><rect x="221.5" y="819.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="224.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::LRUCache::GetCharge(rocksdb::Cache::Handle*) const (1 samples, 0.06%)</title><rect x="222.2" y="835.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="225.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.12%)</title><rect x="222.9" y="835.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="225.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (7 samples, 0.41%)</title><rect x="224.3" y="915.0" width="4.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="227.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (2 samples, 0.12%)</title><rect x="227.0" y="899.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="230.0" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.12%)</title><rect x="227.0" y="883.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="230.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="228.4" y="899.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="231.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (10 samples, 0.58%)</title><rect x="229.1" y="915.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="232.1" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="232.5" y="899.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="235.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (2 samples, 0.12%)</title><rect x="233.2" y="899.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="236.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.12%)</title><rect x="234.6" y="899.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="237.6" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="234.6" y="883.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="237.6" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.06%)</title><rect x="235.3" y="883.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="238.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.06%)</title><rect x="236.0" y="915.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="239.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.12%)</title><rect x="236.7" y="931.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="239.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (29 samples, 1.69%)</title><rect x="238.0" y="931.0" width="20.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="241.0" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (25 samples, 1.46%)</title><rect x="238.7" y="915.0" width="17.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="241.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="238.7" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="241.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.06%)</title><rect x="239.4" y="899.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="242.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (23 samples, 1.34%)</title><rect x="240.1" y="899.0" width="15.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="243.1" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="251.1" y="883.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="254.1" y="894.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="251.8" y="883.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="254.8" y="894.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="251.8" y="867.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.8" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="251.8" y="851.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.8" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="251.8" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="254.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.29%)</title><rect x="252.5" y="883.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="255.5" y="894.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni16669712956030220575.so (1 samples, 0.06%)</title><rect x="253.8" y="867.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="256.8" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="254.5" y="867.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="257.5" y="878.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.06%)</title><rect x="255.2" y="867.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="258.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="255.9" y="915.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="258.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.12%)</title><rect x="256.6" y="915.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="259.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.06%)</title><rect x="258.0" y="947.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="261.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBIter::SetSavedKeyToSeekTarget(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="258.6" y="963.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="261.6" y="974.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.06%)</title><rect x="259.3" y="963.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="262.3" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="259.3" y="947.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="262.3" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="259.3" y="931.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.3" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="259.3" y="915.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="262.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.58%)</title><rect x="260.0" y="979.0" width="6.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="263.0" y="990.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="260.0" y="963.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="263.0" y="974.0"></text>
</g>
<g>
<title>CodeBlob::is_buffer_blob() const (1 samples, 0.06%)</title><rect x="261.4" y="963.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="264.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="261.4" y="947.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="264.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="261.4" y="931.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="264.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="261.4" y="915.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="264.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="261.4" y="899.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="264.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="261.4" y="883.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="264.4" y="894.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.06%)</title><rect x="261.4" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="264.4" y="878.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.06%)</title><rect x="262.1" y="963.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="265.1" y="974.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.12%)</title><rect x="262.8" y="963.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="265.8" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="263.4" y="947.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="266.4" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="263.4" y="931.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="266.4" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="263.4" y="915.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="266.4" y="926.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.06%)</title><rect x="264.1" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="267.1" y="974.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.12%)</title><rect x="264.8" y="963.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="267.8" y="974.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.06%)</title><rect x="266.2" y="963.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="269.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="266.9" y="979.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="269.9" y="990.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (135 samples, 7.86%)</title><rect x="267.6" y="1011.0" width="92.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="270.6" y="1022.0">org/rocksdb..</text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.06%)</title><rect x="268.9" y="995.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="271.9" y="1006.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="269.6" y="995.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="272.6" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (120 samples, 6.98%)</title><rect x="270.3" y="995.0" width="82.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.3" y="1006.0">org/rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (20 samples, 1.16%)</title><rect x="271.7" y="979.0" width="13.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="274.7" y="990.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.12%)</title><rect x="283.4" y="963.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="286.4" y="974.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.12%)</title><rect x="283.4" y="947.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="286.4" y="958.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.12%)</title><rect x="283.4" y="931.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.4" y="942.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.12%)</title><rect x="283.4" y="915.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="286.4" y="926.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.12%)</title><rect x="283.4" y="899.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="286.4" y="910.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.12%)</title><rect x="283.4" y="883.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="286.4" y="894.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.06%)</title><rect x="283.4" y="867.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="286.4" y="878.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.06%)</title><rect x="283.4" y="851.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="286.4" y="862.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.06%)</title><rect x="283.4" y="835.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="286.4" y="846.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.06%)</title><rect x="283.4" y="819.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="286.4" y="830.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.06%)</title><rect x="283.4" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="286.4" y="814.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="284.1" y="867.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="287.1" y="878.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="284.1" y="851.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="287.1" y="862.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="284.1" y="835.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="287.1" y="846.0"></text>
</g>
<g>
<title>swap_readpage (1 samples, 0.06%)</title><rect x="284.1" y="819.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="287.1" y="830.0"></text>
</g>
<g>
<title>submit_bio (1 samples, 0.06%)</title><rect x="284.1" y="803.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="287.1" y="814.0"></text>
</g>
<g>
<title>psi_memstall_enter (1 samples, 0.06%)</title><rect x="284.1" y="787.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="287.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="284.7" y="963.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="287.7" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="284.7" y="947.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="287.7" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="284.7" y="931.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="287.7" y="942.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (90 samples, 5.24%)</title><rect x="285.4" y="979.0" width="61.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="288.4" y="990.0">Java_o..</text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.12%)</title><rect x="286.8" y="963.0" width="1.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="289.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.06%)</title><rect x="288.2" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="291.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (85 samples, 4.95%)</title><rect x="288.9" y="963.0" width="58.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="291.9" y="974.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (2 samples, 0.12%)</title><rect x="288.9" y="947.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="291.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) [clone .plt] (1 samples, 0.06%)</title><rect x="290.2" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="293.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (81 samples, 4.71%)</title><rect x="290.9" y="947.0" width="55.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="293.9" y="958.0">rocks..</text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.12%)</title><rect x="292.3" y="931.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="295.3" y="942.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="293.0" y="915.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.0" y="926.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="293.0" y="899.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="296.0" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="293.0" y="883.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="296.0" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="293.0" y="867.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="296.0" y="878.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.12%)</title><rect x="293.7" y="931.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="296.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.06%)</title><rect x="295.0" y="931.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="298.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) [clone .plt] (1 samples, 0.06%)</title><rect x="295.7" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="298.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (7 samples, 0.41%)</title><rect x="296.4" y="931.0" width="4.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="299.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (4 samples, 0.23%)</title><rect x="296.4" y="915.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="299.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.06%)</title><rect x="297.8" y="899.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="300.8" y="910.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.06%)</title><rect x="298.5" y="899.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="301.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.06%)</title><rect x="299.2" y="915.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="302.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) [clone .plt] (1 samples, 0.06%)</title><rect x="299.8" y="915.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="302.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.06%)</title><rect x="300.5" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="303.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.06%)</title><rect x="301.2" y="931.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="304.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.06%)</title><rect x="301.9" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="304.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (44 samples, 2.56%)</title><rect x="302.6" y="931.0" width="30.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="305.6" y="942.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (2 samples, 0.12%)</title><rect x="303.3" y="915.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="306.3" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="304.0" y="899.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="307.0" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="304.0" y="883.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.0" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="304.0" y="867.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::MergeIteratorBuilder*) (2 samples, 0.12%)</title><rect x="304.7" y="915.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="307.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.06%)</title><rect x="306.0" y="915.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="309.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (37 samples, 2.15%)</title><rect x="306.7" y="915.0" width="25.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="309.7" y="926.0">r..</text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (37 samples, 2.15%)</title><rect x="306.7" y="899.0" width="25.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="309.7" y="910.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="308.8" y="883.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="311.8" y="894.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.06%)</title><rect x="309.5" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="312.5" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.06%)</title><rect x="310.2" y="883.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="313.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.12%)</title><rect x="310.8" y="883.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="313.8" y="894.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Valid() const (1 samples, 0.06%)</title><rect x="312.2" y="883.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="315.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (3 samples, 0.17%)</title><rect x="312.9" y="883.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="315.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::status() const (1 samples, 0.06%)</title><rect x="313.6" y="867.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="316.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.06%)</title><rect x="314.3" y="867.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="317.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.06%)</title><rect x="315.0" y="883.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="318.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (22 samples, 1.28%)</title><rect x="315.6" y="883.0" width="15.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="318.6" y="894.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.06%)</title><rect x="317.0" y="867.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="320.0" y="878.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.06%)</title><rect x="317.7" y="867.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="320.7" y="878.0"></text>
</g>
<g>
<title>operator new(unsigned long) [clone .plt] (1 samples, 0.06%)</title><rect x="318.4" y="867.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="321.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.06%)</title><rect x="319.1" y="867.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="322.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (10 samples, 0.58%)</title><rect x="319.8" y="867.0" width="6.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="322.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.12%)</title><rect x="322.5" y="851.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="325.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (2 samples, 0.12%)</title><rect x="323.9" y="851.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="326.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const [clone .plt] (1 samples, 0.06%)</title><rect x="325.3" y="851.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="328.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (1 samples, 0.06%)</title><rect x="325.9" y="851.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="328.9" y="862.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.06%)</title><rect x="326.6" y="867.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="329.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::BlockCacheLookupContext::~BlockCacheLookupContext() (2 samples, 0.12%)</title><rect x="327.3" y="867.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="330.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.06%)</title><rect x="328.7" y="867.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="331.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (2 samples, 0.12%)</title><rect x="329.4" y="867.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="332.4" y="878.0"></text>
</g>
<g>
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (2 samples, 0.12%)</title><rect x="330.8" y="883.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="333.8" y="894.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.06%)</title><rect x="332.1" y="915.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="335.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::MergeIteratorBuilder*) (1 samples, 0.06%)</title><rect x="332.8" y="931.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="335.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::Finish() (1 samples, 0.06%)</title><rect x="333.5" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="336.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::MergeIteratorBuilder(rocksdb::InternalKeyComparator const*, rocksdb::Arena*, bool) (2 samples, 0.12%)</title><rect x="334.2" y="931.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="337.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (11 samples, 0.64%)</title><rect x="335.6" y="931.0" width="7.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="338.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::Arena::Arena(unsigned long, rocksdb::AllocTracker*, unsigned long) (1 samples, 0.06%)</title><rect x="336.9" y="915.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="339.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (6 samples, 0.35%)</title><rect x="337.6" y="915.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="340.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (4 samples, 0.23%)</title><rect x="337.6" y="899.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="340.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::ForwardRangeDelIterator::ForwardRangeDelIterator(rocksdb::InternalKeyComparator const*) (2 samples, 0.12%)</title><rect x="340.4" y="899.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="343.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (1 samples, 0.06%)</title><rect x="341.7" y="915.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="344.7" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="342.4" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="345.4" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="342.4" y="899.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="345.4" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="342.4" y="883.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="345.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::ReadRangeDelAggregator::AddTombstones(std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, rocksdb::InternalKey const*, rocksdb::InternalKey const*) (1 samples, 0.06%)</title><rect x="343.1" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="346.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.12%)</title><rect x="343.8" y="931.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="346.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::SuperVersion::Ref() (1 samples, 0.06%)</title><rect x="345.2" y="931.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="348.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (1 samples, 0.06%)</title><rect x="345.9" y="931.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="348.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*) (1 samples, 0.06%)</title><rect x="346.6" y="947.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="349.6" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="346.6" y="931.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.6" y="942.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="346.6" y="915.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="349.6" y="926.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="346.6" y="899.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="349.6" y="910.0"></text>
</g>
<g>
<title>__libc_malloc (5 samples, 0.29%)</title><rect x="347.2" y="979.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="350.2" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="350.0" y="963.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.0" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="350.0" y="947.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="353.0" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="350.0" y="931.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="353.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (2 samples, 0.12%)</title><rect x="350.7" y="979.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="353.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.06%)</title><rect x="352.0" y="979.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="355.0" y="990.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (11 samples, 0.64%)</title><rect x="352.7" y="995.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.7" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (11 samples, 0.64%)</title><rect x="352.7" y="979.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="355.7" y="990.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (11 samples, 0.64%)</title><rect x="352.7" y="963.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="355.7" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (11 samples, 0.64%)</title><rect x="352.7" y="947.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.7" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (11 samples, 0.64%)</title><rect x="352.7" y="931.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="355.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (11 samples, 0.64%)</title><rect x="352.7" y="915.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.7" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.06%)</title><rect x="352.7" y="899.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="355.7" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (10 samples, 0.58%)</title><rect x="353.4" y="899.0" width="6.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="356.4" y="910.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.12%)</title><rect x="353.4" y="883.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="356.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (2 samples, 0.12%)</title><rect x="354.8" y="883.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="357.8" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="355.5" y="867.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="358.5" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="355.5" y="851.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.5" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="355.5" y="835.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="358.5" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (5 samples, 0.29%)</title><rect x="356.2" y="883.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="359.2" y="894.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="356.9" y="867.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="359.9" y="878.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.17%)</title><rect x="357.5" y="867.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="360.5" y="878.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.06%)</title><rect x="358.2" y="851.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="361.2" y="862.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.06%)</title><rect x="358.9" y="851.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="361.9" y="862.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="358.9" y="835.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="361.9" y="846.0"></text>
</g>
<g>
<title>LatestMethodCache::get_method() (1 samples, 0.06%)</title><rect x="359.6" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="362.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (6 samples, 0.35%)</title><rect x="360.3" y="1011.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="361.0" y="995.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="364.0" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.06%)</title><rect x="361.0" y="979.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="364.0" y="990.0"></text>
</g>
<g>
<title>_register_finalizer_Java (1 samples, 0.06%)</title><rect x="361.7" y="995.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="364.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (3 samples, 0.17%)</title><rect x="362.4" y="995.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.06%)</title><rect x="363.0" y="979.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.0" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="363.0" y="963.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="366.0" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="947.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="366.0" y="958.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="363.0" y="931.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="366.0" y="942.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="363.0" y="915.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="366.0" y="926.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="363.0" y="899.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="366.0" y="910.0"></text>
</g>
<g>
<title>DefNewGeneration::unsafe_max_tlab_alloc() const (1 samples, 0.06%)</title><rect x="363.0" y="883.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="366.0" y="894.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="363.7" y="979.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="366.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.06%)</title><rect x="364.4" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="367.4" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="364.4" y="1027.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="367.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (102 samples, 5.94%)</title><rect x="365.1" y="1091.0" width="70.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="368.1" y="1102.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (101 samples, 5.88%)</title><rect x="365.8" y="1075.0" width="69.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="368.8" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (91 samples, 5.30%)</title><rect x="366.5" y="1059.0" width="62.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="369.5" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (2 samples, 0.12%)</title><rect x="366.5" y="1043.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (89 samples, 5.18%)</title><rect x="367.8" y="1043.0" width="61.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="370.8" y="1054.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (89 samples, 5.18%)</title><rect x="367.8" y="1027.0" width="61.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.8" y="1038.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (89 samples, 5.18%)</title><rect x="367.8" y="1011.0" width="61.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.8" y="1022.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (85 samples, 4.95%)</title><rect x="367.8" y="995.0" width="58.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.8" y="1006.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (85 samples, 4.95%)</title><rect x="367.8" y="979.0" width="58.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.8" y="990.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (85 samples, 4.95%)</title><rect x="367.8" y="963.0" width="58.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.8" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (84 samples, 4.89%)</title><rect x="367.8" y="947.0" width="57.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="370.8" y="958.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.12%)</title><rect x="367.8" y="931.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="370.8" y="942.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="368.5" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.5" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (82 samples, 4.77%)</title><rect x="369.2" y="931.0" width="56.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="372.2" y="942.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (82 samples, 4.77%)</title><rect x="369.2" y="915.0" width="56.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.2" y="926.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (82 samples, 4.77%)</title><rect x="369.2" y="899.0" width="56.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.2" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (82 samples, 4.77%)</title><rect x="369.2" y="883.0" width="56.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.2" y="894.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.12%)</title><rect x="369.2" y="867.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="372.2" y="878.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.06%)</title><rect x="369.9" y="851.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="372.9" y="862.0"></text>
</g>
<g>
<title>send (80 samples, 4.66%)</title><rect x="370.6" y="867.0" width="54.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="373.6" y="878.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 4.60%)</title><rect x="371.3" y="851.0" width="54.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="374.3" y="862.0">entry..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.06%)</title><rect x="371.3" y="835.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="374.3" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 4.54%)</title><rect x="372.0" y="835.0" width="53.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="375.0" y="846.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (75 samples, 4.37%)</title><rect x="372.7" y="819.0" width="51.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="375.7" y="830.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (74 samples, 4.31%)</title><rect x="372.7" y="803.0" width="50.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.7" y="814.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (73 samples, 4.25%)</title><rect x="372.7" y="787.0" width="50.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="375.7" y="798.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.17%)</title><rect x="372.7" y="771.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="375.7" y="782.0"></text>
</g>
<g>
<title>inet6_sendmsg (69 samples, 4.02%)</title><rect x="374.7" y="771.0" width="47.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="377.7" y="782.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (69 samples, 4.02%)</title><rect x="374.7" y="755.0" width="47.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.7" y="766.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="374.7" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="377.7" y="750.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="375.4" y="739.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="378.4" y="750.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (67 samples, 3.90%)</title><rect x="376.1" y="739.0" width="46.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="379.1" y="750.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.06%)</title><rect x="376.1" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.1" y="734.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.06%)</title><rect x="376.8" y="723.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="379.8" y="734.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.06%)</title><rect x="377.5" y="723.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.5" y="734.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.06%)</title><rect x="377.5" y="707.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="380.5" y="718.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.29%)</title><rect x="378.1" y="723.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="381.1" y="734.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.29%)</title><rect x="378.1" y="707.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.1" y="718.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="378.8" y="691.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="381.8" y="702.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.12%)</title><rect x="379.5" y="691.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="382.5" y="702.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="379.5" y="675.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="382.5" y="686.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="379.5" y="659.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="382.5" y="670.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="380.2" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="383.2" y="686.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="380.9" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="383.9" y="702.0"></text>
</g>
<g>
<title>tcp_push (58 samples, 3.38%)</title><rect x="381.6" y="723.0" width="39.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.6" y="734.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (57 samples, 3.32%)</title><rect x="381.6" y="707.0" width="39.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="384.6" y="718.0">__t..</text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.06%)</title><rect x="381.6" y="691.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.6" y="702.0"></text>
</g>
<g>
<title>tcp_write_xmit (56 samples, 3.26%)</title><rect x="382.3" y="691.0" width="38.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="385.3" y="702.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (49 samples, 2.85%)</title><rect x="383.0" y="675.0" width="33.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="386.0" y="686.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (47 samples, 2.74%)</title><rect x="384.3" y="659.0" width="32.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="387.3" y="670.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (47 samples, 2.74%)</title><rect x="384.3" y="643.0" width="32.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="387.3" y="654.0">__..</text>
</g>
<g>
<title>ip_local_out (46 samples, 2.68%)</title><rect x="385.0" y="627.0" width="31.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="388.0" y="638.0">ip..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.06%)</title><rect x="385.0" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.0" y="622.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.06%)</title><rect x="385.0" y="595.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="388.0" y="606.0"></text>
</g>
<g>
<title>ip_output (44 samples, 2.56%)</title><rect x="385.7" y="611.0" width="30.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="388.7" y="622.0">ip..</text>
</g>
<g>
<title>ip_finish_output (44 samples, 2.56%)</title><rect x="385.7" y="595.0" width="30.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="388.7" y="606.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (43 samples, 2.50%)</title><rect x="385.7" y="579.0" width="29.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="388.7" y="590.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (42 samples, 2.44%)</title><rect x="386.4" y="563.0" width="28.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.4" y="574.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (37 samples, 2.15%)</title><rect x="388.5" y="547.0" width="25.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.5" y="558.0">_..</text>
</g>
<g>
<title>do_softirq.part.0 (37 samples, 2.15%)</title><rect x="388.5" y="531.0" width="25.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="391.5" y="542.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (37 samples, 2.15%)</title><rect x="388.5" y="515.0" width="25.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.5" y="526.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (37 samples, 2.15%)</title><rect x="388.5" y="499.0" width="25.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.5" y="510.0">_..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.06%)</title><rect x="388.5" y="483.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="391.5" y="494.0"></text>
</g>
<g>
<title>net_rx_action (36 samples, 2.10%)</title><rect x="389.1" y="483.0" width="24.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.1" y="494.0">n..</text>
</g>
<g>
<title>process_backlog (36 samples, 2.10%)</title><rect x="389.1" y="467.0" width="24.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="392.1" y="478.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (36 samples, 2.10%)</title><rect x="389.1" y="451.0" width="24.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="392.1" y="462.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (36 samples, 2.10%)</title><rect x="389.1" y="435.0" width="24.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.1" y="446.0">_..</text>
</g>
<g>
<title>ip_rcv (36 samples, 2.10%)</title><rect x="389.1" y="419.0" width="24.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="392.1" y="430.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (36 samples, 2.10%)</title><rect x="389.1" y="403.0" width="24.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="392.1" y="414.0">i..</text>
</g>
<g>
<title>ip_local_deliver (36 samples, 2.10%)</title><rect x="389.1" y="387.0" width="24.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="392.1" y="398.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 2.10%)</title><rect x="389.1" y="371.0" width="24.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="392.1" y="382.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (36 samples, 2.10%)</title><rect x="389.1" y="355.0" width="24.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.1" y="366.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="389.1" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="392.1" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 2.04%)</title><rect x="389.8" y="339.0" width="24.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="392.8" y="350.0">t..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.06%)</title><rect x="391.2" y="323.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="394.2" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.06%)</title><rect x="391.2" y="307.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="394.2" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 1.80%)</title><rect x="391.9" y="323.0" width="21.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.9" y="334.0">t..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.06%)</title><rect x="391.9" y="307.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.9" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (30 samples, 1.75%)</title><rect x="392.6" y="307.0" width="20.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="395.6" y="318.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.06%)</title><rect x="392.6" y="291.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="395.6" y="302.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.06%)</title><rect x="392.6" y="275.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="395.6" y="286.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.06%)</title><rect x="392.6" y="259.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="395.6" y="270.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.06%)</title><rect x="392.6" y="243.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="395.6" y="254.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.35%)</title><rect x="393.3" y="291.0" width="4.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="396.3" y="302.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.35%)</title><rect x="393.3" y="275.0" width="4.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="396.3" y="286.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.29%)</title><rect x="393.9" y="259.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.9" y="270.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.06%)</title><rect x="393.9" y="243.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="396.9" y="254.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.23%)</title><rect x="394.6" y="243.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.6" y="254.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.23%)</title><rect x="394.6" y="227.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="397.6" y="238.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="396.7" y="211.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.7" y="222.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="396.7" y="195.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.7" y="206.0"></text>
</g>
<g>
<title>tcp_data_ready (23 samples, 1.34%)</title><rect x="397.4" y="291.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="400.4" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 1.34%)</title><rect x="397.4" y="275.0" width="15.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="400.4" y="286.0"></text>
</g>
<g>
<title>__wake_up_sync_key (23 samples, 1.34%)</title><rect x="397.4" y="259.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.4" y="270.0"></text>
</g>
<g>
<title>__wake_up_common_lock (23 samples, 1.34%)</title><rect x="397.4" y="243.0" width="15.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.4" y="254.0"></text>
</g>
<g>
<title>__lock_text_start (23 samples, 1.34%)</title><rect x="397.4" y="227.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="400.4" y="238.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.06%)</title><rect x="413.2" y="323.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="416.2" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.12%)</title><rect x="413.9" y="547.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.9" y="558.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.06%)</title><rect x="413.9" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.9" y="542.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.06%)</title><rect x="413.9" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="416.9" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="414.6" y="531.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="417.6" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="415.2" y="579.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="418.2" y="590.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.06%)</title><rect x="415.9" y="611.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.9" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="416.6" y="675.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.6" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="417.3" y="675.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="420.3" y="686.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.17%)</title><rect x="418.0" y="675.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.0" y="686.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.17%)</title><rect x="418.0" y="659.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="421.0" y="670.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.06%)</title><rect x="418.0" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.0" y="654.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.12%)</title><rect x="418.7" y="643.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="421.7" y="654.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.12%)</title><rect x="418.7" y="627.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="421.7" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="418.7" y="611.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="421.7" y="622.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.06%)</title><rect x="420.0" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="423.0" y="686.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="420.0" y="659.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="423.0" y="670.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="420.0" y="643.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.0" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="420.0" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="423.0" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="420.0" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="423.0" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.06%)</title><rect x="420.7" y="707.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="423.7" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="421.4" y="723.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="424.4" y="734.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.06%)</title><rect x="421.4" y="707.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="424.4" y="718.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.06%)</title><rect x="422.1" y="771.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="425.1" y="782.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.06%)</title><rect x="422.1" y="755.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="425.1" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="422.1" y="739.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="425.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.06%)</title><rect x="422.8" y="787.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="425.8" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="422.8" y="771.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.8" y="782.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.06%)</title><rect x="423.5" y="803.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="426.5" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="424.2" y="819.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.2" y="830.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.12%)</title><rect x="424.2" y="803.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="427.2" y="814.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.12%)</title><rect x="424.2" y="787.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="427.2" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.12%)</title><rect x="424.2" y="771.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.2" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="425.5" y="947.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="428.5" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="425.5" y="931.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="428.5" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="425.5" y="915.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="428.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (4 samples, 0.23%)</title><rect x="426.2" y="995.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (4 samples, 0.23%)</title><rect x="426.2" y="979.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="426.2" y="963.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="426.2" y="947.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (4 samples, 0.23%)</title><rect x="426.2" y="931.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.23%)</title><rect x="426.2" y="915.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.23%)</title><rect x="426.2" y="899.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (4 samples, 0.23%)</title><rect x="426.2" y="883.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.23%)</title><rect x="426.2" y="867.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="429.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.23%)</title><rect x="426.2" y="851.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.23%)</title><rect x="426.2" y="835.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="426.2" y="819.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="426.9" y="803.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.9" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="426.9" y="787.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="429.9" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.06%)</title><rect x="426.9" y="771.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="429.9" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.12%)</title><rect x="427.6" y="787.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="430.6" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="427.6" y="771.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="430.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="427.6" y="755.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="430.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.12%)</title><rect x="427.6" y="739.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="430.6" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="427.6" y="723.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="430.6" y="734.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="427.6" y="707.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="430.6" y="718.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="427.6" y="691.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="430.6" y="702.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="427.6" y="675.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.6" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="427.6" y="659.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="430.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.apply (9 samples, 0.52%)</title><rect x="429.0" y="1059.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (9 samples, 0.52%)</title><rect x="429.0" y="1043.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (9 samples, 0.52%)</title><rect x="429.0" y="1027.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.0" y="1038.0"></text>
</g>
<g>
<title>java/util/Optional.map (2 samples, 0.12%)</title><rect x="429.0" y="1011.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$334/1887357085.apply (2 samples, 0.12%)</title><rect x="429.0" y="995.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$2 (2 samples, 0.12%)</title><rect x="429.0" y="979.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.0" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="429.0" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.0" y="974.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.06%)</title><rect x="429.0" y="947.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="432.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampByData (1 samples, 0.06%)</title><rect x="429.7" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.06%)</title><rect x="429.7" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.7" y="958.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="429.7" y="931.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="432.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="430.3" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.3" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="430.3" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="430.3" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.29%)</title><rect x="431.0" y="1011.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.29%)</title><rect x="431.0" y="995.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.23%)</title><rect x="431.7" y="979.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.7" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.23%)</title><rect x="431.7" y="963.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.7" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.23%)</title><rect x="431.7" y="947.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.23%)</title><rect x="431.7" y="931.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.7" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="431.7" y="915.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.06%)</title><rect x="431.7" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.7" y="910.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="431.7" y="883.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="434.7" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="431.7" y="867.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="434.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="431.7" y="851.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="431.7" y="835.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="434.7" y="846.0"></text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (3 samples, 0.17%)</title><rect x="432.4" y="915.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.17%)</title><rect x="432.4" y="899.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.06%)</title><rect x="432.4" y="883.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.4" y="894.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$328/2064302058.apply (1 samples, 0.06%)</title><rect x="432.4" y="867.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.4" y="878.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.06%)</title><rect x="432.4" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.4" y="862.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$325/1106611178.compare (1 samples, 0.06%)</title><rect x="432.4" y="835.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.4" y="846.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (1 samples, 0.06%)</title><rect x="432.4" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$323/174954198.applyAsLong (1 samples, 0.06%)</title><rect x="432.4" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$1 (1 samples, 0.06%)</title><rect x="432.4" y="787.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="432.4" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.06%)</title><rect x="432.4" y="755.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$319/235896416.test (2 samples, 0.12%)</title><rect x="433.1" y="883.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="434.5" y="1011.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.5" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="434.5" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="437.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (179 samples, 10.42%)</title><rect x="435.2" y="1091.0" width="122.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.2" y="1102.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (114 samples, 6.64%)</title><rect x="435.2" y="1075.0" width="78.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.2" y="1086.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (87 samples, 5.06%)</title><rect x="435.2" y="1059.0" width="59.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.2" y="1070.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.06%)</title><rect x="435.2" y="1043.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.2" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="435.2" y="1027.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="438.2" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="435.2" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="438.2" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="435.2" y="995.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.2" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="435.2" y="979.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="438.2" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="435.2" y="963.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (26 samples, 1.51%)</title><rect x="435.8" y="1043.0" width="17.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 1.51%)</title><rect x="435.8" y="1027.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (22 samples, 1.28%)</title><rect x="437.2" y="1011.0" width="15.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (22 samples, 1.28%)</title><rect x="437.2" y="995.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (22 samples, 1.28%)</title><rect x="437.2" y="979.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.2" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="437.2" y="963.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="440.2" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="437.2" y="947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="440.2" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 1.16%)</title><rect x="437.9" y="963.0" width="13.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="440.9" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 1.05%)</title><rect x="438.6" y="947.0" width="12.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.6" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 1.05%)</title><rect x="438.6" y="931.0" width="12.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="441.6" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 1.05%)</title><rect x="438.6" y="915.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.6" y="926.0"></text>
</g>
<g>
<title>do_futex (18 samples, 1.05%)</title><rect x="438.6" y="899.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="441.6" y="910.0"></text>
</g>
<g>
<title>futex_wake (18 samples, 1.05%)</title><rect x="438.6" y="883.0" width="12.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="441.6" y="894.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="438.6" y="867.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.6" y="878.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.06%)</title><rect x="438.6" y="851.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="441.6" y="862.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.99%)</title><rect x="439.3" y="867.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="442.3" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.99%)</title><rect x="439.3" y="851.0" width="11.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.3" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.99%)</title><rect x="439.3" y="835.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="442.3" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="451.0" y="947.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="454.0" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="451.0" y="931.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="454.0" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="451.0" y="915.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="454.0" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.06%)</title><rect x="451.6" y="963.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="454.6" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.06%)</title><rect x="451.6" y="947.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="454.6" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="451.6" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="454.6" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="451.6" y="915.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="454.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.06%)</title><rect x="452.3" y="1011.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.3" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="453.0" y="1011.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="456.0" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="453.0" y="995.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="456.0" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="453.0" y="979.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="456.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (59 samples, 3.43%)</title><rect x="453.7" y="1043.0" width="40.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="456.7" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.06%)</title><rect x="453.7" y="1027.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="456.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 3.38%)</title><rect x="454.4" y="1027.0" width="39.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.4" y="1038.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="454.4" y="1011.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="457.4" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.76%)</title><rect x="455.1" y="1011.0" width="8.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="458.1" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="455.1" y="995.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="458.1" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.23%)</title><rect x="455.8" y="995.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="458.8" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.12%)</title><rect x="456.4" y="979.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="459.4" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="457.1" y="963.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.1" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="457.1" y="947.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.1" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="457.1" y="931.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.1" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="457.8" y="979.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.8" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="457.8" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="460.8" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="457.8" y="947.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="460.8" y="958.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="458.5" y="995.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="461.5" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="459.2" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="462.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (5 samples, 0.29%)</title><rect x="459.9" y="995.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="462.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="459.9" y="979.0" width="3.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="462.9" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="459.9" y="963.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.9" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.23%)</title><rect x="460.6" y="963.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="463.6" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.12%)</title><rect x="461.3" y="947.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="464.3" y="958.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="461.3" y="931.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="464.3" y="942.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.06%)</title><rect x="461.3" y="915.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="464.3" y="926.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="461.9" y="915.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.9" y="926.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.06%)</title><rect x="461.9" y="899.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.9" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="462.6" y="947.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="465.6" y="958.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="462.6" y="931.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="465.6" y="942.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="462.6" y="915.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.6" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="462.6" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.6" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="463.3" y="995.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="466.3" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="463.3" y="979.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="466.3" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="463.3" y="963.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="466.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 2.44%)</title><rect x="464.0" y="1011.0" width="28.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="467.0" y="1022.0">[u..</text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (2 samples, 0.12%)</title><rect x="464.0" y="995.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="467.0" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="464.7" y="979.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.7" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="464.7" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.7" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="464.7" y="947.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="467.7" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (39 samples, 2.27%)</title><rect x="465.4" y="995.0" width="26.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="468.4" y="1006.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 2.04%)</title><rect x="467.4" y="979.0" width="24.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.4" y="990.0">e..</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 2.04%)</title><rect x="467.4" y="963.0" width="24.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="470.4" y="974.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 1.98%)</title><rect x="468.1" y="947.0" width="23.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="471.1" y="958.0">_..</text>
</g>
<g>
<title>do_futex (34 samples, 1.98%)</title><rect x="468.1" y="931.0" width="23.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.1" y="942.0">d..</text>
</g>
<g>
<title>futex_wait (34 samples, 1.98%)</title><rect x="468.1" y="915.0" width="23.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="471.1" y="926.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (33 samples, 1.92%)</title><rect x="468.1" y="899.0" width="22.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="471.1" y="910.0">f..</text>
</g>
<g>
<title>schedule (33 samples, 1.92%)</title><rect x="468.1" y="883.0" width="22.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.1" y="894.0">s..</text>
</g>
<g>
<title>__schedule (33 samples, 1.92%)</title><rect x="468.1" y="867.0" width="22.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.1" y="878.0">_..</text>
</g>
<g>
<title>finish_task_switch (33 samples, 1.92%)</title><rect x="468.1" y="851.0" width="22.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="471.1" y="862.0">f..</text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="490.8" y="899.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="493.8" y="910.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.06%)</title><rect x="491.5" y="979.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.5" y="990.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.06%)</title><rect x="491.5" y="963.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.5" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="491.5" y="947.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="494.5" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="491.5" y="931.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="494.5" y="942.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.06%)</title><rect x="492.2" y="995.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="495.2" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.12%)</title><rect x="492.9" y="1011.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="495.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="494.2" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.06%)</title><rect x="494.9" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.06%)</title><rect x="494.9" y="1043.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.06%)</title><rect x="494.9" y="1027.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="497.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.06%)</title><rect x="494.9" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="497.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.06%)</title><rect x="494.9" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.06%)</title><rect x="494.9" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="494.9" y="963.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="497.9" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="494.9" y="947.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="497.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="494.9" y="931.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="497.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="494.9" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="497.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="494.9" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.9" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="494.9" y="883.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="497.9" y="894.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="494.9" y="867.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="497.9" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="494.9" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="497.9" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="494.9" y="835.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="497.9" y="846.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="494.9" y="819.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.9" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="494.9" y="803.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (26 samples, 1.51%)</title><rect x="495.6" y="1059.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (26 samples, 1.51%)</title><rect x="495.6" y="1043.0" width="17.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (26 samples, 1.51%)</title><rect x="495.6" y="1027.0" width="17.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="498.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (26 samples, 1.51%)</title><rect x="495.6" y="1011.0" width="17.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 1.34%)</title><rect x="497.7" y="995.0" width="15.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.7" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="497.7" y="979.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="500.7" y="990.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="497.7" y="963.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="500.7" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="497.7" y="947.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.7" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="497.7" y="931.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.7" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="497.7" y="915.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.7" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (22 samples, 1.28%)</title><rect x="498.3" y="979.0" width="15.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="501.3" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.28%)</title><rect x="498.3" y="963.0" width="15.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="501.3" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.28%)</title><rect x="498.3" y="947.0" width="15.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.3" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 1.28%)</title><rect x="498.3" y="931.0" width="15.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="501.3" y="942.0"></text>
</g>
<g>
<title>do_futex (22 samples, 1.28%)</title><rect x="498.3" y="915.0" width="15.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.3" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="498.3" y="899.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="501.3" y="910.0"></text>
</g>
<g>
<title>futex_wake (21 samples, 1.22%)</title><rect x="499.0" y="899.0" width="14.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="502.0" y="910.0"></text>
</g>
<g>
<title>wake_up_q (20 samples, 1.16%)</title><rect x="499.7" y="883.0" width="13.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="502.7" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 1.16%)</title><rect x="499.7" y="867.0" width="13.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="502.7" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (20 samples, 1.16%)</title><rect x="499.7" y="851.0" width="13.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="502.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (65 samples, 3.78%)</title><rect x="513.5" y="1075.0" width="44.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.5" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 2.21%)</title><rect x="513.5" y="1059.0" width="26.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.5" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.29%)</title><rect x="513.5" y="1043.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="516.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.29%)</title><rect x="513.5" y="1027.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="516.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.23%)</title><rect x="513.5" y="1011.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="513.5" y="995.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.17%)</title><rect x="513.5" y="979.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.5" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.17%)</title><rect x="513.5" y="963.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="516.5" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.17%)</title><rect x="513.5" y="947.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="516.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.17%)</title><rect x="513.5" y="931.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.5" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.17%)</title><rect x="513.5" y="915.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="516.5" y="926.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.17%)</title><rect x="513.5" y="899.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="516.5" y="910.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.17%)</title><rect x="513.5" y="883.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="516.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.17%)</title><rect x="513.5" y="867.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="516.5" y="878.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.17%)</title><rect x="513.5" y="851.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.5" y="862.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="513.5" y="835.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="516.5" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="515.5" y="979.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="518.5" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="515.5" y="963.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="518.5" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="515.5" y="947.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.06%)</title><rect x="516.2" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.06%)</title><rect x="516.9" y="1043.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.06%)</title><rect x="516.9" y="1027.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (32 samples, 1.86%)</title><rect x="517.6" y="1043.0" width="22.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.6" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (32 samples, 1.86%)</title><rect x="517.6" y="1027.0" width="22.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.6" y="1038.0">j..</text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.23%)</title><rect x="517.6" y="1011.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="520.6" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.06%)</title><rect x="517.6" y="995.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="520.6" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="518.3" y="995.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="521.3" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="518.3" y="979.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="521.3" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="518.3" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="521.3" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="518.3" y="947.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="521.3" y="958.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.06%)</title><rect x="519.0" y="995.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="522.0" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_wait (1 samples, 0.06%)</title><rect x="519.6" y="995.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="522.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.57%)</title><rect x="520.3" y="1011.0" width="18.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="523.3" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (24 samples, 1.40%)</title><rect x="520.3" y="995.0" width="16.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="523.3" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.28%)</title><rect x="520.3" y="979.0" width="15.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="523.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.28%)</title><rect x="520.3" y="963.0" width="15.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.3" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 1.28%)</title><rect x="520.3" y="947.0" width="15.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="523.3" y="958.0"></text>
</g>
<g>
<title>do_futex (22 samples, 1.28%)</title><rect x="520.3" y="931.0" width="15.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="523.3" y="942.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 1.28%)</title><rect x="520.3" y="915.0" width="15.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="523.3" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.06%)</title><rect x="520.3" y="899.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.3" y="910.0"></text>
</g>
<g>
<title>futex_wait_queue_me (19 samples, 1.11%)</title><rect x="521.0" y="899.0" width="13.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="524.0" y="910.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.99%)</title><rect x="522.4" y="883.0" width="11.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.4" y="894.0"></text>
</g>
<g>
<title>__schedule (17 samples, 0.99%)</title><rect x="522.4" y="867.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.4" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.87%)</title><rect x="523.8" y="851.0" width="10.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="526.8" y="862.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.06%)</title><rect x="534.1" y="899.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.1" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="534.7" y="899.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="537.7" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="535.4" y="979.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="538.4" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="535.4" y="963.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="538.4" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="535.4" y="947.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="538.4" y="958.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.12%)</title><rect x="536.8" y="995.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="539.8" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="537.5" y="979.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="540.5" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="537.5" y="963.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="540.5" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="537.5" y="947.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="540.5" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.06%)</title><rect x="538.2" y="995.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="541.2" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="538.2" y="979.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.2" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="538.2" y="963.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="541.2" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="538.2" y="947.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.2" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.06%)</title><rect x="538.9" y="1011.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="541.9" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="538.9" y="995.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.9" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="538.9" y="979.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="541.9" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="538.9" y="963.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="541.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.17%)</title><rect x="539.6" y="1059.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.17%)</title><rect x="539.6" y="1043.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.06%)</title><rect x="539.6" y="1027.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.6" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="539.6" y="1011.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="542.6" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="539.6" y="995.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="542.6" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="539.6" y="979.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="542.6" y="990.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="539.6" y="963.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="542.6" y="974.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="539.6" y="947.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="542.6" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="539.6" y="931.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="542.6" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="539.6" y="915.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="542.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.12%)</title><rect x="540.2" y="1027.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.12%)</title><rect x="540.2" y="1011.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.12%)</title><rect x="540.2" y="995.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.12%)</title><rect x="540.2" y="979.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.12%)</title><rect x="540.2" y="963.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="543.2" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.12%)</title><rect x="540.2" y="947.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="543.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="540.2" y="931.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="543.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="540.2" y="915.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="543.2" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.12%)</title><rect x="540.2" y="899.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="543.2" y="910.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="540.2" y="883.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="543.2" y="894.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.12%)</title><rect x="540.2" y="867.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="543.2" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.12%)</title><rect x="540.2" y="851.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="543.2" y="862.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.12%)</title><rect x="540.2" y="835.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="543.2" y="846.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.12%)</title><rect x="540.2" y="819.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="543.2" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.12%)</title><rect x="540.2" y="803.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="543.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 1.40%)</title><rect x="541.6" y="1059.0" width="16.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 1.40%)</title><rect x="541.6" y="1043.0" width="16.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 1.40%)</title><rect x="541.6" y="1027.0" width="16.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="544.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 1.40%)</title><rect x="541.6" y="1011.0" width="16.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 1.16%)</title><rect x="543.7" y="995.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.7" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.12%)</title><rect x="544.4" y="979.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="547.4" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="544.4" y="963.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="547.4" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="544.4" y="947.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="547.4" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="544.4" y="931.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="547.4" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="544.4" y="915.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="547.4" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="545.1" y="963.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="548.1" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="545.1" y="947.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="548.1" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="545.1" y="931.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="548.1" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.99%)</title><rect x="545.7" y="979.0" width="11.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="548.7" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.99%)</title><rect x="545.7" y="963.0" width="11.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="548.7" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.99%)</title><rect x="545.7" y="947.0" width="11.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.7" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.99%)</title><rect x="545.7" y="931.0" width="11.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="548.7" y="942.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.99%)</title><rect x="545.7" y="915.0" width="11.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="548.7" y="926.0"></text>
</g>
<g>
<title>futex_wake (17 samples, 0.99%)</title><rect x="545.7" y="899.0" width="11.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="548.7" y="910.0"></text>
</g>
<g>
<title>wake_up_q (17 samples, 0.99%)</title><rect x="545.7" y="883.0" width="11.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="548.7" y="894.0"></text>
</g>
<g>
<title>try_to_wake_up (17 samples, 0.99%)</title><rect x="545.7" y="867.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.7" y="878.0"></text>
</g>
<g>
<title>__lock_text_start (17 samples, 0.99%)</title><rect x="545.7" y="851.0" width="11.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.7" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="557.4" y="995.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.4" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="557.4" y="979.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.4" y="990.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="557.4" y="963.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="560.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.run (133 samples, 7.74%)</title><rect x="558.1" y="1091.0" width="91.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="561.1" y="1102.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (133 samples, 7.74%)</title><rect x="558.1" y="1075.0" width="91.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.1" y="1086.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (133 samples, 7.74%)</title><rect x="558.1" y="1059.0" width="91.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.1" y="1070.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (130 samples, 7.57%)</title><rect x="558.8" y="1043.0" width="89.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="561.8" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 7.57%)</title><rect x="558.8" y="1027.0" width="89.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.8" y="1038.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 7.57%)</title><rect x="558.8" y="1011.0" width="89.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.8" y="1022.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (130 samples, 7.57%)</title><rect x="558.8" y="995.0" width="89.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.8" y="1006.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (130 samples, 7.57%)</title><rect x="558.8" y="979.0" width="89.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.8" y="990.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (130 samples, 7.57%)</title><rect x="558.8" y="963.0" width="89.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.8" y="974.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (130 samples, 7.57%)</title><rect x="558.8" y="947.0" width="89.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.8" y="958.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (129 samples, 7.51%)</title><rect x="559.5" y="931.0" width="88.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.5" y="942.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (12 samples, 0.70%)</title><rect x="559.5" y="915.0" width="8.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12 samples, 0.70%)</title><rect x="559.5" y="899.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.70%)</title><rect x="559.5" y="883.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="562.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12 samples, 0.70%)</title><rect x="559.5" y="867.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.70%)</title><rect x="559.5" y="851.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="562.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (7 samples, 0.41%)</title><rect x="559.5" y="835.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.12%)</title><rect x="559.5" y="819.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.5" y="830.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/1857815974.apply (1 samples, 0.06%)</title><rect x="559.5" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/154665854.apply (1 samples, 0.06%)</title><rect x="560.2" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.2" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="560.2" y="787.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="563.2" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="560.2" y="771.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="563.2" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="560.2" y="755.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (5 samples, 0.29%)</title><rect x="560.8" y="819.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.29%)</title><rect x="560.8" y="803.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="563.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (5 samples, 0.29%)</title><rect x="560.8" y="787.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (5 samples, 0.29%)</title><rect x="560.8" y="771.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (5 samples, 0.29%)</title><rect x="560.8" y="755.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="563.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.29%)</title><rect x="560.8" y="739.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (5 samples, 0.29%)</title><rect x="560.8" y="723.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="563.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (5 samples, 0.29%)</title><rect x="560.8" y="707.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.12%)</title><rect x="560.8" y="691.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="560.8" y="675.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="560.8" y="659.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="563.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.12%)</title><rect x="560.8" y="643.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.12%)</title><rect x="560.8" y="627.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.12%)</title><rect x="560.8" y="611.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (2 samples, 0.12%)</title><rect x="560.8" y="595.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.12%)</title><rect x="560.8" y="579.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="563.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (2 samples, 0.12%)</title><rect x="560.8" y="563.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.12%)</title><rect x="560.8" y="547.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2 samples, 0.12%)</title><rect x="560.8" y="531.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (2 samples, 0.12%)</title><rect x="560.8" y="515.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2 samples, 0.12%)</title><rect x="560.8" y="499.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (2 samples, 0.12%)</title><rect x="560.8" y="483.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="563.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (1 samples, 0.06%)</title><rect x="560.8" y="467.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (1 samples, 0.06%)</title><rect x="560.8" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.06%)</title><rect x="560.8" y="435.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="560.8" y="419.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (1 samples, 0.06%)</title><rect x="560.8" y="403.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="563.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (1 samples, 0.06%)</title><rect x="560.8" y="387.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.06%)</title><rect x="560.8" y="371.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.06%)</title><rect x="560.8" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="563.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.06%)</title><rect x="560.8" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.06%)</title><rect x="560.8" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.06%)</title><rect x="560.8" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="563.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="560.8" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.06%)</title><rect x="560.8" y="275.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.06%)</title><rect x="561.5" y="467.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="564.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.06%)</title><rect x="561.5" y="451.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.06%)</title><rect x="561.5" y="435.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.06%)</title><rect x="561.5" y="419.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.5" y="430.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="561.5" y="403.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="564.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.17%)</title><rect x="562.2" y="691.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.17%)</title><rect x="562.2" y="675.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="565.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.17%)</title><rect x="562.2" y="659.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.17%)</title><rect x="562.2" y="643.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.17%)</title><rect x="562.2" y="627.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.17%)</title><rect x="562.2" y="611.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.17%)</title><rect x="562.2" y="595.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (3 samples, 0.17%)</title><rect x="562.2" y="579.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (3 samples, 0.17%)</title><rect x="562.2" y="563.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.2" y="574.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (3 samples, 0.17%)</title><rect x="562.2" y="547.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (3 samples, 0.17%)</title><rect x="562.2" y="531.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (3 samples, 0.17%)</title><rect x="562.2" y="515.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.12%)</title><rect x="562.2" y="499.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.2" y="510.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.12%)</title><rect x="562.2" y="483.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="565.2" y="494.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.12%)</title><rect x="562.2" y="467.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="565.2" y="478.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.12%)</title><rect x="562.2" y="451.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="565.2" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.12%)</title><rect x="562.2" y="435.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="565.2" y="446.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.12%)</title><rect x="562.2" y="419.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="565.2" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="562.9" y="403.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="565.9" y="414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="562.9" y="387.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="565.9" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="562.9" y="371.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="565.9" y="382.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="562.9" y="355.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="565.9" y="366.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="562.9" y="339.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="565.9" y="350.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="562.9" y="323.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.9" y="334.0"></text>
</g>
<g>
<title>java/lang/Throwable.toString (1 samples, 0.06%)</title><rect x="563.6" y="499.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.6" y="510.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.06%)</title><rect x="563.6" y="483.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.12%)</title><rect x="564.3" y="835.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.12%)</title><rect x="564.3" y="819.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.apply (2 samples, 0.12%)</title><rect x="564.3" y="803.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.12%)</title><rect x="564.3" y="787.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.12%)</title><rect x="564.3" y="771.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.apply (1 samples, 0.06%)</title><rect x="564.3" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.06%)</title><rect x="564.3" y="739.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.06%)</title><rect x="564.3" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="564.3" y="707.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="567.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.06%)</title><rect x="564.3" y="691.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.06%)</title><rect x="564.3" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="567.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.06%)</title><rect x="564.3" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (1 samples, 0.06%)</title><rect x="564.3" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (1 samples, 0.06%)</title><rect x="564.3" y="627.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="567.3" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="564.3" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="567.3" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="564.3" y="595.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="567.3" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="564.3" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="567.3" y="590.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="564.3" y="563.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="567.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (1 samples, 0.06%)</title><rect x="565.0" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.06%)</title><rect x="565.0" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1 samples, 0.06%)</title><rect x="565.0" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (1 samples, 0.06%)</title><rect x="565.0" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (1 samples, 0.06%)</title><rect x="565.0" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.06%)</title><rect x="565.0" y="675.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="565.0" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.06%)</title><rect x="565.7" y="835.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="565.7" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="565.7" y="803.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.12%)</title><rect x="566.3" y="835.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.12%)</title><rect x="566.3" y="819.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.12%)</title><rect x="566.3" y="803.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.12%)</title><rect x="566.3" y="787.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="569.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.12%)</title><rect x="566.3" y="771.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.12%)</title><rect x="566.3" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="566.3" y="739.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="569.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="566.3" y="723.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="569.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="566.3" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.3" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.12%)</title><rect x="566.3" y="691.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="569.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="566.3" y="675.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="569.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="566.3" y="659.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="569.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="566.3" y="643.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="569.3" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="566.3" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="569.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="566.3" y="611.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="569.3" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="566.3" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="569.3" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="566.3" y="579.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="569.3" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="566.3" y="563.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="569.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="567.0" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.0" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="567.0" y="627.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="570.0" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="567.0" y="611.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="570.0" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="567.0" y="595.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.12%)</title><rect x="567.7" y="915.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.12%)</title><rect x="567.7" y="899.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.12%)</title><rect x="567.7" y="883.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="570.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (115 samples, 6.69%)</title><rect x="569.1" y="915.0" width="79.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="572.1" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (115 samples, 6.69%)</title><rect x="569.1" y="899.0" width="79.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.1" y="910.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (115 samples, 6.69%)</title><rect x="569.1" y="883.0" width="79.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="572.1" y="894.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (115 samples, 6.69%)</title><rect x="569.1" y="867.0" width="79.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.1" y="878.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$265/1776857875.run (2 samples, 0.12%)</title><rect x="569.8" y="851.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="572.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.12%)</title><rect x="569.8" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (1 samples, 0.06%)</title><rect x="569.8" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.06%)</title><rect x="570.5" y="819.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.5" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="570.5" y="803.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="573.5" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="570.5" y="787.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="573.5" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="570.5" y="771.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="573.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (112 samples, 6.52%)</title><rect x="571.2" y="851.0" width="76.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.2" y="862.0">jdk/inte..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (110 samples, 6.40%)</title><rect x="571.8" y="835.0" width="75.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="574.8" y="846.0">java/nio..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (110 samples, 6.40%)</title><rect x="571.8" y="819.0" width="75.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.8" y="830.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (110 samples, 6.40%)</title><rect x="571.8" y="803.0" width="75.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="574.8" y="814.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (109 samples, 6.34%)</title><rect x="572.5" y="787.0" width="74.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.5" y="798.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (109 samples, 6.34%)</title><rect x="572.5" y="771.0" width="74.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.5" y="782.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (106 samples, 6.17%)</title><rect x="573.9" y="755.0" width="72.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="576.9" y="766.0">sun/nio/..</text>
</g>
<g>
<title>writev (103 samples, 6.00%)</title><rect x="576.0" y="739.0" width="70.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="579.0" y="750.0">writev</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (102 samples, 5.94%)</title><rect x="576.6" y="723.0" width="70.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="579.6" y="734.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (102 samples, 5.94%)</title><rect x="576.6" y="707.0" width="70.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="579.6" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_writev (95 samples, 5.53%)</title><rect x="577.3" y="691.0" width="65.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="580.3" y="702.0">__x64_s..</text>
</g>
<g>
<title>do_writev (95 samples, 5.53%)</title><rect x="577.3" y="675.0" width="65.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.3" y="686.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.12%)</title><rect x="577.3" y="659.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="580.3" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="577.3" y="643.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.3" y="654.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.12%)</title><rect x="577.3" y="627.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="580.3" y="638.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="578.7" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="581.7" y="670.0"></text>
</g>
<g>
<title>vfs_writev (92 samples, 5.36%)</title><rect x="579.4" y="659.0" width="63.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="582.4" y="670.0">vfs_wri..</text>
</g>
<g>
<title>do_iter_write (91 samples, 5.30%)</title><rect x="579.4" y="643.0" width="62.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="582.4" y="654.0">do_ite..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="579.4" y="627.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="582.4" y="638.0"></text>
</g>
<g>
<title>do_iter_readv_writev (90 samples, 5.24%)</title><rect x="580.1" y="627.0" width="61.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.1" y="638.0">do_ite..</text>
</g>
<g>
<title>sock_write_iter (88 samples, 5.12%)</title><rect x="581.5" y="611.0" width="60.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.5" y="622.0">sock_w..</text>
</g>
<g>
<title>sock_sendmsg (86 samples, 5.01%)</title><rect x="582.8" y="595.0" width="59.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="585.8" y="606.0">sock_s..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.12%)</title><rect x="582.8" y="579.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="585.8" y="590.0"></text>
</g>
<g>
<title>inet6_sendmsg (84 samples, 4.89%)</title><rect x="584.2" y="579.0" width="57.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.2" y="590.0">inet6_..</text>
</g>
<g>
<title>tcp_sendmsg (84 samples, 4.89%)</title><rect x="584.2" y="563.0" width="57.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="587.2" y="574.0">tcp_se..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.06%)</title><rect x="584.2" y="547.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="587.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.06%)</title><rect x="584.9" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="587.9" y="558.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.12%)</title><rect x="585.6" y="547.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="588.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (80 samples, 4.66%)</title><rect x="586.9" y="547.0" width="55.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="589.9" y="558.0">tcp_s..</text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.29%)</title><rect x="589.0" y="531.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="592.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.29%)</title><rect x="589.0" y="515.0" width="3.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="592.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.06%)</title><rect x="589.7" y="499.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="592.7" y="510.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.12%)</title><rect x="590.4" y="499.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="593.4" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.12%)</title><rect x="590.4" y="483.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="593.4" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.06%)</title><rect x="590.4" y="467.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="593.4" y="478.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.06%)</title><rect x="591.1" y="467.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="594.1" y="478.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.06%)</title><rect x="591.8" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="594.8" y="510.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.06%)</title><rect x="591.8" y="483.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="594.8" y="494.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.06%)</title><rect x="592.4" y="531.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="595.4" y="542.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.06%)</title><rect x="592.4" y="515.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="595.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (70 samples, 4.07%)</title><rect x="593.1" y="531.0" width="48.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.1" y="542.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (70 samples, 4.07%)</title><rect x="593.1" y="515.0" width="48.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.1" y="526.0">__tc..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.06%)</title><rect x="593.1" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="596.1" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (69 samples, 4.02%)</title><rect x="593.8" y="499.0" width="47.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="596.8" y="510.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (69 samples, 4.02%)</title><rect x="593.8" y="483.0" width="47.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.8" y="494.0">__tc..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.06%)</title><rect x="594.5" y="467.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="597.5" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (64 samples, 3.73%)</title><rect x="595.2" y="467.0" width="44.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="598.2" y="478.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (64 samples, 3.73%)</title><rect x="595.2" y="451.0" width="44.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.2" y="462.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="595.2" y="435.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="598.2" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="595.2" y="419.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="598.2" y="430.0"></text>
</g>
<g>
<title>ip_local_out (63 samples, 3.67%)</title><rect x="595.9" y="435.0" width="43.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="598.9" y="446.0">ip_l..</text>
</g>
<g>
<title>ip_output (63 samples, 3.67%)</title><rect x="595.9" y="419.0" width="43.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="598.9" y="430.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (63 samples, 3.67%)</title><rect x="595.9" y="403.0" width="43.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="598.9" y="414.0">ip_f..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.12%)</title><rect x="595.9" y="387.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="598.9" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (61 samples, 3.55%)</title><rect x="597.3" y="387.0" width="41.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.3" y="398.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (61 samples, 3.55%)</title><rect x="597.3" y="371.0" width="41.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.3" y="382.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (56 samples, 3.26%)</title><rect x="597.9" y="355.0" width="38.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.9" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (56 samples, 3.26%)</title><rect x="597.9" y="339.0" width="38.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.9" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (56 samples, 3.26%)</title><rect x="597.9" y="323.0" width="38.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="600.9" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (54 samples, 3.14%)</title><rect x="597.9" y="307.0" width="37.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="600.9" y="318.0">__s..</text>
</g>
<g>
<title>net_rx_action (53 samples, 3.08%)</title><rect x="598.6" y="291.0" width="36.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="601.6" y="302.0">net..</text>
</g>
<g>
<title>process_backlog (53 samples, 3.08%)</title><rect x="598.6" y="275.0" width="36.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="601.6" y="286.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (52 samples, 3.03%)</title><rect x="599.3" y="259.0" width="35.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="602.3" y="270.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (52 samples, 3.03%)</title><rect x="599.3" y="243.0" width="35.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.3" y="254.0">__n..</text>
</g>
<g>
<title>ip_rcv (52 samples, 3.03%)</title><rect x="599.3" y="227.0" width="35.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="602.3" y="238.0">ip_..</text>
</g>
<g>
<title>ip_rcv_finish (52 samples, 3.03%)</title><rect x="599.3" y="211.0" width="35.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="602.3" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (52 samples, 3.03%)</title><rect x="599.3" y="195.0" width="35.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="602.3" y="206.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 3.03%)</title><rect x="599.3" y="179.0" width="35.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.3" y="190.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 3.03%)</title><rect x="599.3" y="163.0" width="35.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="602.3" y="174.0">ip_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.06%)</title><rect x="599.3" y="147.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="602.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 2.97%)</title><rect x="600.0" y="147.0" width="35.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="603.0" y="158.0">tcp..</text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.17%)</title><rect x="601.4" y="131.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.4" y="142.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.12%)</title><rect x="601.4" y="115.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="604.4" y="126.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.06%)</title><rect x="602.7" y="115.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (46 samples, 2.68%)</title><rect x="603.4" y="131.0" width="31.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="606.4" y="142.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (46 samples, 2.68%)</title><rect x="603.4" y="115.0" width="31.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.4" y="126.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.23%)</title><rect x="603.4" y="99.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="606.4" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.17%)</title><rect x="604.1" y="83.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="607.1" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.17%)</title><rect x="604.1" y="67.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="607.1" y="78.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.17%)</title><rect x="604.1" y="51.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="607.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="604.1" y="35.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.1" y="46.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.06%)</title><rect x="605.5" y="35.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="608.5" y="46.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.12%)</title><rect x="606.2" y="99.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="609.2" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.06%)</title><rect x="606.9" y="83.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="606.9" y="67.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="609.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="606.9" y="51.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.9" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="606.9" y="35.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="609.9" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (40 samples, 2.33%)</title><rect x="607.6" y="99.0" width="27.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="610.6" y="110.0">t..</text>
</g>
<g>
<title>sock_def_readable (40 samples, 2.33%)</title><rect x="607.6" y="83.0" width="27.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.6" y="94.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (40 samples, 2.33%)</title><rect x="607.6" y="67.0" width="27.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="610.6" y="78.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (40 samples, 2.33%)</title><rect x="607.6" y="51.0" width="27.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="610.6" y="62.0">_..</text>
</g>
<g>
<title>__lock_text_start (40 samples, 2.33%)</title><rect x="607.6" y="35.0" width="27.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.6" y="46.0">_..</text>
</g>
<g>
<title>net_rx_action (2 samples, 0.12%)</title><rect x="635.0" y="307.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="638.0" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.23%)</title><rect x="636.4" y="355.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="639.4" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.23%)</title><rect x="636.4" y="339.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="639.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.17%)</title><rect x="636.4" y="323.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="639.4" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.06%)</title><rect x="636.4" y="307.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="639.4" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="637.1" y="307.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.1" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="637.1" y="291.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="640.1" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="637.1" y="275.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.1" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="637.1" y="259.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="640.1" y="270.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.06%)</title><rect x="637.8" y="307.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="640.8" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.06%)</title><rect x="638.5" y="323.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="641.5" y="334.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.17%)</title><rect x="639.2" y="467.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="642.2" y="478.0"></text>
</g>
<g>
<title>__copy_skb_header (2 samples, 0.12%)</title><rect x="639.2" y="451.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.2" y="462.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.06%)</title><rect x="640.5" y="451.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.5" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.06%)</title><rect x="641.2" y="531.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.2" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.06%)</title><rect x="641.2" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="644.2" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.06%)</title><rect x="641.2" y="499.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="644.2" y="510.0"></text>
</g>
<g>
<title>import_iovec (1 samples, 0.06%)</title><rect x="641.9" y="643.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="644.9" y="654.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (1 samples, 0.06%)</title><rect x="641.9" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="644.9" y="638.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="641.9" y="611.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 0.35%)</title><rect x="642.6" y="691.0" width="4.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="645.6" y="702.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.35%)</title><rect x="642.6" y="675.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.6" y="686.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.35%)</title><rect x="642.6" y="659.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="645.6" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.35%)</title><rect x="642.6" y="643.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="646.7" y="755.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="646.7" y="739.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="649.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="646.7" y="723.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="649.7" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="647.4" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.06%)</title><rect x="648.1" y="1043.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.1" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="648.1" y="1027.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.1" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="648.1" y="1011.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="651.1" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="648.1" y="995.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="651.1" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="648.8" y="1043.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="651.8" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="648.8" y="1027.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="651.8" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="648.8" y="1011.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (233 samples, 13.56%)</title><rect x="649.5" y="1091.0" width="160.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="652.5" y="1102.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (233 samples, 13.56%)</title><rect x="649.5" y="1075.0" width="160.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.5" y="1086.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.06%)</title><rect x="649.5" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.06%)</title><rect x="649.5" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.06%)</title><rect x="649.5" y="1027.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.06%)</title><rect x="649.5" y="1011.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.06%)</title><rect x="649.5" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="649.5" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="652.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="649.5" y="963.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="652.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.06%)</title><rect x="649.5" y="947.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1 samples, 0.06%)</title><rect x="649.5" y="931.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (83 samples, 4.83%)</title><rect x="650.1" y="1059.0" width="57.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.1" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (83 samples, 4.83%)</title><rect x="650.1" y="1043.0" width="57.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="653.1" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (82 samples, 4.77%)</title><rect x="650.1" y="1027.0" width="56.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="653.1" y="1038.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peek (1 samples, 0.06%)</title><rect x="650.8" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="653.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.06%)</title><rect x="650.8" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.8" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="650.8" y="979.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="653.8" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="650.8" y="963.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="653.8" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="650.8" y="947.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (16 samples, 0.93%)</title><rect x="651.5" y="1011.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (16 samples, 0.93%)</title><rect x="651.5" y="995.0" width="11.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (16 samples, 0.93%)</title><rect x="651.5" y="979.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (16 samples, 0.93%)</title><rect x="651.5" y="963.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (16 samples, 0.93%)</title><rect x="651.5" y="947.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (16 samples, 0.93%)</title><rect x="651.5" y="931.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (16 samples, 0.93%)</title><rect x="651.5" y="915.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (16 samples, 0.93%)</title><rect x="651.5" y="899.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.93%)</title><rect x="651.5" y="883.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.5" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.17%)</title><rect x="651.5" y="867.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="654.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.17%)</title><rect x="651.5" y="851.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="654.5" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.12%)</title><rect x="651.5" y="835.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="654.5" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="652.9" y="835.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="655.9" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="652.9" y="819.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.9" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="652.9" y="803.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="655.9" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="652.9" y="787.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="655.9" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.76%)</title><rect x="653.6" y="867.0" width="8.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="656.6" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="653.6" y="851.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="656.6" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="653.6" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="656.6" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="653.6" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="656.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.70%)</title><rect x="654.3" y="851.0" width="8.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.3" y="862.0"></text>
</g>
<g>
<title>__write (12 samples, 0.70%)</title><rect x="654.3" y="835.0" width="8.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="657.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.70%)</title><rect x="654.3" y="819.0" width="8.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="657.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.70%)</title><rect x="654.3" y="803.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="657.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_write (12 samples, 0.70%)</title><rect x="654.3" y="787.0" width="8.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.3" y="798.0"></text>
</g>
<g>
<title>ksys_write (12 samples, 0.70%)</title><rect x="654.3" y="771.0" width="8.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.3" y="782.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="654.3" y="755.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="657.3" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="654.3" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="657.3" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="654.3" y="723.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.3" y="734.0"></text>
</g>
<g>
<title>vfs_write (11 samples, 0.64%)</title><rect x="654.9" y="755.0" width="7.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="657.9" y="766.0"></text>
</g>
<g>
<title>__vfs_write (11 samples, 0.64%)</title><rect x="654.9" y="739.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.9" y="750.0"></text>
</g>
<g>
<title>new_sync_write (11 samples, 0.64%)</title><rect x="654.9" y="723.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.9" y="734.0"></text>
</g>
<g>
<title>pipe_write (11 samples, 0.64%)</title><rect x="654.9" y="707.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.9" y="718.0"></text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 0.64%)</title><rect x="654.9" y="691.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.9" y="702.0"></text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 0.64%)</title><rect x="654.9" y="675.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.9" y="686.0"></text>
</g>
<g>
<title>__lock_text_start (11 samples, 0.64%)</title><rect x="654.9" y="659.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="657.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (64 samples, 3.73%)</title><rect x="662.5" y="1011.0" width="44.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.5" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (63 samples, 3.67%)</title><rect x="662.5" y="995.0" width="43.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.5" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (63 samples, 3.67%)</title><rect x="662.5" y="979.0" width="43.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.5" y="990.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (63 samples, 3.67%)</title><rect x="662.5" y="963.0" width="43.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.5" y="974.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (43 samples, 2.50%)</title><rect x="662.5" y="947.0" width="29.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="665.5" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (43 samples, 2.50%)</title><rect x="662.5" y="931.0" width="29.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="665.5" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (43 samples, 2.50%)</title><rect x="662.5" y="915.0" width="29.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="665.5" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (41 samples, 2.39%)</title><rect x="663.2" y="899.0" width="28.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.2" y="910.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (41 samples, 2.39%)</title><rect x="663.2" y="883.0" width="28.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="666.2" y="894.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (40 samples, 2.33%)</title><rect x="663.9" y="867.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="666.9" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (40 samples, 2.33%)</title><rect x="663.9" y="851.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.9" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (40 samples, 2.33%)</title><rect x="663.9" y="835.0" width="27.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.9" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (40 samples, 2.33%)</title><rect x="663.9" y="819.0" width="27.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.9" y="830.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="665.3" y="803.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="668.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (30 samples, 1.75%)</title><rect x="665.9" y="803.0" width="20.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.29%)</title><rect x="666.6" y="787.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="669.6" y="798.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.17%)</title><rect x="666.6" y="771.0" width="2.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="669.6" y="782.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$38/1857815974.apply (1 samples, 0.06%)</title><rect x="668.7" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="671.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (1 samples, 0.06%)</title><rect x="669.4" y="771.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (20 samples, 1.16%)</title><rect x="670.1" y="787.0" width="13.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (20 samples, 1.16%)</title><rect x="670.1" y="771.0" width="13.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.06%)</title><rect x="670.1" y="755.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.06%)</title><rect x="670.1" y="739.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (18 samples, 1.05%)</title><rect x="670.7" y="755.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (18 samples, 1.05%)</title><rect x="670.7" y="739.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.7" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$118/827371135.apply (1 samples, 0.06%)</title><rect x="670.7" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (1 samples, 0.06%)</title><rect x="670.7" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (1 samples, 0.06%)</title><rect x="670.7" y="691.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="673.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (1 samples, 0.06%)</title><rect x="670.7" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.7" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="670.7" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="673.7" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="670.7" y="643.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="673.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="670.7" y="627.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="673.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="670.7" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="673.7" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="670.7" y="595.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="673.7" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="670.7" y="579.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="673.7" y="590.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="670.7" y="563.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="673.7" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.06%)</title><rect x="670.7" y="547.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="673.7" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="670.7" y="531.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="673.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17 samples, 0.99%)</title><rect x="671.4" y="723.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.4" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (9 samples, 0.52%)</title><rect x="671.4" y="707.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.4" y="718.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (7 samples, 0.41%)</title><rect x="672.8" y="691.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="675.8" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.41%)</title><rect x="672.8" y="675.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.41%)</title><rect x="672.8" y="659.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="675.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.23%)</title><rect x="674.9" y="643.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="677.9" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.12%)</title><rect x="676.2" y="627.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.12%)</title><rect x="676.2" y="611.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="679.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.06%)</title><rect x="676.2" y="595.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.06%)</title><rect x="676.9" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.06%)</title><rect x="676.9" y="579.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="679.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.47%)</title><rect x="677.6" y="707.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (8 samples, 0.47%)</title><rect x="677.6" y="691.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.47%)</title><rect x="677.6" y="675.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="680.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="677.6" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="677.6" y="643.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1564007654.get$Lambda (1 samples, 0.06%)</title><rect x="677.6" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.6" y="638.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.06%)</title><rect x="677.6" y="611.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="680.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.12%)</title><rect x="678.3" y="659.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="678.3" y="643.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.12%)</title><rect x="678.3" y="627.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="681.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="679.0" y="611.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="682.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="679.0" y="595.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="682.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="679.0" y="579.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="682.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.06%)</title><rect x="679.7" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="682.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.17%)</title><rect x="680.4" y="659.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="683.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.17%)</title><rect x="680.4" y="643.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.4" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (3 samples, 0.17%)</title><rect x="680.4" y="627.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.4" y="638.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (3 samples, 0.17%)</title><rect x="680.4" y="611.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="683.4" y="622.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.17%)</title><rect x="680.4" y="595.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="683.4" y="606.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.17%)</title><rect x="680.4" y="579.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="683.4" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.06%)</title><rect x="681.0" y="563.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="684.0" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="681.7" y="563.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="684.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.06%)</title><rect x="682.4" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (1 samples, 0.06%)</title><rect x="682.4" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="685.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.06%)</title><rect x="683.1" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.apply (4 samples, 0.23%)</title><rect x="683.8" y="787.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (4 samples, 0.23%)</title><rect x="683.8" y="771.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.17%)</title><rect x="683.8" y="755.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (2 samples, 0.12%)</title><rect x="684.5" y="739.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.12%)</title><rect x="684.5" y="723.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.5" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (2 samples, 0.12%)</title><rect x="684.5" y="707.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.5" y="718.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (1 samples, 0.06%)</title><rect x="685.2" y="691.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.06%)</title><rect x="685.2" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.2" y="686.0"></text>
</g>
<g>
<title>JVM_IHashCode (1 samples, 0.06%)</title><rect x="685.2" y="659.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="688.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (1 samples, 0.06%)</title><rect x="685.9" y="755.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="688.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="685.9" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="685.9" y="723.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="688.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="685.9" y="707.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="688.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="685.9" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="688.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="685.9" y="675.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="688.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.23%)</title><rect x="686.5" y="803.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="689.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.23%)</title><rect x="686.5" y="787.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (4 samples, 0.23%)</title><rect x="686.5" y="771.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (4 samples, 0.23%)</title><rect x="686.5" y="755.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (4 samples, 0.23%)</title><rect x="686.5" y="739.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (4 samples, 0.23%)</title><rect x="686.5" y="723.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.5" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.17%)</title><rect x="686.5" y="707.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.5" y="718.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.06%)</title><rect x="686.5" y="691.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="689.5" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="687.2" y="691.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="690.2" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.12%)</title><rect x="687.2" y="675.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="690.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (1 samples, 0.06%)</title><rect x="688.6" y="707.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="691.6" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (1 samples, 0.06%)</title><rect x="688.6" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.06%)</title><rect x="688.6" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="688.6" y="659.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="691.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.compareTo (1 samples, 0.06%)</title><rect x="688.6" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.06%)</title><rect x="688.6" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.compareTo (1 samples, 0.06%)</title><rect x="688.6" y="611.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="688.6" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="691.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="688.6" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="691.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="688.6" y="563.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="691.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.06%)</title><rect x="689.3" y="803.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="689.3" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="692.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="689.3" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.apply (1 samples, 0.06%)</title><rect x="690.0" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="693.0" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="690.0" y="787.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="693.0" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="690.0" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="693.0" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="690.0" y="755.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="693.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="690.7" y="803.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="693.7" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="690.7" y="787.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="693.7" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="690.7" y="771.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="693.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="691.4" y="899.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="694.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="691.4" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="691.4" y="867.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="694.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (17 samples, 0.99%)</title><rect x="692.0" y="947.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.06%)</title><rect x="693.4" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (1 samples, 0.06%)</title><rect x="694.1" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.06%)</title><rect x="694.1" y="915.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.1" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.06%)</title><rect x="694.1" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.1" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="694.1" y="883.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="697.1" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="694.1" y="867.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.1" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="694.1" y="851.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="697.1" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="694.1" y="835.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="697.1" y="846.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="694.1" y="819.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="697.1" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="694.1" y="803.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="697.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (3 samples, 0.17%)</title><rect x="694.8" y="931.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.8" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.17%)</title><rect x="694.8" y="915.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (3 samples, 0.17%)</title><rect x="694.8" y="899.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="697.8" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3 samples, 0.17%)</title><rect x="694.8" y="883.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="697.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (3 samples, 0.17%)</title><rect x="694.8" y="867.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.8" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.17%)</title><rect x="694.8" y="851.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.8" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.12%)</title><rect x="694.8" y="835.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.8" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (2 samples, 0.12%)</title><rect x="694.8" y="819.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.8" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="695.5" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="695.5" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="695.5" y="771.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.06%)</title><rect x="696.2" y="835.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (9 samples, 0.52%)</title><rect x="696.8" y="931.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (9 samples, 0.52%)</title><rect x="696.8" y="915.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.17%)</title><rect x="696.8" y="899.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.17%)</title><rect x="696.8" y="883.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="699.8" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="698.2" y="867.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="701.2" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="698.2" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.2" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="698.2" y="835.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="701.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.29%)</title><rect x="698.9" y="899.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="701.9" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.29%)</title><rect x="698.9" y="883.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.9" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="701.7" y="867.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="704.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="701.7" y="851.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="704.7" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="701.7" y="835.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="704.7" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.06%)</title><rect x="702.3" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$274/1055343799.apply (1 samples, 0.06%)</title><rect x="702.3" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.06%)</title><rect x="702.3" y="867.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.06%)</title><rect x="702.3" y="851.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="705.3" y="862.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="703.0" y="931.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="706.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$196/1429407653.accept (2 samples, 0.12%)</title><rect x="703.7" y="947.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.06%)</title><rect x="703.7" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.7" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="703.7" y="915.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.7" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="703.7" y="899.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="706.7" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="703.7" y="883.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="706.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.06%)</title><rect x="704.4" y="931.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.06%)</title><rect x="704.4" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.4" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="705.1" y="947.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="708.1" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="705.1" y="931.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="708.1" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="705.1" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="708.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.06%)</title><rect x="705.8" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="708.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.06%)</title><rect x="705.8" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="708.8" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="706.5" y="1027.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="709.5" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="706.5" y="1011.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.5" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="706.5" y="995.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (149 samples, 8.67%)</title><rect x="707.1" y="1059.0" width="102.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.1" y="1070.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (149 samples, 8.67%)</title><rect x="707.1" y="1043.0" width="102.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.1" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (148 samples, 8.61%)</title><rect x="707.8" y="1027.0" width="101.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.8" y="1038.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (148 samples, 8.61%)</title><rect x="707.8" y="1011.0" width="101.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.8" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (148 samples, 8.61%)</title><rect x="707.8" y="995.0" width="101.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.8" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.12%)</title><rect x="707.8" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="707.8" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (1 samples, 0.06%)</title><rect x="707.8" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.06%)</title><rect x="707.8" y="931.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.8" y="942.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="707.8" y="915.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="710.8" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="707.8" y="899.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="710.8" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="707.8" y="883.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="710.8" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="707.8" y="867.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="710.8" y="878.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.06%)</title><rect x="707.8" y="851.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="710.8" y="862.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.06%)</title><rect x="707.8" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="710.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (1 samples, 0.06%)</title><rect x="708.5" y="963.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.06%)</title><rect x="708.5" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="708.5" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (144 samples, 8.38%)</title><rect x="709.2" y="979.0" width="98.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.2" y="990.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (144 samples, 8.38%)</title><rect x="709.2" y="963.0" width="98.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="712.2" y="974.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (144 samples, 8.38%)</title><rect x="709.2" y="947.0" width="98.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.2" y="958.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (144 samples, 8.38%)</title><rect x="709.2" y="931.0" width="98.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.2" y="942.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (144 samples, 8.38%)</title><rect x="709.2" y="915.0" width="98.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="712.2" y="926.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (144 samples, 8.38%)</title><rect x="709.2" y="899.0" width="98.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.2" y="910.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (75 samples, 4.37%)</title><rect x="709.2" y="883.0" width="51.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="712.2" y="894.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (73 samples, 4.25%)</title><rect x="709.9" y="867.0" width="50.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="712.9" y="878.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (73 samples, 4.25%)</title><rect x="709.9" y="851.0" width="50.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.9" y="862.0">jdk/i..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.17%)</title><rect x="709.9" y="835.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="712.9" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (1 samples, 0.06%)</title><rect x="709.9" y="819.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.9" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.06%)</title><rect x="709.9" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.06%)</title><rect x="709.9" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="712.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.06%)</title><rect x="709.9" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.06%)</title><rect x="709.9" y="755.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.9" y="766.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="710.6" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.6" y="830.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.06%)</title><rect x="710.6" y="803.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.6" y="814.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.06%)</title><rect x="710.6" y="787.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (1 samples, 0.06%)</title><rect x="711.3" y="819.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.3" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.06%)</title><rect x="711.3" y="803.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.3" y="814.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.06%)</title><rect x="711.3" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.3" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="711.3" y="771.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="714.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="711.3" y="755.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="714.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="711.3" y="739.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="714.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (69 samples, 4.02%)</title><rect x="712.0" y="835.0" width="47.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.0" y="846.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (69 samples, 4.02%)</title><rect x="712.0" y="819.0" width="47.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.0" y="830.0">jdk/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.47%)</title><rect x="713.3" y="803.0" width="5.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="716.3" y="814.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.47%)</title><rect x="713.3" y="787.0" width="5.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="716.3" y="798.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (8 samples, 0.47%)</title><rect x="713.3" y="771.0" width="5.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (33 samples, 1.92%)</title><rect x="718.8" y="803.0" width="22.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.8" y="814.0">j..</text>
</g>
<g>
<title>java/time/Instant.truncatedTo (33 samples, 1.92%)</title><rect x="718.8" y="787.0" width="22.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.8" y="798.0">j..</text>
</g>
<g>
<title>java/time/Instant.plusNanos (33 samples, 1.92%)</title><rect x="718.8" y="771.0" width="22.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.8" y="782.0">j..</text>
</g>
<g>
<title>java/time/Instant.plus (33 samples, 1.92%)</title><rect x="718.8" y="755.0" width="22.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.8" y="766.0">j..</text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (33 samples, 1.92%)</title><rect x="718.8" y="739.0" width="22.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.8" y="750.0">j..</text>
</g>
<g>
<title>java/time/Instant.create (33 samples, 1.92%)</title><rect x="718.8" y="723.0" width="22.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.8" y="734.0">j..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (11 samples, 0.64%)</title><rect x="733.9" y="707.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="736.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (11 samples, 0.64%)</title><rect x="733.9" y="691.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (11 samples, 0.64%)</title><rect x="733.9" y="675.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="736.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.17%)</title><rect x="741.5" y="803.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.17%)</title><rect x="741.5" y="787.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="741.5" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.06%)</title><rect x="741.5" y="755.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.5" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.06%)</title><rect x="741.5" y="739.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.5" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.06%)</title><rect x="741.5" y="723.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="744.5" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.06%)</title><rect x="741.5" y="707.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.12%)</title><rect x="742.2" y="771.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="745.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.12%)</title><rect x="742.2" y="755.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.2" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.12%)</title><rect x="742.2" y="739.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.2" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.12%)</title><rect x="742.2" y="723.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.2" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (2 samples, 0.12%)</title><rect x="742.2" y="707.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.2" y="718.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (2 samples, 0.12%)</title><rect x="742.2" y="691.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.2" y="702.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (2 samples, 0.12%)</title><rect x="742.2" y="675.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="745.2" y="686.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="742.2" y="659.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="745.2" y="670.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="742.2" y="643.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.2" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="742.2" y="627.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="745.2" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="742.2" y="611.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="745.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="742.9" y="659.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="742.9" y="643.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="742.9" y="627.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="745.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (22 samples, 1.28%)</title><rect x="743.6" y="803.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="746.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (22 samples, 1.28%)</title><rect x="743.6" y="787.0" width="15.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="746.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.12%)</title><rect x="744.2" y="771.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.12%)</title><rect x="744.2" y="755.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.12%)</title><rect x="744.2" y="739.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.12%)</title><rect x="744.2" y="723.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="747.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.12%)</title><rect x="744.2" y="707.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="747.2" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.12%)</title><rect x="744.2" y="691.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="747.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (19 samples, 1.11%)</title><rect x="745.6" y="771.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (19 samples, 1.11%)</title><rect x="745.6" y="755.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.99%)</title><rect x="747.0" y="739.0" width="11.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.99%)</title><rect x="747.0" y="723.0" width="11.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.99%)</title><rect x="747.0" y="707.0" width="11.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.0" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.29%)</title><rect x="747.0" y="691.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="750.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.29%)</title><rect x="747.0" y="675.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="750.0" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.23%)</title><rect x="747.0" y="659.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="750.0" y="670.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="749.7" y="659.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="752.7" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="750.4" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="753.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="750.4" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="750.4" y="659.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.06%)</title><rect x="750.4" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.4" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.06%)</title><rect x="750.4" y="627.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.4" y="638.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="750.4" y="611.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="753.4" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (1 samples, 0.06%)</title><rect x="750.4" y="595.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="753.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="750.4" y="579.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="753.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="750.4" y="563.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="753.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="750.4" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="753.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (11 samples, 0.64%)</title><rect x="751.1" y="691.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.64%)</title><rect x="751.1" y="675.0" width="7.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.1" y="686.0"></text>
</g>
<g>
<title>__write (11 samples, 0.64%)</title><rect x="751.1" y="659.0" width="7.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="754.1" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.58%)</title><rect x="751.8" y="643.0" width="6.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="754.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.58%)</title><rect x="751.8" y="627.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="754.8" y="638.0"></text>
</g>
<g>
<title>__x64_sys_write (10 samples, 0.58%)</title><rect x="751.8" y="611.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="754.8" y="622.0"></text>
</g>
<g>
<title>ksys_write (10 samples, 0.58%)</title><rect x="751.8" y="595.0" width="6.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="754.8" y="606.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="751.8" y="579.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="754.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="751.8" y="563.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="754.8" y="574.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="751.8" y="547.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="754.8" y="558.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.52%)</title><rect x="752.5" y="579.0" width="6.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="755.5" y="590.0"></text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.06%)</title><rect x="752.5" y="563.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="755.5" y="574.0"></text>
</g>
<g>
<title>__vfs_write (8 samples, 0.47%)</title><rect x="753.2" y="563.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="756.2" y="574.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.47%)</title><rect x="753.2" y="547.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="756.2" y="558.0"></text>
</g>
<g>
<title>pipe_write (8 samples, 0.47%)</title><rect x="753.2" y="531.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="756.2" y="542.0"></text>
</g>
<g>
<title>__wake_up_sync_key (7 samples, 0.41%)</title><rect x="753.9" y="515.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="756.9" y="526.0"></text>
</g>
<g>
<title>__wake_up_common_lock (7 samples, 0.41%)</title><rect x="753.9" y="499.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="756.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.41%)</title><rect x="753.9" y="483.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="756.9" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="758.7" y="803.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="761.7" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="758.7" y="787.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="761.7" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="758.7" y="771.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="761.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.06%)</title><rect x="759.3" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (1 samples, 0.06%)</title><rect x="759.3" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="760.0" y="867.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="763.0" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="760.0" y="851.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="763.0" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="760.0" y="835.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="763.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1564007654.accept (5 samples, 0.29%)</title><rect x="760.7" y="883.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (5 samples, 0.29%)</title><rect x="760.7" y="867.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="763.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (5 samples, 0.29%)</title><rect x="760.7" y="851.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.23%)</title><rect x="760.7" y="835.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.23%)</title><rect x="760.7" y="819.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="763.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.23%)</title><rect x="760.7" y="803.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.23%)</title><rect x="760.7" y="787.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="763.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$294/923149657.accept (1 samples, 0.06%)</title><rect x="760.7" y="771.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.06%)</title><rect x="760.7" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.06%)</title><rect x="760.7" y="739.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="763.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="760.7" y="723.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="760.7" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$296/1509000023.accept (3 samples, 0.17%)</title><rect x="761.4" y="771.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.17%)</title><rect x="761.4" y="755.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="764.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.17%)</title><rect x="761.4" y="739.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.4" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.17%)</title><rect x="761.4" y="723.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="764.4" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (1 samples, 0.06%)</title><rect x="761.4" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="764.4" y="718.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (1 samples, 0.06%)</title><rect x="762.1" y="707.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="762.8" y="707.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="765.8" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="762.8" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="765.8" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="762.8" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="765.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$201/1503495329.accept (1 samples, 0.06%)</title><rect x="763.5" y="835.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="766.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.06%)</title><rect x="763.5" y="819.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.06%)</title><rect x="763.5" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (62 samples, 3.61%)</title><rect x="764.2" y="883.0" width="42.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.2" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (62 samples, 3.61%)</title><rect x="764.2" y="867.0" width="42.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.2" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (62 samples, 3.61%)</title><rect x="764.2" y="851.0" width="42.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.2" y="862.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (60 samples, 3.49%)</title><rect x="764.2" y="835.0" width="41.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.2" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 3.49%)</title><rect x="764.2" y="819.0" width="41.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="767.2" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (59 samples, 3.43%)</title><rect x="764.8" y="803.0" width="40.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="767.8" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (59 samples, 3.43%)</title><rect x="764.8" y="787.0" width="40.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.8" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.23%)</title><rect x="764.8" y="771.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="767.8" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="765.5" y="755.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="768.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.accept (2 samples, 0.12%)</title><rect x="766.2" y="755.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="769.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.accept (55 samples, 3.20%)</title><rect x="767.6" y="771.0" width="37.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="770.6" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (55 samples, 3.20%)</title><rect x="767.6" y="755.0" width="37.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.6" y="766.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (55 samples, 3.20%)</title><rect x="767.6" y="739.0" width="37.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="770.6" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 3.20%)</title><rect x="767.6" y="723.0" width="37.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.6" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (52 samples, 3.03%)</title><rect x="769.0" y="707.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.0" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (52 samples, 3.03%)</title><rect x="769.0" y="691.0" width="35.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.0" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (50 samples, 2.91%)</title><rect x="769.0" y="675.0" width="34.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.0" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (49 samples, 2.85%)</title><rect x="769.0" y="659.0" width="33.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.0" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (49 samples, 2.85%)</title><rect x="769.0" y="643.0" width="33.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="772.0" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (49 samples, 2.85%)</title><rect x="769.0" y="627.0" width="33.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.0" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (49 samples, 2.85%)</title><rect x="769.0" y="611.0" width="33.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.0" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 2.85%)</title><rect x="769.0" y="595.0" width="33.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="772.0" y="606.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (48 samples, 2.79%)</title><rect x="769.7" y="579.0" width="32.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.7" y="590.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.23%)</title><rect x="769.7" y="563.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="772.7" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="770.3" y="547.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="773.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="770.3" y="531.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="773.3" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="770.3" y="515.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="773.3" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="770.3" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.3" y="510.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="771.0" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="774.0" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="771.0" y="531.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="774.0" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="771.0" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="774.0" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="771.0" y="499.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.0" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.06%)</title><rect x="771.7" y="547.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="774.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="771.7" y="531.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="774.7" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="771.7" y="515.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="774.7" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="771.7" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="774.7" y="510.0"></text>
</g>
<g>
<title>__pthread_cond_signal (44 samples, 2.56%)</title><rect x="772.4" y="563.0" width="30.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="775.4" y="574.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 2.50%)</title><rect x="773.1" y="547.0" width="29.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="776.1" y="558.0">en..</text>
</g>
<g>
<title>do_syscall_64 (43 samples, 2.50%)</title><rect x="773.1" y="531.0" width="29.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="776.1" y="542.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 2.33%)</title><rect x="774.5" y="515.0" width="27.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="777.5" y="526.0">_..</text>
</g>
<g>
<title>do_futex (40 samples, 2.33%)</title><rect x="774.5" y="499.0" width="27.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="777.5" y="510.0">d..</text>
</g>
<g>
<title>futex_wake (40 samples, 2.33%)</title><rect x="774.5" y="483.0" width="27.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="777.5" y="494.0">f..</text>
</g>
<g>
<title>wake_up_q (37 samples, 2.15%)</title><rect x="776.5" y="467.0" width="25.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="779.5" y="478.0">w..</text>
</g>
<g>
<title>try_to_wake_up (37 samples, 2.15%)</title><rect x="776.5" y="451.0" width="25.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="779.5" y="462.0">t..</text>
</g>
<g>
<title>__lock_text_start (37 samples, 2.15%)</title><rect x="776.5" y="435.0" width="25.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="779.5" y="446.0">_..</text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="801.9" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="804.9" y="526.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="801.9" y="499.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="804.9" y="510.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="801.9" y="483.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="804.9" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="801.9" y="467.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="804.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/1730115062.accept (1 samples, 0.06%)</title><rect x="802.6" y="659.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/1730115062.accept (1 samples, 0.06%)</title><rect x="803.3" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.06%)</title><rect x="803.3" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="803.3" y="643.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="803.3" y="627.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="803.3" y="611.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$127/484048613.accept (1 samples, 0.06%)</title><rect x="804.0" y="675.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="807.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (1 samples, 0.06%)</title><rect x="804.0" y="659.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="807.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.06%)</title><rect x="804.0" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.06%)</title><rect x="804.0" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="807.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="804.7" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="807.7" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="804.7" y="691.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="807.7" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="804.7" y="675.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="807.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (2 samples, 0.12%)</title><rect x="805.4" y="835.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="808.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.06%)</title><rect x="806.1" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.12%)</title><rect x="806.7" y="883.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.12%)</title><rect x="806.7" y="867.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="809.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.12%)</title><rect x="806.7" y="851.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.12%)</title><rect x="806.7" y="835.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.7" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.12%)</title><rect x="806.7" y="819.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="809.7" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.06%)</title><rect x="807.4" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.12%)</title><rect x="808.1" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2 samples, 0.12%)</title><rect x="808.1" y="963.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.12%)</title><rect x="808.1" y="947.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2 samples, 0.12%)</title><rect x="808.1" y="931.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.06%)</title><rect x="808.1" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="811.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="808.1" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="808.1" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.06%)</title><rect x="808.1" y="867.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="808.1" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.06%)</title><rect x="808.1" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.06%)</title><rect x="808.1" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="811.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.06%)</title><rect x="808.1" y="803.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="811.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.06%)</title><rect x="808.1" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="811.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.06%)</title><rect x="808.1" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="811.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (1 samples, 0.06%)</title><rect x="808.1" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="811.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.06%)</title><rect x="808.1" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="808.1" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.06%)</title><rect x="808.1" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.06%)</title><rect x="808.1" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="808.1" y="675.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="811.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (1 samples, 0.06%)</title><rect x="808.1" y="659.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1 samples, 0.06%)</title><rect x="808.1" y="643.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="811.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (1 samples, 0.06%)</title><rect x="808.1" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1 samples, 0.06%)</title><rect x="808.8" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.8" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="809.5" y="1091.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="812.5" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="809.5" y="1075.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="812.5" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="809.5" y="1059.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="812.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (12 samples, 0.70%)</title><rect x="810.9" y="1139.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (12 samples, 0.70%)</title><rect x="810.9" y="1123.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (12 samples, 0.70%)</title><rect x="810.9" y="1107.0" width="8.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="813.9" y="1118.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (12 samples, 0.70%)</title><rect x="810.9" y="1091.0" width="8.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="813.9" y="1102.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (12 samples, 0.70%)</title><rect x="810.9" y="1075.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.9" y="1086.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (12 samples, 0.70%)</title><rect x="810.9" y="1059.0" width="8.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.9" y="1070.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (12 samples, 0.70%)</title><rect x="810.9" y="1043.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.9" y="1054.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (12 samples, 0.70%)</title><rect x="810.9" y="1027.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.35%)</title><rect x="810.9" y="1011.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="813.9" y="1022.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (6 samples, 0.35%)</title><rect x="810.9" y="995.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="813.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (6 samples, 0.35%)</title><rect x="815.0" y="1011.0" width="4.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="818.0" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (6 samples, 0.35%)</title><rect x="815.0" y="995.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="818.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::~MergingIterator() (5 samples, 0.29%)</title><rect x="815.7" y="979.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="818.7" y="990.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.06%)</title><rect x="817.0" y="963.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="820.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::~BlockBasedTableIterator() (2 samples, 0.12%)</title><rect x="817.7" y="963.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="820.7" y="974.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.06%)</title><rect x="818.4" y="947.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="821.4" y="958.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.06%)</title><rect x="819.1" y="1139.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.06%)</title><rect x="819.1" y="1123.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="822.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.06%)</title><rect x="819.8" y="1139.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1 samples, 0.06%)</title><rect x="819.8" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (1 samples, 0.06%)</title><rect x="819.8" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/Object.notifyAll (1 samples, 0.06%)</title><rect x="819.8" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="822.8" y="1102.0"></text>
</g>
<g>
<title>JVM_MonitorNotifyAll (1 samples, 0.06%)</title><rect x="819.8" y="1075.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="822.8" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="819.8" y="1059.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="822.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (62 samples, 3.61%)</title><rect x="820.5" y="1139.0" width="42.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.5" y="1150.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (62 samples, 3.61%)</title><rect x="820.5" y="1123.0" width="42.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.5" y="1134.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (22 samples, 1.28%)</title><rect x="821.2" y="1107.0" width="15.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (20 samples, 1.16%)</title><rect x="821.2" y="1091.0" width="13.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (20 samples, 1.16%)</title><rect x="821.2" y="1075.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (20 samples, 1.16%)</title><rect x="821.2" y="1059.0" width="13.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="824.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (20 samples, 1.16%)</title><rect x="821.2" y="1043.0" width="13.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (16 samples, 0.93%)</title><rect x="821.2" y="1027.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="824.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.93%)</title><rect x="821.2" y="1011.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.81%)</title><rect x="822.5" y="995.0" width="9.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (14 samples, 0.81%)</title><rect x="822.5" y="979.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.81%)</title><rect x="822.5" y="963.0" width="9.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (14 samples, 0.81%)</title><rect x="822.5" y="947.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.06%)</title><rect x="822.5" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.06%)</title><rect x="822.5" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.06%)</title><rect x="822.5" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.06%)</title><rect x="822.5" y="883.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.76%)</title><rect x="823.2" y="931.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="826.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.76%)</title><rect x="823.2" y="915.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.76%)</title><rect x="823.2" y="899.0" width="9.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="826.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.76%)</title><rect x="823.2" y="883.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.76%)</title><rect x="823.2" y="867.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.2" y="878.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.06%)</title><rect x="823.2" y="851.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="826.2" y="862.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.06%)</title><rect x="823.2" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="826.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.70%)</title><rect x="823.9" y="851.0" width="8.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="826.9" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.70%)</title><rect x="823.9" y="835.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="826.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.70%)</title><rect x="823.9" y="819.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.9" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.70%)</title><rect x="823.9" y="803.0" width="8.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="826.9" y="814.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.70%)</title><rect x="823.9" y="787.0" width="8.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="826.9" y="798.0"></text>
</g>
<g>
<title>futex_wake (12 samples, 0.70%)</title><rect x="823.9" y="771.0" width="8.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.9" y="782.0"></text>
</g>
<g>
<title>wake_up_q (12 samples, 0.70%)</title><rect x="823.9" y="755.0" width="8.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="826.9" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (12 samples, 0.70%)</title><rect x="823.9" y="739.0" width="8.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="826.9" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (12 samples, 0.70%)</title><rect x="823.9" y="723.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="826.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.23%)</title><rect x="832.2" y="1027.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="835.2" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="834.2" y="1011.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="837.2" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="834.2" y="995.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.2" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="834.2" y="979.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="837.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.12%)</title><rect x="834.9" y="1091.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="837.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="834.9" y="1075.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="837.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.12%)</title><rect x="834.9" y="1059.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.9" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.12%)</title><rect x="834.9" y="1043.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="837.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="834.9" y="1027.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="834.9" y="1011.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.9" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.12%)</title><rect x="834.9" y="995.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.9" y="1006.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.12%)</title><rect x="834.9" y="979.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="837.9" y="990.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.12%)</title><rect x="834.9" y="963.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.9" y="974.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.12%)</title><rect x="834.9" y="947.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.9" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.12%)</title><rect x="834.9" y="931.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="837.9" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="834.9" y="915.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.58%)</title><rect x="836.3" y="1107.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.58%)</title><rect x="836.3" y="1091.0" width="6.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="839.3" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="836.3" y="1075.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.3" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.17%)</title><rect x="837.0" y="1075.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="840.0" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="837.6" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="840.6" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="838.3" y="1059.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="841.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="838.3" y="1043.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="841.3" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="838.3" y="1027.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.3" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="838.3" y="1011.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="841.3" y="1022.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="838.3" y="995.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="841.3" y="1006.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="838.3" y="979.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="841.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.35%)</title><rect x="839.0" y="1075.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="842.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.35%)</title><rect x="839.0" y="1059.0" width="4.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="842.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.29%)</title><rect x="839.7" y="1043.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="842.7" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="839.7" y="1027.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="842.7" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.23%)</title><rect x="840.4" y="1027.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="843.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.23%)</title><rect x="840.4" y="1011.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="843.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.23%)</title><rect x="840.4" y="995.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="843.4" y="1006.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.23%)</title><rect x="840.4" y="979.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="843.4" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.12%)</title><rect x="841.1" y="963.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="844.1" y="974.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.12%)</title><rect x="841.1" y="947.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.1" y="958.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.12%)</title><rect x="841.1" y="931.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="844.1" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.12%)</title><rect x="841.1" y="915.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="844.1" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.06%)</title><rect x="842.5" y="963.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="845.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (29 samples, 1.69%)</title><rect x="843.1" y="1107.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="846.1" y="1118.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="843.1" y="1091.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="846.1" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="843.1" y="1075.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="846.1" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="843.1" y="1059.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.1" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="843.1" y="1043.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (28 samples, 1.63%)</title><rect x="843.8" y="1091.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.8" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.35%)</title><rect x="844.5" y="1075.0" width="4.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="847.5" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.06%)</title><rect x="844.5" y="1059.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="847.5" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.06%)</title><rect x="845.2" y="1059.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="848.2" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.12%)</title><rect x="845.9" y="1059.0" width="1.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="848.9" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.06%)</title><rect x="847.3" y="1059.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="850.3" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="848.0" y="1059.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="851.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="848.0" y="1043.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="851.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="848.0" y="1027.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 1.22%)</title><rect x="848.6" y="1075.0" width="14.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="851.6" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (21 samples, 1.22%)</title><rect x="848.6" y="1059.0" width="14.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="851.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.99%)</title><rect x="851.4" y="1043.0" width="11.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="854.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.99%)</title><rect x="851.4" y="1027.0" width="11.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.99%)</title><rect x="851.4" y="1011.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.4" y="1022.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.99%)</title><rect x="851.4" y="995.0" width="11.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="854.4" y="1006.0"></text>
</g>
<g>
<title>futex_wait (17 samples, 0.99%)</title><rect x="851.4" y="979.0" width="11.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="854.4" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.99%)</title><rect x="851.4" y="963.0" width="11.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="854.4" y="974.0"></text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (3 samples, 0.17%)</title><rect x="851.4" y="947.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="854.4" y="958.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (3 samples, 0.17%)</title><rect x="851.4" y="931.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="854.4" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="851.4" y="915.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="854.4" y="926.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.81%)</title><rect x="853.4" y="947.0" width="9.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="856.4" y="958.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.81%)</title><rect x="853.4" y="931.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="856.4" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.81%)</title><rect x="853.4" y="915.0" width="9.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (191 samples, 11.12%)</title><rect x="863.1" y="1139.0" width="131.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.1" y="1150.0">jdk/internal/net..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.23%)</title><rect x="865.1" y="1123.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="868.1" y="1134.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.06%)</title><rect x="865.1" y="1107.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="868.1" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="865.1" y="1091.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.1" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="865.1" y="1075.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.1" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="865.1" y="1059.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.1" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.12%)</title><rect x="865.8" y="1107.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.8" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.12%)</title><rect x="865.8" y="1091.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="868.8" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.06%)</title><rect x="867.2" y="1107.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="870.2" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.06%)</title><rect x="867.2" y="1091.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="870.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (97 samples, 5.65%)</title><rect x="867.9" y="1123.0" width="66.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.9" y="1134.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/984556979.accept (92 samples, 5.36%)</title><rect x="868.6" y="1107.0" width="63.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="871.6" y="1118.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (92 samples, 5.36%)</title><rect x="868.6" y="1091.0" width="63.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="871.6" y="1102.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (92 samples, 5.36%)</title><rect x="868.6" y="1075.0" width="63.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="871.6" y="1086.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (89 samples, 5.18%)</title><rect x="869.9" y="1059.0" width="61.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.9" y="1070.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (89 samples, 5.18%)</title><rect x="869.9" y="1043.0" width="61.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.9" y="1054.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="869.9" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="869.9" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="872.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.06%)</title><rect x="869.9" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="869.9" y="979.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="869.9" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="872.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="869.9" y="947.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="872.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (88 samples, 5.12%)</title><rect x="870.6" y="1027.0" width="60.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="873.6" y="1038.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (88 samples, 5.12%)</title><rect x="870.6" y="1011.0" width="60.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.6" y="1022.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (88 samples, 5.12%)</title><rect x="870.6" y="995.0" width="60.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.6" y="1006.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="871.3" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.3" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="871.3" y="963.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="874.3" y="974.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="871.3" y="947.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="874.3" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="871.3" y="931.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="874.3" y="942.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="871.3" y="915.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="874.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (86 samples, 5.01%)</title><rect x="872.0" y="979.0" width="59.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.0" y="990.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (86 samples, 5.01%)</title><rect x="872.0" y="963.0" width="59.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="875.0" y="974.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (86 samples, 5.01%)</title><rect x="872.0" y="947.0" width="59.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.0" y="958.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (86 samples, 5.01%)</title><rect x="872.0" y="931.0" width="59.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.0" y="942.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.70%)</title><rect x="873.4" y="915.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.70%)</title><rect x="873.4" y="899.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (12 samples, 0.70%)</title><rect x="873.4" y="883.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.70%)</title><rect x="873.4" y="867.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.70%)</title><rect x="873.4" y="851.0" width="8.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="876.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.64%)</title><rect x="874.1" y="835.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.52%)</title><rect x="874.1" y="819.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.52%)</title><rect x="874.1" y="803.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.47%)</title><rect x="874.1" y="787.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.06%)</title><rect x="874.1" y="771.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.41%)</title><rect x="874.7" y="771.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.41%)</title><rect x="874.7" y="755.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.41%)</title><rect x="874.7" y="739.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.41%)</title><rect x="874.7" y="723.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="877.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.41%)</title><rect x="874.7" y="707.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="877.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 0.41%)</title><rect x="874.7" y="691.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="877.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.41%)</title><rect x="874.7" y="675.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="877.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.41%)</title><rect x="874.7" y="659.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="877.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.41%)</title><rect x="874.7" y="643.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="877.7" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.41%)</title><rect x="874.7" y="627.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.7" y="638.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.41%)</title><rect x="874.7" y="611.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="877.7" y="622.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.41%)</title><rect x="874.7" y="595.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="877.7" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.41%)</title><rect x="874.7" y="579.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.7" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.41%)</title><rect x="874.7" y="563.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="877.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="879.5" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="879.5" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="879.5" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="879.5" y="739.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.12%)</title><rect x="880.2" y="819.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="883.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (1 samples, 0.06%)</title><rect x="881.6" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.06%)</title><rect x="881.6" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.06%)</title><rect x="881.6" y="883.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="884.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.06%)</title><rect x="881.6" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="884.6" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.06%)</title><rect x="881.6" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.6" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.06%)</title><rect x="881.6" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (70 samples, 4.07%)</title><rect x="882.3" y="915.0" width="48.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="885.3" y="926.0">jdk/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (68 samples, 3.96%)</title><rect x="883.7" y="899.0" width="46.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="886.7" y="910.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (68 samples, 3.96%)</title><rect x="883.7" y="883.0" width="46.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="886.7" y="894.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (68 samples, 3.96%)</title><rect x="883.7" y="867.0" width="46.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.7" y="878.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (66 samples, 3.84%)</title><rect x="883.7" y="851.0" width="45.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.7" y="862.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (66 samples, 3.84%)</title><rect x="883.7" y="835.0" width="45.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.7" y="846.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (65 samples, 3.78%)</title><rect x="884.4" y="819.0" width="44.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="887.4" y="830.0">sun/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/libnio.so (1 samples, 0.06%)</title><rect x="884.4" y="803.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="887.4" y="814.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="885.0" y="803.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="888.0" y="814.0"></text>
</g>
<g>
<title>read (63 samples, 3.67%)</title><rect x="885.7" y="803.0" width="43.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="888.7" y="814.0">read</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 3.67%)</title><rect x="885.7" y="787.0" width="43.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.7" y="798.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (63 samples, 3.67%)</title><rect x="885.7" y="771.0" width="43.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.7" y="782.0">do_s..</text>
</g>
<g>
<title>__x64_sys_read (62 samples, 3.61%)</title><rect x="885.7" y="755.0" width="42.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="888.7" y="766.0">__x6..</text>
</g>
<g>
<title>ksys_read (62 samples, 3.61%)</title><rect x="885.7" y="739.0" width="42.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="888.7" y="750.0">ksys..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="886.4" y="723.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="886.4" y="707.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="889.4" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="886.4" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="889.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.12%)</title><rect x="887.1" y="723.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="890.1" y="734.0"></text>
</g>
<g>
<title>vfs_read (58 samples, 3.38%)</title><rect x="888.5" y="723.0" width="39.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.5" y="734.0">vfs..</text>
</g>
<g>
<title>__vfs_read (55 samples, 3.20%)</title><rect x="889.2" y="707.0" width="37.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="892.2" y="718.0">__v..</text>
</g>
<g>
<title>new_sync_read (55 samples, 3.20%)</title><rect x="889.2" y="691.0" width="37.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.2" y="702.0">new..</text>
</g>
<g>
<title>sock_read_iter (54 samples, 3.14%)</title><rect x="889.8" y="675.0" width="37.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="892.8" y="686.0">soc..</text>
</g>
<g>
<title>sock_recvmsg (54 samples, 3.14%)</title><rect x="889.8" y="659.0" width="37.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.8" y="670.0">soc..</text>
</g>
<g>
<title>inet6_recvmsg (53 samples, 3.08%)</title><rect x="889.8" y="643.0" width="36.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.8" y="654.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (53 samples, 3.08%)</title><rect x="889.8" y="627.0" width="36.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="892.8" y="638.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.17%)</title><rect x="890.5" y="611.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="893.5" y="622.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.17%)</title><rect x="890.5" y="595.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="893.5" y="606.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="890.5" y="579.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="893.5" y="590.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.12%)</title><rect x="891.2" y="579.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="894.2" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.06%)</title><rect x="892.6" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="895.6" y="622.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.06%)</title><rect x="892.6" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="895.6" y="606.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="893.3" y="611.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="896.3" y="622.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.06%)</title><rect x="893.3" y="595.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="896.3" y="606.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.29%)</title><rect x="894.0" y="611.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.0" y="622.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.29%)</title><rect x="894.0" y="595.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="897.0" y="606.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.23%)</title><rect x="894.7" y="579.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="897.7" y="590.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="894.7" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="897.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.06%)</title><rect x="894.7" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="897.7" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.17%)</title><rect x="895.3" y="563.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="898.3" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (3 samples, 0.17%)</title><rect x="895.3" y="547.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="898.3" y="558.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (38 samples, 2.21%)</title><rect x="897.4" y="611.0" width="26.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.4" y="622.0">t..</text>
</g>
<g>
<title>tcp_send_ack (38 samples, 2.21%)</title><rect x="897.4" y="595.0" width="26.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="900.4" y="606.0">t..</text>
</g>
<g>
<title>__tcp_send_ack.part.0 (38 samples, 2.21%)</title><rect x="897.4" y="579.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.4" y="590.0">_..</text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.12%)</title><rect x="897.4" y="563.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.4" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.06%)</title><rect x="897.4" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="900.4" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.06%)</title><rect x="897.4" y="531.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="900.4" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="898.1" y="547.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="901.1" y="558.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 1.98%)</title><rect x="898.8" y="563.0" width="23.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="901.8" y="574.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (30 samples, 1.75%)</title><rect x="901.5" y="547.0" width="20.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="904.5" y="558.0"></text>
</g>
<g>
<title>__ip_queue_xmit (30 samples, 1.75%)</title><rect x="901.5" y="531.0" width="20.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="904.5" y="542.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.06%)</title><rect x="902.2" y="515.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="905.2" y="526.0"></text>
</g>
<g>
<title>ip_local_out (27 samples, 1.57%)</title><rect x="902.9" y="515.0" width="18.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="905.9" y="526.0"></text>
</g>
<g>
<title>ip_output (27 samples, 1.57%)</title><rect x="902.9" y="499.0" width="18.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.9" y="510.0"></text>
</g>
<g>
<title>ip_finish_output (26 samples, 1.51%)</title><rect x="903.6" y="483.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="906.6" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (26 samples, 1.51%)</title><rect x="903.6" y="467.0" width="17.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="906.6" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 1.51%)</title><rect x="903.6" y="451.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="906.6" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (21 samples, 1.22%)</title><rect x="905.0" y="435.0" width="14.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.0" y="446.0"></text>
</g>
<g>
<title>do_softirq.part.0 (20 samples, 1.16%)</title><rect x="905.6" y="419.0" width="13.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="908.6" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (19 samples, 1.11%)</title><rect x="906.3" y="403.0" width="13.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="909.3" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (19 samples, 1.11%)</title><rect x="906.3" y="387.0" width="13.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="909.3" y="398.0"></text>
</g>
<g>
<title>net_rx_action (19 samples, 1.11%)</title><rect x="906.3" y="371.0" width="13.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="909.3" y="382.0"></text>
</g>
<g>
<title>process_backlog (19 samples, 1.11%)</title><rect x="906.3" y="355.0" width="13.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="909.3" y="366.0"></text>
</g>
<g>
<title>__netif_receive_skb (18 samples, 1.05%)</title><rect x="907.0" y="339.0" width="12.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="910.0" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (18 samples, 1.05%)</title><rect x="907.0" y="323.0" width="12.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="910.0" y="334.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.06%)</title><rect x="907.0" y="307.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.0" y="318.0"></text>
</g>
<g>
<title>ip_rcv (17 samples, 0.99%)</title><rect x="907.7" y="307.0" width="11.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.7" y="318.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.06%)</title><rect x="907.7" y="291.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="910.7" y="302.0"></text>
</g>
<g>
<title>ip_rcv_finish (16 samples, 0.93%)</title><rect x="908.4" y="291.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="911.4" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver (15 samples, 0.87%)</title><rect x="908.4" y="275.0" width="10.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="911.4" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (15 samples, 0.87%)</title><rect x="908.4" y="259.0" width="10.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="911.4" y="270.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (15 samples, 0.87%)</title><rect x="908.4" y="243.0" width="10.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="911.4" y="254.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.06%)</title><rect x="909.1" y="227.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 0.76%)</title><rect x="909.8" y="227.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="912.8" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (12 samples, 0.70%)</title><rect x="910.5" y="211.0" width="8.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="913.5" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 0.64%)</title><rect x="911.1" y="195.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="914.1" y="206.0"></text>
</g>
<g>
<title>tcp_ack (11 samples, 0.64%)</title><rect x="911.1" y="179.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="914.1" y="190.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.12%)</title><rect x="911.1" y="163.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="914.1" y="174.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.06%)</title><rect x="912.5" y="163.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="915.5" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.41%)</title><rect x="913.2" y="163.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="916.2" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.17%)</title><rect x="915.9" y="147.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="918.9" y="158.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.12%)</title><rect x="915.9" y="131.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.9" y="142.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.12%)</title><rect x="915.9" y="115.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="917.3" y="131.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.3" y="142.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.06%)</title><rect x="917.3" y="115.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="920.3" y="126.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.06%)</title><rect x="917.3" y="99.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.3" y="110.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.06%)</title><rect x="917.3" y="83.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="920.3" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.06%)</title><rect x="918.0" y="163.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.0" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.0 (1 samples, 0.06%)</title><rect x="918.7" y="275.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.7" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.17%)</title><rect x="919.4" y="435.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.4" y="446.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.17%)</title><rect x="919.4" y="419.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="922.4" y="430.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.12%)</title><rect x="920.1" y="403.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="923.1" y="414.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.06%)</title><rect x="920.1" y="387.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="923.1" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.06%)</title><rect x="920.8" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="923.8" y="398.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.06%)</title><rect x="920.8" y="371.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="923.8" y="382.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.06%)</title><rect x="920.8" y="355.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.8" y="366.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.06%)</title><rect x="920.8" y="339.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.8" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.06%)</title><rect x="921.4" y="515.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.06%)</title><rect x="922.1" y="563.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="925.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.06%)</title><rect x="922.8" y="563.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="925.8" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="923.5" y="611.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.5" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.12%)</title><rect x="924.2" y="611.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="927.2" y="622.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="924.9" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="927.9" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="924.9" y="579.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="927.9" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.06%)</title><rect x="925.6" y="611.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="928.6" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.06%)</title><rect x="926.3" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="929.3" y="654.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.12%)</title><rect x="926.9" y="707.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="929.9" y="718.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.06%)</title><rect x="926.9" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="929.9" y="702.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.06%)</title><rect x="927.6" y="691.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.6" y="702.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.06%)</title><rect x="927.6" y="675.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="930.6" y="686.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.06%)</title><rect x="927.6" y="659.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="930.6" y="670.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.06%)</title><rect x="927.6" y="643.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="928.3" y="755.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.3" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="928.3" y="739.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="931.3" y="750.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="928.3" y="723.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="931.3" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="928.3" y="707.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.12%)</title><rect x="929.0" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.12%)</title><rect x="929.0" y="835.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.12%)</title><rect x="929.0" y="819.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="932.0" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="930.4" y="915.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.4" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="930.4" y="899.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.4" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="930.4" y="883.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="933.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="931.1" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="931.1" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1747724333.accept (4 samples, 0.23%)</title><rect x="931.7" y="1107.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (2 samples, 0.12%)</title><rect x="932.4" y="1091.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1196171815.run (1 samples, 0.06%)</title><rect x="932.4" y="1075.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (1 samples, 0.06%)</title><rect x="932.4" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="935.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (1 samples, 0.06%)</title><rect x="932.4" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.4" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.06%)</title><rect x="932.4" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.4" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.setEventOps (1 samples, 0.06%)</title><rect x="932.4" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.4" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="933.1" y="1075.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="936.1" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="933.1" y="1059.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="936.1" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="933.1" y="1043.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.1" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="933.8" y="1091.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.8" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="933.8" y="1075.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.8" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="933.8" y="1059.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.8" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (5 samples, 0.29%)</title><rect x="934.5" y="1123.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="937.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.17%)</title><rect x="935.2" y="1107.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="938.2" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.06%)</title><rect x="935.2" y="1091.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="938.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.06%)</title><rect x="935.9" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="938.9" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.06%)</title><rect x="935.9" y="1075.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.06%)</title><rect x="935.9" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="938.9" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.06%)</title><rect x="935.9" y="1043.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="938.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (1 samples, 0.06%)</title><rect x="935.9" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="938.9" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.06%)</title><rect x="935.9" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="938.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1989239292.test (1 samples, 0.06%)</title><rect x="935.9" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="938.9" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="935.9" y="979.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.9" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="935.9" y="963.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="938.9" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="935.9" y="947.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="938.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.getOpFlags (1 samples, 0.06%)</title><rect x="936.6" y="1091.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="939.6" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (1 samples, 0.06%)</title><rect x="937.2" y="1107.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="940.2" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="937.2" y="1091.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="940.2" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="937.2" y="1075.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="940.2" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="937.2" y="1059.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.2" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="937.2" y="1043.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="940.2" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="937.2" y="1027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="940.2" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="937.2" y="1011.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="940.2" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="937.2" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="940.2" y="1006.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="937.2" y="979.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="940.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (15 samples, 0.87%)</title><rect x="937.9" y="1123.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/1138953262.run (6 samples, 0.35%)</title><rect x="937.9" y="1107.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="940.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (6 samples, 0.35%)</title><rect x="937.9" y="1091.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="940.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.35%)</title><rect x="937.9" y="1075.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.35%)</title><rect x="937.9" y="1059.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.35%)</title><rect x="937.9" y="1043.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (6 samples, 0.35%)</title><rect x="937.9" y="1027.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (5 samples, 0.29%)</title><rect x="938.6" y="1011.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="941.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (5 samples, 0.29%)</title><rect x="938.6" y="995.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="941.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (5 samples, 0.29%)</title><rect x="938.6" y="979.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (4 samples, 0.23%)</title><rect x="938.6" y="963.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.17%)</title><rect x="938.6" y="947.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.17%)</title><rect x="938.6" y="931.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="941.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.17%)</title><rect x="938.6" y="915.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="941.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.12%)</title><rect x="938.6" y="899.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="941.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.12%)</title><rect x="938.6" y="883.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="941.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.12%)</title><rect x="938.6" y="867.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.12%)</title><rect x="938.6" y="851.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="941.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.06%)</title><rect x="938.6" y="835.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="941.6" y="846.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="938.6" y="819.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="941.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.06%)</title><rect x="939.3" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.3" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.06%)</title><rect x="939.3" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="942.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.06%)</title><rect x="940.0" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.0" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="940.0" y="883.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="943.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.06%)</title><rect x="940.7" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="940.7" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="943.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.06%)</title><rect x="940.7" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="943.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.06%)</title><rect x="940.7" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="940.7" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.06%)</title><rect x="940.7" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="943.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.06%)</title><rect x="940.7" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="940.7" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="940.7" y="819.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="940.7" y="803.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="943.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="940.7" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.06%)</title><rect x="940.7" y="771.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="943.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.06%)</title><rect x="940.7" y="755.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="943.7" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="940.7" y="739.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.7" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="940.7" y="723.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="943.7" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="940.7" y="707.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="943.7" y="718.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="940.7" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="943.7" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.06%)</title><rect x="940.7" y="675.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.7" y="686.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.06%)</title><rect x="940.7" y="659.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="943.7" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.06%)</title><rect x="940.7" y="643.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="943.7" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="940.7" y="627.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="943.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="941.4" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="944.4" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="941.4" y="947.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.4" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="941.4" y="931.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="944.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$165/1403403797.run (9 samples, 0.52%)</title><rect x="942.0" y="1107.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (9 samples, 0.52%)</title><rect x="942.0" y="1091.0" width="6.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.41%)</title><rect x="942.7" y="1075.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="945.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.41%)</title><rect x="942.7" y="1059.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.41%)</title><rect x="942.7" y="1043.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.29%)</title><rect x="942.7" y="1027.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.29%)</title><rect x="942.7" y="1011.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="945.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.29%)</title><rect x="942.7" y="995.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="945.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.29%)</title><rect x="942.7" y="979.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.29%)</title><rect x="942.7" y="963.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.29%)</title><rect x="942.7" y="947.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.12%)</title><rect x="942.7" y="931.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="945.7" y="942.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.06%)</title><rect x="942.7" y="915.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="945.7" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.06%)</title><rect x="943.4" y="915.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="946.4" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="943.4" y="899.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.4" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="943.4" y="883.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="946.4" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="943.4" y="867.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="946.4" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.17%)</title><rect x="944.1" y="931.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="947.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.17%)</title><rect x="944.1" y="915.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.1" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.17%)</title><rect x="944.1" y="899.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="947.1" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.17%)</title><rect x="944.1" y="883.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="947.1" y="894.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.17%)</title><rect x="944.1" y="867.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="947.1" y="878.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.17%)</title><rect x="944.1" y="851.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="947.1" y="862.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.17%)</title><rect x="944.1" y="835.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="947.1" y="846.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.17%)</title><rect x="944.1" y="819.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="947.1" y="830.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.17%)</title><rect x="944.1" y="803.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="947.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.12%)</title><rect x="946.2" y="1027.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.12%)</title><rect x="946.2" y="1011.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="949.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.12%)</title><rect x="946.2" y="995.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.12%)</title><rect x="946.2" y="979.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="949.2" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="946.9" y="963.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="949.9" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="946.9" y="947.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="949.9" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="946.9" y="931.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="949.9" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="946.9" y="915.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="949.9" y="926.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="946.9" y="899.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="949.9" y="910.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="946.9" y="883.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="949.9" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="947.5" y="1075.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.5" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="947.5" y="1059.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="950.5" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="947.5" y="1043.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="950.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (8 samples, 0.47%)</title><rect x="948.2" y="1123.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.2" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.06%)</title><rect x="948.2" y="1107.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.2" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.06%)</title><rect x="948.2" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="951.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="948.2" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.2" y="1086.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.06%)</title><rect x="948.2" y="1059.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="951.2" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.06%)</title><rect x="948.2" y="1043.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="951.2" y="1054.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="948.2" y="1027.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="951.2" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="948.2" y="1011.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="951.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (7 samples, 0.41%)</title><rect x="948.9" y="1107.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.9" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="949.6" y="1091.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="952.6" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.06%)</title><rect x="949.6" y="1075.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="952.6" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.06%)</title><rect x="949.6" y="1059.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="952.6" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (2 samples, 0.12%)</title><rect x="950.3" y="1091.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.3" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.12%)</title><rect x="951.7" y="1091.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.7" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="953.0" y="1091.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.0" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="953.0" y="1075.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.0" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="953.0" y="1059.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (1 samples, 0.06%)</title><rect x="953.7" y="1123.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.06%)</title><rect x="953.7" y="1107.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (1 samples, 0.06%)</title><rect x="953.7" y="1091.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="956.7" y="1102.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="953.7" y="1075.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="956.7" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="953.7" y="1059.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="956.7" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="953.7" y="1043.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="956.7" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="953.7" y="1027.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="956.7" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="953.7" y="1011.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="956.7" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="953.7" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="956.7" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.06%)</title><rect x="953.7" y="979.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.7" y="990.0"></text>
</g>
<g>
<title>GenCollectedHeap::mem_allocate_work(unsigned long, bool, bool*) (1 samples, 0.06%)</title><rect x="953.7" y="963.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="956.7" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::par_allocate(unsigned long, bool) (1 samples, 0.06%)</title><rect x="953.7" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="956.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.06%)</title><rect x="954.4" y="1123.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="954.4" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="957.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="954.4" y="1091.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="957.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="954.4" y="1075.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (5 samples, 0.29%)</title><rect x="955.1" y="1123.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="958.1" y="1134.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.17%)</title><rect x="955.1" y="1107.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.1" y="1118.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.17%)</title><rect x="955.1" y="1091.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.1" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="955.8" y="1075.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="958.8" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="955.8" y="1059.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="958.8" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="955.8" y="1043.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="958.8" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.12%)</title><rect x="957.2" y="1107.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.2" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.12%)</title><rect x="957.2" y="1091.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.2" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.12%)</title><rect x="957.2" y="1075.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.2" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (44 samples, 2.56%)</title><rect x="958.5" y="1123.0" width="30.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="961.5" y="1134.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (43 samples, 2.50%)</title><rect x="958.5" y="1107.0" width="29.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.5" y="1118.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (42 samples, 2.44%)</title><rect x="958.5" y="1091.0" width="28.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="961.5" y="1102.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (25 samples, 1.46%)</title><rect x="958.5" y="1075.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="961.5" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (24 samples, 1.40%)</title><rect x="958.5" y="1059.0" width="16.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="961.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 1.28%)</title><rect x="959.2" y="1043.0" width="15.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="962.2" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 1.28%)</title><rect x="959.2" y="1027.0" width="15.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.2" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 1.22%)</title><rect x="959.9" y="1011.0" width="14.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="962.9" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 1.22%)</title><rect x="959.9" y="995.0" width="14.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.9" y="1006.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="959.9" y="979.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.9" y="990.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="959.9" y="963.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.9" y="974.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="959.9" y="947.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.9" y="958.0"></text>
</g>
<g>
<title>ep_poll (20 samples, 1.16%)</title><rect x="960.6" y="979.0" width="13.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.6" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.41%)</title><rect x="963.3" y="963.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="966.3" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (5 samples, 0.29%)</title><rect x="964.0" y="947.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="967.0" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (4 samples, 0.23%)</title><rect x="964.7" y="931.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="967.7" y="942.0"></text>
</g>
<g>
<title>pipe_poll (1 samples, 0.06%)</title><rect x="964.7" y="915.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.7" y="926.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.17%)</title><rect x="965.4" y="915.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="968.4" y="926.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.12%)</title><rect x="966.1" y="899.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="969.1" y="910.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.06%)</title><rect x="967.5" y="947.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.5" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.41%)</title><rect x="968.1" y="963.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="971.1" y="974.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 0.41%)</title><rect x="968.1" y="947.0" width="4.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.1" y="958.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.06%)</title><rect x="968.1" y="931.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="971.1" y="942.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.06%)</title><rect x="968.8" y="931.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="971.8" y="942.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="968.8" y="915.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="971.8" y="926.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.29%)</title><rect x="969.5" y="931.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="972.5" y="942.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.29%)</title><rect x="969.5" y="915.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="972.5" y="926.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 0.29%)</title><rect x="969.5" y="899.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="972.5" y="910.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.06%)</title><rect x="973.0" y="963.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.0" y="974.0"></text>
</g>
<g>
<title>select_estimate_accuracy (1 samples, 0.06%)</title><rect x="973.6" y="963.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.6" y="974.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.06%)</title><rect x="973.6" y="947.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="976.6" y="958.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="974.3" y="1043.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="977.3" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="974.3" y="1027.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="977.3" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="974.3" y="1011.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="977.3" y="1022.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="975.0" y="1059.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="978.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="975.0" y="1043.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="975.0" y="1027.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="978.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (16 samples, 0.93%)</title><rect x="975.7" y="1075.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="978.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="976.4" y="1059.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="979.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="976.4" y="1043.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="979.4" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.06%)</title><rect x="976.4" y="1027.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="979.4" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="976.4" y="1011.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="979.4" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="976.4" y="995.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="979.4" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="976.4" y="979.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="979.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.12%)</title><rect x="977.1" y="1059.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.12%)</title><rect x="977.1" y="1043.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="980.1" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="977.8" y="1027.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="980.8" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="977.8" y="1011.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="980.8" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="977.8" y="995.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="980.8" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (11 samples, 0.64%)</title><rect x="978.5" y="1059.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="981.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (11 samples, 0.64%)</title><rect x="978.5" y="1043.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.5" y="1054.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.12%)</title><rect x="978.5" y="1027.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="981.5" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="979.1" y="1011.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.1" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="979.1" y="995.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="982.1" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="979.1" y="979.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="982.1" y="990.0"></text>
</g>
<g>
<title>read (9 samples, 0.52%)</title><rect x="979.8" y="1027.0" width="6.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="982.8" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.47%)</title><rect x="980.5" y="1011.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="983.5" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.47%)</title><rect x="980.5" y="995.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="983.5" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_read (7 samples, 0.41%)</title><rect x="981.2" y="979.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="984.2" y="990.0"></text>
</g>
<g>
<title>ksys_read (7 samples, 0.41%)</title><rect x="981.2" y="963.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="984.2" y="974.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.06%)</title><rect x="981.2" y="947.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="984.2" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="981.2" y="931.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="984.2" y="942.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="981.2" y="915.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="984.2" y="926.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.35%)</title><rect x="981.9" y="947.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.9" y="958.0"></text>
</g>
<g>
<title>__vfs_read (6 samples, 0.35%)</title><rect x="981.9" y="931.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="984.9" y="942.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.35%)</title><rect x="981.9" y="915.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.9" y="926.0"></text>
</g>
<g>
<title>kill_fasync (1 samples, 0.06%)</title><rect x="981.9" y="899.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="984.9" y="910.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.06%)</title><rect x="982.6" y="899.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="985.6" y="910.0"></text>
</g>
<g>
<title>pipe_read (4 samples, 0.23%)</title><rect x="983.3" y="899.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="986.3" y="910.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.06%)</title><rect x="983.3" y="883.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="986.3" y="894.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.12%)</title><rect x="983.9" y="883.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="986.9" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.06%)</title><rect x="984.6" y="867.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="987.6" y="878.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.06%)</title><rect x="985.3" y="883.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.3" y="894.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="985.3" y="867.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.3" y="878.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.06%)</title><rect x="985.3" y="851.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="988.3" y="862.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="985.3" y="835.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="988.3" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="985.3" y="819.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="988.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (1 samples, 0.06%)</title><rect x="986.0" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.06%)</title><rect x="986.0" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="989.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.06%)</title><rect x="986.0" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.06%)</title><rect x="986.0" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.06%)</title><rect x="986.0" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.0" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="986.7" y="1075.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.7" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="986.7" y="1059.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.7" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="986.7" y="1043.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="989.7" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="987.4" y="1091.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="990.4" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="987.4" y="1075.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="990.4" y="1086.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="987.4" y="1059.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="990.4" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="988.1" y="1107.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="991.1" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="988.1" y="1091.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="991.1" y="1102.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="988.1" y="1075.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="991.1" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="988.1" y="1059.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="991.1" y="1070.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="988.1" y="1043.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="991.1" y="1054.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="988.1" y="1027.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.1" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (4 samples, 0.23%)</title><rect x="988.8" y="1123.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.8" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (4 samples, 0.23%)</title><rect x="988.8" y="1107.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.8" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (4 samples, 0.23%)</title><rect x="988.8" y="1091.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (3 samples, 0.17%)</title><rect x="988.8" y="1075.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.8" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.17%)</title><rect x="988.8" y="1059.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="991.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.12%)</title><rect x="989.4" y="1043.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="992.4" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.12%)</title><rect x="989.4" y="1027.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="992.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.12%)</title><rect x="989.4" y="1011.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.4" y="1022.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.12%)</title><rect x="989.4" y="995.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.4" y="1006.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.12%)</title><rect x="989.4" y="979.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="992.4" y="990.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.12%)</title><rect x="989.4" y="963.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.4" y="974.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.12%)</title><rect x="989.4" y="947.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="992.4" y="958.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.12%)</title><rect x="989.4" y="931.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.4" y="942.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.12%)</title><rect x="989.4" y="915.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.4" y="926.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.06%)</title><rect x="990.1" y="899.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="993.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.06%)</title><rect x="990.8" y="1075.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="993.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.getFDVal (1 samples, 0.06%)</title><rect x="990.8" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.8" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.12%)</title><rect x="991.5" y="1123.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (2 samples, 0.12%)</title><rect x="991.5" y="1107.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.5" y="1118.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.12%)</title><rect x="992.9" y="1123.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="995.9" y="1134.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.12%)</title><rect x="992.9" y="1107.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="995.9" y="1118.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.12%)</title><rect x="992.9" y="1091.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (247 samples, 14.38%)</title><rect x="994.2" y="1139.0" width="169.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.2" y="1150.0">one/nio/server/Selecto..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.06%)</title><rect x="994.2" y="1123.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="997.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.06%)</title><rect x="994.9" y="1123.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.06%)</title><rect x="994.9" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.06%)</title><rect x="994.9" y="1091.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="997.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (49 samples, 2.85%)</title><rect x="995.6" y="1123.0" width="33.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="998.6" y="1134.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (49 samples, 2.85%)</title><rect x="995.6" y="1107.0" width="33.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="998.6" y="1118.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.12%)</title><rect x="996.3" y="1091.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="999.3" y="1102.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="997.0" y="1075.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1000.0" y="1086.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="997.0" y="1059.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1000.0" y="1070.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="997.0" y="1043.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="997.7" y="1091.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1000.7" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.06%)</title><rect x="997.7" y="1075.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1000.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="997.7" y="1059.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1000.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="997.7" y="1043.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.7" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="997.7" y="1027.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1000.7" y="1038.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.06%)</title><rect x="997.7" y="1011.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1000.7" y="1022.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.06%)</title><rect x="997.7" y="995.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1000.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.06%)</title><rect x="997.7" y="979.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.7" y="990.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="997.7" y="963.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1000.7" y="974.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="997.7" y="947.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1000.7" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="997.7" y="931.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1000.7" y="942.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.17%)</title><rect x="998.4" y="1091.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1001.4" y="1102.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.06%)</title><rect x="999.7" y="1075.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1002.7" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="999.7" y="1059.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1002.7" y="1070.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 2.44%)</title><rect x="1000.4" y="1091.0" width="28.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1003.4" y="1102.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 2.44%)</title><rect x="1000.4" y="1075.0" width="28.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1003.4" y="1086.0">en..</text>
</g>
<g>
<title>do_syscall_64 (42 samples, 2.44%)</title><rect x="1000.4" y="1059.0" width="28.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1003.4" y="1070.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (40 samples, 2.33%)</title><rect x="1001.1" y="1043.0" width="27.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.1" y="1054.0">_..</text>
</g>
<g>
<title>do_epoll_wait (39 samples, 2.27%)</title><rect x="1001.1" y="1027.0" width="26.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1004.1" y="1038.0">d..</text>
</g>
<g>
<title>ep_poll (35 samples, 2.04%)</title><rect x="1002.5" y="1011.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1005.5" y="1022.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 0.41%)</title><rect x="1003.9" y="995.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1006.9" y="1006.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.06%)</title><rect x="1005.9" y="979.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1008.9" y="990.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.17%)</title><rect x="1006.6" y="979.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1009.6" y="990.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.12%)</title><rect x="1007.3" y="963.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1010.3" y="974.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.12%)</title><rect x="1007.3" y="947.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1010.3" y="958.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.06%)</title><rect x="1008.0" y="931.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1011.0" y="942.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.06%)</title><rect x="1008.7" y="995.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1011.7" y="1006.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 1.46%)</title><rect x="1009.4" y="995.0" width="17.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.4" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="1009.4" y="979.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1012.4" y="990.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (24 samples, 1.40%)</title><rect x="1010.0" y="979.0" width="16.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1013.0" y="990.0"></text>
</g>
<g>
<title>schedule (24 samples, 1.40%)</title><rect x="1010.0" y="963.0" width="16.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1013.0" y="974.0"></text>
</g>
<g>
<title>__schedule (24 samples, 1.40%)</title><rect x="1010.0" y="947.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1013.0" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 1.16%)</title><rect x="1012.8" y="931.0" width="13.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1015.8" y="942.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.06%)</title><rect x="1026.5" y="1011.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1029.5" y="1022.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.06%)</title><rect x="1027.2" y="1011.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1030.2" y="1022.0"></text>
</g>
<g>
<title>fput (1 samples, 0.06%)</title><rect x="1027.9" y="1027.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1030.9" y="1038.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.06%)</title><rect x="1028.6" y="1043.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1031.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (195 samples, 11.35%)</title><rect x="1029.3" y="1123.0" width="133.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.3" y="1134.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (195 samples, 11.35%)</title><rect x="1029.3" y="1107.0" width="133.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1032.3" y="1118.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (166 samples, 9.66%)</title><rect x="1029.3" y="1091.0" width="114.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1032.3" y="1102.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (142 samples, 8.27%)</title><rect x="1036.1" y="1075.0" width="97.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1039.1" y="1086.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (142 samples, 8.27%)</title><rect x="1036.1" y="1059.0" width="97.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1039.1" y="1070.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (136 samples, 7.92%)</title><rect x="1036.1" y="1043.0" width="93.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1039.1" y="1054.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.12%)</title><rect x="1036.1" y="1027.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.06%)</title><rect x="1037.5" y="1027.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1040.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1037.5" y="1011.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (133 samples, 7.74%)</title><rect x="1038.2" y="1027.0" width="91.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.2" y="1038.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="1038.9" y="1011.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1041.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.06%)</title><rect x="1039.6" y="995.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1042.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.06%)</title><rect x="1039.6" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1042.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.sendResponseFromFuture (1 samples, 0.06%)</title><rect x="1040.3" y="1011.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="1040.3" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="1040.3" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1043.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.06%)</title><rect x="1040.3" y="963.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1043.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (1 samples, 0.06%)</title><rect x="1040.3" y="947.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1043.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (1 samples, 0.06%)</title><rect x="1040.3" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1043.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (36 samples, 2.10%)</title><rect x="1041.0" y="1011.0" width="24.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.0" y="1022.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (35 samples, 2.04%)</title><rect x="1041.0" y="995.0" width="24.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1044.0" y="1006.0">r..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (35 samples, 2.04%)</title><rect x="1041.0" y="979.0" width="24.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.0" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (35 samples, 2.04%)</title><rect x="1041.0" y="963.0" width="24.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1044.0" y="974.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (35 samples, 2.04%)</title><rect x="1041.0" y="947.0" width="24.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1044.0" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (34 samples, 1.98%)</title><rect x="1041.6" y="931.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.6" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (34 samples, 1.98%)</title><rect x="1041.6" y="915.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.6" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 1.98%)</title><rect x="1041.6" y="899.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1044.6" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 1.98%)</title><rect x="1041.6" y="883.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1044.6" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 1.98%)</title><rect x="1041.6" y="867.0" width="23.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1044.6" y="878.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (34 samples, 1.98%)</title><rect x="1041.6" y="851.0" width="23.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1044.6" y="862.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.23%)</title><rect x="1041.6" y="835.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1044.6" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.06%)</title><rect x="1041.6" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1044.6" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.17%)</title><rect x="1042.3" y="819.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1045.3" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (29 samples, 1.69%)</title><rect x="1044.4" y="835.0" width="19.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1047.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 1.69%)</title><rect x="1044.4" y="819.0" width="19.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1047.4" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.06%)</title><rect x="1044.4" y="803.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1047.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 1.63%)</title><rect x="1045.1" y="803.0" width="19.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1048.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 1.51%)</title><rect x="1046.4" y="787.0" width="17.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1049.4" y="798.0"></text>
</g>
<g>
<title>do_futex (26 samples, 1.51%)</title><rect x="1046.4" y="771.0" width="17.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1049.4" y="782.0"></text>
</g>
<g>
<title>futex_wake (25 samples, 1.46%)</title><rect x="1047.1" y="755.0" width="17.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1050.1" y="766.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 1.46%)</title><rect x="1047.1" y="739.0" width="17.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1050.1" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (24 samples, 1.40%)</title><rect x="1047.8" y="723.0" width="16.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1050.8" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (24 samples, 1.40%)</title><rect x="1047.8" y="707.0" width="16.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1050.8" y="718.0"></text>
</g>
<g>
<title>call_function_single_interrupt (1 samples, 0.06%)</title><rect x="1063.6" y="691.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1066.6" y="702.0"></text>
</g>
<g>
<title>smp_call_function_single_interrupt (1 samples, 0.06%)</title><rect x="1063.6" y="675.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1066.6" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.06%)</title><rect x="1063.6" y="659.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1066.6" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1063.6" y="643.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1066.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1064.3" y="835.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1067.3" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1064.3" y="819.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1067.3" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1064.3" y="803.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1067.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.put (1 samples, 0.06%)</title><rect x="1065.0" y="995.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1 samples, 0.06%)</title><rect x="1065.0" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1 samples, 0.06%)</title><rect x="1065.0" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1068.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.06%)</title><rect x="1065.0" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (1 samples, 0.06%)</title><rect x="1065.0" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1068.0" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (93 samples, 5.41%)</title><rect x="1065.7" y="1011.0" width="63.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1068.7" y="1022.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.06%)</title><rect x="1065.7" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (73 samples, 4.25%)</title><rect x="1066.4" y="995.0" width="50.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.4" y="1006.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (44 samples, 2.56%)</title><rect x="1066.4" y="979.0" width="30.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1069.4" y="990.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (44 samples, 2.56%)</title><rect x="1066.4" y="963.0" width="30.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1069.4" y="974.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (44 samples, 2.56%)</title><rect x="1066.4" y="947.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.4" y="958.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (44 samples, 2.56%)</title><rect x="1066.4" y="931.0" width="30.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.4" y="942.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (28 samples, 1.63%)</title><rect x="1066.4" y="915.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.4" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.17%)</title><rect x="1066.4" y="899.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1069.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.17%)</title><rect x="1066.4" y="883.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.4" y="894.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.17%)</title><rect x="1066.4" y="867.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1069.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.17%)</title><rect x="1066.4" y="851.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.17%)</title><rect x="1066.4" y="835.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1069.4" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.17%)</title><rect x="1066.4" y="819.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1069.4" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (3 samples, 0.17%)</title><rect x="1066.4" y="803.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.4" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (3 samples, 0.17%)</title><rect x="1066.4" y="787.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1069.4" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.17%)</title><rect x="1066.4" y="771.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1069.4" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (3 samples, 0.17%)</title><rect x="1066.4" y="755.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1069.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (25 samples, 1.46%)</title><rect x="1068.4" y="899.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1071.4" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (25 samples, 1.46%)</title><rect x="1068.4" y="883.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1071.4" y="894.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 1.40%)</title><rect x="1069.1" y="867.0" width="16.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1072.1" y="878.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.06%)</title><rect x="1069.8" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1072.8" y="862.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (12 samples, 0.70%)</title><rect x="1070.5" y="851.0" width="8.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1073.5" y="862.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.06%)</title><rect x="1070.5" y="835.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1073.5" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.17%)</title><rect x="1071.2" y="835.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1074.2" y="846.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.06%)</title><rect x="1071.9" y="819.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1074.9" y="830.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.06%)</title><rect x="1072.5" y="819.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1075.5" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="1073.2" y="835.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.2" y="846.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.06%)</title><rect x="1073.9" y="835.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1076.9" y="846.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.12%)</title><rect x="1074.6" y="835.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1077.6" y="846.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.12%)</title><rect x="1074.6" y="819.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.6" y="830.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.12%)</title><rect x="1074.6" y="803.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1077.6" y="814.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.23%)</title><rect x="1076.0" y="835.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.0" y="846.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.12%)</title><rect x="1076.0" y="819.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.0" y="830.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.06%)</title><rect x="1077.4" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1080.4" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.06%)</title><rect x="1078.0" y="819.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.0" y="830.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.06%)</title><rect x="1078.0" y="803.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1081.0" y="814.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.06%)</title><rect x="1078.0" y="787.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1081.0" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1078.0" y="771.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1081.0" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1078.0" y="755.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1081.0" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1078.0" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1081.0" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="1078.7" y="851.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.7" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.52%)</title><rect x="1079.4" y="851.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1082.4" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (9 samples, 0.52%)</title><rect x="1079.4" y="835.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1082.4" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1082.9" y="819.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.9" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1082.9" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1085.9" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1082.9" y="787.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1085.9" y="798.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1082.9" y="771.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.9" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1082.9" y="755.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1085.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.17%)</title><rect x="1083.5" y="819.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.5" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.17%)</title><rect x="1083.5" y="803.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1086.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9 samples, 0.52%)</title><rect x="1085.6" y="915.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1088.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1085.6" y="899.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1088.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="1085.6" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.06%)</title><rect x="1085.6" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.06%)</title><rect x="1085.6" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1088.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.06%)</title><rect x="1085.6" y="835.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1088.6" y="846.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.06%)</title><rect x="1085.6" y="819.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1088.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (8 samples, 0.47%)</title><rect x="1086.3" y="899.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1089.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (7 samples, 0.41%)</title><rect x="1087.0" y="883.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1090.0" y="894.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (5 samples, 0.29%)</title><rect x="1087.0" y="867.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.12%)</title><rect x="1088.3" y="851.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1091.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (1 samples, 0.06%)</title><rect x="1089.7" y="851.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.7" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.06%)</title><rect x="1089.7" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1092.7" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.06%)</title><rect x="1089.7" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1092.7" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1089.7" y="803.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1092.7" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1089.7" y="787.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1092.7" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1089.7" y="771.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1092.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1089.7" y="755.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1092.7" y="766.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1089.7" y="739.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1092.7" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1089.7" y="723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.7" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.06%)</title><rect x="1089.7" y="707.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1092.7" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.06%)</title><rect x="1089.7" y="691.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1092.7" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.06%)</title><rect x="1089.7" y="675.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.12%)</title><rect x="1090.4" y="867.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1093.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (7 samples, 0.41%)</title><rect x="1091.8" y="915.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1094.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.29%)</title><rect x="1091.8" y="899.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.29%)</title><rect x="1091.8" y="883.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1094.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.29%)</title><rect x="1091.8" y="867.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.23%)</title><rect x="1091.8" y="851.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.23%)</title><rect x="1091.8" y="835.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.23%)</title><rect x="1091.8" y="819.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1094.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.23%)</title><rect x="1091.8" y="803.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.23%)</title><rect x="1091.8" y="787.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.23%)</title><rect x="1091.8" y="771.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.8" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.23%)</title><rect x="1091.8" y="755.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1094.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.23%)</title><rect x="1091.8" y="739.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1094.8" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.23%)</title><rect x="1091.8" y="723.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1094.8" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.23%)</title><rect x="1091.8" y="707.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.8" y="718.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.23%)</title><rect x="1091.8" y="691.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.8" y="702.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.23%)</title><rect x="1091.8" y="675.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1094.8" y="686.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.23%)</title><rect x="1091.8" y="659.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1094.8" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.23%)</title><rect x="1091.8" y="643.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1094.8" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.23%)</title><rect x="1091.8" y="627.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1094.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.06%)</title><rect x="1094.5" y="851.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1097.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.06%)</title><rect x="1094.5" y="835.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1097.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.06%)</title><rect x="1094.5" y="819.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.06%)</title><rect x="1094.5" y="803.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.12%)</title><rect x="1095.2" y="899.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.12%)</title><rect x="1095.2" y="883.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1098.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.12%)</title><rect x="1095.2" y="867.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1098.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="1095.2" y="851.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1098.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.12%)</title><rect x="1095.2" y="835.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1098.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.12%)</title><rect x="1095.2" y="819.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1098.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1095.9" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1098.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (29 samples, 1.69%)</title><rect x="1096.6" y="979.0" width="19.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1099.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.06%)</title><rect x="1096.6" y="963.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1099.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.12%)</title><rect x="1097.3" y="963.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1100.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (9 samples, 0.52%)</title><rect x="1098.6" y="963.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1101.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (9 samples, 0.52%)</title><rect x="1098.6" y="947.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1101.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.47%)</title><rect x="1098.6" y="931.0" width="5.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1101.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.47%)</title><rect x="1098.6" y="915.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.6" y="926.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.06%)</title><rect x="1098.6" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1101.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.06%)</title><rect x="1099.3" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1102.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.06%)</title><rect x="1099.3" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1102.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (1 samples, 0.06%)</title><rect x="1099.3" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1102.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1099.3" y="851.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1102.3" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1099.3" y="835.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1102.3" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.29%)</title><rect x="1100.0" y="899.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1103.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (5 samples, 0.29%)</title><rect x="1100.0" y="883.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.29%)</title><rect x="1100.0" y="867.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1103.0" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.17%)</title><rect x="1101.4" y="851.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.4" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (3 samples, 0.17%)</title><rect x="1101.4" y="835.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1104.4" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.06%)</title><rect x="1102.8" y="819.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1105.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.06%)</title><rect x="1102.8" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1105.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.06%)</title><rect x="1102.8" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1105.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$68/1196695891.test (1 samples, 0.06%)</title><rect x="1102.8" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1105.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1103.5" y="899.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.5" y="910.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1103.5" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1106.5" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractSet.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1103.5" y="867.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.5" y="878.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1103.5" y="851.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.5" y="862.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.06%)</title><rect x="1104.1" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1107.1" y="942.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.06%)</title><rect x="1104.1" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1107.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.06%)</title><rect x="1104.1" y="899.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1107.1" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1104.1" y="883.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1107.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.06%)</title><rect x="1104.8" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1107.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (15 samples, 0.87%)</title><rect x="1105.5" y="963.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1108.5" y="974.0"></text>
</g>
<g>
<title>java/net/URI.create (12 samples, 0.70%)</title><rect x="1105.5" y="947.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.5" y="958.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (12 samples, 0.70%)</title><rect x="1105.5" y="931.0" width="8.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1108.5" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (9 samples, 0.52%)</title><rect x="1106.2" y="915.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1109.2" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (1 samples, 0.06%)</title><rect x="1106.2" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1109.2" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.06%)</title><rect x="1106.2" y="883.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1109.2" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1106.2" y="867.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1109.2" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.06%)</title><rect x="1106.9" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1109.9" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1106.9" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1109.9" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (7 samples, 0.41%)</title><rect x="1107.6" y="899.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1110.6" y="910.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.06%)</title><rect x="1108.3" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1111.3" y="894.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1108.3" y="867.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1111.3" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1108.3" y="851.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1111.3" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (5 samples, 0.29%)</title><rect x="1109.0" y="883.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1112.0" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1109.0" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1112.0" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1109.0" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1112.0" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (4 samples, 0.23%)</title><rect x="1109.6" y="867.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1112.6" y="878.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (3 samples, 0.17%)</title><rect x="1109.6" y="851.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1112.6" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.17%)</title><rect x="1109.6" y="835.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1112.6" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (1 samples, 0.06%)</title><rect x="1111.7" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1114.7" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (1 samples, 0.06%)</title><rect x="1111.7" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1114.7" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.06%)</title><rect x="1111.7" y="819.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.7" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.06%)</title><rect x="1112.4" y="915.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1115.4" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1113.1" y="915.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.1" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1113.1" y="899.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1116.1" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1113.1" y="883.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.12%)</title><rect x="1113.8" y="947.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1116.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (2 samples, 0.12%)</title><rect x="1113.8" y="931.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (1 samples, 0.06%)</title><rect x="1114.4" y="915.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1117.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.06%)</title><rect x="1114.4" y="899.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1117.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.06%)</title><rect x="1115.1" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1118.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.06%)</title><rect x="1115.1" y="931.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1118.1" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.06%)</title><rect x="1115.8" y="963.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.8" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.06%)</title><rect x="1115.8" y="947.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1118.8" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1115.8" y="931.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (10 samples, 0.58%)</title><rect x="1116.5" y="995.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (10 samples, 0.58%)</title><rect x="1116.5" y="979.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (10 samples, 0.58%)</title><rect x="1116.5" y="963.0" width="6.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1119.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (10 samples, 0.58%)</title><rect x="1116.5" y="947.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1119.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.58%)</title><rect x="1116.5" y="931.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (9 samples, 0.52%)</title><rect x="1117.2" y="915.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.52%)</title><rect x="1117.2" y="899.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.52%)</title><rect x="1117.2" y="883.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.52%)</title><rect x="1117.2" y="867.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1120.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.52%)</title><rect x="1117.2" y="851.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1120.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.52%)</title><rect x="1117.2" y="835.0" width="6.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1120.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.52%)</title><rect x="1117.2" y="819.0" width="6.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1120.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.52%)</title><rect x="1117.2" y="803.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1120.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.52%)</title><rect x="1117.2" y="787.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1120.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.47%)</title><rect x="1117.2" y="771.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1120.2" y="782.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.47%)</title><rect x="1117.2" y="755.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1120.2" y="766.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.47%)</title><rect x="1117.2" y="739.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1120.2" y="750.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.41%)</title><rect x="1117.9" y="723.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1120.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.41%)</title><rect x="1117.9" y="707.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.9" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 0.41%)</title><rect x="1117.9" y="691.0" width="4.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1120.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.06%)</title><rect x="1122.7" y="771.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.7" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="1122.7" y="755.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1125.7" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="1122.7" y="739.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="1122.7" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1125.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (1 samples, 0.06%)</title><rect x="1123.4" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1126.4" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.06%)</title><rect x="1123.4" y="979.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1126.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$131/220516475.accept (1 samples, 0.06%)</title><rect x="1123.4" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1126.4" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (1 samples, 0.06%)</title><rect x="1123.4" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.06%)</title><rect x="1123.4" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1126.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.06%)</title><rect x="1123.4" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1126.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="1123.4" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1126.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.06%)</title><rect x="1123.4" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1126.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1123.4" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1126.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (8 samples, 0.47%)</title><rect x="1124.1" y="995.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1127.1" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (3 samples, 0.17%)</title><rect x="1124.7" y="979.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1127.7" y="990.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.sort (3 samples, 0.17%)</title><rect x="1124.7" y="963.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.7" y="974.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.binarySort (1 samples, 0.06%)</title><rect x="1126.1" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1129.1" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.06%)</title><rect x="1126.8" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1129.8" y="990.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1126.8" y="963.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1129.8" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1126.8" y="947.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1129.8" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1126.8" y="931.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1129.8" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.12%)</title><rect x="1127.5" y="979.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1130.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.12%)</title><rect x="1127.5" y="963.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1130.5" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.12%)</title><rect x="1127.5" y="947.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1130.5" y="958.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.06%)</title><rect x="1128.9" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1131.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.06%)</title><rect x="1128.9" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1131.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.06%)</title><rect x="1128.9" y="947.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1131.9" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.06%)</title><rect x="1128.9" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1131.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.29%)</title><rect x="1129.6" y="1043.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.29%)</title><rect x="1129.6" y="1027.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.6" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.29%)</title><rect x="1129.6" y="1011.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.6" y="1022.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.17%)</title><rect x="1130.9" y="995.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1133.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.06%)</title><rect x="1133.0" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1136.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.06%)</title><rect x="1133.0" y="1027.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1136.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.06%)</title><rect x="1133.0" y="1011.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1136.0" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1133.0" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.0" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1133.0" y="979.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1136.0" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1133.0" y="963.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1136.0" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1133.0" y="947.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1133.0" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1136.0" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="1133.0" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1136.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.12%)</title><rect x="1133.7" y="1075.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1136.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="1133.7" y="1059.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1136.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.12%)</title><rect x="1133.7" y="1043.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1136.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1134.4" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1137.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1134.4" y="1011.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1137.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="1134.4" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1137.4" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1134.4" y="979.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.4" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1134.4" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.4" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1134.4" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1137.4" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1134.4" y="931.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1137.4" y="942.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1134.4" y="915.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1137.4" y="926.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.06%)</title><rect x="1134.4" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.4" y="910.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.06%)</title><rect x="1134.4" y="883.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.06%)</title><rect x="1135.1" y="1075.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.06%)</title><rect x="1135.1" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.12%)</title><rect x="1135.7" y="1075.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.12%)</title><rect x="1135.7" y="1059.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1138.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.12%)</title><rect x="1135.7" y="1043.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.52%)</title><rect x="1137.1" y="1075.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1140.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.52%)</title><rect x="1137.1" y="1059.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1140.1" y="1070.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.12%)</title><rect x="1140.5" y="1043.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.5" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1141.2" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.2" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1141.2" y="1011.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.2" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1141.2" y="995.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.2" y="1006.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.06%)</title><rect x="1141.9" y="1043.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1144.9" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.06%)</title><rect x="1141.9" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.9" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.06%)</title><rect x="1141.9" y="1011.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1144.9" y="1022.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1141.9" y="995.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1144.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1142.6" y="1043.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1145.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.06%)</title><rect x="1142.6" y="1027.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1145.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.06%)</title><rect x="1142.6" y="1011.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1145.6" y="1022.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.06%)</title><rect x="1142.6" y="995.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.6" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1142.6" y="979.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.6" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.06%)</title><rect x="1142.6" y="963.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1145.6" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.06%)</title><rect x="1142.6" y="947.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1145.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (29 samples, 1.69%)</title><rect x="1143.3" y="1091.0" width="19.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1146.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (27 samples, 1.57%)</title><rect x="1144.7" y="1075.0" width="18.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.7" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.41%)</title><rect x="1145.4" y="1059.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1148.4" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.12%)</title><rect x="1145.4" y="1043.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.4" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.29%)</title><rect x="1146.7" y="1043.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1149.7" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.06%)</title><rect x="1146.7" y="1027.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.7" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.23%)</title><rect x="1147.4" y="1027.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1150.4" y="1038.0"></text>
</g>
<g>
<title>__recv (17 samples, 0.99%)</title><rect x="1150.2" y="1059.0" width="11.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1153.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.99%)</title><rect x="1150.2" y="1043.0" width="11.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.06%)</title><rect x="1150.2" y="1027.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1153.2" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.93%)</title><rect x="1150.8" y="1027.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (16 samples, 0.93%)</title><rect x="1150.8" y="1011.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.8" y="1022.0"></text>
</g>
<g>
<title>__sys_recvfrom (16 samples, 0.93%)</title><rect x="1150.8" y="995.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.8" y="1006.0"></text>
</g>
<g>
<title>sock_recvmsg (12 samples, 0.70%)</title><rect x="1152.2" y="979.0" width="8.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1155.2" y="990.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="1152.2" y="963.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1155.2" y="974.0"></text>
</g>
<g>
<title>inet6_recvmsg (10 samples, 0.58%)</title><rect x="1152.9" y="963.0" width="6.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1155.9" y="974.0"></text>
</g>
<g>
<title>tcp_recvmsg (10 samples, 0.58%)</title><rect x="1152.9" y="947.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.9" y="958.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.06%)</title><rect x="1155.0" y="931.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.0" y="942.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.06%)</title><rect x="1155.0" y="915.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1158.0" y="926.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.06%)</title><rect x="1155.0" y="899.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1158.0" y="910.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.06%)</title><rect x="1155.0" y="883.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.0" y="894.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.06%)</title><rect x="1155.7" y="931.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.7" y="942.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.06%)</title><rect x="1155.7" y="915.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1158.7" y="926.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.17%)</title><rect x="1156.3" y="931.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1159.3" y="942.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.17%)</title><rect x="1156.3" y="915.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.3" y="926.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.06%)</title><rect x="1156.3" y="899.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1159.3" y="910.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.12%)</title><rect x="1157.0" y="899.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1160.0" y="910.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.12%)</title><rect x="1157.0" y="883.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1160.0" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.12%)</title><rect x="1157.0" y="867.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1160.0" y="878.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.06%)</title><rect x="1158.4" y="931.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.4" y="942.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.06%)</title><rect x="1158.4" y="915.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1161.4" y="926.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.06%)</title><rect x="1158.4" y="899.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.4" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.06%)</title><rect x="1158.4" y="883.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.4" y="894.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.06%)</title><rect x="1158.4" y="867.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.4" y="878.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.06%)</title><rect x="1158.4" y="851.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.4" y="862.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.06%)</title><rect x="1158.4" y="835.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1161.4" y="846.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.06%)</title><rect x="1158.4" y="819.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1161.4" y="830.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.06%)</title><rect x="1158.4" y="803.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1161.4" y="814.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.06%)</title><rect x="1158.4" y="787.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1161.4" y="798.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.06%)</title><rect x="1158.4" y="771.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1161.4" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.06%)</title><rect x="1158.4" y="755.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1161.4" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.06%)</title><rect x="1158.4" y="739.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1161.4" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.06%)</title><rect x="1158.4" y="723.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.4" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.06%)</title><rect x="1158.4" y="707.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.4" y="718.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.06%)</title><rect x="1158.4" y="691.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.4" y="702.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.06%)</title><rect x="1158.4" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1161.4" y="686.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.06%)</title><rect x="1158.4" y="659.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.4" y="670.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.06%)</title><rect x="1158.4" y="643.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.4" y="654.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.06%)</title><rect x="1158.4" y="627.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1161.4" y="638.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.06%)</title><rect x="1158.4" y="611.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.4" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.06%)</title><rect x="1158.4" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1161.4" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.06%)</title><rect x="1158.4" y="579.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1161.4" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.06%)</title><rect x="1158.4" y="563.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1161.4" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.06%)</title><rect x="1158.4" y="547.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.4" y="558.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.06%)</title><rect x="1158.4" y="531.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1161.4" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.06%)</title><rect x="1158.4" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.4" y="526.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="1158.4" y="499.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1161.4" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.06%)</title><rect x="1159.1" y="931.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.1" y="942.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.06%)</title><rect x="1159.1" y="915.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.1" y="926.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.06%)</title><rect x="1159.1" y="899.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1162.1" y="910.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.06%)</title><rect x="1159.8" y="963.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.8" y="974.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.06%)</title><rect x="1159.8" y="947.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1162.8" y="958.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.06%)</title><rect x="1159.8" y="931.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.8" y="942.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.12%)</title><rect x="1160.5" y="979.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1163.5" y="990.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.06%)</title><rect x="1160.5" y="963.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1163.5" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="1160.5" y="947.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1163.5" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.06%)</title><rect x="1160.5" y="931.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.5" y="942.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.06%)</title><rect x="1161.2" y="963.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.2" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.12%)</title><rect x="1161.8" y="1059.0" width="1.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1164.8" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.06%)</title><rect x="1163.2" y="1123.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.2" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.06%)</title><rect x="1163.2" y="1107.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1166.2" y="1118.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.06%)</title><rect x="1163.2" y="1091.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1166.2" y="1102.0"></text>
</g>
<g>
<title>start_thread (38 samples, 2.21%)</title><rect x="1163.9" y="1139.0" width="26.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1166.9" y="1150.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (38 samples, 2.21%)</title><rect x="1163.9" y="1123.0" width="26.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1166.9" y="1134.0">t..</text>
</g>
<g>
<title>Thread::call_run() (38 samples, 2.21%)</title><rect x="1163.9" y="1107.0" width="26.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.9" y="1118.0">T..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (14 samples, 0.81%)</title><rect x="1163.9" y="1091.0" width="9.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.9" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 0.35%)</title><rect x="1163.9" y="1075.0" width="4.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.9" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 0.35%)</title><rect x="1163.9" y="1059.0" width="4.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.9" y="1070.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (5 samples, 0.29%)</title><rect x="1163.9" y="1043.0" width="3.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.9" y="1054.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (5 samples, 0.29%)</title><rect x="1163.9" y="1027.0" width="3.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.9" y="1038.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (3 samples, 0.17%)</title><rect x="1163.9" y="1011.0" width="2.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.9" y="1022.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.06%)</title><rect x="1163.9" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.9" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="1163.9" y="979.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1166.9" y="990.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1163.9" y="963.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1166.9" y="974.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1163.9" y="947.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1166.9" y="958.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1163.9" y="931.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.9" y="942.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1163.9" y="915.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1166.9" y="926.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1163.9" y="899.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1166.9" y="910.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1163.9" y="883.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.9" y="894.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1163.9" y="867.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1166.9" y="878.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="1163.9" y="851.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.9" y="862.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="1163.9" y="835.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1166.9" y="846.0"></text>
</g>
<g>
<title>swap_readpage (1 samples, 0.06%)</title><rect x="1163.9" y="819.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1166.9" y="830.0"></text>
</g>
<g>
<title>submit_bio (1 samples, 0.06%)</title><rect x="1163.9" y="803.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1166.9" y="814.0"></text>
</g>
<g>
<title>generic_make_request (1 samples, 0.06%)</title><rect x="1163.9" y="787.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1166.9" y="798.0"></text>
</g>
<g>
<title>blk_mq_make_request (1 samples, 0.06%)</title><rect x="1163.9" y="771.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1166.9" y="782.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (2 samples, 0.12%)</title><rect x="1164.6" y="995.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.6" y="1006.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="1164.6" y="979.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1167.6" y="990.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1164.6" y="963.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1167.6" y="974.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1164.6" y="947.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.6" y="958.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1164.6" y="931.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.6" y="942.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1164.6" y="915.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.6" y="926.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1164.6" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1167.6" y="910.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1164.6" y="883.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.6" y="894.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1164.6" y="867.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1167.6" y="878.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="1164.6" y="851.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1167.6" y="862.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="1164.6" y="835.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1167.6" y="846.0"></text>
</g>
<g>
<title>blk_finish_plug (1 samples, 0.06%)</title><rect x="1164.6" y="819.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1167.6" y="830.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.06%)</title><rect x="1164.6" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1167.6" y="814.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.06%)</title><rect x="1164.6" y="787.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1167.6" y="798.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (1 samples, 0.06%)</title><rect x="1164.6" y="771.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1167.6" y="782.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1164.6" y="755.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.6" y="766.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.06%)</title><rect x="1164.6" y="739.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1167.6" y="750.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1164.6" y="723.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1167.6" y="734.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="1164.6" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1167.6" y="718.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (1 samples, 0.06%)</title><rect x="1164.6" y="691.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1167.6" y="702.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="1164.6" y="675.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.6" y="686.0"></text>
</g>
<g>
<title>scsi_queue_rq (1 samples, 0.06%)</title><rect x="1164.6" y="659.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.6" y="670.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (1 samples, 0.06%)</title><rect x="1164.6" y="643.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.6" y="654.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1164.6" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.6" y="638.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.06%)</title><rect x="1165.3" y="979.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.3" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (1 samples, 0.06%)</title><rect x="1166.0" y="1011.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.0" y="1022.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.0] (1 samples, 0.06%)</title><rect x="1166.0" y="995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.0" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.06%)</title><rect x="1166.0" y="979.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.0" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.06%)</title><rect x="1166.0" y="963.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.0" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.06%)</title><rect x="1166.0" y="947.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.0" y="958.0"></text>
</g>
<g>
<title>TypeInt::hash() const (1 samples, 0.06%)</title><rect x="1166.0" y="931.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.0" y="942.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.06%)</title><rect x="1166.6" y="1011.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.6" y="1022.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.06%)</title><rect x="1167.3" y="1043.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.3" y="1054.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.06%)</title><rect x="1167.3" y="1027.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.3" y="1038.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.06%)</title><rect x="1167.3" y="1011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.3" y="1022.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.06%)</title><rect x="1167.3" y="995.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.3" y="1006.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.06%)</title><rect x="1167.3" y="979.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.3" y="990.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, int, int) (1 samples, 0.06%)</title><rect x="1167.3" y="963.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.3" y="974.0"></text>
</g>
<g>
<title>CodeHeap::search_freelist(unsigned long) (1 samples, 0.06%)</title><rect x="1167.3" y="947.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.3" y="958.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1167.3" y="931.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.3" y="942.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1167.3" y="915.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.3" y="926.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1167.3" y="899.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.3" y="910.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1167.3" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.3" y="894.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1167.3" y="867.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.3" y="878.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1167.3" y="851.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.3" y="862.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1167.3" y="835.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.3" y="846.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.06%)</title><rect x="1167.3" y="819.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.3" y="830.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (8 samples, 0.47%)</title><rect x="1168.0" y="1075.0" width="5.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.0" y="1086.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (8 samples, 0.47%)</title><rect x="1168.0" y="1059.0" width="5.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.0" y="1070.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (3 samples, 0.17%)</title><rect x="1168.0" y="1043.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.0" y="1054.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.17%)</title><rect x="1168.0" y="1027.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1171.0" y="1038.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.17%)</title><rect x="1168.0" y="1011.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.0" y="1022.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.17%)</title><rect x="1168.0" y="995.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.0" y="1006.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.17%)</title><rect x="1168.0" y="979.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.0" y="990.0"></text>
</g>
<g>
<title>handle_mm_fault (3 samples, 0.17%)</title><rect x="1168.0" y="963.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.0" y="974.0"></text>
</g>
<g>
<title>__handle_mm_fault (3 samples, 0.17%)</title><rect x="1168.0" y="947.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1171.0" y="958.0"></text>
</g>
<g>
<title>do_swap_page (3 samples, 0.17%)</title><rect x="1168.0" y="931.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.0" y="942.0"></text>
</g>
<g>
<title>swapin_readahead (3 samples, 0.17%)</title><rect x="1168.0" y="915.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.0" y="926.0"></text>
</g>
<g>
<title>swap_cluster_readahead (3 samples, 0.17%)</title><rect x="1168.0" y="899.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1171.0" y="910.0"></text>
</g>
<g>
<title>blk_finish_plug (2 samples, 0.12%)</title><rect x="1168.0" y="883.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1171.0" y="894.0"></text>
</g>
<g>
<title>blk_flush_plug_list (2 samples, 0.12%)</title><rect x="1168.0" y="867.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1171.0" y="878.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (2 samples, 0.12%)</title><rect x="1168.0" y="851.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.0" y="862.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (2 samples, 0.12%)</title><rect x="1168.0" y="835.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1171.0" y="846.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (2 samples, 0.12%)</title><rect x="1168.0" y="819.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1171.0" y="830.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (2 samples, 0.12%)</title><rect x="1168.0" y="803.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1171.0" y="814.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1168.7" y="787.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1171.7" y="798.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="1168.7" y="771.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1171.7" y="782.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (1 samples, 0.06%)</title><rect x="1168.7" y="755.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1171.7" y="766.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="1168.7" y="739.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1171.7" y="750.0"></text>
</g>
<g>
<title>scsi_queue_rq (1 samples, 0.06%)</title><rect x="1168.7" y="723.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1171.7" y="734.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (1 samples, 0.06%)</title><rect x="1168.7" y="707.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.7" y="718.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1168.7" y="691.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1171.7" y="702.0"></text>
</g>
<g>
<title>read_swap_cache_async (1 samples, 0.06%)</title><rect x="1169.4" y="883.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1172.4" y="894.0"></text>
</g>
<g>
<title>swap_readpage (1 samples, 0.06%)</title><rect x="1169.4" y="867.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1172.4" y="878.0"></text>
</g>
<g>
<title>submit_bio (1 samples, 0.06%)</title><rect x="1169.4" y="851.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.4" y="862.0"></text>
</g>
<g>
<title>generic_make_request (1 samples, 0.06%)</title><rect x="1169.4" y="835.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.4" y="846.0"></text>
</g>
<g>
<title>blk_mq_make_request (1 samples, 0.06%)</title><rect x="1169.4" y="819.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.4" y="830.0"></text>
</g>
<g>
<title>__rq_qos_throttle (1 samples, 0.06%)</title><rect x="1169.4" y="803.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1172.4" y="814.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (5 samples, 0.29%)</title><rect x="1170.1" y="1043.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.1" y="1054.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (5 samples, 0.29%)</title><rect x="1170.1" y="1027.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.1" y="1038.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (2 samples, 0.12%)</title><rect x="1170.1" y="1011.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.1" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.12%)</title><rect x="1170.1" y="995.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.1" y="1006.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.12%)</title><rect x="1170.1" y="979.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.1" y="990.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.12%)</title><rect x="1170.1" y="963.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.1" y="974.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.12%)</title><rect x="1170.1" y="947.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.1" y="958.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.12%)</title><rect x="1170.1" y="931.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1173.1" y="942.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.12%)</title><rect x="1170.1" y="915.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1173.1" y="926.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.12%)</title><rect x="1170.1" y="899.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.1" y="910.0"></text>
</g>
<g>
<title>do_swap_page (2 samples, 0.12%)</title><rect x="1170.1" y="883.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.1" y="894.0"></text>
</g>
<g>
<title>swapin_readahead (2 samples, 0.12%)</title><rect x="1170.1" y="867.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1173.1" y="878.0"></text>
</g>
<g>
<title>swap_cluster_readahead (2 samples, 0.12%)</title><rect x="1170.1" y="851.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1173.1" y="862.0"></text>
</g>
<g>
<title>blk_finish_plug (1 samples, 0.06%)</title><rect x="1170.1" y="835.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1173.1" y="846.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.06%)</title><rect x="1170.1" y="819.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.1" y="830.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.06%)</title><rect x="1170.1" y="803.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.1" y="814.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (1 samples, 0.06%)</title><rect x="1170.1" y="787.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1173.1" y="798.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1170.1" y="771.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.1" y="782.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.06%)</title><rect x="1170.1" y="755.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.1" y="766.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1170.1" y="739.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.1" y="750.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="1170.1" y="723.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1173.1" y="734.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (1 samples, 0.06%)</title><rect x="1170.1" y="707.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.1" y="718.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="1170.1" y="691.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.1" y="702.0"></text>
</g>
<g>
<title>scsi_queue_rq (1 samples, 0.06%)</title><rect x="1170.1" y="675.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.1" y="686.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (1 samples, 0.06%)</title><rect x="1170.1" y="659.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.1" y="670.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1170.1" y="643.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1173.1" y="654.0"></text>
</g>
<g>
<title>read_swap_cache_async (1 samples, 0.06%)</title><rect x="1170.8" y="835.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1173.8" y="846.0"></text>
</g>
<g>
<title>swap_readpage (1 samples, 0.06%)</title><rect x="1170.8" y="819.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1173.8" y="830.0"></text>
</g>
<g>
<title>submit_bio (1 samples, 0.06%)</title><rect x="1170.8" y="803.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.8" y="814.0"></text>
</g>
<g>
<title>blk_mq_make_request (1 samples, 0.06%)</title><rect x="1170.8" y="787.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1173.8" y="798.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_flush(nmethod*) (3 samples, 0.17%)</title><rect x="1171.5" y="1011.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.5" y="1022.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.17%)</title><rect x="1171.5" y="995.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.5" y="1006.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.17%)</title><rect x="1171.5" y="979.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1174.5" y="990.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.17%)</title><rect x="1171.5" y="963.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.5" y="974.0"></text>
</g>
<g>
<title>do_user_addr_fault (3 samples, 0.17%)</title><rect x="1171.5" y="947.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1174.5" y="958.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1172.8" y="931.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.8" y="942.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1172.8" y="915.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1175.8" y="926.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1172.8" y="899.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1175.8" y="910.0"></text>
</g>
<g>
<title>__lock_page_or_retry (1 samples, 0.06%)</title><rect x="1172.8" y="883.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1175.8" y="894.0"></text>
</g>
<g>
<title>io_schedule (1 samples, 0.06%)</title><rect x="1172.8" y="867.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.8" y="878.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="1172.8" y="851.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.8" y="862.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="1172.8" y="835.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.8" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.06%)</title><rect x="1172.8" y="819.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1175.8" y="830.0"></text>
</g>
<g>
<title>VMThread::run() (24 samples, 1.40%)</title><rect x="1173.5" y="1091.0" width="16.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.5" y="1102.0"></text>
</g>
<g>
<title>VMThread::loop() (24 samples, 1.40%)</title><rect x="1173.5" y="1075.0" width="16.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.5" y="1086.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.06%)</title><rect x="1173.5" y="1059.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.5" y="1070.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.06%)</title><rect x="1174.2" y="1059.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1177.2" y="1070.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (21 samples, 1.22%)</title><rect x="1174.9" y="1059.0" width="14.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.9" y="1070.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (21 samples, 1.22%)</title><rect x="1174.9" y="1043.0" width="14.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.9" y="1054.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (21 samples, 1.22%)</title><rect x="1174.9" y="1027.0" width="14.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.9" y="1038.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (21 samples, 1.22%)</title><rect x="1174.9" y="1011.0" width="14.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.9" y="1022.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (21 samples, 1.22%)</title><rect x="1174.9" y="995.0" width="14.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.9" y="1006.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool) (21 samples, 1.22%)</title><rect x="1174.9" y="979.0" width="14.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.9" y="990.0"></text>
</g>
<g>
<title>BiasedLocking::preserve_marks() (1 samples, 0.06%)</title><rect x="1174.9" y="963.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.9" y="974.0"></text>
</g>
<g>
<title>JavaThread::last_java_vframe(RegisterMap*) (1 samples, 0.06%)</title><rect x="1174.9" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.9" y="958.0"></text>
</g>
<g>
<title>vframe::new_vframe(frame const*, RegisterMap const*, JavaThread*) [clone .part.0] (1 samples, 0.06%)</title><rect x="1174.9" y="931.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.9" y="942.0"></text>
</g>
<g>
<title>compiledVFrame::compiledVFrame(frame const*, RegisterMap const*, JavaThread*, CompiledMethod*) (1 samples, 0.06%)</title><rect x="1174.9" y="915.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.9" y="926.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(RegisterMap const*) (1 samples, 0.06%)</title><rect x="1174.9" y="899.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.9" y="910.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1174.9" y="883.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.9" y="894.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1174.9" y="867.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1177.9" y="878.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1174.9" y="851.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1177.9" y="862.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1174.9" y="835.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1177.9" y="846.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1174.9" y="819.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.9" y="830.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1174.9" y="803.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.9" y="814.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1174.9" y="787.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1177.9" y="798.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="1174.9" y="771.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1177.9" y="782.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="1174.9" y="755.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1177.9" y="766.0"></text>
</g>
<g>
<title>blk_finish_plug (1 samples, 0.06%)</title><rect x="1174.9" y="739.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1177.9" y="750.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.06%)</title><rect x="1174.9" y="723.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.9" y="734.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.06%)</title><rect x="1174.9" y="707.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.9" y="718.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (1 samples, 0.06%)</title><rect x="1174.9" y="691.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.9" y="702.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1174.9" y="675.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.9" y="686.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.06%)</title><rect x="1174.9" y="659.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1177.9" y="670.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1174.9" y="643.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.9" y="654.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="1174.9" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.9" y="638.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (1 samples, 0.06%)</title><rect x="1174.9" y="611.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1177.9" y="622.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="1174.9" y="595.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.9" y="606.0"></text>
</g>
<g>
<title>scsi_queue_rq (1 samples, 0.06%)</title><rect x="1174.9" y="579.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1177.9" y="590.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (1 samples, 0.06%)</title><rect x="1174.9" y="563.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1177.9" y="574.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1174.9" y="547.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.9" y="558.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned long, bool) (14 samples, 0.81%)</title><rect x="1175.6" y="963.0" width="9.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.6" y="974.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (5 samples, 0.29%)</title><rect x="1175.6" y="947.0" width="3.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.6" y="958.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (5 samples, 0.29%)</title><rect x="1175.6" y="931.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.6" y="942.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(FastScanClosure*, oopDesc*, Klass*) (4 samples, 0.23%)</title><rect x="1175.6" y="915.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.6" y="926.0"></text>
</g>
<g>
<title>DefNewGeneration::copy_to_survivor_space(oopDesc*) (2 samples, 0.12%)</title><rect x="1176.9" y="899.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.9" y="910.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.06%)</title><rect x="1177.6" y="883.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1180.6" y="894.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1177.6" y="867.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.6" y="878.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1177.6" y="851.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1180.6" y="862.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1177.6" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1180.6" y="846.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1177.6" y="819.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1180.6" y="830.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1177.6" y="803.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1180.6" y="814.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1177.6" y="787.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1180.6" y="798.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1177.6" y="771.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.6" y="782.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="1177.6" y="755.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1180.6" y="766.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="1177.6" y="739.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1180.6" y="750.0"></text>
</g>
<g>
<title>swap_readpage (1 samples, 0.06%)</title><rect x="1177.6" y="723.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1180.6" y="734.0"></text>
</g>
<g>
<title>submit_bio (1 samples, 0.06%)</title><rect x="1177.6" y="707.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.6" y="718.0"></text>
</g>
<g>
<title>psi_memstall_enter (1 samples, 0.06%)</title><rect x="1177.6" y="691.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.6" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(FastScanClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="1178.3" y="915.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.3" y="926.0"></text>
</g>
<g>
<title>ContiguousSpace::allocate_aligned(unsigned long) (1 samples, 0.06%)</title><rect x="1178.3" y="899.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.3" y="910.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (9 samples, 0.52%)</title><rect x="1179.0" y="947.0" width="6.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.0" y="958.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (7 samples, 0.41%)</title><rect x="1179.0" y="931.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.0" y="942.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (7 samples, 0.41%)</title><rect x="1179.0" y="915.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.0" y="926.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (7 samples, 0.41%)</title><rect x="1179.0" y="899.0" width="4.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.0" y="910.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (6 samples, 0.35%)</title><rect x="1179.7" y="883.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.7" y="894.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (2 samples, 0.12%)</title><rect x="1179.7" y="867.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.7" y="878.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (1 samples, 0.06%)</title><rect x="1180.4" y="851.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.4" y="862.0"></text>
</g>
<g>
<title>FilteringDCTOC::walk_mem_region(MemRegion, HeapWord*, HeapWord*) (4 samples, 0.23%)</title><rect x="1181.1" y="867.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.1" y="878.0"></text>
</g>
<g>
<title>ContiguousSpaceDCTOC::walk_mem_region_with_cl(MemRegion, HeapWord*, HeapWord*, FilteringClosure*) (3 samples, 0.17%)</title><rect x="1181.1" y="851.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.1" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.12%)</title><rect x="1181.8" y="835.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.8" y="846.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;FilteringClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(FilteringClosure*, oopDesc*, Klass*, MemRegion) (1 samples, 0.06%)</title><rect x="1183.1" y="851.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.1" y="862.0"></text>
</g>
<g>
<title>GenCollectedHeap::process_roots(StrongRootsScope*, GenCollectedHeap::ScanningOption, OopClosure*, CLDClosure*, CLDClosure*, CodeBlobToOopClosure*) (1 samples, 0.06%)</title><rect x="1183.8" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="942.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="1183.8" y="915.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="926.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="1183.8" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.8" y="910.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.06%)</title><rect x="1183.8" y="883.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.8" y="894.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (1 samples, 0.06%)</title><rect x="1183.8" y="867.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="878.0"></text>
</g>
<g>
<title>FastScanClosure::do_oop(oopDesc**) (1 samples, 0.06%)</title><rect x="1183.8" y="851.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="862.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (1 samples, 0.06%)</title><rect x="1184.5" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.5" y="942.0"></text>
</g>
<g>
<title>TenuredGeneration::collect(bool, bool, unsigned long, bool) (6 samples, 0.35%)</title><rect x="1185.2" y="963.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="974.0"></text>
</g>
<g>
<title>GenMarkSweep::invoke_at_safepoint(ReferenceProcessor*, bool) (6 samples, 0.35%)</title><rect x="1185.2" y="947.0" width="4.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="958.0"></text>
</g>
<g>
<title>GenMarkSweep::mark_sweep_phase1(bool) (5 samples, 0.29%)</title><rect x="1185.2" y="931.0" width="3.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.2" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::full_process_roots(StrongRootsScope*, bool, GenCollectedHeap::ScanningOption, bool, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (3 samples, 0.17%)</title><rect x="1185.2" y="915.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.2" y="926.0"></text>
</g>
<g>
<title>GenCollectedHeap::process_roots(StrongRootsScope*, GenCollectedHeap::ScanningOption, OopClosure*, CLDClosure*, CLDClosure*, CodeBlobToOopClosure*) (3 samples, 0.17%)</title><rect x="1185.2" y="899.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.2" y="910.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.17%)</title><rect x="1185.2" y="883.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.2" y="894.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.17%)</title><rect x="1185.2" y="867.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.2" y="878.0"></text>
</g>
<g>
<title>MarkSweep::follow_stack() (3 samples, 0.17%)</title><rect x="1185.2" y="851.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.2" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;MarkAndPushClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(MarkAndPushClosure*, oopDesc*, Klass*) (1 samples, 0.06%)</title><rect x="1185.2" y="835.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="846.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1185.2" y="819.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.2" y="830.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1185.2" y="803.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1188.2" y="814.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1185.2" y="787.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.2" y="798.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1185.2" y="771.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.2" y="782.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1185.2" y="755.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.2" y="766.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1185.2" y="739.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1188.2" y="750.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1185.2" y="723.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1188.2" y="734.0"></text>
</g>
<g>
<title>swapin_readahead (1 samples, 0.06%)</title><rect x="1185.2" y="707.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.2" y="718.0"></text>
</g>
<g>
<title>swap_cluster_readahead (1 samples, 0.06%)</title><rect x="1185.2" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.2" y="702.0"></text>
</g>
<g>
<title>blk_finish_plug (1 samples, 0.06%)</title><rect x="1185.2" y="675.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1188.2" y="686.0"></text>
</g>
<g>
<title>blk_flush_plug_list (1 samples, 0.06%)</title><rect x="1185.2" y="659.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1188.2" y="670.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (1 samples, 0.06%)</title><rect x="1185.2" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.2" y="654.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (1 samples, 0.06%)</title><rect x="1185.2" y="627.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.2" y="638.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1185.2" y="611.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.2" y="622.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.06%)</title><rect x="1185.2" y="595.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1188.2" y="606.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (1 samples, 0.06%)</title><rect x="1185.2" y="579.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.2" y="590.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (1 samples, 0.06%)</title><rect x="1185.2" y="563.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1188.2" y="574.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (1 samples, 0.06%)</title><rect x="1185.2" y="547.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.2" y="558.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (1 samples, 0.06%)</title><rect x="1185.2" y="531.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.2" y="542.0"></text>
</g>
<g>
<title>scsi_queue_rq (1 samples, 0.06%)</title><rect x="1185.2" y="515.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1188.2" y="526.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (1 samples, 0.06%)</title><rect x="1185.2" y="499.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.2" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.06%)</title><rect x="1185.2" y="483.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.2" y="494.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;MarkAndPushClosure&gt;::Table::oop_oop_iterate&lt;InstanceMirrorKlass, unsigned int&gt;(MarkAndPushClosure*, oopDesc*, Klass*) (2 samples, 0.12%)</title><rect x="1185.9" y="835.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.9" y="846.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.12%)</title><rect x="1185.9" y="819.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.9" y="830.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.12%)</title><rect x="1185.9" y="803.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1188.9" y="814.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.12%)</title><rect x="1185.9" y="787.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1188.9" y="798.0"></text>
</g>
<g>
<title>do_user_addr_fault (2 samples, 0.12%)</title><rect x="1185.9" y="771.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1188.9" y="782.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.12%)</title><rect x="1185.9" y="755.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.9" y="766.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.12%)</title><rect x="1185.9" y="739.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.9" y="750.0"></text>
</g>
<g>
<title>do_swap_page (2 samples, 0.12%)</title><rect x="1185.9" y="723.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.9" y="734.0"></text>
</g>
<g>
<title>swapin_readahead (2 samples, 0.12%)</title><rect x="1185.9" y="707.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>swap_cluster_readahead (2 samples, 0.12%)</title><rect x="1185.9" y="691.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.9" y="702.0"></text>
</g>
<g>
<title>blk_finish_plug (2 samples, 0.12%)</title><rect x="1185.9" y="675.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1188.9" y="686.0"></text>
</g>
<g>
<title>blk_flush_plug_list (2 samples, 0.12%)</title><rect x="1185.9" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1188.9" y="670.0"></text>
</g>
<g>
<title>blk_mq_flush_plug_list (2 samples, 0.12%)</title><rect x="1185.9" y="643.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>blk_mq_sched_insert_requests (2 samples, 0.12%)</title><rect x="1185.9" y="627.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>blk_mq_run_hw_queue (2 samples, 0.12%)</title><rect x="1185.9" y="611.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>__blk_mq_delay_run_hw_queue (2 samples, 0.12%)</title><rect x="1185.9" y="595.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1188.9" y="606.0"></text>
</g>
<g>
<title>__blk_mq_run_hw_queue (2 samples, 0.12%)</title><rect x="1185.9" y="579.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.9" y="590.0"></text>
</g>
<g>
<title>blk_mq_sched_dispatch_requests (2 samples, 0.12%)</title><rect x="1185.9" y="563.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.9" y="574.0"></text>
</g>
<g>
<title>blk_mq_do_dispatch_sched (2 samples, 0.12%)</title><rect x="1185.9" y="547.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1188.9" y="558.0"></text>
</g>
<g>
<title>blk_mq_dispatch_rq_list (2 samples, 0.12%)</title><rect x="1185.9" y="531.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.9" y="542.0"></text>
</g>
<g>
<title>scsi_queue_rq (2 samples, 0.12%)</title><rect x="1185.9" y="515.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1188.9" y="526.0"></text>
</g>
<g>
<title>ata_scsi_queuecmd (2 samples, 0.12%)</title><rect x="1185.9" y="499.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1188.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.12%)</title><rect x="1185.9" y="483.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1188.9" y="494.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.06%)</title><rect x="1187.3" y="915.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.3" y="926.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_soft_ref_reconsider(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.06%)</title><rect x="1187.3" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>MarkSweep::IsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.06%)</title><rect x="1187.3" y="883.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>SymbolTable::unlink(int*, int*) (1 samples, 0.06%)</title><rect x="1187.9" y="915.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (1 samples, 0.06%)</title><rect x="1187.9" y="899.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.06%)</title><rect x="1187.9" y="883.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.06%)</title><rect x="1187.9" y="867.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.06%)</title><rect x="1187.9" y="851.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.06%)</title><rect x="1187.9" y="835.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.06%)</title><rect x="1187.9" y="819.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.06%)</title><rect x="1187.9" y="803.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>do_swap_page (1 samples, 0.06%)</title><rect x="1187.9" y="787.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>try_to_free_swap (1 samples, 0.06%)</title><rect x="1187.9" y="771.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>delete_from_swap_cache (1 samples, 0.06%)</title><rect x="1187.9" y="755.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>GenMarkSweep::mark_sweep_phase3() (1 samples, 0.06%)</title><rect x="1188.6" y="931.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.6" y="942.0"></text>
</g>
<g>
<title>GenCollectedHeap::full_process_roots(StrongRootsScope*, bool, GenCollectedHeap::ScanningOption, bool, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (1 samples, 0.06%)</title><rect x="1188.6" y="915.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.6" y="926.0"></text>
</g>
<g>
<title>CodeCache::blobs_do(CodeBlobClosure*) (1 samples, 0.06%)</title><rect x="1188.6" y="899.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.6" y="910.0"></text>
</g>
<g>
<title>MarkingCodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.06%)</title><rect x="1188.6" y="883.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.6" y="894.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.06%)</title><rect x="1188.6" y="867.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>oop_Relocation::oop_value() (1 samples, 0.06%)</title><rect x="1188.6" y="851.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.06%)</title><rect x="1188.6" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>__sched_yield (1 samples, 0.06%)</title><rect x="1189.3" y="1059.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.3" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.06%)</title><rect x="1189.3" y="1043.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.3" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.06%)</title><rect x="1189.3" y="1027.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.3" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.06%)</title><rect x="1189.3" y="1011.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.3" y="1022.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.06%)</title><rect x="1189.3" y="995.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.3" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.06%)</title><rect x="1189.3" y="979.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1192.3" y="990.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.06%)</title><rect x="1189.3" y="963.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.3" y="974.0"></text>
</g>
</g>
</svg>
