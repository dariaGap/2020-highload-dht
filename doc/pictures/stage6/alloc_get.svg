<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (99,268 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (53,729 samples, 54.13%)</title><rect x="10.0" y="691.0" width="638.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (53,729 samples, 54.13%)</title><rect x="10.0" y="675.0" width="638.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (53,729 samples, 54.13%)</title><rect x="10.0" y="659.0" width="638.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (31,484 samples, 31.72%)</title><rect x="10.0" y="643.0" width="374.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply...</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11,226 samples, 11.31%)</title><rect x="10.0" y="627.0" width="133.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8,218 samples, 8.28%)</title><rect x="10.0" y="611.0" width="97.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (56 samples, 0.06%)</title><rect x="10.0" y="595.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.apply (8,160 samples, 8.22%)</title><rect x="10.7" y="595.0" width="97.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.7" y="606.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (8,160 samples, 8.22%)</title><rect x="10.7" y="579.0" width="97.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.7" y="590.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (8,160 samples, 8.22%)</title><rect x="10.7" y="563.0" width="97.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.7" y="574.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.07%)</title><rect x="10.7" y="547.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.07%)</title><rect x="10.7" y="531.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.get$Lambda (39 samples, 0.04%)</title><rect x="10.7" y="515.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.7" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$234 (38 samples, 0.04%)</title><rect x="10.7" y="499.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="13.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.get$Lambda (26 samples, 0.03%)</title><rect x="11.1" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.1" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$236 (26 samples, 0.03%)</title><rect x="11.1" y="499.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (113 samples, 0.11%)</title><rect x="11.4" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (113 samples, 0.11%)</title><rect x="11.4" y="531.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (60 samples, 0.06%)</title><rect x="11.4" y="515.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="14.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.05%)</title><rect x="12.2" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="15.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.05%)</title><rect x="12.2" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.05%)</title><rect x="12.2" y="483.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="15.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (216 samples, 0.22%)</title><rect x="12.8" y="547.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (216 samples, 0.22%)</title><rect x="12.8" y="531.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (116 samples, 0.12%)</title><rect x="12.8" y="515.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="15.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.10%)</title><rect x="14.2" y="515.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.10%)</title><rect x="14.2" y="499.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.10%)</title><rect x="14.2" y="483.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (7,455 samples, 7.51%)</title><rect x="15.3" y="547.0" width="88.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.3" y="558.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (7,455 samples, 7.51%)</title><rect x="15.3" y="531.0" width="88.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.3" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (7,455 samples, 7.51%)</title><rect x="15.3" y="515.0" width="88.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.3" y="526.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (122 samples, 0.12%)</title><rect x="15.3" y="499.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (122 samples, 0.12%)</title><rect x="15.3" y="483.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.get$Lambda (38 samples, 0.04%)</title><rect x="15.3" y="467.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$137 (37 samples, 0.04%)</title><rect x="15.3" y="451.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="18.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.get$Lambda (43 samples, 0.04%)</title><rect x="15.8" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$138 (41 samples, 0.04%)</title><rect x="15.8" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="18.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.get$Lambda (41 samples, 0.04%)</title><rect x="16.3" y="467.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$188 (41 samples, 0.04%)</title><rect x="16.3" y="451.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="19.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,251 samples, 5.29%)</title><rect x="16.8" y="499.0" width="62.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.8" y="510.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,251 samples, 5.29%)</title><rect x="16.8" y="483.0" width="62.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="494.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,210 samples, 5.25%)</title><rect x="16.8" y="467.0" width="61.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.8" y="478.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$188/1663934576.apply (5,210 samples, 5.25%)</title><rect x="16.8" y="451.0" width="61.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.8" y="462.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,210 samples, 5.25%)</title><rect x="16.8" y="435.0" width="61.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.8" y="446.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,210 samples, 5.25%)</title><rect x="16.8" y="419.0" width="61.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.8" y="430.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$138/2015308156.apply (5,210 samples, 5.25%)</title><rect x="16.8" y="403.0" width="61.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.8" y="414.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,210 samples, 5.25%)</title><rect x="16.8" y="387.0" width="61.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.8" y="398.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.04%)</title><rect x="16.8" y="371.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.04%)</title><rect x="16.8" y="355.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.get$Lambda (41 samples, 0.04%)</title><rect x="16.8" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$232 (41 samples, 0.04%)</title><rect x="16.8" y="323.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="19.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (108 samples, 0.11%)</title><rect x="17.3" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (108 samples, 0.11%)</title><rect x="17.3" y="355.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.3" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (67 samples, 0.07%)</title><rect x="17.3" y="339.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="20.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="18.1" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="21.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.04%)</title><rect x="18.1" y="323.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="21.1" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.04%)</title><rect x="18.1" y="307.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="21.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (118 samples, 0.12%)</title><rect x="18.6" y="371.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (118 samples, 0.12%)</title><rect x="18.6" y="355.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (59 samples, 0.06%)</title><rect x="18.6" y="339.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="21.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="19.3" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.06%)</title><rect x="19.3" y="323.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.06%)</title><rect x="19.3" y="307.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (4,943 samples, 4.98%)</title><rect x="20.0" y="371.0" width="58.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.0" y="382.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.04%)</title><rect x="20.0" y="355.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="23.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.04%)</title><rect x="20.0" y="339.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,080 samples, 4.11%)</title><rect x="20.4" y="355.0" width="48.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.4" y="366.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,080 samples, 4.11%)</title><rect x="20.4" y="339.0" width="48.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.4" y="350.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (48 samples, 0.05%)</title><rect x="20.4" y="323.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$227/2009435465.apply (3,932 samples, 3.96%)</title><rect x="21.0" y="323.0" width="46.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="334.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (3,932 samples, 3.96%)</title><rect x="21.0" y="307.0" width="46.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.0" y="318.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="21.0" y="291.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="21.0" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="24.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$245/277218986.get$Lambda (27 samples, 0.03%)</title><rect x="21.0" y="259.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$245 (27 samples, 0.03%)</title><rect x="21.0" y="243.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="24.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (108 samples, 0.11%)</title><rect x="21.3" y="291.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (108 samples, 0.11%)</title><rect x="21.3" y="275.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.3" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (51 samples, 0.05%)</title><rect x="21.3" y="259.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="24.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.06%)</title><rect x="21.9" y="259.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.06%)</title><rect x="21.9" y="243.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.06%)</title><rect x="21.9" y="227.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="24.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="22.6" y="291.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="25.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (79 samples, 0.08%)</title><rect x="23.2" y="291.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (36 samples, 0.04%)</title><rect x="23.2" y="275.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="26.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (43 samples, 0.04%)</title><rect x="23.6" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (43 samples, 0.04%)</title><rect x="23.6" y="259.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (43 samples, 0.04%)</title><rect x="23.6" y="243.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (43 samples, 0.04%)</title><rect x="23.6" y="227.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (43 samples, 0.04%)</title><rect x="23.6" y="211.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.6" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (43 samples, 0.04%)</title><rect x="23.6" y="195.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="26.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (114 samples, 0.11%)</title><rect x="24.1" y="291.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="27.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (114 samples, 0.11%)</title><rect x="24.1" y="275.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (27 samples, 0.03%)</title><rect x="24.1" y="259.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (27 samples, 0.03%)</title><rect x="24.1" y="243.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (27 samples, 0.03%)</title><rect x="24.1" y="227.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="27.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (27 samples, 0.03%)</title><rect x="24.1" y="211.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="27.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (87 samples, 0.09%)</title><rect x="24.4" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (87 samples, 0.09%)</title><rect x="24.4" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.4" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (68 samples, 0.07%)</title><rect x="24.4" y="227.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="27.4" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,559 samples, 3.59%)</title><rect x="25.5" y="291.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="28.5" y="302.0">jdk/..</text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.04%)</title><rect x="25.5" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="28.5" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (244 samples, 0.25%)</title><rect x="25.9" y="275.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="28.9" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (244 samples, 0.25%)</title><rect x="25.9" y="259.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.9" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (244 samples, 0.25%)</title><rect x="25.9" y="243.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.9" y="254.0"></text>
</g>
<g>
<title>byte[] (244 samples, 0.25%)</title><rect x="25.9" y="227.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="28.9" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (127 samples, 0.13%)</title><rect x="28.8" y="275.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="31.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (127 samples, 0.13%)</title><rect x="28.8" y="259.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.8" y="270.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.13%)</title><rect x="28.8" y="243.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="31.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (281 samples, 0.28%)</title><rect x="30.3" y="275.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (281 samples, 0.28%)</title><rect x="30.3" y="259.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.3" y="270.0"></text>
</g>
<g>
<title>java.lang.String (35 samples, 0.04%)</title><rect x="30.3" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.3" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (246 samples, 0.25%)</title><rect x="30.7" y="243.0" width="3.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="33.7" y="254.0"></text>
</g>
<g>
<title>byte[] (246 samples, 0.25%)</title><rect x="30.7" y="227.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="33.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (82 samples, 0.08%)</title><rect x="33.7" y="275.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="36.7" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (82 samples, 0.08%)</title><rect x="33.7" y="259.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.7" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (82 samples, 0.08%)</title><rect x="33.7" y="243.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="36.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (31 samples, 0.03%)</title><rect x="34.6" y="275.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.6" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (31 samples, 0.03%)</title><rect x="34.6" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="37.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,245 samples, 2.26%)</title><rect x="35.0" y="275.0" width="26.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.0" y="286.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (27 samples, 0.03%)</title><rect x="35.0" y="259.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="35.0" y="243.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="38.0" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="35.0" y="227.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="38.0" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$249/740179033.get$Lambda (27 samples, 0.03%)</title><rect x="35.0" y="211.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="38.0" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$249 (26 samples, 0.03%)</title><rect x="35.0" y="195.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="38.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (115 samples, 0.12%)</title><rect x="35.3" y="259.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="38.3" y="270.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (115 samples, 0.12%)</title><rect x="35.3" y="243.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="38.3" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (115 samples, 0.12%)</title><rect x="35.3" y="227.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="38.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,111 samples, 1.12%)</title><rect x="36.7" y="259.0" width="13.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (690 samples, 0.70%)</title><rect x="36.7" y="243.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.7" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (690 samples, 0.70%)</title><rect x="36.7" y="227.0" width="8.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.7" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (690 samples, 0.70%)</title><rect x="36.7" y="211.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.7" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (690 samples, 0.70%)</title><rect x="36.7" y="195.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.7" y="206.0"></text>
</g>
<g>
<title>byte[] (683 samples, 0.69%)</title><rect x="36.7" y="179.0" width="8.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="39.7" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (78 samples, 0.08%)</title><rect x="44.9" y="243.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.9" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (78 samples, 0.08%)</title><rect x="44.9" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (78 samples, 0.08%)</title><rect x="44.9" y="211.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (78 samples, 0.08%)</title><rect x="44.9" y="195.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="47.9" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (98 samples, 0.10%)</title><rect x="45.8" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.8" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (49 samples, 0.05%)</title><rect x="45.8" y="227.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="48.8" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (48 samples, 0.05%)</title><rect x="46.4" y="227.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (47 samples, 0.05%)</title><rect x="46.4" y="211.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="49.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$249/740179033.test (245 samples, 0.25%)</title><rect x="47.0" y="243.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.0" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (245 samples, 0.25%)</title><rect x="47.0" y="227.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1127224355.test (245 samples, 0.25%)</title><rect x="47.0" y="211.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (245 samples, 0.25%)</title><rect x="47.0" y="195.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.0" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/416153648.test (245 samples, 0.25%)</title><rect x="47.0" y="179.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="50.0" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (245 samples, 0.25%)</title><rect x="47.0" y="163.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/815674463.test (245 samples, 0.25%)</title><rect x="47.0" y="147.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="50.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (245 samples, 0.25%)</title><rect x="47.0" y="131.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.0" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (245 samples, 0.25%)</title><rect x="47.0" y="115.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.0" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (245 samples, 0.25%)</title><rect x="47.0" y="99.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (116 samples, 0.12%)</title><rect x="47.0" y="83.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="50.0" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (129 samples, 0.13%)</title><rect x="48.4" y="83.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.4" y="94.0"></text>
</g>
<g>
<title>byte[] (129 samples, 0.13%)</title><rect x="48.4" y="67.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="51.4" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (992 samples, 1.00%)</title><rect x="49.9" y="259.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (992 samples, 1.00%)</title><rect x="49.9" y="243.0" width="11.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (992 samples, 1.00%)</title><rect x="49.9" y="227.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.9" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (29 samples, 0.03%)</title><rect x="49.9" y="211.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="52.9" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (42 samples, 0.04%)</title><rect x="50.2" y="211.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="53.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (83 samples, 0.08%)</title><rect x="50.8" y="211.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="53.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.03%)</title><rect x="51.8" y="211.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="54.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.04%)</title><rect x="52.1" y="211.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.04%)</title><rect x="52.1" y="195.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="55.1" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (43 samples, 0.04%)</title><rect x="52.1" y="179.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.1" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (42 samples, 0.04%)</title><rect x="52.1" y="163.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="55.1" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (58 samples, 0.06%)</title><rect x="52.6" y="211.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.6" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (57 samples, 0.06%)</title><rect x="52.6" y="195.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="55.6" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (622 samples, 0.63%)</title><rect x="53.3" y="211.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (622 samples, 0.63%)</title><rect x="53.3" y="195.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (622 samples, 0.63%)</title><rect x="53.3" y="179.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="56.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (118 samples, 0.12%)</title><rect x="53.3" y="163.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (118 samples, 0.12%)</title><rect x="53.3" y="147.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (118 samples, 0.12%)</title><rect x="53.3" y="131.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="56.3" y="142.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (114 samples, 0.11%)</title><rect x="53.3" y="115.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="56.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (87 samples, 0.09%)</title><rect x="54.7" y="163.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.7" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (87 samples, 0.09%)</title><rect x="54.7" y="147.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.7" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (87 samples, 0.09%)</title><rect x="54.7" y="131.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.7" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (87 samples, 0.09%)</title><rect x="54.7" y="115.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.7" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (87 samples, 0.09%)</title><rect x="54.7" y="99.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.7" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (87 samples, 0.09%)</title><rect x="54.7" y="83.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.7" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (87 samples, 0.09%)</title><rect x="54.7" y="67.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.7" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (87 samples, 0.09%)</title><rect x="54.7" y="51.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.7" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (86 samples, 0.09%)</title><rect x="54.7" y="35.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="57.7" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (236 samples, 0.24%)</title><rect x="55.7" y="163.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.7" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (236 samples, 0.24%)</title><rect x="55.7" y="147.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.7" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (127 samples, 0.13%)</title><rect x="55.7" y="131.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (127 samples, 0.13%)</title><rect x="55.7" y="115.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="58.7" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (124 samples, 0.12%)</title><rect x="55.7" y="99.0" width="1.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="58.7" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (109 samples, 0.11%)</title><rect x="57.2" y="131.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="60.2" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (106 samples, 0.11%)</title><rect x="57.2" y="115.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="60.2" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (181 samples, 0.18%)</title><rect x="58.5" y="163.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.5" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (177 samples, 0.18%)</title><rect x="58.5" y="147.0" width="2.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="61.5" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (86 samples, 0.09%)</title><rect x="60.7" y="211.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="63.7" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (85 samples, 0.09%)</title><rect x="60.7" y="195.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="63.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (176 samples, 0.18%)</title><rect x="61.7" y="275.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (79 samples, 0.08%)</title><rect x="61.7" y="259.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.7" y="270.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.04%)</title><rect x="61.7" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="64.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (44 samples, 0.04%)</title><rect x="62.1" y="243.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="65.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (97 samples, 0.10%)</title><rect x="62.6" y="259.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (97 samples, 0.10%)</title><rect x="62.6" y="243.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.6" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (97 samples, 0.10%)</title><rect x="62.6" y="227.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.6" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (97 samples, 0.10%)</title><rect x="62.6" y="211.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="65.6" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (37 samples, 0.04%)</title><rect x="62.6" y="195.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="65.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.04%)</title><rect x="62.6" y="179.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="65.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (60 samples, 0.06%)</title><rect x="63.1" y="195.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (60 samples, 0.06%)</title><rect x="63.1" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.1" y="190.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.06%)</title><rect x="63.1" y="163.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="66.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (92 samples, 0.09%)</title><rect x="63.8" y="275.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (92 samples, 0.09%)</title><rect x="63.8" y="259.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.8" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.09%)</title><rect x="63.8" y="243.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (92 samples, 0.09%)</title><rect x="63.8" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.8" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (92 samples, 0.09%)</title><rect x="63.8" y="211.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.09%)</title><rect x="63.8" y="195.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (37 samples, 0.04%)</title><rect x="63.8" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.04%)</title><rect x="63.8" y="163.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="66.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (55 samples, 0.06%)</title><rect x="64.2" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (55 samples, 0.06%)</title><rect x="64.2" y="163.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.2" y="174.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.06%)</title><rect x="64.2" y="147.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="67.2" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (243 samples, 0.24%)</title><rect x="64.9" y="275.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.9" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (78 samples, 0.08%)</title><rect x="64.9" y="259.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="67.9" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (71 samples, 0.07%)</title><rect x="65.8" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.8" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (71 samples, 0.07%)</title><rect x="65.8" y="243.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="68.8" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (94 samples, 0.09%)</title><rect x="66.6" y="259.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (94 samples, 0.09%)</title><rect x="66.6" y="243.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="69.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.10%)</title><rect x="67.8" y="323.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (100 samples, 0.10%)</title><rect x="67.8" y="307.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (100 samples, 0.10%)</title><rect x="67.8" y="291.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="70.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (133 samples, 0.13%)</title><rect x="68.9" y="355.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="71.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.05%)</title><rect x="70.5" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="73.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (634 samples, 0.64%)</title><rect x="71.2" y="355.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.05%)</title><rect x="71.2" y="339.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.05%)</title><rect x="71.2" y="323.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$196/1429407653.get$Lambda (26 samples, 0.03%)</title><rect x="71.2" y="307.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.2" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$196 (25 samples, 0.03%)</title><rect x="71.2" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="74.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$201/1503495329.get$Lambda (26 samples, 0.03%)</title><rect x="71.5" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$201 (25 samples, 0.03%)</title><rect x="71.5" y="291.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="74.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (62 samples, 0.06%)</title><rect x="71.8" y="339.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="74.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (47 samples, 0.05%)</title><rect x="72.6" y="339.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="75.6" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (54 samples, 0.05%)</title><rect x="73.1" y="339.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (186 samples, 0.19%)</title><rect x="73.8" y="339.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (186 samples, 0.19%)</title><rect x="73.8" y="323.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (186 samples, 0.19%)</title><rect x="73.8" y="307.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (186 samples, 0.19%)</title><rect x="73.8" y="291.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (186 samples, 0.19%)</title><rect x="73.8" y="275.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (186 samples, 0.19%)</title><rect x="73.8" y="259.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (186 samples, 0.19%)</title><rect x="73.8" y="243.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (186 samples, 0.19%)</title><rect x="73.8" y="227.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (186 samples, 0.19%)</title><rect x="73.8" y="211.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.06%)</title><rect x="73.8" y="195.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.06%)</title><rect x="73.8" y="179.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$208/1751389064.get$Lambda (42 samples, 0.04%)</title><rect x="74.0" y="163.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="77.0" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$208 (41 samples, 0.04%)</title><rect x="74.0" y="147.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="77.0" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (52 samples, 0.05%)</title><rect x="74.5" y="195.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="77.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (70 samples, 0.07%)</title><rect x="75.2" y="195.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="78.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (70 samples, 0.07%)</title><rect x="75.2" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (27 samples, 0.03%)</title><rect x="75.2" y="163.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="78.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (42 samples, 0.04%)</title><rect x="75.5" y="163.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (41 samples, 0.04%)</title><rect x="75.5" y="147.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="78.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (179 samples, 0.18%)</title><rect x="76.0" y="339.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.0" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (44 samples, 0.04%)</title><rect x="76.0" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="79.0" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (78 samples, 0.08%)</title><rect x="76.5" y="323.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="79.5" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (54 samples, 0.05%)</title><rect x="77.5" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.5" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (54 samples, 0.05%)</title><rect x="77.5" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.5" y="318.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.05%)</title><rect x="77.5" y="291.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="80.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (51 samples, 0.05%)</title><rect x="78.1" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.05%)</title><rect x="78.1" y="323.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="81.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="78.7" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="78.7" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.7" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.04%)</title><rect x="78.7" y="435.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="81.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (90 samples, 0.09%)</title><rect x="79.2" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (90 samples, 0.09%)</title><rect x="79.2" y="483.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="82.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (45 samples, 0.05%)</title><rect x="79.2" y="467.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="82.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="79.8" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="82.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.05%)</title><rect x="79.8" y="451.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.05%)</title><rect x="79.8" y="435.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="82.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,992 samples, 2.01%)</title><rect x="80.3" y="499.0" width="23.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.3" y="510.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.06%)</title><rect x="80.3" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.06%)</title><rect x="80.3" y="467.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$180/1069587135.get$Lambda (30 samples, 0.03%)</title><rect x="80.3" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$180 (30 samples, 0.03%)</title><rect x="80.3" y="435.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="83.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/245806305.get$Lambda (29 samples, 0.03%)</title><rect x="80.6" y="451.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$184 (29 samples, 0.03%)</title><rect x="80.6" y="435.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="83.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (93 samples, 0.09%)</title><rect x="81.0" y="483.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (93 samples, 0.09%)</title><rect x="81.0" y="467.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="84.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$184/245806305.apply (42 samples, 0.04%)</title><rect x="81.0" y="451.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (42 samples, 0.04%)</title><rect x="81.0" y="435.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (42 samples, 0.04%)</title><rect x="81.0" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (42 samples, 0.04%)</title><rect x="81.0" y="403.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="84.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.05%)</title><rect x="81.5" y="451.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.05%)</title><rect x="81.5" y="435.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.05%)</title><rect x="81.5" y="419.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="84.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.05%)</title><rect x="82.1" y="483.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="85.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.05%)</title><rect x="82.1" y="467.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="82.1" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="85.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="82.1" y="435.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (49 samples, 0.05%)</title><rect x="82.1" y="419.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="85.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (1,791 samples, 1.80%)</title><rect x="82.7" y="483.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.7" y="494.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (1,791 samples, 1.80%)</title><rect x="82.7" y="467.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="85.7" y="478.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (153 samples, 0.15%)</title><rect x="82.7" y="451.0" width="1.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="85.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,602 samples, 1.61%)</title><rect x="84.5" y="451.0" width="19.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.5" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (29 samples, 0.03%)</title><rect x="84.5" y="435.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="87.5" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (51 samples, 0.05%)</title><rect x="84.9" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="87.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (41 samples, 0.04%)</title><rect x="85.5" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.5" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (84 samples, 0.08%)</title><rect x="86.0" y="435.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (84 samples, 0.08%)</title><rect x="86.0" y="419.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="89.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (84 samples, 0.08%)</title><rect x="86.0" y="403.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="89.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (35 samples, 0.04%)</title><rect x="87.0" y="435.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.0" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (34 samples, 0.03%)</title><rect x="87.0" y="419.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (122 samples, 0.12%)</title><rect x="87.4" y="435.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="90.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (70 samples, 0.07%)</title><rect x="88.8" y="435.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="91.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (102 samples, 0.10%)</title><rect x="89.7" y="435.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="92.7" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (83 samples, 0.08%)</title><rect x="90.9" y="435.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="93.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (484 samples, 0.49%)</title><rect x="91.9" y="435.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="94.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (32 samples, 0.03%)</title><rect x="91.9" y="419.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="94.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (26 samples, 0.03%)</title><rect x="92.3" y="419.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="95.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (50 samples, 0.05%)</title><rect x="92.6" y="419.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="95.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (25 samples, 0.03%)</title><rect x="93.2" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="96.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (53 samples, 0.05%)</title><rect x="93.7" y="419.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.7" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (53 samples, 0.05%)</title><rect x="93.7" y="403.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="96.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (34 samples, 0.03%)</title><rect x="94.3" y="419.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="97.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.05%)</title><rect x="94.7" y="419.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="97.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (198 samples, 0.20%)</title><rect x="95.3" y="419.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (34 samples, 0.03%)</title><rect x="95.3" y="403.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="98.3" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (49 samples, 0.05%)</title><rect x="95.7" y="403.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="98.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (28 samples, 0.03%)</title><rect x="96.3" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (27 samples, 0.03%)</title><rect x="96.3" y="387.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="99.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (87 samples, 0.09%)</title><rect x="96.6" y="403.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (29 samples, 0.03%)</title><rect x="96.6" y="387.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="99.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (33 samples, 0.03%)</title><rect x="97.0" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="100.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (25 samples, 0.03%)</title><rect x="97.3" y="387.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="100.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (314 samples, 0.32%)</title><rect x="97.6" y="435.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (25 samples, 0.03%)</title><rect x="97.6" y="419.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="100.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (23 samples, 0.02%)</title><rect x="98.0" y="419.0" width="0.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="101.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (49 samples, 0.05%)</title><rect x="98.5" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="101.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (48 samples, 0.05%)</title><rect x="98.5" y="403.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="101.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (195 samples, 0.20%)</title><rect x="99.1" y="419.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (37 samples, 0.04%)</title><rect x="99.1" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="102.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (57 samples, 0.06%)</title><rect x="99.5" y="403.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="102.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (25 samples, 0.03%)</title><rect x="100.2" y="403.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.2" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (24 samples, 0.02%)</title><rect x="100.2" y="387.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="103.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (74 samples, 0.07%)</title><rect x="100.5" y="403.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (29 samples, 0.03%)</title><rect x="100.7" y="387.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="103.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (31 samples, 0.03%)</title><rect x="101.0" y="387.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="104.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (40 samples, 0.04%)</title><rect x="101.4" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (40 samples, 0.04%)</title><rect x="101.4" y="419.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (40 samples, 0.04%)</title><rect x="101.4" y="403.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.4" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (40 samples, 0.04%)</title><rect x="101.4" y="387.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.4" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (40 samples, 0.04%)</title><rect x="101.4" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (40 samples, 0.04%)</title><rect x="101.4" y="355.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (40 samples, 0.04%)</title><rect x="101.4" y="339.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="104.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (143 samples, 0.14%)</title><rect x="101.9" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (34 samples, 0.03%)</title><rect x="101.9" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.03%)</title><rect x="101.9" y="403.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/1042709263.get$Lambda (34 samples, 0.03%)</title><rect x="101.9" y="387.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$142 (34 samples, 0.03%)</title><rect x="101.9" y="371.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="104.9" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (109 samples, 0.11%)</title><rect x="102.3" y="419.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$142/1042709263.run (109 samples, 0.11%)</title><rect x="102.3" y="403.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (109 samples, 0.11%)</title><rect x="102.3" y="387.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.3" y="398.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (36 samples, 0.04%)</title><rect x="102.3" y="371.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="105.3" y="382.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (72 samples, 0.07%)</title><rect x="102.7" y="371.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.7" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (40 samples, 0.04%)</title><rect x="102.7" y="355.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="105.7" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (32 samples, 0.03%)</title><rect x="103.2" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.03%)</title><rect x="103.2" y="339.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.2" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (32 samples, 0.03%)</title><rect x="103.2" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.2" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (32 samples, 0.03%)</title><rect x="103.2" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.2" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (32 samples, 0.03%)</title><rect x="103.2" y="291.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="106.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (35 samples, 0.04%)</title><rect x="103.6" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.6" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (35 samples, 0.04%)</title><rect x="103.6" y="435.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="106.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (70 samples, 0.07%)</title><rect x="104.0" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (70 samples, 0.07%)</title><rect x="104.0" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (70 samples, 0.07%)</title><rect x="104.0" y="515.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.0" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (69 samples, 0.07%)</title><rect x="104.0" y="499.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="107.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (241 samples, 0.24%)</title><rect x="104.8" y="547.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.8" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (166 samples, 0.17%)</title><rect x="104.8" y="531.0" width="2.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="107.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (74 samples, 0.07%)</title><rect x="106.8" y="531.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="109.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (74 samples, 0.07%)</title><rect x="106.8" y="515.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.8" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (33 samples, 0.03%)</title><rect x="106.8" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="109.8" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (33 samples, 0.03%)</title><rect x="106.8" y="483.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.8" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (33 samples, 0.03%)</title><rect x="106.8" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.8" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (33 samples, 0.03%)</title><rect x="106.8" y="451.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="109.8" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (32 samples, 0.03%)</title><rect x="106.8" y="435.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="109.8" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.04%)</title><rect x="107.2" y="499.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.2" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (41 samples, 0.04%)</title><rect x="107.2" y="483.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.04%)</title><rect x="107.2" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.04%)</title><rect x="107.2" y="451.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (41 samples, 0.04%)</title><rect x="107.2" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="110.2" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.04%)</title><rect x="107.2" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (41 samples, 0.04%)</title><rect x="107.2" y="403.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.2" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (41 samples, 0.04%)</title><rect x="107.2" y="387.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.2" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (40 samples, 0.04%)</title><rect x="107.2" y="371.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="110.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3,008 samples, 3.03%)</title><rect x="107.7" y="611.0" width="35.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.7" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3,008 samples, 3.03%)</title><rect x="107.7" y="595.0" width="35.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.7" y="606.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (2,860 samples, 2.88%)</title><rect x="107.7" y="579.0" width="34.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.7" y="590.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (2,860 samples, 2.88%)</title><rect x="107.7" y="563.0" width="34.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.7" y="574.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,860 samples, 2.88%)</title><rect x="107.7" y="547.0" width="34.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="110.7" y="558.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,860 samples, 2.88%)</title><rect x="107.7" y="531.0" width="34.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.7" y="542.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,958 samples, 1.97%)</title><rect x="107.7" y="515.0" width="23.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.7" y="526.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,958 samples, 1.97%)</title><rect x="107.7" y="499.0" width="23.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.7" y="510.0">o..</text>
</g>
<g>
<title>byte[] (819 samples, 0.83%)</title><rect x="107.7" y="483.0" width="9.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="110.7" y="494.0"></text>
</g>
<g>
<title>byte[] (1,139 samples, 1.15%)</title><rect x="117.4" y="483.0" width="13.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="120.4" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (902 samples, 0.91%)</title><rect x="131.0" y="515.0" width="10.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="134.0" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (894 samples, 0.90%)</title><rect x="131.0" y="499.0" width="10.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="134.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (148 samples, 0.15%)</title><rect x="141.7" y="579.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (148 samples, 0.15%)</title><rect x="141.7" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (148 samples, 0.15%)</title><rect x="141.7" y="547.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.7" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (148 samples, 0.15%)</title><rect x="141.7" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (146 samples, 0.15%)</title><rect x="141.7" y="515.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="144.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$315/52309652.get (20,258 samples, 20.41%)</title><rect x="143.4" y="627.0" width="240.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.4" y="638.0">ru/mail/polis/service/dariagap/B..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$get$0 (20,258 samples, 20.41%)</title><rect x="143.4" y="611.0" width="240.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="146.4" y="622.0">ru/mail/polis/service/dariagap/B..</text>
</g>
<g>
<title>java/lang/String.getBytes (1,674 samples, 1.69%)</title><rect x="143.4" y="595.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1,674 samples, 1.69%)</title><rect x="143.4" y="579.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.4" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1,674 samples, 1.69%)</title><rect x="143.4" y="563.0" width="19.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.4" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1,674 samples, 1.69%)</title><rect x="143.4" y="547.0" width="19.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.4" y="558.0"></text>
</g>
<g>
<title>byte[] (1,669 samples, 1.68%)</title><rect x="143.4" y="531.0" width="19.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="146.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,316 samples, 1.33%)</title><rect x="163.3" y="595.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="166.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,316 samples, 1.33%)</title><rect x="163.3" y="579.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.3" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,311 samples, 1.32%)</title><rect x="163.3" y="563.0" width="15.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="166.3" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (804 samples, 0.81%)</title><rect x="179.0" y="595.0" width="9.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="182.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2,433 samples, 2.45%)</title><rect x="188.6" y="595.0" width="29.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="191.6" y="606.0">on..</text>
</g>
<g>
<title>byte[] (1,220 samples, 1.23%)</title><rect x="188.6" y="579.0" width="14.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="191.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (782 samples, 0.79%)</title><rect x="203.2" y="579.0" width="9.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="206.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (405 samples, 0.41%)</title><rect x="212.6" y="579.0" width="4.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="215.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (11,436 samples, 11.52%)</title><rect x="217.6" y="595.0" width="135.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.6" y="606.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1,021 samples, 1.03%)</title><rect x="217.6" y="579.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,021 samples, 1.03%)</title><rect x="217.6" y="563.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.6" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,013 samples, 1.02%)</title><rect x="217.6" y="547.0" width="12.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="220.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1,258 samples, 1.27%)</title><rect x="229.7" y="579.0" width="15.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.7" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1,258 samples, 1.27%)</title><rect x="229.7" y="563.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.7" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,249 samples, 1.26%)</title><rect x="229.7" y="547.0" width="14.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="232.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (5,477 samples, 5.52%)</title><rect x="244.7" y="579.0" width="65.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.7" y="590.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (5,477 samples, 5.52%)</title><rect x="244.7" y="563.0" width="65.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.7" y="574.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (936 samples, 0.94%)</title><rect x="244.7" y="547.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.7" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (936 samples, 0.94%)</title><rect x="244.7" y="531.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.7" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (927 samples, 0.93%)</title><rect x="244.7" y="515.0" width="11.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="247.7" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (523 samples, 0.53%)</title><rect x="255.8" y="547.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.8" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (523 samples, 0.53%)</title><rect x="255.8" y="531.0" width="6.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.8" y="542.0"></text>
</g>
<g>
<title>byte[] (521 samples, 0.52%)</title><rect x="255.8" y="515.0" width="6.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="258.8" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (1,728 samples, 1.74%)</title><rect x="262.0" y="547.0" width="20.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.0" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1,728 samples, 1.74%)</title><rect x="262.0" y="531.0" width="20.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.0" y="542.0"></text>
</g>
<g>
<title>byte[] (1,721 samples, 1.73%)</title><rect x="262.0" y="515.0" width="20.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="265.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (2,290 samples, 2.31%)</title><rect x="282.5" y="547.0" width="27.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="285.5" y="558.0">r..</text>
</g>
<g>
<title>byte[] (736 samples, 0.74%)</title><rect x="282.5" y="531.0" width="8.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="285.5" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,545 samples, 1.56%)</title><rect x="291.4" y="531.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.4" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1,545 samples, 1.56%)</title><rect x="291.4" y="515.0" width="18.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.4" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,537 samples, 1.55%)</title><rect x="291.4" y="499.0" width="18.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="294.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (3,680 samples, 3.71%)</title><rect x="309.8" y="579.0" width="43.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="312.8" y="590.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (1,753 samples, 1.77%)</title><rect x="309.8" y="563.0" width="20.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="312.8" y="574.0"></text>
</g>
<g>
<title>org.rocksdb.RocksIterator (687 samples, 0.69%)</title><rect x="309.8" y="547.0" width="8.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="312.8" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (1,062 samples, 1.07%)</title><rect x="318.0" y="547.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.0" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (1,062 samples, 1.07%)</title><rect x="318.0" y="531.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="321.0" y="542.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (1,062 samples, 1.07%)</title><rect x="318.0" y="515.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.0" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (1,062 samples, 1.07%)</title><rect x="318.0" y="499.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (392 samples, 0.39%)</title><rect x="318.0" y="483.0" width="4.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="321.0" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (667 samples, 0.67%)</title><rect x="322.7" y="483.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.7" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (667 samples, 0.67%)</title><rect x="322.7" y="467.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.7" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (667 samples, 0.67%)</title><rect x="322.7" y="451.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.7" y="462.0"></text>
</g>
<g>
<title>java.lang.ref.Finalizer (663 samples, 0.67%)</title><rect x="322.7" y="435.0" width="7.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="325.7" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (1,927 samples, 1.94%)</title><rect x="330.6" y="563.0" width="22.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.6" y="574.0">r..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1,927 samples, 1.94%)</title><rect x="330.6" y="547.0" width="22.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.6" y="558.0">r..</text>
</g>
<g>
<title>byte[] (954 samples, 0.96%)</title><rect x="330.6" y="531.0" width="11.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="333.6" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (971 samples, 0.98%)</title><rect x="342.0" y="531.0" width="11.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.0" y="542.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (968 samples, 0.98%)</title><rect x="342.0" y="515.0" width="11.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="345.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (2,586 samples, 2.61%)</title><rect x="353.5" y="595.0" width="30.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.5" y="606.0">ru..</text>
</g>
<g>
<title>byte[] (1,173 samples, 1.18%)</title><rect x="353.5" y="579.0" width="14.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="356.5" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1,401 samples, 1.41%)</title><rect x="367.6" y="579.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="370.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (1,390 samples, 1.40%)</title><rect x="367.6" y="563.0" width="16.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="370.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (12,511 samples, 12.60%)</title><rect x="384.3" y="643.0" width="148.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.3" y="654.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (12,511 samples, 12.60%)</title><rect x="384.3" y="627.0" width="148.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.3" y="638.0">java/util/concurren..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,510 samples, 1.52%)</title><rect x="384.3" y="611.0" width="17.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,510 samples, 1.52%)</title><rect x="384.3" y="595.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,510 samples, 1.52%)</title><rect x="384.3" y="579.0" width="17.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,510 samples, 1.52%)</title><rect x="384.3" y="563.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.accept (1,093 samples, 1.10%)</title><rect x="384.3" y="547.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$sendResponseFromFuture$3 (1,093 samples, 1.10%)</title><rect x="384.3" y="531.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="387.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,093 samples, 1.10%)</title><rect x="384.3" y="515.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="387.3" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,093 samples, 1.10%)</title><rect x="384.3" y="499.0" width="12.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="387.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (768 samples, 0.77%)</title><rect x="384.3" y="483.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.3" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (768 samples, 0.77%)</title><rect x="384.3" y="467.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.3" y="478.0"></text>
</g>
<g>
<title>byte[] (439 samples, 0.44%)</title><rect x="384.3" y="451.0" width="5.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="387.3" y="462.0"></text>
</g>
<g>
<title>byte[] (329 samples, 0.33%)</title><rect x="389.5" y="451.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="392.5" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (325 samples, 0.33%)</title><rect x="393.4" y="483.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="396.4" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (324 samples, 0.33%)</title><rect x="393.4" y="467.0" width="3.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="396.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.accept (417 samples, 0.42%)</title><rect x="397.2" y="547.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (417 samples, 0.42%)</title><rect x="397.2" y="531.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (416 samples, 0.42%)</title><rect x="397.3" y="515.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (416 samples, 0.42%)</title><rect x="397.3" y="499.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.3" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (415 samples, 0.42%)</title><rect x="397.3" y="483.0" width="4.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="400.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$130/712231129.apply (1,981 samples, 2.00%)</title><rect x="402.2" y="611.0" width="23.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="405.2" y="622.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$proxy$4 (1,981 samples, 2.00%)</title><rect x="402.2" y="595.0" width="23.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.2" y="606.0">r..</text>
</g>
<g>
<title>one.nio.http.Response (441 samples, 0.44%)</title><rect x="402.2" y="579.0" width="5.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="405.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,539 samples, 1.55%)</title><rect x="407.5" y="579.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.5" y="590.0"></text>
</g>
<g>
<title>byte[] (615 samples, 0.62%)</title><rect x="407.5" y="563.0" width="7.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="410.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (542 samples, 0.55%)</title><rect x="414.8" y="563.0" width="6.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="417.8" y="574.0"></text>
</g>
<g>
<title>java.lang.String (380 samples, 0.38%)</title><rect x="421.2" y="563.0" width="4.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="424.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.apply (9,020 samples, 9.09%)</title><rect x="425.7" y="611.0" width="107.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.7" y="622.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (9,020 samples, 9.09%)</title><rect x="425.7" y="595.0" width="107.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="428.7" y="606.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (9,020 samples, 9.09%)</title><rect x="425.7" y="579.0" width="107.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.7" y="590.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/Collection.stream (796 samples, 0.80%)</title><rect x="425.7" y="563.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="428.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (316 samples, 0.32%)</title><rect x="425.7" y="547.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.7" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (316 samples, 0.32%)</title><rect x="425.7" y="531.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.7" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (315 samples, 0.32%)</title><rect x="425.7" y="515.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="428.7" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (480 samples, 0.48%)</title><rect x="429.5" y="547.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="432.5" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (446 samples, 0.45%)</title><rect x="429.5" y="531.0" width="5.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="432.5" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (34 samples, 0.03%)</title><rect x="434.8" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="437.8" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (120 samples, 0.12%)</title><rect x="435.2" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (120 samples, 0.12%)</title><rect x="435.2" y="547.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (120 samples, 0.12%)</title><rect x="435.2" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.2" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$325/1106611178.get$Lambda (120 samples, 0.12%)</title><rect x="435.2" y="515.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.2" y="526.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$325 (120 samples, 0.12%)</title><rect x="435.2" y="499.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="438.2" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (2,482 samples, 2.50%)</title><rect x="436.6" y="563.0" width="29.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="439.6" y="574.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$334/1887357085.apply (2,482 samples, 2.50%)</title><rect x="436.6" y="547.0" width="29.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.6" y="558.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$2 (2,482 samples, 2.50%)</title><rect x="436.6" y="531.0" width="29.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.6" y="542.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (358 samples, 0.36%)</title><rect x="436.6" y="515.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.6" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (358 samples, 0.36%)</title><rect x="436.6" y="499.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.6" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (357 samples, 0.36%)</title><rect x="436.6" y="483.0" width="4.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="439.6" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Response (199 samples, 0.20%)</title><rect x="440.9" y="515.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="443.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (785 samples, 0.79%)</title><rect x="443.3" y="515.0" width="9.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="446.3" y="526.0"></text>
</g>
<g>
<title>byte[] (314 samples, 0.32%)</title><rect x="443.3" y="499.0" width="3.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="446.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (273 samples, 0.28%)</title><rect x="447.1" y="499.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="450.1" y="510.0"></text>
</g>
<g>
<title>java.lang.String (187 samples, 0.19%)</title><rect x="450.4" y="499.0" width="2.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="453.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getData (259 samples, 0.26%)</title><rect x="452.6" y="515.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="455.6" y="526.0"></text>
</g>
<g>
<title>byte[] (256 samples, 0.26%)</title><rect x="452.6" y="499.0" width="3.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="455.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampByData (878 samples, 0.88%)</title><rect x="455.7" y="515.0" width="10.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.7" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.&lt;init&gt; (252 samples, 0.25%)</title><rect x="455.7" y="499.0" width="3.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.7" y="510.0"></text>
</g>
<g>
<title>byte[] (249 samples, 0.25%)</title><rect x="455.7" y="483.0" width="3.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="458.7" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (626 samples, 0.63%)</title><rect x="458.7" y="499.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="461.7" y="510.0"></text>
</g>
<g>
<title>byte[] (243 samples, 0.24%)</title><rect x="458.7" y="483.0" width="2.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="461.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (381 samples, 0.38%)</title><rect x="461.6" y="483.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (378 samples, 0.38%)</title><rect x="461.6" y="467.0" width="4.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="464.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (575 samples, 0.58%)</title><rect x="466.1" y="563.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.1" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (477 samples, 0.48%)</title><rect x="466.1" y="547.0" width="5.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="469.1" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (98 samples, 0.10%)</title><rect x="471.8" y="547.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="474.8" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (4,295 samples, 4.33%)</title><rect x="473.0" y="563.0" width="51.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.0" y="574.0">java/..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (109 samples, 0.11%)</title><rect x="473.0" y="547.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (109 samples, 0.11%)</title><rect x="473.0" y="531.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (109 samples, 0.11%)</title><rect x="473.0" y="515.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.0" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$328/2064302058.get$Lambda (109 samples, 0.11%)</title><rect x="473.0" y="499.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="476.0" y="510.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$328 (109 samples, 0.11%)</title><rect x="473.0" y="483.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="476.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4,186 samples, 4.22%)</title><rect x="474.3" y="547.0" width="49.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.3" y="558.0">java/..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3,967 samples, 4.00%)</title><rect x="474.3" y="531.0" width="47.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="477.3" y="542.0">java..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3,967 samples, 4.00%)</title><rect x="474.3" y="515.0" width="47.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.3" y="526.0">java..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3,528 samples, 3.55%)</title><rect x="474.3" y="499.0" width="41.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.3" y="510.0">jav..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3,335 samples, 3.36%)</title><rect x="474.3" y="483.0" width="39.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.3" y="494.0">jav..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (3,335 samples, 3.36%)</title><rect x="474.3" y="467.0" width="39.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.3" y="478.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3,335 samples, 3.36%)</title><rect x="474.3" y="451.0" width="39.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.3" y="462.0">jav..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (3,335 samples, 3.36%)</title><rect x="474.3" y="435.0" width="39.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.3" y="446.0">jav..</text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$328/2064302058.apply (3,335 samples, 3.36%)</title><rect x="474.3" y="419.0" width="39.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.3" y="430.0">jav..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (3,335 samples, 3.36%)</title><rect x="474.3" y="403.0" width="39.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.3" y="414.0">jav..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$325/1106611178.compare (3,335 samples, 3.36%)</title><rect x="474.3" y="387.0" width="39.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.3" y="398.0">jav..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (3,335 samples, 3.36%)</title><rect x="474.3" y="371.0" width="39.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.3" y="382.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$323/174954198.applyAsLong (3,335 samples, 3.36%)</title><rect x="474.3" y="355.0" width="39.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.3" y="366.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$1 (3,335 samples, 3.36%)</title><rect x="474.3" y="339.0" width="39.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.3" y="350.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (967 samples, 0.97%)</title><rect x="474.3" y="323.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.3" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (967 samples, 0.97%)</title><rect x="474.3" y="307.0" width="11.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.3" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (966 samples, 0.97%)</title><rect x="474.3" y="291.0" width="11.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="477.3" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampByData (2,368 samples, 2.39%)</title><rect x="485.8" y="323.0" width="28.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.8" y="334.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.&lt;init&gt; (676 samples, 0.68%)</title><rect x="485.8" y="307.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="488.8" y="318.0"></text>
</g>
<g>
<title>byte[] (670 samples, 0.67%)</title><rect x="485.8" y="291.0" width="7.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="488.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1,692 samples, 1.70%)</title><rect x="493.8" y="307.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.8" y="318.0"></text>
</g>
<g>
<title>byte[] (663 samples, 0.67%)</title><rect x="493.8" y="291.0" width="7.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="496.8" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,025 samples, 1.03%)</title><rect x="501.7" y="291.0" width="12.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="504.7" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,021 samples, 1.03%)</title><rect x="501.7" y="275.0" width="12.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="504.7" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (193 samples, 0.19%)</title><rect x="513.9" y="483.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.9" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (193 samples, 0.19%)</title><rect x="513.9" y="467.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.9" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (193 samples, 0.19%)</title><rect x="513.9" y="451.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="516.9" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (305 samples, 0.31%)</title><rect x="516.2" y="499.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (305 samples, 0.31%)</title><rect x="516.2" y="483.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (305 samples, 0.31%)</title><rect x="516.2" y="467.0" width="3.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="519.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (134 samples, 0.13%)</title><rect x="519.8" y="499.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="522.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (134 samples, 0.13%)</title><rect x="519.8" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (134 samples, 0.13%)</title><rect x="519.8" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="522.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (133 samples, 0.13%)</title><rect x="519.8" y="451.0" width="1.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="522.8" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (219 samples, 0.22%)</title><rect x="521.4" y="531.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.4" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (218 samples, 0.22%)</title><rect x="521.4" y="515.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="524.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (752 samples, 0.76%)</title><rect x="524.0" y="563.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.0" y="574.0"></text>
</g>
<g>
<title>byte[] (291 samples, 0.29%)</title><rect x="524.0" y="547.0" width="3.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="527.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (260 samples, 0.26%)</title><rect x="527.5" y="547.0" width="3.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="530.5" y="558.0"></text>
</g>
<g>
<title>java.lang.String (195 samples, 0.20%)</title><rect x="530.6" y="547.0" width="2.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="533.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (2,238 samples, 2.25%)</title><rect x="533.0" y="643.0" width="26.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.0" y="654.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (2,117 samples, 2.13%)</title><rect x="533.0" y="627.0" width="25.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="536.0" y="638.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,104 samples, 2.12%)</title><rect x="533.0" y="611.0" width="25.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="536.0" y="622.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2,104 samples, 2.12%)</title><rect x="533.0" y="595.0" width="25.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.0" y="606.0">j..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (2,095 samples, 2.11%)</title><rect x="533.0" y="579.0" width="24.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="536.0" y="590.0">j..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (121 samples, 0.12%)</title><rect x="558.1" y="627.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="561.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 0.12%)</title><rect x="558.1" y="611.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (118 samples, 0.12%)</title><rect x="558.1" y="595.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (117 samples, 0.12%)</title><rect x="558.1" y="579.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="561.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.run (934 samples, 0.94%)</title><rect x="559.6" y="643.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (934 samples, 0.94%)</title><rect x="559.6" y="627.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="562.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (934 samples, 0.94%)</title><rect x="559.6" y="611.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (934 samples, 0.94%)</title><rect x="559.6" y="595.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (934 samples, 0.94%)</title><rect x="559.6" y="579.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="562.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (934 samples, 0.94%)</title><rect x="559.6" y="563.0" width="11.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="562.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (934 samples, 0.94%)</title><rect x="559.6" y="547.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (934 samples, 0.94%)</title><rect x="559.6" y="531.0" width="11.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (934 samples, 0.94%)</title><rect x="559.6" y="515.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (934 samples, 0.94%)</title><rect x="559.6" y="499.0" width="11.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (934 samples, 0.94%)</title><rect x="559.6" y="483.0" width="11.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (848 samples, 0.85%)</title><rect x="559.6" y="467.0" width="10.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.08%)</title><rect x="559.6" y="451.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.08%)</title><rect x="559.6" y="435.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="562.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$255/469447818.get$Lambda (33 samples, 0.03%)</title><rect x="559.6" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="562.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$255 (33 samples, 0.03%)</title><rect x="559.6" y="403.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="562.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$269/1114053606.get$Lambda (51 samples, 0.05%)</title><rect x="560.0" y="419.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$269 (51 samples, 0.05%)</title><rect x="560.0" y="403.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="563.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (764 samples, 0.77%)</title><rect x="560.6" y="451.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="563.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (72 samples, 0.07%)</title><rect x="560.6" y="435.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="563.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (692 samples, 0.70%)</title><rect x="561.4" y="435.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (692 samples, 0.70%)</title><rect x="561.4" y="419.0" width="8.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (692 samples, 0.70%)</title><rect x="561.4" y="403.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (395 samples, 0.40%)</title><rect x="561.4" y="387.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.4" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (91 samples, 0.09%)</title><rect x="561.4" y="371.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="564.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/154665854.apply (185 samples, 0.19%)</title><rect x="562.5" y="371.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (185 samples, 0.19%)</title><rect x="562.5" y="355.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (185 samples, 0.19%)</title><rect x="562.5" y="339.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (31 samples, 0.03%)</title><rect x="562.5" y="323.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.5" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (31 samples, 0.03%)</title><rect x="562.5" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.5" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (31 samples, 0.03%)</title><rect x="562.5" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="565.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (154 samples, 0.16%)</title><rect x="562.9" y="323.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.9" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.03%)</title><rect x="562.9" y="307.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.03%)</title><rect x="562.9" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.get$Lambda (27 samples, 0.03%)</title><rect x="562.9" y="275.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.9" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$270 (27 samples, 0.03%)</title><rect x="562.9" y="259.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="565.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (127 samples, 0.13%)</title><rect x="563.2" y="307.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.2" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (127 samples, 0.13%)</title><rect x="563.2" y="291.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.2" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (68 samples, 0.07%)</title><rect x="563.2" y="275.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="566.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.05%)</title><rect x="564.1" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.05%)</title><rect x="564.1" y="259.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.05%)</title><rect x="564.1" y="243.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="567.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (116 samples, 0.12%)</title><rect x="564.7" y="371.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (116 samples, 0.12%)</title><rect x="564.7" y="355.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (113 samples, 0.11%)</title><rect x="564.7" y="339.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="567.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (111 samples, 0.11%)</title><rect x="564.8" y="323.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (110 samples, 0.11%)</title><rect x="564.8" y="307.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="567.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (92 samples, 0.09%)</title><rect x="565.0" y="291.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (92 samples, 0.09%)</title><rect x="565.0" y="275.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (92 samples, 0.09%)</title><rect x="565.0" y="259.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (22 samples, 0.02%)</title><rect x="565.0" y="243.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.02%)</title><rect x="565.0" y="227.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.02%)</title><rect x="565.0" y="211.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.02%)</title><rect x="565.0" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (22 samples, 0.02%)</title><rect x="565.0" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (22 samples, 0.02%)</title><rect x="565.0" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="568.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (22 samples, 0.02%)</title><rect x="565.0" y="147.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (22 samples, 0.02%)</title><rect x="565.0" y="131.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (51 samples, 0.05%)</title><rect x="565.3" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (51 samples, 0.05%)</title><rect x="565.3" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.05%)</title><rect x="565.3" y="211.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.3" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (49 samples, 0.05%)</title><rect x="565.3" y="195.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="568.3" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (49 samples, 0.05%)</title><rect x="565.3" y="179.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (48 samples, 0.05%)</title><rect x="565.3" y="163.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (48 samples, 0.05%)</title><rect x="565.3" y="147.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (48 samples, 0.05%)</title><rect x="565.3" y="131.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (44 samples, 0.04%)</title><rect x="565.4" y="115.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.4" y="126.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (44 samples, 0.04%)</title><rect x="565.4" y="99.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.4" y="110.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (44 samples, 0.04%)</title><rect x="565.4" y="83.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.4" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (44 samples, 0.04%)</title><rect x="565.4" y="67.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.4" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (44 samples, 0.04%)</title><rect x="565.4" y="51.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.4" y="62.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (44 samples, 0.04%)</title><rect x="565.4" y="35.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.4" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (297 samples, 0.30%)</title><rect x="566.1" y="387.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="569.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (297 samples, 0.30%)</title><rect x="566.1" y="371.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="569.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$232/241055946.apply (297 samples, 0.30%)</title><rect x="566.1" y="355.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="569.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (297 samples, 0.30%)</title><rect x="566.1" y="339.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="569.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (297 samples, 0.30%)</title><rect x="566.1" y="323.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$137/1599868443.apply (297 samples, 0.30%)</title><rect x="566.1" y="307.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="569.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (297 samples, 0.30%)</title><rect x="566.1" y="291.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (111 samples, 0.11%)</title><rect x="566.4" y="275.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (111 samples, 0.11%)</title><rect x="566.4" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="569.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (70 samples, 0.07%)</title><rect x="566.4" y="243.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="569.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="567.2" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.04%)</title><rect x="567.2" y="227.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="570.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.04%)</title><rect x="567.2" y="211.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="570.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (165 samples, 0.17%)</title><rect x="567.7" y="275.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (81 samples, 0.08%)</title><rect x="567.7" y="259.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (34 samples, 0.03%)</title><rect x="567.7" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="570.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (47 samples, 0.05%)</title><rect x="568.1" y="243.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (47 samples, 0.05%)</title><rect x="568.1" y="227.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="568.1" y="211.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="571.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (84 samples, 0.08%)</title><rect x="568.7" y="259.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="571.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (44 samples, 0.04%)</title><rect x="568.7" y="243.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="571.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (40 samples, 0.04%)</title><rect x="569.2" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (40 samples, 0.04%)</title><rect x="569.2" y="227.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (40 samples, 0.04%)</title><rect x="569.2" y="211.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (40 samples, 0.04%)</title><rect x="569.2" y="195.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="572.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (40 samples, 0.04%)</title><rect x="569.2" y="179.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.2" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (40 samples, 0.04%)</title><rect x="569.2" y="163.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="572.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (86 samples, 0.09%)</title><rect x="569.7" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (86 samples, 0.09%)</title><rect x="569.7" y="451.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="572.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (86 samples, 0.09%)</title><rect x="569.7" y="435.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="572.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (86 samples, 0.09%)</title><rect x="569.7" y="419.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="572.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (86 samples, 0.09%)</title><rect x="569.7" y="403.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="572.7" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (86 samples, 0.09%)</title><rect x="569.7" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (40 samples, 0.04%)</title><rect x="569.7" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.7" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (40 samples, 0.04%)</title><rect x="569.7" y="355.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="572.7" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (46 samples, 0.05%)</title><rect x="570.1" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.1" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (46 samples, 0.05%)</title><rect x="570.1" y="355.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="573.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6,562 samples, 6.61%)</title><rect x="570.7" y="643.0" width="78.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.7" y="654.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6,562 samples, 6.61%)</title><rect x="570.7" y="627.0" width="78.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.7" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5,277 samples, 5.32%)</title><rect x="570.7" y="611.0" width="62.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.7" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (5,277 samples, 5.32%)</title><rect x="570.7" y="595.0" width="62.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.7" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5,277 samples, 5.32%)</title><rect x="570.7" y="579.0" width="62.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.7" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (119 samples, 0.12%)</title><rect x="570.7" y="563.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (119 samples, 0.12%)</title><rect x="570.7" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (119 samples, 0.12%)</title><rect x="570.7" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="573.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (119 samples, 0.12%)</title><rect x="570.7" y="515.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (70 samples, 0.07%)</title><rect x="570.7" y="499.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (70 samples, 0.07%)</title><rect x="570.7" y="483.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.07%)</title><rect x="570.7" y="467.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (70 samples, 0.07%)</title><rect x="570.7" y="451.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (70 samples, 0.07%)</title><rect x="570.7" y="435.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="573.7" y="446.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.07%)</title><rect x="570.7" y="419.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="573.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (49 samples, 0.05%)</title><rect x="571.5" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="574.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (49 samples, 0.05%)</title><rect x="571.5" y="483.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.05%)</title><rect x="571.5" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1595191274.get$Lambda (49 samples, 0.05%)</title><rect x="571.5" y="451.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (49 samples, 0.05%)</title><rect x="571.5" y="435.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="574.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5,158 samples, 5.20%)</title><rect x="572.1" y="563.0" width="61.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.1" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5,158 samples, 5.20%)</title><rect x="572.1" y="547.0" width="61.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.1" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,158 samples, 5.20%)</title><rect x="572.1" y="531.0" width="61.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.1" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5,158 samples, 5.20%)</title><rect x="572.1" y="515.0" width="61.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.1" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2,473 samples, 2.49%)</title><rect x="572.1" y="499.0" width="29.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.1" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,473 samples, 2.49%)</title><rect x="572.1" y="483.0" width="29.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="575.1" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,473 samples, 2.49%)</title><rect x="572.1" y="467.0" width="29.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.1" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2,473 samples, 2.49%)</title><rect x="572.1" y="451.0" width="29.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.1" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2,473 samples, 2.49%)</title><rect x="572.1" y="435.0" width="29.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.1" y="446.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,473 samples, 2.49%)</title><rect x="572.1" y="419.0" width="29.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.1" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,473 samples, 2.49%)</title><rect x="572.1" y="403.0" width="29.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="575.1" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2,396 samples, 2.41%)</title><rect x="572.1" y="387.0" width="28.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="575.1" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2,396 samples, 2.41%)</title><rect x="572.1" y="371.0" width="28.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.1" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,349 samples, 2.37%)</title><rect x="572.1" y="355.0" width="27.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.1" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (38 samples, 0.04%)</title><rect x="572.1" y="339.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="575.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.apply (2,210 samples, 2.23%)</title><rect x="572.5" y="339.0" width="26.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="575.5" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2,210 samples, 2.23%)</title><rect x="572.5" y="323.0" width="26.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.5" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.04%)</title><rect x="572.5" y="307.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.04%)</title><rect x="572.5" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1679545311.get$Lambda (38 samples, 0.04%)</title><rect x="572.5" y="275.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.5" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$306 (38 samples, 0.04%)</title><rect x="572.5" y="259.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="575.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (81 samples, 0.08%)</title><rect x="573.0" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="576.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (81 samples, 0.08%)</title><rect x="573.0" y="291.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (47 samples, 0.05%)</title><rect x="573.0" y="275.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="576.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.03%)</title><rect x="573.6" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="576.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (34 samples, 0.03%)</title><rect x="573.6" y="259.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.03%)</title><rect x="573.6" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="576.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2,091 samples, 2.11%)</title><rect x="574.0" y="307.0" width="24.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="577.0" y="318.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (114 samples, 0.11%)</title><rect x="574.1" y="291.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (114 samples, 0.11%)</title><rect x="574.1" y="275.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="577.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.07%)</title><rect x="574.1" y="259.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="577.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.05%)</title><rect x="574.9" y="259.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.05%)</title><rect x="574.9" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.05%)</title><rect x="574.9" y="227.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="577.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,961 samples, 1.98%)</title><rect x="575.5" y="291.0" width="23.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.5" y="302.0">j..</text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$118/827371135.apply (147 samples, 0.15%)</title><rect x="575.5" y="275.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="578.5" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (147 samples, 0.15%)</title><rect x="575.5" y="259.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="578.5" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (147 samples, 0.15%)</title><rect x="575.5" y="243.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.5" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (49 samples, 0.05%)</title><rect x="575.5" y="227.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="578.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (98 samples, 0.10%)</title><rect x="576.1" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.1" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (47 samples, 0.05%)</title><rect x="576.1" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="579.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.05%)</title><rect x="576.6" y="211.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="579.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1,814 samples, 1.83%)</title><rect x="577.2" y="275.0" width="21.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.2" y="286.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.06%)</title><rect x="577.2" y="259.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.06%)</title><rect x="577.2" y="243.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="580.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.get$Lambda (23 samples, 0.02%)</title><rect x="577.2" y="227.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$298 (22 samples, 0.02%)</title><rect x="577.2" y="211.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="580.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$301/817366138.get$Lambda (38 samples, 0.04%)</title><rect x="577.5" y="227.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="580.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$301 (38 samples, 0.04%)</title><rect x="577.5" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="580.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/518394687.linkToTargetMethod (61 samples, 0.06%)</title><rect x="578.0" y="259.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/801550386.invokeStatic (61 samples, 0.06%)</title><rect x="578.0" y="243.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.get$Lambda (61 samples, 0.06%)</title><rect x="578.0" y="227.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$281 (61 samples, 0.06%)</title><rect x="578.0" y="211.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="581.0" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (362 samples, 0.36%)</title><rect x="578.7" y="259.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (138 samples, 0.14%)</title><rect x="578.7" y="243.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (57 samples, 0.06%)</title><rect x="578.7" y="227.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.7" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (57 samples, 0.06%)</title><rect x="578.7" y="211.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="581.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (81 samples, 0.08%)</title><rect x="579.4" y="227.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (80 samples, 0.08%)</title><rect x="579.4" y="211.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="582.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (116 samples, 0.12%)</title><rect x="580.3" y="243.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="583.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (116 samples, 0.12%)</title><rect x="580.3" y="227.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (116 samples, 0.12%)</title><rect x="580.3" y="211.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (29 samples, 0.03%)</title><rect x="580.3" y="195.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (29 samples, 0.03%)</title><rect x="580.3" y="179.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (29 samples, 0.03%)</title><rect x="580.3" y="163.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (29 samples, 0.03%)</title><rect x="580.3" y="147.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="583.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$278/891080694.get (46 samples, 0.05%)</title><rect x="580.7" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (46 samples, 0.05%)</title><rect x="580.7" y="179.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="583.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (41 samples, 0.04%)</title><rect x="581.2" y="195.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.2" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (41 samples, 0.04%)</title><rect x="581.2" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.2" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (41 samples, 0.04%)</title><rect x="581.2" y="163.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="584.2" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (41 samples, 0.04%)</title><rect x="581.2" y="147.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="584.2" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (108 samples, 0.11%)</title><rect x="581.7" y="243.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.7" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (108 samples, 0.11%)</title><rect x="581.7" y="227.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="584.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (230 samples, 0.23%)</title><rect x="583.0" y="259.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (126 samples, 0.13%)</title><rect x="583.0" y="243.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.0" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (71 samples, 0.07%)</title><rect x="583.0" y="227.0" width="0.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="586.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.06%)</title><rect x="583.8" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.06%)</title><rect x="583.8" y="211.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.8" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.06%)</title><rect x="583.8" y="195.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="586.8" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (104 samples, 0.10%)</title><rect x="584.5" y="243.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (104 samples, 0.10%)</title><rect x="584.5" y="227.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (49 samples, 0.05%)</title><rect x="584.5" y="211.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="587.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.06%)</title><rect x="585.1" y="211.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.06%)</title><rect x="585.1" y="195.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.1" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.06%)</title><rect x="585.1" y="179.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="588.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (33 samples, 0.03%)</title><rect x="585.7" y="259.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="588.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (51 samples, 0.05%)</title><rect x="586.1" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="589.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.06%)</title><rect x="586.7" y="259.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="589.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (22 samples, 0.02%)</title><rect x="587.4" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.4" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (22 samples, 0.02%)</title><rect x="587.4" y="243.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="590.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (936 samples, 0.94%)</title><rect x="587.7" y="259.0" width="11.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="590.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/598122505.run (936 samples, 0.94%)</title><rect x="587.7" y="243.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (936 samples, 0.94%)</title><rect x="587.7" y="227.0" width="11.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (108 samples, 0.11%)</title><rect x="587.7" y="211.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (108 samples, 0.11%)</title><rect x="587.7" y="195.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.get$Lambda (23 samples, 0.02%)</title><rect x="587.7" y="179.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$285 (23 samples, 0.02%)</title><rect x="587.7" y="163.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="590.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/1564007654.get$Lambda (34 samples, 0.03%)</title><rect x="588.0" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$288 (32 samples, 0.03%)</title><rect x="588.0" y="163.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="591.0" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$294/923149657.get$Lambda (51 samples, 0.05%)</title><rect x="588.4" y="179.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.4" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$294 (50 samples, 0.05%)</title><rect x="588.4" y="163.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="591.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (116 samples, 0.12%)</title><rect x="589.0" y="211.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (116 samples, 0.12%)</title><rect x="589.0" y="195.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.0" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (53 samples, 0.05%)</title><rect x="589.0" y="179.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="592.0" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.06%)</title><rect x="589.6" y="179.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="592.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (62 samples, 0.06%)</title><rect x="589.6" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.06%)</title><rect x="589.6" y="147.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="592.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (67 samples, 0.07%)</title><rect x="590.3" y="211.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="593.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (51 samples, 0.05%)</title><rect x="591.1" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.05%)</title><rect x="591.1" y="195.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="594.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (161 samples, 0.16%)</title><rect x="591.8" y="211.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (161 samples, 0.16%)</title><rect x="591.8" y="195.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.05%)</title><rect x="591.8" y="179.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="594.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.05%)</title><rect x="591.8" y="163.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$296/1509000023.get$Lambda (47 samples, 0.05%)</title><rect x="591.8" y="147.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.8" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$296 (47 samples, 0.05%)</title><rect x="591.8" y="131.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="594.8" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (114 samples, 0.11%)</title><rect x="592.3" y="179.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (114 samples, 0.11%)</title><rect x="592.3" y="163.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (114 samples, 0.11%)</title><rect x="592.3" y="147.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.3" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (66 samples, 0.07%)</title><rect x="592.3" y="131.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="595.3" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.05%)</title><rect x="593.1" y="131.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (48 samples, 0.05%)</title><rect x="593.1" y="115.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="596.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (48 samples, 0.05%)</title><rect x="593.1" y="99.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="596.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (156 samples, 0.16%)</title><rect x="593.7" y="211.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.7" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (156 samples, 0.16%)</title><rect x="593.7" y="195.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.7" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (156 samples, 0.16%)</title><rect x="593.7" y="179.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.7" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (156 samples, 0.16%)</title><rect x="593.7" y="163.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="596.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (39 samples, 0.04%)</title><rect x="593.7" y="147.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="596.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (37 samples, 0.04%)</title><rect x="593.7" y="131.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="596.7" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (117 samples, 0.12%)</title><rect x="594.1" y="147.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="597.1" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (117 samples, 0.12%)</title><rect x="594.1" y="131.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.1" y="142.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.12%)</title><rect x="594.1" y="115.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="597.1" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (277 samples, 0.28%)</title><rect x="595.5" y="211.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (92 samples, 0.09%)</title><rect x="595.5" y="195.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="598.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (184 samples, 0.19%)</title><rect x="596.6" y="195.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="599.6" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (184 samples, 0.19%)</title><rect x="596.6" y="179.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.6" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (184 samples, 0.19%)</title><rect x="596.6" y="163.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="599.6" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (184 samples, 0.19%)</title><rect x="596.6" y="147.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.6" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (41 samples, 0.04%)</title><rect x="596.6" y="131.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="599.6" y="142.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.04%)</title><rect x="596.6" y="115.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="599.6" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (143 samples, 0.14%)</title><rect x="597.1" y="131.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="600.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (143 samples, 0.14%)</title><rect x="597.1" y="115.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.1" y="126.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.14%)</title><rect x="597.1" y="99.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="600.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$234/1403184068.apply (101 samples, 0.10%)</title><rect x="598.8" y="339.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="601.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (101 samples, 0.10%)</title><rect x="598.8" y="323.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (49 samples, 0.05%)</title><rect x="598.8" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.8" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (49 samples, 0.05%)</title><rect x="598.8" y="291.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="601.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (49 samples, 0.05%)</title><rect x="598.8" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="601.8" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (49 samples, 0.05%)</title><rect x="598.8" y="259.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="601.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (52 samples, 0.05%)</title><rect x="599.4" y="307.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="602.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (52 samples, 0.05%)</title><rect x="599.4" y="291.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="602.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (47 samples, 0.05%)</title><rect x="600.0" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (47 samples, 0.05%)</title><rect x="600.0" y="339.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$236/764934477.apply (47 samples, 0.05%)</title><rect x="600.0" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="603.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (47 samples, 0.05%)</title><rect x="600.0" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="603.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (47 samples, 0.05%)</title><rect x="600.0" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.05%)</title><rect x="600.0" y="275.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="603.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$270/505402616.apply (77 samples, 0.08%)</title><rect x="600.6" y="387.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (77 samples, 0.08%)</title><rect x="600.6" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.6" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (77 samples, 0.08%)</title><rect x="600.6" y="355.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="603.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2,685 samples, 2.70%)</title><rect x="601.5" y="499.0" width="31.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.5" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (153 samples, 0.15%)</title><rect x="601.5" y="483.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.5" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (153 samples, 0.15%)</title><rect x="601.5" y="467.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.5" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (153 samples, 0.15%)</title><rect x="601.5" y="451.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.5" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (153 samples, 0.15%)</title><rect x="601.5" y="435.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (153 samples, 0.15%)</title><rect x="601.5" y="419.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.5" y="430.0"></text>
</g>
<g>
<title>byte[] (153 samples, 0.15%)</title><rect x="601.5" y="403.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="604.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (235 samples, 0.24%)</title><rect x="603.3" y="483.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (38 samples, 0.04%)</title><rect x="603.3" y="467.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="606.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (32 samples, 0.03%)</title><rect x="603.8" y="467.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.8" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (32 samples, 0.03%)</title><rect x="603.8" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.8" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.03%)</title><rect x="603.8" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.8" y="446.0"></text>
</g>
<g>
<title>byte[] (32 samples, 0.03%)</title><rect x="603.8" y="419.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="606.8" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (50 samples, 0.05%)</title><rect x="604.1" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (50 samples, 0.05%)</title><rect x="604.1" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="607.1" y="462.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.05%)</title><rect x="604.1" y="435.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="607.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (115 samples, 0.12%)</title><rect x="604.7" y="467.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (115 samples, 0.12%)</title><rect x="604.7" y="451.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="607.7" y="462.0"></text>
</g>
<g>
<title>java.lang.String (69 samples, 0.07%)</title><rect x="604.7" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="607.7" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (46 samples, 0.05%)</title><rect x="605.6" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.6" y="446.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.05%)</title><rect x="605.6" y="419.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="608.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (772 samples, 0.78%)</title><rect x="606.1" y="483.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (772 samples, 0.78%)</title><rect x="606.1" y="467.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.1" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (772 samples, 0.78%)</title><rect x="606.1" y="451.0" width="9.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="609.1" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (33 samples, 0.03%)</title><rect x="606.3" y="435.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="609.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (70 samples, 0.07%)</title><rect x="606.7" y="435.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="609.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (25 samples, 0.03%)</title><rect x="607.6" y="435.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="610.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (45 samples, 0.05%)</title><rect x="607.9" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (45 samples, 0.05%)</title><rect x="607.9" y="419.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (45 samples, 0.05%)</title><rect x="607.9" y="403.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.9" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (45 samples, 0.05%)</title><rect x="607.9" y="387.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="610.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (53 samples, 0.05%)</title><rect x="608.4" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="611.4" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (53 samples, 0.05%)</title><rect x="608.4" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="611.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (445 samples, 0.45%)</title><rect x="609.0" y="435.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (445 samples, 0.45%)</title><rect x="609.0" y="419.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (445 samples, 0.45%)</title><rect x="609.0" y="403.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.0" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (68 samples, 0.07%)</title><rect x="609.0" y="387.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="612.0" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (68 samples, 0.07%)</title><rect x="609.0" y="371.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (68 samples, 0.07%)</title><rect x="609.0" y="355.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.0" y="366.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (68 samples, 0.07%)</title><rect x="609.0" y="339.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="612.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (91 samples, 0.09%)</title><rect x="609.8" y="387.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.8" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (91 samples, 0.09%)</title><rect x="609.8" y="371.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (91 samples, 0.09%)</title><rect x="609.8" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.8" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (91 samples, 0.09%)</title><rect x="609.8" y="339.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (91 samples, 0.09%)</title><rect x="609.8" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (91 samples, 0.09%)</title><rect x="609.8" y="307.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.8" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (91 samples, 0.09%)</title><rect x="609.8" y="291.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.8" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (91 samples, 0.09%)</title><rect x="609.8" y="275.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.8" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (91 samples, 0.09%)</title><rect x="609.8" y="259.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="612.8" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (152 samples, 0.15%)</title><rect x="610.9" y="387.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="613.9" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (152 samples, 0.15%)</title><rect x="610.9" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.9" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (66 samples, 0.07%)</title><rect x="610.9" y="355.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (66 samples, 0.07%)</title><rect x="610.9" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.9" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (66 samples, 0.07%)</title><rect x="610.9" y="323.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="613.9" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (86 samples, 0.09%)</title><rect x="611.7" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.7" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (86 samples, 0.09%)</title><rect x="611.7" y="339.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="614.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (134 samples, 0.13%)</title><rect x="612.7" y="387.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.7" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (134 samples, 0.13%)</title><rect x="612.7" y="371.0" width="1.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="615.7" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (81 samples, 0.08%)</title><rect x="614.3" y="435.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.3" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (81 samples, 0.08%)</title><rect x="614.3" y="419.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="617.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (1,525 samples, 1.54%)</title><rect x="615.3" y="483.0" width="18.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (56 samples, 0.06%)</title><rect x="615.3" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="618.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (94 samples, 0.09%)</title><rect x="616.0" y="467.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (94 samples, 0.09%)</title><rect x="616.0" y="451.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.0" y="462.0"></text>
</g>
<g>
<title>byte[] (93 samples, 0.09%)</title><rect x="616.0" y="435.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="619.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (216 samples, 0.22%)</title><rect x="617.1" y="467.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.1" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (216 samples, 0.22%)</title><rect x="617.1" y="451.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.1" y="462.0"></text>
</g>
<g>
<title>java.lang.String (73 samples, 0.07%)</title><rect x="617.1" y="435.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="620.1" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (142 samples, 0.14%)</title><rect x="617.9" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.9" y="446.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.14%)</title><rect x="617.9" y="419.0" width="1.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="620.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (1,158 samples, 1.17%)</title><rect x="619.6" y="467.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (335 samples, 0.34%)</title><rect x="619.6" y="451.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (335 samples, 0.34%)</title><rect x="619.6" y="435.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.15%)</title><rect x="619.6" y="419.0" width="1.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="622.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (182 samples, 0.18%)</title><rect x="621.5" y="419.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.5" y="430.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.18%)</title><rect x="621.5" y="403.0" width="2.1" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="624.5" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (183 samples, 0.18%)</title><rect x="623.6" y="451.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (183 samples, 0.18%)</title><rect x="623.6" y="435.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.6" y="446.0"></text>
</g>
<g>
<title>byte[] (105 samples, 0.11%)</title><rect x="623.6" y="419.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="626.6" y="430.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.08%)</title><rect x="624.9" y="419.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="627.9" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (172 samples, 0.17%)</title><rect x="625.8" y="451.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="628.8" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (172 samples, 0.17%)</title><rect x="625.8" y="435.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.8" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (172 samples, 0.17%)</title><rect x="625.8" y="419.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.8" y="430.0"></text>
</g>
<g>
<title>java.lang.String (77 samples, 0.08%)</title><rect x="625.8" y="403.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="628.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (95 samples, 0.10%)</title><rect x="626.7" y="403.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.7" y="414.0"></text>
</g>
<g>
<title>byte[] (95 samples, 0.10%)</title><rect x="626.7" y="387.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="629.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (175 samples, 0.18%)</title><rect x="627.8" y="451.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.8" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (175 samples, 0.18%)</title><rect x="627.8" y="435.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.8" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (175 samples, 0.18%)</title><rect x="627.8" y="419.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.8" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (175 samples, 0.18%)</title><rect x="627.8" y="403.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.8" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (175 samples, 0.18%)</title><rect x="627.8" y="387.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.8" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (174 samples, 0.18%)</title><rect x="627.8" y="371.0" width="2.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="630.8" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (293 samples, 0.30%)</title><rect x="629.9" y="451.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.9" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (93 samples, 0.09%)</title><rect x="629.9" y="435.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.9" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (93 samples, 0.09%)</title><rect x="629.9" y="419.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="632.9" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (124 samples, 0.12%)</title><rect x="631.0" y="435.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="634.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (124 samples, 0.12%)</title><rect x="631.0" y="419.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="634.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$274/1055343799.apply (76 samples, 0.08%)</title><rect x="632.5" y="435.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (76 samples, 0.08%)</title><rect x="632.5" y="419.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="635.5" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (76 samples, 0.08%)</title><rect x="632.5" y="403.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="635.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,285 samples, 1.29%)</title><rect x="633.4" y="611.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="636.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,285 samples, 1.29%)</title><rect x="633.4" y="595.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,285 samples, 1.29%)</title><rect x="633.4" y="579.0" width="15.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$176/1017233112.run (1,285 samples, 1.29%)</title><rect x="633.4" y="563.0" width="15.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,285 samples, 1.29%)</title><rect x="633.4" y="547.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (186 samples, 0.19%)</title><rect x="633.4" y="531.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.4" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (72 samples, 0.07%)</title><rect x="633.4" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (72 samples, 0.07%)</title><rect x="633.4" y="499.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="636.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/2120086541.get$Lambda (24 samples, 0.02%)</title><rect x="633.4" y="483.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$204 (24 samples, 0.02%)</title><rect x="633.4" y="467.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="636.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$208/1751389064.get$Lambda (48 samples, 0.05%)</title><rect x="633.7" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$208 (48 samples, 0.05%)</title><rect x="633.7" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="636.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (58 samples, 0.06%)</title><rect x="634.3" y="515.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="637.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (56 samples, 0.06%)</title><rect x="634.9" y="515.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (56 samples, 0.06%)</title><rect x="634.9" y="499.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="637.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (36 samples, 0.04%)</title><rect x="635.2" y="483.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.2" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (36 samples, 0.04%)</title><rect x="635.2" y="467.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="638.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,070 samples, 1.08%)</title><rect x="635.6" y="531.0" width="12.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,070 samples, 1.08%)</title><rect x="635.6" y="515.0" width="12.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,070 samples, 1.08%)</title><rect x="635.6" y="499.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,070 samples, 1.08%)</title><rect x="635.6" y="483.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,070 samples, 1.08%)</title><rect x="635.6" y="467.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,070 samples, 1.08%)</title><rect x="635.6" y="451.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (85 samples, 0.09%)</title><rect x="635.6" y="435.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (85 samples, 0.09%)</title><rect x="635.6" y="419.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.6" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (85 samples, 0.09%)</title><rect x="635.6" y="403.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="638.6" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (37 samples, 0.04%)</title><rect x="636.6" y="435.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="639.6" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (37 samples, 0.04%)</title><rect x="636.6" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="639.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1587365795.run (613 samples, 0.62%)</title><rect x="637.1" y="435.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (613 samples, 0.62%)</title><rect x="637.1" y="419.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (613 samples, 0.62%)</title><rect x="637.1" y="403.0" width="7.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (208 samples, 0.21%)</title><rect x="637.1" y="387.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="640.1" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (135 samples, 0.14%)</title><rect x="637.1" y="371.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.1" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (51 samples, 0.05%)</title><rect x="637.1" y="355.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.1" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (50 samples, 0.05%)</title><rect x="637.1" y="339.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="640.1" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (84 samples, 0.08%)</title><rect x="637.7" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.7" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (84 samples, 0.08%)</title><rect x="637.7" y="339.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="640.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (73 samples, 0.07%)</title><rect x="638.7" y="371.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (73 samples, 0.07%)</title><rect x="638.7" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (73 samples, 0.07%)</title><rect x="638.7" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (40 samples, 0.04%)</title><rect x="638.7" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (40 samples, 0.04%)</title><rect x="638.7" y="307.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="641.7" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (33 samples, 0.03%)</title><rect x="639.1" y="323.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (33 samples, 0.03%)</title><rect x="639.1" y="307.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.1" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (33 samples, 0.03%)</title><rect x="639.1" y="291.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.1" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (33 samples, 0.03%)</title><rect x="639.1" y="275.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="642.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (405 samples, 0.41%)</title><rect x="639.5" y="387.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (385 samples, 0.39%)</title><rect x="639.8" y="371.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (141 samples, 0.14%)</title><rect x="639.8" y="355.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.8" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.03%)</title><rect x="639.8" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (32 samples, 0.03%)</title><rect x="639.8" y="323.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (32 samples, 0.03%)</title><rect x="639.8" y="307.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (32 samples, 0.03%)</title><rect x="639.8" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (32 samples, 0.03%)</title><rect x="639.8" y="275.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.8" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (31 samples, 0.03%)</title><rect x="639.8" y="259.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="642.8" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (42 samples, 0.04%)</title><rect x="640.2" y="339.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="643.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (42 samples, 0.04%)</title><rect x="640.2" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.2" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (42 samples, 0.04%)</title><rect x="640.2" y="307.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (42 samples, 0.04%)</title><rect x="640.2" y="291.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="643.2" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (42 samples, 0.04%)</title><rect x="640.2" y="275.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.2" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (42 samples, 0.04%)</title><rect x="640.2" y="259.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="643.2" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (28 samples, 0.03%)</title><rect x="640.7" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (28 samples, 0.03%)</title><rect x="640.7" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.7" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (27 samples, 0.03%)</title><rect x="640.7" y="307.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="643.7" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (35 samples, 0.04%)</title><rect x="641.0" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="644.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (71 samples, 0.07%)</title><rect x="641.5" y="355.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.5" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (33 samples, 0.03%)</title><rect x="641.5" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.5" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (33 samples, 0.03%)</title><rect x="641.5" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (33 samples, 0.03%)</title><rect x="641.5" y="307.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.03%)</title><rect x="641.5" y="291.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="644.5" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (38 samples, 0.04%)</title><rect x="641.8" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (38 samples, 0.04%)</title><rect x="641.8" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (38 samples, 0.04%)</title><rect x="641.8" y="307.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="644.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (173 samples, 0.17%)</title><rect x="642.3" y="355.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.3" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (33 samples, 0.03%)</title><rect x="642.3" y="339.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="645.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (140 samples, 0.14%)</title><rect x="642.7" y="339.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (59 samples, 0.06%)</title><rect x="642.7" y="323.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (59 samples, 0.06%)</title><rect x="642.7" y="307.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="645.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (59 samples, 0.06%)</title><rect x="642.7" y="291.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="645.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (59 samples, 0.06%)</title><rect x="642.7" y="275.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="645.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (81 samples, 0.08%)</title><rect x="643.4" y="323.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="646.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (81 samples, 0.08%)</title><rect x="643.4" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="646.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (58 samples, 0.06%)</title><rect x="643.4" y="291.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="646.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (23 samples, 0.02%)</title><rect x="644.1" y="291.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (23 samples, 0.02%)</title><rect x="644.1" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="647.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (171 samples, 0.17%)</title><rect x="644.4" y="435.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (171 samples, 0.17%)</title><rect x="644.4" y="419.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="647.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (171 samples, 0.17%)</title><rect x="644.4" y="403.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (111 samples, 0.11%)</title><rect x="644.4" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (111 samples, 0.11%)</title><rect x="644.4" y="371.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (111 samples, 0.11%)</title><rect x="644.4" y="355.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (111 samples, 0.11%)</title><rect x="644.4" y="339.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$298/1703332006.accept (111 samples, 0.11%)</title><rect x="644.4" y="323.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="647.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (111 samples, 0.11%)</title><rect x="644.4" y="307.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (111 samples, 0.11%)</title><rect x="644.4" y="291.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (111 samples, 0.11%)</title><rect x="644.4" y="275.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="647.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (111 samples, 0.11%)</title><rect x="644.4" y="259.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="647.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$306/1679545311.apply (111 samples, 0.11%)</title><rect x="644.4" y="243.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="647.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (111 samples, 0.11%)</title><rect x="644.4" y="227.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (110 samples, 0.11%)</title><rect x="644.4" y="211.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="647.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (60 samples, 0.06%)</title><rect x="645.7" y="387.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.7" y="398.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.06%)</title><rect x="645.7" y="371.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="648.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (164 samples, 0.17%)</title><rect x="646.4" y="435.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="649.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (164 samples, 0.17%)</title><rect x="646.4" y="419.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="649.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (164 samples, 0.17%)</title><rect x="646.4" y="403.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="649.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (164 samples, 0.17%)</title><rect x="646.4" y="387.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.4" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (164 samples, 0.17%)</title><rect x="646.4" y="371.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="649.4" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (77 samples, 0.08%)</title><rect x="646.4" y="355.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="649.4" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.04%)</title><rect x="646.4" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="649.4" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (38 samples, 0.04%)</title><rect x="646.8" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.8" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (38 samples, 0.04%)</title><rect x="646.8" y="323.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="649.8" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (87 samples, 0.09%)</title><rect x="647.3" y="355.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (87 samples, 0.09%)</title><rect x="647.3" y="339.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="650.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (87 samples, 0.09%)</title><rect x="647.3" y="323.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="650.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (29 samples, 0.03%)</title><rect x="648.3" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="651.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (29 samples, 0.03%)</title><rect x="648.3" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (29 samples, 0.03%)</title><rect x="648.3" y="499.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="651.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (29 samples, 0.03%)</title><rect x="648.3" y="483.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="651.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (147 samples, 0.15%)</title><rect x="648.7" y="691.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (147 samples, 0.15%)</title><rect x="648.7" y="675.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (147 samples, 0.15%)</title><rect x="648.7" y="659.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (147 samples, 0.15%)</title><rect x="648.7" y="643.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="651.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (147 samples, 0.15%)</title><rect x="648.7" y="627.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (147 samples, 0.15%)</title><rect x="648.7" y="611.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (147 samples, 0.15%)</title><rect x="648.7" y="595.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="651.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (147 samples, 0.15%)</title><rect x="648.7" y="579.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (147 samples, 0.15%)</title><rect x="648.7" y="563.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="651.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (147 samples, 0.15%)</title><rect x="648.7" y="547.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (147 samples, 0.15%)</title><rect x="648.7" y="531.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="651.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (147 samples, 0.15%)</title><rect x="648.7" y="515.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="651.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (147 samples, 0.15%)</title><rect x="648.7" y="499.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (147 samples, 0.15%)</title><rect x="648.7" y="483.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (147 samples, 0.15%)</title><rect x="648.7" y="467.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (147 samples, 0.15%)</title><rect x="648.7" y="451.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (146 samples, 0.15%)</title><rect x="648.7" y="435.0" width="1.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="651.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (3,918 samples, 3.95%)</title><rect x="650.4" y="691.0" width="46.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="653.4" y="702.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (86 samples, 0.09%)</title><rect x="650.4" y="675.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (86 samples, 0.09%)</title><rect x="650.4" y="659.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$239/1594236632.get$Lambda (55 samples, 0.06%)</title><rect x="650.4" y="643.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$239 (53 samples, 0.05%)</title><rect x="650.4" y="627.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="653.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$243/728568398.get$Lambda (31 samples, 0.03%)</title><rect x="651.1" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$243 (31 samples, 0.03%)</title><rect x="651.1" y="627.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="654.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (92 samples, 0.09%)</title><rect x="651.4" y="675.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.09%)</title><rect x="651.4" y="659.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1196171815.get$Lambda (92 samples, 0.09%)</title><rect x="651.4" y="643.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.4" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$240 (91 samples, 0.09%)</title><rect x="651.4" y="627.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="654.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1,000 samples, 1.01%)</title><rect x="652.5" y="675.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$241/984556979.accept (830 samples, 0.84%)</title><rect x="652.5" y="659.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (830 samples, 0.84%)</title><rect x="652.5" y="643.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (830 samples, 0.84%)</title><rect x="652.5" y="627.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (830 samples, 0.84%)</title><rect x="652.5" y="611.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (830 samples, 0.84%)</title><rect x="652.5" y="595.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (830 samples, 0.84%)</title><rect x="652.5" y="579.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="655.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (830 samples, 0.84%)</title><rect x="652.5" y="563.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (830 samples, 0.84%)</title><rect x="652.5" y="547.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (830 samples, 0.84%)</title><rect x="652.5" y="531.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="655.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (830 samples, 0.84%)</title><rect x="652.5" y="515.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="655.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (830 samples, 0.84%)</title><rect x="652.5" y="499.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (830 samples, 0.84%)</title><rect x="652.5" y="483.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="655.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (201 samples, 0.20%)</title><rect x="652.5" y="467.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="655.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (201 samples, 0.20%)</title><rect x="652.5" y="451.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (201 samples, 0.20%)</title><rect x="652.5" y="435.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (98 samples, 0.10%)</title><rect x="652.5" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (98 samples, 0.10%)</title><rect x="652.5" y="403.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (98 samples, 0.10%)</title><rect x="652.5" y="387.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (98 samples, 0.10%)</title><rect x="652.5" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.5" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (98 samples, 0.10%)</title><rect x="652.5" y="355.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="655.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.10%)</title><rect x="653.7" y="419.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="656.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (103 samples, 0.10%)</title><rect x="653.7" y="403.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="656.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (103 samples, 0.10%)</title><rect x="653.7" y="387.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="656.7" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (103 samples, 0.10%)</title><rect x="653.7" y="371.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="656.7" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (103 samples, 0.10%)</title><rect x="653.7" y="355.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.7" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (103 samples, 0.10%)</title><rect x="653.7" y="339.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="656.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (80 samples, 0.08%)</title><rect x="655.1" y="467.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.08%)</title><rect x="655.1" y="451.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.08%)</title><rect x="655.1" y="435.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1595191274.get$Lambda (80 samples, 0.08%)</title><rect x="655.1" y="419.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (80 samples, 0.08%)</title><rect x="655.1" y="403.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="658.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (532 samples, 0.54%)</title><rect x="656.1" y="467.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="659.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (323 samples, 0.33%)</title><rect x="656.1" y="451.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.1" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (223 samples, 0.22%)</title><rect x="656.1" y="435.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.1" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (223 samples, 0.22%)</title><rect x="656.1" y="419.0" width="2.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="659.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (100 samples, 0.10%)</title><rect x="658.7" y="435.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (100 samples, 0.10%)</title><rect x="658.7" y="419.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.7" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (100 samples, 0.10%)</title><rect x="658.7" y="403.0" width="1.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="661.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (209 samples, 0.21%)</title><rect x="659.9" y="451.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$151/54997156.get (209 samples, 0.21%)</title><rect x="659.9" y="435.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (209 samples, 0.21%)</title><rect x="659.9" y="419.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (209 samples, 0.21%)</title><rect x="659.9" y="403.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (207 samples, 0.21%)</title><rect x="659.9" y="387.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.9" y="398.0"></text>
</g>
<g>
<title>byte[] (203 samples, 0.20%)</title><rect x="660.0" y="371.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="663.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$244/1747724333.accept (170 samples, 0.17%)</title><rect x="662.4" y="659.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="665.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (170 samples, 0.17%)</title><rect x="662.4" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="665.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$240/1196171815.run (170 samples, 0.17%)</title><rect x="662.4" y="627.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="665.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (170 samples, 0.17%)</title><rect x="662.4" y="611.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (170 samples, 0.17%)</title><rect x="662.4" y="595.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="665.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (170 samples, 0.17%)</title><rect x="662.4" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.4" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (170 samples, 0.17%)</title><rect x="662.4" y="563.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="665.4" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (170 samples, 0.17%)</title><rect x="662.4" y="547.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="665.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (197 samples, 0.20%)</title><rect x="664.4" y="675.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.4" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (197 samples, 0.20%)</title><rect x="664.4" y="659.0" width="2.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="667.4" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (193 samples, 0.19%)</title><rect x="666.8" y="675.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (98 samples, 0.10%)</title><rect x="666.8" y="659.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (98 samples, 0.10%)</title><rect x="666.8" y="643.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (98 samples, 0.10%)</title><rect x="666.8" y="627.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (98 samples, 0.10%)</title><rect x="666.8" y="611.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (98 samples, 0.10%)</title><rect x="666.8" y="595.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (98 samples, 0.10%)</title><rect x="666.8" y="579.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (96 samples, 0.10%)</title><rect x="666.8" y="563.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="669.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (95 samples, 0.10%)</title><rect x="667.9" y="659.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.9" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (93 samples, 0.09%)</title><rect x="667.9" y="643.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="670.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (580 samples, 0.58%)</title><rect x="669.1" y="675.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$161/1138953262.run (297 samples, 0.30%)</title><rect x="669.1" y="659.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (297 samples, 0.30%)</title><rect x="669.1" y="643.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="672.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (297 samples, 0.30%)</title><rect x="669.1" y="627.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (297 samples, 0.30%)</title><rect x="669.1" y="611.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (297 samples, 0.30%)</title><rect x="669.1" y="595.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (297 samples, 0.30%)</title><rect x="669.1" y="579.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$155/2002454873.run (297 samples, 0.30%)</title><rect x="669.1" y="563.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="672.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (297 samples, 0.30%)</title><rect x="669.1" y="547.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (293 samples, 0.30%)</title><rect x="669.1" y="531.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="672.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (293 samples, 0.30%)</title><rect x="669.1" y="515.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (198 samples, 0.20%)</title><rect x="669.1" y="499.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="672.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (198 samples, 0.20%)</title><rect x="669.1" y="483.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="672.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (198 samples, 0.20%)</title><rect x="669.1" y="467.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (139 samples, 0.14%)</title><rect x="669.1" y="451.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="672.1" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (139 samples, 0.14%)</title><rect x="669.1" y="435.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="672.1" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (139 samples, 0.14%)</title><rect x="669.1" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.1" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (139 samples, 0.14%)</title><rect x="669.1" y="403.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (139 samples, 0.14%)</title><rect x="669.1" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="672.1" y="398.0"></text>
</g>
<g>
<title>byte[] (138 samples, 0.14%)</title><rect x="669.1" y="371.0" width="1.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="672.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (59 samples, 0.06%)</title><rect x="670.7" y="451.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="673.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (59 samples, 0.06%)</title><rect x="670.7" y="435.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.06%)</title><rect x="670.7" y="419.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251/1595191274.get$Lambda (59 samples, 0.06%)</title><rect x="670.7" y="403.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="673.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$251 (59 samples, 0.06%)</title><rect x="670.7" y="387.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="673.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (95 samples, 0.10%)</title><rect x="671.4" y="499.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="674.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (95 samples, 0.10%)</title><rect x="671.4" y="483.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="674.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (95 samples, 0.10%)</title><rect x="671.4" y="467.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (95 samples, 0.10%)</title><rect x="671.4" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="674.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (95 samples, 0.10%)</title><rect x="671.4" y="435.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (95 samples, 0.10%)</title><rect x="671.4" y="419.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (95 samples, 0.10%)</title><rect x="671.4" y="403.0" width="1.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="674.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$165/1403403797.run (283 samples, 0.29%)</title><rect x="672.6" y="659.0" width="3.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="675.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (283 samples, 0.29%)</title><rect x="672.6" y="643.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="675.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.12%)</title><rect x="672.6" y="627.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="675.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.12%)</title><rect x="672.6" y="611.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$248/675189052.get$Lambda (115 samples, 0.12%)</title><rect x="672.6" y="595.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="675.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$248 (115 samples, 0.12%)</title><rect x="672.6" y="579.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="675.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (168 samples, 0.17%)</title><rect x="674.0" y="627.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="677.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (168 samples, 0.17%)</title><rect x="674.0" y="611.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (168 samples, 0.17%)</title><rect x="674.0" y="595.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (168 samples, 0.17%)</title><rect x="674.0" y="579.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="677.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (668 samples, 0.67%)</title><rect x="676.0" y="675.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.0" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (117 samples, 0.12%)</title><rect x="676.0" y="659.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.0" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (117 samples, 0.12%)</title><rect x="676.0" y="643.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (117 samples, 0.12%)</title><rect x="676.0" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (117 samples, 0.12%)</title><rect x="676.0" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="679.0" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (117 samples, 0.12%)</title><rect x="676.0" y="595.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="679.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (551 samples, 0.56%)</title><rect x="677.3" y="659.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (84 samples, 0.08%)</title><rect x="677.3" y="643.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (84 samples, 0.08%)</title><rect x="677.3" y="627.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="680.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$311/193299277.get$Lambda (84 samples, 0.08%)</title><rect x="677.3" y="611.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.3" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$311 (84 samples, 0.08%)</title><rect x="677.3" y="595.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="680.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (161 samples, 0.16%)</title><rect x="678.3" y="643.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="681.3" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (161 samples, 0.16%)</title><rect x="678.3" y="627.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="681.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (65 samples, 0.07%)</title><rect x="680.3" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="683.3" y="654.0"></text>
</g>
<g>
<title>java/util/Optional.of (65 samples, 0.07%)</title><rect x="680.3" y="627.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="683.3" y="638.0"></text>
</g>
<g>
<title>java.util.Optional (65 samples, 0.07%)</title><rect x="680.3" y="611.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="683.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (241 samples, 0.24%)</title><rect x="681.0" y="643.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="684.0" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (102 samples, 0.10%)</title><rect x="681.0" y="627.0" width="1.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="684.0" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (139 samples, 0.14%)</title><rect x="682.2" y="627.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="685.2" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (139 samples, 0.14%)</title><rect x="682.2" y="611.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.2" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (139 samples, 0.14%)</title><rect x="682.2" y="595.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="685.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (739 samples, 0.74%)</title><rect x="683.9" y="675.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="686.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (77 samples, 0.08%)</title><rect x="683.9" y="659.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (77 samples, 0.08%)</title><rect x="683.9" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$238/1989239292.get$Lambda (77 samples, 0.08%)</title><rect x="683.9" y="627.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.9" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$238 (75 samples, 0.08%)</title><rect x="683.9" y="611.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="686.9" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (400 samples, 0.40%)</title><rect x="684.8" y="659.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (166 samples, 0.17%)</title><rect x="684.8" y="643.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="687.8" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (164 samples, 0.17%)</title><rect x="684.8" y="627.0" width="2.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="687.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (234 samples, 0.24%)</title><rect x="686.8" y="643.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.8" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (232 samples, 0.23%)</title><rect x="686.8" y="627.0" width="2.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="689.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (262 samples, 0.26%)</title><rect x="689.6" y="659.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="692.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (260 samples, 0.26%)</title><rect x="689.6" y="643.0" width="3.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="692.6" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (199 samples, 0.20%)</title><rect x="692.7" y="675.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.7" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (199 samples, 0.20%)</title><rect x="692.7" y="659.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="695.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (199 samples, 0.20%)</title><rect x="692.7" y="643.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (199 samples, 0.20%)</title><rect x="692.7" y="627.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="695.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (69 samples, 0.07%)</title><rect x="692.7" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.7" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (69 samples, 0.07%)</title><rect x="692.7" y="595.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="695.7" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (130 samples, 0.13%)</title><rect x="693.5" y="611.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (130 samples, 0.13%)</title><rect x="693.5" y="595.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.5" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (130 samples, 0.13%)</title><rect x="693.5" y="579.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.5" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (130 samples, 0.13%)</title><rect x="693.5" y="563.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="696.5" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (130 samples, 0.13%)</title><rect x="693.5" y="547.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.5" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (130 samples, 0.13%)</title><rect x="693.5" y="531.0" width="1.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="696.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (67 samples, 0.07%)</title><rect x="695.0" y="675.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.0" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (67 samples, 0.07%)</title><rect x="695.0" y="659.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (67 samples, 0.07%)</title><rect x="695.0" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (67 samples, 0.07%)</title><rect x="695.0" y="627.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.0" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (61 samples, 0.06%)</title><rect x="695.0" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.0" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (61 samples, 0.06%)</title><rect x="695.0" y="595.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="698.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (97 samples, 0.10%)</title><rect x="695.8" y="675.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (97 samples, 0.10%)</title><rect x="695.8" y="659.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (97 samples, 0.10%)</title><rect x="695.8" y="643.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.8" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (97 samples, 0.10%)</title><rect x="695.8" y="627.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="698.8" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41,474 samples, 41.78%)</title><rect x="697.0" y="691.0" width="493.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="700.0" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (559 samples, 0.56%)</title><rect x="697.0" y="675.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.0" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (557 samples, 0.56%)</title><rect x="697.0" y="659.0" width="6.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="700.0" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (40,915 samples, 41.22%)</title><rect x="703.6" y="675.0" width="486.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.6" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40,915 samples, 41.22%)</title><rect x="703.6" y="659.0" width="486.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.6" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (40,915 samples, 41.22%)</title><rect x="703.6" y="643.0" width="486.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.6" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21,822 samples, 21.98%)</title><rect x="703.6" y="627.0" width="259.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.6" y="638.0">one/nio/http/HttpSession.handlePars..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21,822 samples, 21.98%)</title><rect x="703.6" y="611.0" width="259.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.6" y="622.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (19,744 samples, 19.89%)</title><rect x="703.6" y="595.0" width="234.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="706.6" y="606.0">RequestHandler1_entity.handleRe..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (227 samples, 0.23%)</title><rect x="703.6" y="579.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (227 samples, 0.23%)</title><rect x="703.6" y="563.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (227 samples, 0.23%)</title><rect x="703.6" y="547.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="706.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (227 samples, 0.23%)</title><rect x="703.6" y="531.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (50 samples, 0.05%)</title><rect x="703.6" y="515.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="706.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (170 samples, 0.17%)</title><rect x="704.3" y="515.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.3" y="526.0"></text>
</g>
<g>
<title>byte[] (164 samples, 0.17%)</title><rect x="704.3" y="499.0" width="2.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="707.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (19,517 samples, 19.66%)</title><rect x="706.3" y="579.0" width="232.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.3" y="590.0">ru/mail/polis/service/dariagap/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (931 samples, 0.94%)</title><rect x="706.3" y="563.0" width="11.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (931 samples, 0.94%)</title><rect x="706.3" y="547.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.3" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (931 samples, 0.94%)</title><rect x="706.3" y="531.0" width="11.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.3" y="542.0"></text>
</g>
<g>
<title>java.lang.String (318 samples, 0.32%)</title><rect x="706.3" y="515.0" width="3.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="709.3" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (608 samples, 0.61%)</title><rect x="710.2" y="515.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.2" y="526.0"></text>
</g>
<g>
<title>byte[] (603 samples, 0.61%)</title><rect x="710.2" y="499.0" width="7.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="713.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.sendResponseFromFuture (858 samples, 0.86%)</title><rect x="717.4" y="563.0" width="10.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.05%)</title><rect x="717.4" y="547.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.4" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.05%)</title><rect x="717.4" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="720.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$135/1213597865.get$Lambda (52 samples, 0.05%)</title><rect x="717.4" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.4" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$135 (47 samples, 0.05%)</title><rect x="717.4" y="499.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="720.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (806 samples, 0.81%)</title><rect x="718.0" y="547.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (806 samples, 0.81%)</title><rect x="718.0" y="531.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="721.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (667 samples, 0.67%)</title><rect x="718.0" y="515.0" width="8.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="721.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (133 samples, 0.13%)</title><rect x="726.0" y="515.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (129 samples, 0.13%)</title><rect x="726.0" y="499.0" width="1.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="729.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (2,785 samples, 2.81%)</title><rect x="727.6" y="563.0" width="33.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.6" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (2,785 samples, 2.81%)</title><rect x="727.6" y="547.0" width="33.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="730.6" y="558.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (325 samples, 0.33%)</title><rect x="727.6" y="531.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (325 samples, 0.33%)</title><rect x="727.6" y="515.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$315/52309652.get$Lambda (325 samples, 0.33%)</title><rect x="727.6" y="499.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.6" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$315 (321 samples, 0.32%)</title><rect x="727.6" y="483.0" width="3.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="730.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (2,460 samples, 2.48%)</title><rect x="731.5" y="531.0" width="29.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="734.5" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (2,460 samples, 2.48%)</title><rect x="731.5" y="515.0" width="29.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="734.5" y="526.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (1,807 samples, 1.82%)</title><rect x="731.5" y="499.0" width="21.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="734.5" y="510.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (641 samples, 0.65%)</title><rect x="753.0" y="499.0" width="7.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="756.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (14,943 samples, 15.05%)</title><rect x="760.7" y="563.0" width="177.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.7" y="574.0">ru/mail/polis/service/d..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (35 samples, 0.04%)</title><rect x="760.7" y="547.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="763.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (35 samples, 0.04%)</title><rect x="760.7" y="531.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="763.7" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$133/1145735160.get$Lambda (35 samples, 0.04%)</title><rect x="760.7" y="515.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="763.7" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.ClusterServiceImpl$$Lambda$133 (34 samples, 0.03%)</title><rect x="760.7" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="763.7" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (98 samples, 0.10%)</title><rect x="761.1" y="547.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (98 samples, 0.10%)</title><rect x="761.1" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.1" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (98 samples, 0.10%)</title><rect x="761.1" y="515.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="764.1" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (98 samples, 0.10%)</title><rect x="761.1" y="499.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.1" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (98 samples, 0.10%)</title><rect x="761.1" y="483.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (98 samples, 0.10%)</title><rect x="761.1" y="467.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="764.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (91 samples, 0.09%)</title><rect x="762.3" y="547.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="765.3" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (72 samples, 0.07%)</title><rect x="762.3" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="765.3" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (72 samples, 0.07%)</title><rect x="762.3" y="515.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="765.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (119 samples, 0.12%)</title><rect x="763.4" y="547.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="766.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (119 samples, 0.12%)</title><rect x="763.4" y="531.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (72 samples, 0.07%)</title><rect x="763.4" y="515.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="766.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (46 samples, 0.05%)</title><rect x="764.2" y="515.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.2" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (45 samples, 0.05%)</title><rect x="764.2" y="499.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="767.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (99 samples, 0.10%)</title><rect x="764.8" y="547.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="767.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (99 samples, 0.10%)</title><rect x="764.8" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="767.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (49 samples, 0.05%)</title><rect x="764.8" y="515.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="767.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (49 samples, 0.05%)</title><rect x="765.4" y="515.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (48 samples, 0.05%)</title><rect x="765.4" y="499.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="768.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (12,219 samples, 12.31%)</title><rect x="766.0" y="547.0" width="145.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="769.0" y="558.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.05%)</title><rect x="766.0" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.05%)</title><rect x="766.0" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$130/712231129.get$Lambda (54 samples, 0.05%)</title><rect x="766.0" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="769.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$130 (54 samples, 0.05%)</title><rect x="766.0" y="483.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="769.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (273 samples, 0.28%)</title><rect x="766.6" y="531.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="769.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (273 samples, 0.28%)</title><rect x="766.6" y="515.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (153 samples, 0.15%)</title><rect x="766.6" y="499.0" width="1.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="769.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.12%)</title><rect x="768.4" y="499.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (119 samples, 0.12%)</title><rect x="768.4" y="483.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (118 samples, 0.12%)</title><rect x="768.4" y="467.0" width="1.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="771.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (7,604 samples, 7.66%)</title><rect x="769.9" y="531.0" width="90.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="772.9" y="542.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,604 samples, 7.66%)</title><rect x="769.9" y="515.0" width="90.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.9" y="526.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,604 samples, 7.66%)</title><rect x="769.9" y="499.0" width="90.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.9" y="510.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (7,604 samples, 7.66%)</title><rect x="769.9" y="483.0" width="90.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.9" y="494.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (83 samples, 0.08%)</title><rect x="769.9" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (83 samples, 0.08%)</title><rect x="769.9" y="451.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$127/484048613.get$Lambda (83 samples, 0.08%)</title><rect x="769.9" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$127 (83 samples, 0.08%)</title><rect x="769.9" y="419.0" width="0.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="772.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (279 samples, 0.28%)</title><rect x="770.8" y="467.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (279 samples, 0.28%)</title><rect x="770.8" y="451.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="773.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (146 samples, 0.15%)</title><rect x="770.8" y="435.0" width="1.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="773.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (133 samples, 0.13%)</title><rect x="772.6" y="435.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="775.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (133 samples, 0.13%)</title><rect x="772.6" y="419.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (132 samples, 0.13%)</title><rect x="772.6" y="403.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="775.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (266 samples, 0.27%)</title><rect x="774.2" y="467.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="777.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (266 samples, 0.27%)</title><rect x="774.2" y="451.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="777.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (171 samples, 0.17%)</title><rect x="774.2" y="435.0" width="2.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="777.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.10%)</title><rect x="776.2" y="435.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (95 samples, 0.10%)</title><rect x="776.2" y="419.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (95 samples, 0.10%)</title><rect x="776.2" y="403.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="779.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (185 samples, 0.19%)</title><rect x="777.3" y="467.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="780.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (319 samples, 0.32%)</title><rect x="779.5" y="467.0" width="3.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="782.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (3,639 samples, 3.67%)</title><rect x="783.3" y="467.0" width="43.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="786.3" y="478.0">jdk/..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (387 samples, 0.39%)</title><rect x="783.3" y="451.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.3" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (294 samples, 0.30%)</title><rect x="783.3" y="435.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="786.3" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (99 samples, 0.10%)</title><rect x="783.3" y="419.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="786.3" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (98 samples, 0.10%)</title><rect x="783.3" y="403.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="786.3" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (195 samples, 0.20%)</title><rect x="784.5" y="419.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.5" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (193 samples, 0.19%)</title><rect x="784.5" y="403.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="787.5" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (93 samples, 0.09%)</title><rect x="786.8" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.8" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (93 samples, 0.09%)</title><rect x="786.8" y="419.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="789.8" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (93 samples, 0.09%)</title><rect x="786.8" y="403.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.8" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (93 samples, 0.09%)</title><rect x="786.8" y="387.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.8" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (92 samples, 0.09%)</title><rect x="786.8" y="371.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="789.8" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,483 samples, 1.49%)</title><rect x="787.9" y="451.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="790.9" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,483 samples, 1.49%)</title><rect x="787.9" y="435.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="790.9" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (57 samples, 0.06%)</title><rect x="787.9" y="419.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="790.9" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (66 samples, 0.07%)</title><rect x="788.6" y="419.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="791.6" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (163 samples, 0.16%)</title><rect x="789.4" y="419.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="792.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (57 samples, 0.06%)</title><rect x="791.4" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="794.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (132 samples, 0.13%)</title><rect x="792.0" y="419.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="795.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (132 samples, 0.13%)</title><rect x="792.0" y="403.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (132 samples, 0.13%)</title><rect x="792.0" y="387.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.0" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (130 samples, 0.13%)</title><rect x="792.0" y="371.0" width="1.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="795.0" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (713 samples, 0.72%)</title><rect x="793.6" y="419.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (713 samples, 0.72%)</title><rect x="793.6" y="403.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (713 samples, 0.72%)</title><rect x="793.6" y="387.0" width="8.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (713 samples, 0.72%)</title><rect x="793.6" y="371.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (331 samples, 0.33%)</title><rect x="793.6" y="355.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="796.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (201 samples, 0.20%)</title><rect x="793.6" y="339.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (201 samples, 0.20%)</title><rect x="793.6" y="323.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (201 samples, 0.20%)</title><rect x="793.6" y="307.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="796.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (201 samples, 0.20%)</title><rect x="793.6" y="291.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (201 samples, 0.20%)</title><rect x="793.6" y="275.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="796.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (201 samples, 0.20%)</title><rect x="793.6" y="259.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="796.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (201 samples, 0.20%)</title><rect x="793.6" y="243.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="796.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (200 samples, 0.20%)</title><rect x="793.6" y="227.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="796.6" y="238.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (130 samples, 0.13%)</title><rect x="796.0" y="339.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.0" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (128 samples, 0.13%)</title><rect x="796.0" y="323.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="799.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (80 samples, 0.08%)</title><rect x="797.6" y="355.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.6" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (80 samples, 0.08%)</title><rect x="797.6" y="339.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="800.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (80 samples, 0.08%)</title><rect x="797.6" y="323.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.6" y="334.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (79 samples, 0.08%)</title><rect x="797.6" y="307.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="800.6" y="318.0"></text>
</g>
<g>
<title>java/util/List.copyOf (149 samples, 0.15%)</title><rect x="798.5" y="355.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.5" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (149 samples, 0.15%)</title><rect x="798.5" y="339.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (83 samples, 0.08%)</title><rect x="798.5" y="323.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.5" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (83 samples, 0.08%)</title><rect x="798.5" y="307.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="801.5" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (83 samples, 0.08%)</title><rect x="798.5" y="291.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="801.5" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (66 samples, 0.07%)</title><rect x="799.5" y="323.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.5" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (65 samples, 0.07%)</title><rect x="799.5" y="307.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="802.5" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (153 samples, 0.15%)</title><rect x="800.3" y="355.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.3" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (153 samples, 0.15%)</title><rect x="800.3" y="339.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="803.3" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (118 samples, 0.12%)</title><rect x="802.1" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.1" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (117 samples, 0.12%)</title><rect x="802.1" y="403.0" width="1.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="805.1" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (174 samples, 0.18%)</title><rect x="803.5" y="419.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="806.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (172 samples, 0.17%)</title><rect x="803.5" y="403.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="806.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (74 samples, 0.07%)</title><rect x="805.6" y="451.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="808.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (1,159 samples, 1.17%)</title><rect x="806.4" y="451.0" width="13.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.4" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (1,159 samples, 1.17%)</title><rect x="806.4" y="435.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="809.4" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1,034 samples, 1.04%)</title><rect x="806.4" y="419.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.4" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,034 samples, 1.04%)</title><rect x="806.4" y="403.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="809.4" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (1,034 samples, 1.04%)</title><rect x="806.4" y="387.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="809.4" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (284 samples, 0.29%)</title><rect x="806.4" y="371.0" width="3.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="809.4" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (348 samples, 0.35%)</title><rect x="809.8" y="371.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.8" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (348 samples, 0.35%)</title><rect x="809.8" y="355.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.8" y="366.0"></text>
</g>
<g>
<title>byte[] (346 samples, 0.35%)</title><rect x="809.8" y="339.0" width="4.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="812.8" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (401 samples, 0.40%)</title><rect x="814.0" y="371.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.0" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (401 samples, 0.40%)</title><rect x="814.0" y="355.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="817.0" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (401 samples, 0.40%)</title><rect x="814.0" y="339.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="817.0" y="350.0"></text>
</g>
<g>
<title>byte[] (399 samples, 0.40%)</title><rect x="814.0" y="323.0" width="4.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="817.0" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (125 samples, 0.13%)</title><rect x="818.7" y="419.0" width="1.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="821.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (170 samples, 0.17%)</title><rect x="820.2" y="451.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (169 samples, 0.17%)</title><rect x="820.2" y="435.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="823.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (366 samples, 0.37%)</title><rect x="822.2" y="451.0" width="4.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="825.2" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (93 samples, 0.09%)</title><rect x="822.2" y="435.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="825.2" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (90 samples, 0.09%)</title><rect x="823.3" y="435.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="826.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (90 samples, 0.09%)</title><rect x="823.3" y="419.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="826.3" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (183 samples, 0.18%)</title><rect x="824.4" y="435.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="827.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (181 samples, 0.18%)</title><rect x="824.4" y="419.0" width="2.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="827.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,855 samples, 1.87%)</title><rect x="826.6" y="467.0" width="22.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.6" y="478.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (46 samples, 0.05%)</title><rect x="826.6" y="451.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="829.6" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (174 samples, 0.18%)</title><rect x="827.1" y="451.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="830.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$121/2034500691.apply (174 samples, 0.18%)</title><rect x="827.1" y="435.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (75 samples, 0.08%)</title><rect x="827.1" y="419.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="830.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (99 samples, 0.10%)</title><rect x="828.0" y="419.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (99 samples, 0.10%)</title><rect x="828.0" y="403.0" width="1.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="831.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (252 samples, 0.25%)</title><rect x="829.2" y="451.0" width="3.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="832.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (48 samples, 0.05%)</title><rect x="832.2" y="451.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (48 samples, 0.05%)</title><rect x="832.2" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="835.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (46 samples, 0.05%)</title><rect x="832.8" y="451.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.8" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (46 samples, 0.05%)</title><rect x="832.8" y="435.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.8" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (46 samples, 0.05%)</title><rect x="832.8" y="419.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.8" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (46 samples, 0.05%)</title><rect x="832.8" y="403.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="835.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (1,288 samples, 1.30%)</title><rect x="833.3" y="451.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1,288 samples, 1.30%)</title><rect x="833.3" y="435.0" width="15.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (123 samples, 0.12%)</title><rect x="833.3" y="419.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="836.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (109 samples, 0.11%)</title><rect x="834.8" y="419.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="837.8" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (115 samples, 0.12%)</title><rect x="836.1" y="419.0" width="1.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="839.1" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (570 samples, 0.57%)</title><rect x="837.5" y="419.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (570 samples, 0.57%)</title><rect x="837.5" y="403.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="840.5" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (570 samples, 0.57%)</title><rect x="837.5" y="387.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.5" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (570 samples, 0.57%)</title><rect x="837.5" y="371.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.5" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (568 samples, 0.57%)</title><rect x="837.5" y="355.0" width="6.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="840.5" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (194 samples, 0.20%)</title><rect x="844.3" y="419.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="847.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (194 samples, 0.20%)</title><rect x="844.3" y="403.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (48 samples, 0.05%)</title><rect x="844.3" y="387.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="847.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (47 samples, 0.05%)</title><rect x="844.3" y="371.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="847.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor9.newInstance (146 samples, 0.15%)</title><rect x="844.9" y="387.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (145 samples, 0.15%)</title><rect x="844.9" y="371.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="847.9" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (172 samples, 0.17%)</title><rect x="846.6" y="419.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.6" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (172 samples, 0.17%)</title><rect x="846.6" y="403.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="849.6" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (171 samples, 0.17%)</title><rect x="846.6" y="387.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="849.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (976 samples, 0.98%)</title><rect x="848.6" y="467.0" width="11.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (190 samples, 0.19%)</title><rect x="848.6" y="451.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.6" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (106 samples, 0.11%)</title><rect x="848.6" y="435.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="851.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (84 samples, 0.08%)</title><rect x="849.9" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (84 samples, 0.08%)</title><rect x="849.9" y="419.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="852.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (83 samples, 0.08%)</title><rect x="849.9" y="403.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="852.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (109 samples, 0.11%)</title><rect x="850.9" y="451.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="853.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (677 samples, 0.68%)</title><rect x="852.2" y="451.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="855.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.09%)</title><rect x="852.2" y="435.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.2" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.09%)</title><rect x="852.2" y="419.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$123/446946090.get$Lambda (36 samples, 0.04%)</title><rect x="852.2" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="855.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$123 (36 samples, 0.04%)</title><rect x="852.2" y="387.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="855.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$125/778048047.get$Lambda (57 samples, 0.06%)</title><rect x="852.6" y="403.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.6" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$125 (57 samples, 0.06%)</title><rect x="852.6" y="387.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="855.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (584 samples, 0.59%)</title><rect x="853.3" y="435.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.3" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (584 samples, 0.59%)</title><rect x="853.3" y="419.0" width="6.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="856.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (322 samples, 0.32%)</title><rect x="853.3" y="403.0" width="3.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="856.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.26%)</title><rect x="857.1" y="403.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (261 samples, 0.26%)</title><rect x="857.1" y="387.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (260 samples, 0.26%)</title><rect x="857.1" y="371.0" width="3.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="860.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (4,288 samples, 4.32%)</title><rect x="860.2" y="531.0" width="51.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="863.2" y="542.0">ru/ma..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (1,757 samples, 1.77%)</title><rect x="860.2" y="515.0" width="20.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (158 samples, 0.16%)</title><rect x="860.2" y="499.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="863.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (1,597 samples, 1.61%)</title><rect x="862.1" y="499.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="865.1" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,552 samples, 1.56%)</title><rect x="862.1" y="483.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="865.1" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,552 samples, 1.56%)</title><rect x="862.1" y="467.0" width="18.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="865.1" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (54 samples, 0.05%)</title><rect x="862.1" y="451.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="865.1" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (98 samples, 0.10%)</title><rect x="862.8" y="451.0" width="1.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="865.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (221 samples, 0.22%)</title><rect x="864.0" y="451.0" width="2.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="867.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (76 samples, 0.08%)</title><rect x="866.6" y="451.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="869.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (149 samples, 0.15%)</title><rect x="867.6" y="451.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (149 samples, 0.15%)</title><rect x="867.6" y="435.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.6" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.get$Lambda (149 samples, 0.15%)</title><rect x="867.6" y="419.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="870.6" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$114 (145 samples, 0.15%)</title><rect x="867.6" y="403.0" width="1.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="870.6" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (114 samples, 0.11%)</title><rect x="869.3" y="451.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="872.3" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (111 samples, 0.11%)</title><rect x="869.3" y="435.0" width="1.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="872.3" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (615 samples, 0.62%)</title><rect x="870.7" y="451.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$114/1680775973.accept (615 samples, 0.62%)</title><rect x="870.7" y="435.0" width="7.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="873.7" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (615 samples, 0.62%)</title><rect x="870.7" y="419.0" width="7.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.07%)</title><rect x="870.7" y="403.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="873.7" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.07%)</title><rect x="870.7" y="387.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="873.7" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.get$Lambda (73 samples, 0.07%)</title><rect x="870.7" y="371.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="873.7" y="382.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$117 (70 samples, 0.07%)</title><rect x="870.7" y="355.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="873.7" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (226 samples, 0.23%)</title><rect x="871.6" y="403.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/1823653737.accept (226 samples, 0.23%)</title><rect x="871.6" y="387.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (226 samples, 0.23%)</title><rect x="871.6" y="371.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="874.6" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (226 samples, 0.23%)</title><rect x="871.6" y="355.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="874.6" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (226 samples, 0.23%)</title><rect x="871.6" y="339.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.6" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (226 samples, 0.23%)</title><rect x="871.6" y="323.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (226 samples, 0.23%)</title><rect x="871.6" y="307.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="874.6" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (226 samples, 0.23%)</title><rect x="871.6" y="291.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.6" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (223 samples, 0.22%)</title><rect x="871.6" y="275.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="874.6" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (169 samples, 0.17%)</title><rect x="874.3" y="403.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.3" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (169 samples, 0.17%)</title><rect x="874.3" y="387.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (77 samples, 0.08%)</title><rect x="874.3" y="371.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.3" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (77 samples, 0.08%)</title><rect x="874.3" y="355.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="877.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (73 samples, 0.07%)</title><rect x="874.3" y="339.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="877.3" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (92 samples, 0.09%)</title><rect x="875.2" y="371.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="878.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (88 samples, 0.09%)</title><rect x="875.2" y="355.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="878.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (147 samples, 0.15%)</title><rect x="876.3" y="403.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.3" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (145 samples, 0.15%)</title><rect x="876.3" y="387.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="879.3" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (217 samples, 0.22%)</title><rect x="878.0" y="451.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.0" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (215 samples, 0.22%)</title><rect x="878.0" y="435.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="881.0" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (45 samples, 0.05%)</title><rect x="880.6" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.6" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (45 samples, 0.05%)</title><rect x="880.6" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.6" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (44 samples, 0.04%)</title><rect x="880.6" y="451.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="883.6" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (204 samples, 0.21%)</title><rect x="881.1" y="515.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="884.1" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (204 samples, 0.21%)</title><rect x="881.1" y="499.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.1" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (204 samples, 0.21%)</title><rect x="881.1" y="483.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="884.1" y="494.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.09%)</title><rect x="881.1" y="467.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="884.1" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (118 samples, 0.12%)</title><rect x="882.2" y="467.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.2" y="478.0"></text>
</g>
<g>
<title>byte[] (118 samples, 0.12%)</title><rect x="882.2" y="451.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="885.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (2,327 samples, 2.34%)</title><rect x="883.6" y="515.0" width="27.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.6" y="526.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (268 samples, 0.27%)</title><rect x="883.6" y="499.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (268 samples, 0.27%)</title><rect x="883.6" y="483.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="886.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (268 samples, 0.27%)</title><rect x="883.6" y="467.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="886.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (268 samples, 0.27%)</title><rect x="883.6" y="451.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (76 samples, 0.08%)</title><rect x="883.6" y="435.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="886.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (76 samples, 0.08%)</title><rect x="883.6" y="419.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="886.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (192 samples, 0.19%)</title><rect x="884.5" y="435.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (192 samples, 0.19%)</title><rect x="884.5" y="419.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.5" y="430.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.19%)</title><rect x="884.5" y="403.0" width="2.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="887.5" y="414.0"></text>
</g>
<g>
<title>java/net/URI.create (1,413 samples, 1.42%)</title><rect x="886.7" y="499.0" width="16.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="889.7" y="510.0"></text>
</g>
<g>
<title>java.net.URI (304 samples, 0.31%)</title><rect x="886.7" y="483.0" width="3.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="889.7" y="494.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (1,108 samples, 1.12%)</title><rect x="890.4" y="483.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.4" y="494.0"></text>
</g>
<g>
<title>java.net.URI$Parser (127 samples, 0.13%)</title><rect x="890.4" y="467.0" width="1.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="893.4" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (979 samples, 0.99%)</title><rect x="891.9" y="467.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.9" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (172 samples, 0.17%)</title><rect x="891.9" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.9" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (172 samples, 0.17%)</title><rect x="891.9" y="435.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.9" y="446.0"></text>
</g>
<g>
<title>java.lang.String (83 samples, 0.08%)</title><rect x="891.9" y="419.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="894.9" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (88 samples, 0.09%)</title><rect x="892.9" y="419.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="895.9" y="430.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.09%)</title><rect x="892.9" y="403.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="895.9" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (807 samples, 0.81%)</title><rect x="893.9" y="451.0" width="9.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (390 samples, 0.39%)</title><rect x="893.9" y="435.0" width="4.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="896.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (390 samples, 0.39%)</title><rect x="893.9" y="419.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (164 samples, 0.17%)</title><rect x="893.9" y="403.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="896.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (224 samples, 0.23%)</title><rect x="895.9" y="403.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.9" y="414.0"></text>
</g>
<g>
<title>byte[] (222 samples, 0.22%)</title><rect x="895.9" y="387.0" width="2.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="898.9" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (417 samples, 0.42%)</title><rect x="898.6" y="435.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.6" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (226 samples, 0.23%)</title><rect x="898.6" y="419.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="901.6" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (226 samples, 0.23%)</title><rect x="898.6" y="403.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.6" y="414.0"></text>
</g>
<g>
<title>java.lang.String (94 samples, 0.09%)</title><rect x="898.6" y="387.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="901.6" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (131 samples, 0.13%)</title><rect x="899.7" y="387.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.7" y="398.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.13%)</title><rect x="899.7" y="371.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="902.7" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (191 samples, 0.19%)</title><rect x="901.3" y="419.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.3" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (191 samples, 0.19%)</title><rect x="901.3" y="403.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="904.3" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (191 samples, 0.19%)</title><rect x="901.3" y="387.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (191 samples, 0.19%)</title><rect x="901.3" y="371.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="904.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String (81 samples, 0.08%)</title><rect x="901.3" y="355.0" width="0.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="904.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (109 samples, 0.11%)</title><rect x="902.2" y="355.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.2" y="366.0"></text>
</g>
<g>
<title>byte[] (108 samples, 0.11%)</title><rect x="902.2" y="339.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="905.2" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (333 samples, 0.34%)</title><rect x="903.5" y="499.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (113 samples, 0.11%)</title><rect x="903.5" y="483.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="906.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (219 samples, 0.22%)</title><rect x="904.9" y="483.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.9" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (62 samples, 0.06%)</title><rect x="904.9" y="467.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="907.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (156 samples, 0.16%)</title><rect x="905.6" y="467.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.6" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (153 samples, 0.15%)</title><rect x="905.6" y="451.0" width="1.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="908.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (313 samples, 0.32%)</title><rect x="907.5" y="499.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="910.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (313 samples, 0.32%)</title><rect x="907.5" y="483.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="910.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (313 samples, 0.32%)</title><rect x="907.5" y="467.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.5" y="478.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (313 samples, 0.32%)</title><rect x="907.5" y="451.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="910.5" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (151 samples, 0.15%)</title><rect x="907.5" y="435.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (149 samples, 0.15%)</title><rect x="907.5" y="419.0" width="1.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="910.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$112/1281322474.apply (162 samples, 0.16%)</title><rect x="909.3" y="435.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (162 samples, 0.16%)</title><rect x="909.3" y="419.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="912.3" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (76 samples, 0.08%)</title><rect x="909.3" y="403.0" width="0.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="912.3" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (83 samples, 0.08%)</title><rect x="910.2" y="403.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.2" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (80 samples, 0.08%)</title><rect x="910.2" y="387.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="913.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (121 samples, 0.12%)</title><rect x="911.2" y="547.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.2" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (121 samples, 0.12%)</title><rect x="911.2" y="531.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.2" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.03%)</title><rect x="911.2" y="515.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.2" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.03%)</title><rect x="911.2" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="914.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$315/52309652.get$Lambda (33 samples, 0.03%)</title><rect x="911.2" y="483.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="914.2" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$315 (33 samples, 0.03%)</title><rect x="911.2" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="914.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (88 samples, 0.09%)</title><rect x="911.6" y="515.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (88 samples, 0.09%)</title><rect x="911.6" y="499.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (42 samples, 0.04%)</title><rect x="911.6" y="483.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="914.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (43 samples, 0.04%)</title><rect x="912.1" y="483.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="915.1" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (699 samples, 0.70%)</title><rect x="912.7" y="547.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="915.7" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (40 samples, 0.04%)</title><rect x="912.7" y="531.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="915.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (38 samples, 0.04%)</title><rect x="913.1" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="916.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (67 samples, 0.07%)</title><rect x="913.6" y="531.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="916.6" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (485 samples, 0.49%)</title><rect x="914.4" y="531.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$131/220516475.accept (485 samples, 0.49%)</title><rect x="914.4" y="515.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.4" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (485 samples, 0.49%)</title><rect x="914.4" y="499.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (176 samples, 0.18%)</title><rect x="914.4" y="483.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.4" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (176 samples, 0.18%)</title><rect x="914.4" y="467.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$132/898800675.get$Lambda (176 samples, 0.18%)</title><rect x="914.4" y="451.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="917.4" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.Futures$$Lambda$132 (173 samples, 0.17%)</title><rect x="914.4" y="435.0" width="2.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="917.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (309 samples, 0.31%)</title><rect x="916.5" y="483.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (309 samples, 0.31%)</title><rect x="916.5" y="467.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (160 samples, 0.16%)</title><rect x="916.5" y="451.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="919.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (29 samples, 0.03%)</title><rect x="918.5" y="451.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (28 samples, 0.03%)</title><rect x="918.5" y="435.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="921.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.12%)</title><rect x="918.8" y="451.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.12%)</title><rect x="918.8" y="435.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (114 samples, 0.11%)</title><rect x="918.8" y="419.0" width="1.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="921.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (65 samples, 0.07%)</title><rect x="920.2" y="531.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="923.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.04%)</title><rect x="920.2" y="515.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="923.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (27 samples, 0.03%)</title><rect x="920.6" y="515.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="923.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (1,462 samples, 1.47%)</title><rect x="921.0" y="547.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.0" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (96 samples, 0.10%)</title><rect x="921.0" y="531.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="924.0" y="542.0"></text>
</g>
<g>
<title>java.util.HashSet (30 samples, 0.03%)</title><rect x="922.1" y="531.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="925.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (81 samples, 0.08%)</title><rect x="922.5" y="531.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.5" y="542.0"></text>
</g>
<g>
<title>java.lang.Integer (76 samples, 0.08%)</title><rect x="922.5" y="515.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="925.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (231 samples, 0.23%)</title><rect x="923.5" y="531.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="926.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (231 samples, 0.23%)</title><rect x="923.5" y="515.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (231 samples, 0.23%)</title><rect x="923.5" y="499.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (231 samples, 0.23%)</title><rect x="923.5" y="483.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="926.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (231 samples, 0.23%)</title><rect x="923.5" y="467.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.5" y="478.0"></text>
</g>
<g>
<title>byte[] (226 samples, 0.23%)</title><rect x="923.5" y="451.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="926.5" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (159 samples, 0.16%)</title><rect x="926.2" y="531.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="929.2" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.06%)</title><rect x="926.2" y="515.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="929.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (97 samples, 0.10%)</title><rect x="927.0" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.0" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (94 samples, 0.09%)</title><rect x="927.0" y="499.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="930.0" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (32 samples, 0.03%)</title><rect x="928.1" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.1" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (30 samples, 0.03%)</title><rect x="928.1" y="515.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="931.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (305 samples, 0.31%)</title><rect x="928.5" y="531.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.5" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (305 samples, 0.31%)</title><rect x="928.5" y="515.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (157 samples, 0.16%)</title><rect x="928.5" y="499.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="931.5" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (152 samples, 0.15%)</title><rect x="928.5" y="483.0" width="1.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="931.5" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (148 samples, 0.15%)</title><rect x="930.4" y="499.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="933.4" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (147 samples, 0.15%)</title><rect x="930.4" y="483.0" width="1.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="933.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (104 samples, 0.10%)</title><rect x="932.1" y="531.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.1" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (103 samples, 0.10%)</title><rect x="932.1" y="515.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="935.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (333 samples, 0.34%)</title><rect x="933.3" y="531.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="936.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (333 samples, 0.34%)</title><rect x="933.3" y="515.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="936.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (333 samples, 0.34%)</title><rect x="933.3" y="499.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.3" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (164 samples, 0.17%)</title><rect x="933.3" y="483.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="936.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (161 samples, 0.16%)</title><rect x="933.3" y="467.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="936.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (169 samples, 0.17%)</title><rect x="935.3" y="483.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="938.3" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (167 samples, 0.17%)</title><rect x="935.3" y="467.0" width="2.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="938.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (87 samples, 0.09%)</title><rect x="937.3" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (87 samples, 0.09%)</title><rect x="937.3" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.3" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (86 samples, 0.09%)</title><rect x="937.3" y="499.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="940.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,078 samples, 2.09%)</title><rect x="938.3" y="595.0" width="24.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="941.3" y="606.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,078 samples, 2.09%)</title><rect x="938.3" y="579.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="941.3" y="590.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,078 samples, 2.09%)</title><rect x="938.3" y="563.0" width="24.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="941.3" y="574.0">j..</text>
</g>
<g>
<title>java.lang.String (1,595 samples, 1.61%)</title><rect x="938.3" y="547.0" width="19.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="941.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (474 samples, 0.48%)</title><rect x="957.4" y="547.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.4" y="558.0"></text>
</g>
<g>
<title>byte[] (467 samples, 0.47%)</title><rect x="957.4" y="531.0" width="5.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="960.4" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6,490 samples, 6.54%)</title><rect x="963.0" y="627.0" width="77.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="966.0" y="638.0">one/nio/h..</text>
</g>
<g>
<title>one.nio.http.Request (828 samples, 0.83%)</title><rect x="963.0" y="611.0" width="9.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="966.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2,159 samples, 2.17%)</title><rect x="973.0" y="611.0" width="25.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.0" y="622.0">o..</text>
</g>
<g>
<title>java.lang.String[] (869 samples, 0.88%)</title><rect x="973.0" y="595.0" width="10.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="976.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String[] (1,290 samples, 1.30%)</title><rect x="983.3" y="595.0" width="15.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="986.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,496 samples, 3.52%)</title><rect x="998.6" y="611.0" width="41.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1001.6" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (3,496 samples, 3.52%)</title><rect x="998.6" y="595.0" width="41.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1001.6" y="606.0">one..</text>
</g>
<g>
<title>char[] (878 samples, 0.88%)</title><rect x="998.6" y="579.0" width="10.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1001.6" y="590.0"></text>
</g>
<g>
<title>java.lang.String (775 samples, 0.78%)</title><rect x="1009.1" y="579.0" width="9.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1012.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,835 samples, 1.85%)</title><rect x="1018.4" y="579.0" width="21.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.4" y="590.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,835 samples, 1.85%)</title><rect x="1018.4" y="563.0" width="21.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1021.4" y="574.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,835 samples, 1.85%)</title><rect x="1018.4" y="547.0" width="21.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1021.4" y="558.0">j..</text>
</g>
<g>
<title>byte[] (1,829 samples, 1.84%)</title><rect x="1018.4" y="531.0" width="21.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1021.4" y="542.0">b..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (617 samples, 0.62%)</title><rect x="1040.3" y="627.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1043.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (617 samples, 0.62%)</title><rect x="1040.3" y="611.0" width="7.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (617 samples, 0.62%)</title><rect x="1040.3" y="595.0" width="7.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1043.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String (369 samples, 0.37%)</title><rect x="1040.3" y="579.0" width="4.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1043.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (242 samples, 0.24%)</title><rect x="1044.7" y="579.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1047.7" y="590.0"></text>
</g>
<g>
<title>byte[] (236 samples, 0.24%)</title><rect x="1044.7" y="563.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1047.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,979 samples, 12.07%)</title><rect x="1047.6" y="627.0" width="142.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1050.6" y="638.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11,979 samples, 12.07%)</title><rect x="1047.6" y="611.0" width="142.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1050.6" y="622.0">one/nio/util/Utf8...</text>
</g>
<g>
<title>char[] (1,965 samples, 1.98%)</title><rect x="1047.6" y="595.0" width="23.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1050.6" y="606.0">c..</text>
</g>
<g>
<title>char[] (984 samples, 0.99%)</title><rect x="1071.0" y="595.0" width="11.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1074.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (4,687 samples, 4.72%)</title><rect x="1082.7" y="595.0" width="55.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1085.7" y="606.0">java...</text>
</g>
<g>
<title>java.lang.String (26 samples, 0.03%)</title><rect x="1138.4" y="595.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1141.4" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,317 samples, 4.35%)</title><rect x="1138.7" y="595.0" width="51.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1141.7" y="606.0">java/..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4,317 samples, 4.35%)</title><rect x="1138.7" y="579.0" width="51.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1141.7" y="590.0">java/..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4,317 samples, 4.35%)</title><rect x="1138.7" y="563.0" width="51.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1141.7" y="574.0">java/..</text>
</g>
<g>
<title>byte[] (4,057 samples, 4.09%)</title><rect x="1138.7" y="547.0" width="48.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1141.7" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (260 samples, 0.26%)</title><rect x="1186.9" y="547.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1189.9" y="558.0"></text>
</g>
</g>
</svg>
