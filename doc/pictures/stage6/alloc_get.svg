<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (33,662 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (18,594 samples, 55.24%)</title><rect x="10.0" y="691.0" width="651.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18,594 samples, 55.24%)</title><rect x="10.0" y="675.0" width="651.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18,594 samples, 55.24%)</title><rect x="10.0" y="659.0" width="651.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12,710 samples, 37.76%)</title><rect x="10.0" y="643.0" width="445.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/CompletableFuture$AsyncSupply.run</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4,020 samples, 11.94%)</title><rect x="10.0" y="627.0" width="140.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util/concurre..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (2,395 samples, 7.11%)</title><rect x="10.0" y="611.0" width="84.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (14 samples, 0.04%)</title><rect x="10.0" y="595.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.apply (2,378 samples, 7.06%)</title><rect x="10.5" y="595.0" width="83.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.5" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (2,378 samples, 7.06%)</title><rect x="10.5" y="579.0" width="83.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.5" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (2,378 samples, 7.06%)</title><rect x="10.5" y="563.0" width="83.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.5" y="574.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.06%)</title><rect x="10.5" y="547.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.06%)</title><rect x="10.5" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.get$Lambda (12 samples, 0.04%)</title><rect x="10.5" y="515.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$243 (12 samples, 0.04%)</title><rect x="10.5" y="499.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="13.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.get$Lambda (9 samples, 0.03%)</title><rect x="10.9" y="515.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.9" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$245 (9 samples, 0.03%)</title><rect x="10.9" y="499.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (43 samples, 0.13%)</title><rect x="11.2" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (43 samples, 0.13%)</title><rect x="11.2" y="531.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="14.2" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (18 samples, 0.05%)</title><rect x="11.2" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="14.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.07%)</title><rect x="11.9" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.07%)</title><rect x="11.9" y="499.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="14.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.07%)</title><rect x="11.9" y="483.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="14.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (54 samples, 0.16%)</title><rect x="12.7" y="547.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (54 samples, 0.16%)</title><rect x="12.7" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (35 samples, 0.10%)</title><rect x="12.7" y="515.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="15.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="14.0" y="515.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.06%)</title><rect x="14.0" y="499.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.0" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.06%)</title><rect x="14.0" y="483.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (2,190 samples, 6.51%)</title><rect x="14.6" y="547.0" width="76.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.6" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (2,190 samples, 6.51%)</title><rect x="14.6" y="531.0" width="76.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.6" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (2,190 samples, 6.51%)</title><rect x="14.6" y="515.0" width="76.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.6" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.10%)</title><rect x="14.6" y="499.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.10%)</title><rect x="14.6" y="483.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="17.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.get$Lambda (8 samples, 0.02%)</title><rect x="14.6" y="467.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$140 (8 samples, 0.02%)</title><rect x="14.6" y="451.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.get$Lambda (16 samples, 0.05%)</title><rect x="14.9" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="17.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$143 (16 samples, 0.05%)</title><rect x="14.9" y="451.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.get$Lambda (9 samples, 0.03%)</title><rect x="15.5" y="467.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$210 (9 samples, 0.03%)</title><rect x="15.5" y="451.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="18.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1,492 samples, 4.43%)</title><rect x="15.8" y="499.0" width="52.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="18.8" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1,492 samples, 4.43%)</title><rect x="15.8" y="483.0" width="52.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.8" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,474 samples, 4.38%)</title><rect x="15.8" y="467.0" width="51.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.8" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$210/189770627.apply (1,474 samples, 4.38%)</title><rect x="15.8" y="451.0" width="51.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="18.8" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (1,474 samples, 4.38%)</title><rect x="15.8" y="435.0" width="51.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.8" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1,474 samples, 4.38%)</title><rect x="15.8" y="419.0" width="51.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="18.8" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/534757384.apply (1,474 samples, 4.38%)</title><rect x="15.8" y="403.0" width="51.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="18.8" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1,474 samples, 4.38%)</title><rect x="15.8" y="387.0" width="51.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.8" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (27 samples, 0.08%)</title><rect x="16.0" y="371.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (27 samples, 0.08%)</title><rect x="16.0" y="355.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (12 samples, 0.04%)</title><rect x="16.0" y="339.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="19.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="16.5" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="16.5" y="323.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="16.5" y="307.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (28 samples, 0.08%)</title><rect x="16.9" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="19.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (28 samples, 0.08%)</title><rect x="16.9" y="355.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (22 samples, 0.07%)</title><rect x="16.9" y="339.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="19.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (1,414 samples, 4.20%)</title><rect x="17.9" y="371.0" width="49.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="20.9" y="382.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="17.9" y="355.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="17.9" y="339.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.get$Lambda (8 samples, 0.02%)</title><rect x="17.9" y="323.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$236 (8 samples, 0.02%)</title><rect x="17.9" y="307.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="20.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,152 samples, 3.42%)</title><rect x="18.3" y="355.0" width="40.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.3" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,152 samples, 3.42%)</title><rect x="18.3" y="339.0" width="40.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.3" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (20 samples, 0.06%)</title><rect x="18.3" y="323.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="21.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1008111853.apply (1,094 samples, 3.25%)</title><rect x="19.0" y="323.0" width="38.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.0" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,094 samples, 3.25%)</title><rect x="19.0" y="307.0" width="38.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="22.0" y="318.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (9 samples, 0.03%)</title><rect x="19.0" y="291.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (9 samples, 0.03%)</title><rect x="19.0" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$253/1433982907.get$Lambda (9 samples, 0.03%)</title><rect x="19.0" y="259.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="22.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$253 (9 samples, 0.03%)</title><rect x="19.0" y="243.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="22.0" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (23 samples, 0.07%)</title><rect x="19.4" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="22.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (23 samples, 0.07%)</title><rect x="19.4" y="275.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (15 samples, 0.04%)</title><rect x="19.4" y="259.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="22.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.02%)</title><rect x="19.9" y="259.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="22.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (8 samples, 0.02%)</title><rect x="19.9" y="243.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (8 samples, 0.02%)</title><rect x="19.9" y="227.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="22.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="20.2" y="291.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="23.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (22 samples, 0.07%)</title><rect x="20.6" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (8 samples, 0.02%)</title><rect x="20.6" y="275.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="23.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.04%)</title><rect x="20.9" y="275.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (14 samples, 0.04%)</title><rect x="20.9" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (14 samples, 0.04%)</title><rect x="20.9" y="243.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (14 samples, 0.04%)</title><rect x="20.9" y="227.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.9" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (14 samples, 0.04%)</title><rect x="20.9" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.9" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (14 samples, 0.04%)</title><rect x="20.9" y="195.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="23.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (39 samples, 0.12%)</title><rect x="21.4" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (39 samples, 0.12%)</title><rect x="21.4" y="275.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (14 samples, 0.04%)</title><rect x="21.4" y="259.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="24.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (14 samples, 0.04%)</title><rect x="21.4" y="243.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="24.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (14 samples, 0.04%)</title><rect x="21.4" y="227.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (14 samples, 0.04%)</title><rect x="21.4" y="211.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="24.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (25 samples, 0.07%)</title><rect x="21.9" y="259.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (25 samples, 0.07%)</title><rect x="21.9" y="243.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.9" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (15 samples, 0.04%)</title><rect x="21.9" y="227.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="24.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (10 samples, 0.03%)</title><rect x="22.4" y="227.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.4" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (10 samples, 0.03%)</title><rect x="22.4" y="211.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="25.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (988 samples, 2.94%)</title><rect x="22.8" y="291.0" width="34.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.8" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (15 samples, 0.04%)</title><rect x="22.8" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="25.8" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (72 samples, 0.21%)</title><rect x="23.3" y="275.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="26.3" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (72 samples, 0.21%)</title><rect x="23.3" y="259.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="26.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (72 samples, 0.21%)</title><rect x="23.3" y="243.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.3" y="254.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.21%)</title><rect x="23.3" y="227.0" width="2.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="26.3" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (35 samples, 0.10%)</title><rect x="25.8" y="275.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.8" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (35 samples, 0.10%)</title><rect x="25.8" y="259.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.8" y="270.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.10%)</title><rect x="25.8" y="243.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="28.8" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (72 samples, 0.21%)</title><rect x="27.0" y="275.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.0" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (72 samples, 0.21%)</title><rect x="27.0" y="259.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (72 samples, 0.21%)</title><rect x="27.0" y="243.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.0" y="254.0"></text>
</g>
<g>
<title>byte[] (72 samples, 0.21%)</title><rect x="27.0" y="227.0" width="2.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="30.0" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.07%)</title><rect x="29.6" y="275.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.6" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (23 samples, 0.07%)</title><rect x="29.6" y="259.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.6" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (23 samples, 0.07%)</title><rect x="29.6" y="243.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="32.6" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (16 samples, 0.05%)</title><rect x="30.4" y="275.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="33.4" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (16 samples, 0.05%)</title><rect x="30.4" y="259.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="33.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (594 samples, 1.76%)</title><rect x="30.9" y="275.0" width="20.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.9" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (12 samples, 0.04%)</title><rect x="30.9" y="259.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="30.9" y="243.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="30.9" y="227.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.9" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/792662632.get$Lambda (12 samples, 0.04%)</title><rect x="30.9" y="211.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.9" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$255 (12 samples, 0.04%)</title><rect x="30.9" y="195.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="33.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (320 samples, 0.95%)</title><rect x="31.3" y="259.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (191 samples, 0.57%)</title><rect x="31.3" y="243.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.3" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (191 samples, 0.57%)</title><rect x="31.3" y="227.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.3" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (191 samples, 0.57%)</title><rect x="31.3" y="211.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.3" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (191 samples, 0.57%)</title><rect x="31.3" y="195.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="34.3" y="206.0"></text>
</g>
<g>
<title>byte[] (191 samples, 0.57%)</title><rect x="31.3" y="179.0" width="6.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="34.3" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (24 samples, 0.07%)</title><rect x="38.0" y="243.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.0" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (24 samples, 0.07%)</title><rect x="38.0" y="227.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="41.0" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (24 samples, 0.07%)</title><rect x="38.0" y="211.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.0" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (24 samples, 0.07%)</title><rect x="38.0" y="195.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="41.0" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (25 samples, 0.07%)</title><rect x="38.9" y="243.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.9" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (14 samples, 0.04%)</title><rect x="38.9" y="227.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="41.9" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (11 samples, 0.03%)</title><rect x="39.4" y="227.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.4" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (11 samples, 0.03%)</title><rect x="39.4" y="211.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="42.4" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$255/792662632.test (80 samples, 0.24%)</title><rect x="39.8" y="243.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.8" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (80 samples, 0.24%)</title><rect x="39.8" y="227.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$82/1127224355.test (80 samples, 0.24%)</title><rect x="39.8" y="211.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (80 samples, 0.24%)</title><rect x="39.8" y="195.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.8" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$71/416153648.test (80 samples, 0.24%)</title><rect x="39.8" y="179.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.8" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (80 samples, 0.24%)</title><rect x="39.8" y="163.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="42.8" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$70/815674463.test (80 samples, 0.24%)</title><rect x="39.8" y="147.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (80 samples, 0.24%)</title><rect x="39.8" y="131.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="42.8" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (80 samples, 0.24%)</title><rect x="39.8" y="115.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="42.8" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (80 samples, 0.24%)</title><rect x="39.8" y="99.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.8" y="110.0"></text>
</g>
<g>
<title>java.lang.String (41 samples, 0.12%)</title><rect x="39.8" y="83.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="42.8" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.12%)</title><rect x="41.2" y="83.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="44.2" y="94.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.12%)</title><rect x="41.2" y="67.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="44.2" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (262 samples, 0.78%)</title><rect x="42.6" y="259.0" width="9.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.6" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (262 samples, 0.78%)</title><rect x="42.6" y="243.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.6" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (262 samples, 0.78%)</title><rect x="42.6" y="227.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.6" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (8 samples, 0.02%)</title><rect x="42.6" y="211.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="45.6" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (13 samples, 0.04%)</title><rect x="42.8" y="211.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="45.8" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.07%)</title><rect x="43.3" y="211.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="46.3" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (11 samples, 0.03%)</title><rect x="44.1" y="211.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="47.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="44.5" y="211.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="44.5" y="195.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.5" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (8 samples, 0.02%)</title><rect x="44.5" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="47.5" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (8 samples, 0.02%)</title><rect x="44.5" y="163.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="47.5" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (15 samples, 0.04%)</title><rect x="44.8" y="211.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (15 samples, 0.04%)</title><rect x="44.8" y="195.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="47.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (160 samples, 0.48%)</title><rect x="45.3" y="211.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.3" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (160 samples, 0.48%)</title><rect x="45.3" y="195.0" width="5.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="48.3" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (160 samples, 0.48%)</title><rect x="45.3" y="179.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="48.3" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (26 samples, 0.08%)</title><rect x="45.3" y="163.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.3" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (26 samples, 0.08%)</title><rect x="45.3" y="147.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.3" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (26 samples, 0.08%)</title><rect x="45.3" y="131.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.3" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="45.3" y="115.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.3" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="45.3" y="99.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.3" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="45.3" y="83.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.3" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="45.3" y="67.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.3" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.08%)</title><rect x="45.3" y="51.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.3" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="45.3" y="35.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="48.3" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (67 samples, 0.20%)</title><rect x="46.2" y="163.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.2" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (67 samples, 0.20%)</title><rect x="46.2" y="147.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.2" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (35 samples, 0.10%)</title><rect x="46.2" y="131.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.2" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.10%)</title><rect x="46.2" y="115.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.2" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.10%)</title><rect x="46.2" y="99.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="49.2" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (32 samples, 0.10%)</title><rect x="47.4" y="131.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="50.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (32 samples, 0.10%)</title><rect x="47.4" y="115.0" width="1.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="50.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (67 samples, 0.20%)</title><rect x="48.6" y="163.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="51.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (67 samples, 0.20%)</title><rect x="48.6" y="147.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="51.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (24 samples, 0.07%)</title><rect x="50.9" y="211.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.9" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (24 samples, 0.07%)</title><rect x="50.9" y="195.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="53.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (34 samples, 0.10%)</title><rect x="51.7" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.7" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (13 samples, 0.04%)</title><rect x="51.7" y="259.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.7" y="270.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="51.7" y="243.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="54.7" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.06%)</title><rect x="52.2" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.2" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (21 samples, 0.06%)</title><rect x="52.2" y="243.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.2" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (21 samples, 0.06%)</title><rect x="52.2" y="227.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.2" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.06%)</title><rect x="52.2" y="211.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.2" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.03%)</title><rect x="52.2" y="195.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="55.2" y="206.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="52.2" y="179.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="55.2" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (10 samples, 0.03%)</title><rect x="52.6" y="195.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (10 samples, 0.03%)</title><rect x="52.6" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.6" y="190.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="52.6" y="163.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="55.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (17 samples, 0.05%)</title><rect x="52.9" y="275.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (17 samples, 0.05%)</title><rect x="52.9" y="259.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.9" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.05%)</title><rect x="52.9" y="243.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.9" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (17 samples, 0.05%)</title><rect x="52.9" y="227.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.9" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (17 samples, 0.05%)</title><rect x="52.9" y="211.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="55.9" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.05%)</title><rect x="52.9" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (17 samples, 0.05%)</title><rect x="52.9" y="179.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.9" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (17 samples, 0.05%)</title><rect x="52.9" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.9" y="174.0"></text>
</g>
<g>
<title>byte[] (17 samples, 0.05%)</title><rect x="52.9" y="147.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="55.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (110 samples, 0.33%)</title><rect x="53.5" y="275.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="56.5" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (27 samples, 0.08%)</title><rect x="53.5" y="259.0" width="1.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="56.5" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (29 samples, 0.09%)</title><rect x="54.5" y="259.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.5" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.09%)</title><rect x="54.5" y="243.0" width="1.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="57.5" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (54 samples, 0.16%)</title><rect x="55.5" y="259.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="58.5" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (54 samples, 0.16%)</title><rect x="55.5" y="243.0" width="1.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="58.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.11%)</title><rect x="57.4" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="60.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (38 samples, 0.11%)</title><rect x="57.4" y="307.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (38 samples, 0.11%)</title><rect x="57.4" y="291.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="60.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (48 samples, 0.14%)</title><rect x="58.7" y="355.0" width="1.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="61.7" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="60.4" y="355.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="63.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (184 samples, 0.55%)</title><rect x="61.0" y="355.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.0" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.07%)</title><rect x="61.0" y="339.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.07%)</title><rect x="61.0" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="64.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$214/952689076.get$Lambda (11 samples, 0.03%)</title><rect x="61.0" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.0" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$214 (11 samples, 0.03%)</title><rect x="61.0" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="64.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$215/1791198728.get$Lambda (12 samples, 0.04%)</title><rect x="61.4" y="307.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$215 (12 samples, 0.04%)</title><rect x="61.4" y="291.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="64.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (17 samples, 0.05%)</title><rect x="61.8" y="339.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="64.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (16 samples, 0.05%)</title><rect x="62.4" y="339.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="65.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (23 samples, 0.07%)</title><rect x="63.0" y="339.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="66.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (56 samples, 0.17%)</title><rect x="63.8" y="339.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="66.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.17%)</title><rect x="63.8" y="323.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (56 samples, 0.17%)</title><rect x="63.8" y="307.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="66.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (56 samples, 0.17%)</title><rect x="63.8" y="291.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (56 samples, 0.17%)</title><rect x="63.8" y="275.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="66.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (56 samples, 0.17%)</title><rect x="63.8" y="259.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="66.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (56 samples, 0.17%)</title><rect x="63.8" y="243.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (56 samples, 0.17%)</title><rect x="63.8" y="227.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="66.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (56 samples, 0.17%)</title><rect x="63.8" y="211.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.08%)</title><rect x="63.8" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.08%)</title><rect x="63.8" y="179.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1348959580.get$Lambda (12 samples, 0.04%)</title><rect x="63.8" y="163.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.8" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$216 (12 samples, 0.04%)</title><rect x="63.8" y="147.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="66.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$220/1029944311.get$Lambda (15 samples, 0.04%)</title><rect x="64.2" y="163.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$220 (15 samples, 0.04%)</title><rect x="64.2" y="147.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="67.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (17 samples, 0.05%)</title><rect x="64.7" y="195.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="67.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (12 samples, 0.04%)</title><rect x="65.3" y="195.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.3" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (12 samples, 0.04%)</title><rect x="65.3" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="68.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (8 samples, 0.02%)</title><rect x="65.5" y="163.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.5" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (8 samples, 0.02%)</title><rect x="65.5" y="147.0" width="0.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="68.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (37 samples, 0.11%)</title><rect x="65.7" y="339.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.7" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (11 samples, 0.03%)</title><rect x="65.7" y="323.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="68.7" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (17 samples, 0.05%)</title><rect x="66.1" y="323.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="69.1" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (9 samples, 0.03%)</title><rect x="66.7" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.7" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (9 samples, 0.03%)</title><rect x="66.7" y="307.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.7" y="318.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="66.7" y="291.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="69.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (12 samples, 0.04%)</title><rect x="67.0" y="339.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="67.0" y="323.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="70.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.05%)</title><rect x="67.5" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.05%)</title><rect x="67.5" y="451.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.05%)</title><rect x="67.5" y="435.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="70.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (28 samples, 0.08%)</title><rect x="68.1" y="499.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (28 samples, 0.08%)</title><rect x="68.1" y="483.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.1" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (21 samples, 0.06%)</title><rect x="68.1" y="467.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="71.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (637 samples, 1.89%)</title><rect x="69.1" y="499.0" width="22.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.1" y="510.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="69.1" y="483.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="69.1" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$205/1480893218.get$Lambda (9 samples, 0.03%)</title><rect x="69.1" y="451.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$205 (9 samples, 0.03%)</title><rect x="69.1" y="435.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="72.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (50 samples, 0.15%)</title><rect x="69.6" y="483.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (50 samples, 0.15%)</title><rect x="69.6" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$208/575256480.apply (27 samples, 0.08%)</title><rect x="69.6" y="451.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (27 samples, 0.08%)</title><rect x="69.6" y="435.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (27 samples, 0.08%)</title><rect x="69.6" y="419.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.08%)</title><rect x="69.6" y="403.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="72.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="70.5" y="451.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.07%)</title><rect x="70.5" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="70.5" y="419.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="73.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (16 samples, 0.05%)</title><rect x="71.3" y="483.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (16 samples, 0.05%)</title><rect x="71.3" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="71.3" y="451.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (16 samples, 0.05%)</title><rect x="71.3" y="435.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.3" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="71.3" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (557 samples, 1.65%)</title><rect x="71.9" y="483.0" width="19.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (557 samples, 1.65%)</title><rect x="71.9" y="467.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (49 samples, 0.15%)</title><rect x="71.9" y="451.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="74.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (493 samples, 1.46%)</title><rect x="73.6" y="451.0" width="17.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.6" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList (17 samples, 0.05%)</title><rect x="73.8" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.8" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.06%)</title><rect x="74.6" y="435.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.6" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.06%)</title><rect x="74.6" y="419.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.6" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.06%)</title><rect x="74.6" y="403.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="77.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (13 samples, 0.04%)</title><rect x="75.3" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (13 samples, 0.04%)</title><rect x="75.3" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="78.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (30 samples, 0.09%)</title><rect x="75.8" y="435.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="78.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (20 samples, 0.06%)</title><rect x="76.8" y="435.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="79.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (26 samples, 0.08%)</title><rect x="77.5" y="435.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="80.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.07%)</title><rect x="78.4" y="435.0" width="0.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="81.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (162 samples, 0.48%)</title><rect x="79.2" y="435.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (16 samples, 0.05%)</title><rect x="79.2" y="419.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="82.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (9 samples, 0.03%)</title><rect x="80.0" y="419.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="83.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="80.5" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.5" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="80.5" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.get$Lambda (8 samples, 0.02%)</title><rect x="80.5" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$203 (8 samples, 0.02%)</title><rect x="80.5" y="371.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="83.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (16 samples, 0.05%)</title><rect x="80.8" y="419.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.8" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (16 samples, 0.05%)</title><rect x="80.8" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="83.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (17 samples, 0.05%)</title><rect x="81.3" y="419.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="84.3" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="81.9" y="419.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="84.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (70 samples, 0.21%)</title><rect x="82.4" y="419.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (10 samples, 0.03%)</title><rect x="82.4" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="85.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (15 samples, 0.04%)</title><rect x="82.8" y="403.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="85.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (10 samples, 0.03%)</title><rect x="83.3" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.3" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (10 samples, 0.03%)</title><rect x="83.3" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="86.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (35 samples, 0.10%)</title><rect x="83.6" y="403.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.6" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (14 samples, 0.04%)</title><rect x="83.6" y="387.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="86.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (9 samples, 0.03%)</title><rect x="84.1" y="387.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="87.1" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (12 samples, 0.04%)</title><rect x="84.5" y="387.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="87.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (86 samples, 0.26%)</title><rect x="84.9" y="435.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (8 samples, 0.02%)</title><rect x="84.9" y="419.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="87.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (11 samples, 0.03%)</title><rect x="85.5" y="419.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="88.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (11 samples, 0.03%)</title><rect x="85.5" y="403.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="88.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (56 samples, 0.17%)</title><rect x="85.9" y="419.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (8 samples, 0.02%)</title><rect x="85.9" y="403.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="88.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (14 samples, 0.04%)</title><rect x="86.2" y="403.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="89.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (10 samples, 0.03%)</title><rect x="86.7" y="403.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (10 samples, 0.03%)</title><rect x="86.7" y="387.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="89.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (24 samples, 0.07%)</title><rect x="87.0" y="403.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="90.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (10 samples, 0.03%)</title><rect x="87.0" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="90.0" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (9 samples, 0.03%)</title><rect x="87.6" y="387.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="90.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (15 samples, 0.04%)</title><rect x="87.9" y="435.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.04%)</title><rect x="87.9" y="419.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="90.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.04%)</title><rect x="87.9" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$196/1447777979.get$Lambda (15 samples, 0.04%)</title><rect x="87.9" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$196 (15 samples, 0.04%)</title><rect x="87.9" y="371.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="90.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (28 samples, 0.08%)</title><rect x="88.4" y="435.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (28 samples, 0.08%)</title><rect x="88.4" y="419.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.4" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (16 samples, 0.05%)</title><rect x="88.4" y="403.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="91.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (12 samples, 0.04%)</title><rect x="89.0" y="403.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.0" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (12 samples, 0.04%)</title><rect x="89.0" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.0" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (12 samples, 0.04%)</title><rect x="89.0" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (12 samples, 0.04%)</title><rect x="89.0" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.0" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.04%)</title><rect x="89.0" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="92.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (42 samples, 0.12%)</title><rect x="89.4" y="435.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.4" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (10 samples, 0.03%)</title><rect x="89.4" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.4" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="89.4" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1183055826.get$Lambda (10 samples, 0.03%)</title><rect x="89.4" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.4" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$153 (10 samples, 0.03%)</title><rect x="89.4" y="371.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="92.4" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (32 samples, 0.10%)</title><rect x="89.7" y="419.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$153/1183055826.run (32 samples, 0.10%)</title><rect x="89.7" y="403.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (32 samples, 0.10%)</title><rect x="89.7" y="387.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.7" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (26 samples, 0.08%)</title><rect x="90.0" y="371.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.0" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (16 samples, 0.05%)</title><rect x="90.0" y="355.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="93.0" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.03%)</title><rect x="90.5" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.5" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.03%)</title><rect x="90.5" y="339.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.5" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.03%)</title><rect x="90.5" y="323.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.5" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (10 samples, 0.03%)</title><rect x="90.5" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.5" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (10 samples, 0.03%)</title><rect x="90.5" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="93.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (15 samples, 0.04%)</title><rect x="90.9" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="93.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.04%)</title><rect x="90.9" y="435.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="93.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (22 samples, 0.07%)</title><rect x="91.4" y="547.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="94.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (22 samples, 0.07%)</title><rect x="91.4" y="531.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (22 samples, 0.07%)</title><rect x="91.4" y="515.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="94.4" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (22 samples, 0.07%)</title><rect x="91.4" y="499.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="94.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (48 samples, 0.14%)</title><rect x="92.2" y="547.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.2" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (33 samples, 0.10%)</title><rect x="92.2" y="531.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="95.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (15 samples, 0.04%)</title><rect x="93.3" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="96.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (15 samples, 0.04%)</title><rect x="93.3" y="515.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.04%)</title><rect x="93.3" y="499.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.3" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (15 samples, 0.04%)</title><rect x="93.3" y="483.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="96.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.04%)</title><rect x="93.3" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.04%)</title><rect x="93.3" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.3" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (15 samples, 0.04%)</title><rect x="93.3" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.04%)</title><rect x="93.3" y="419.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.3" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (15 samples, 0.04%)</title><rect x="93.3" y="403.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="96.3" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (15 samples, 0.04%)</title><rect x="93.3" y="387.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.3" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (15 samples, 0.04%)</title><rect x="93.3" y="371.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="96.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,625 samples, 4.83%)</title><rect x="94.0" y="611.0" width="56.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.0" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1,625 samples, 4.83%)</title><rect x="94.0" y="595.0" width="56.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.0" y="606.0">java/u..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (48 samples, 0.14%)</title><rect x="94.0" y="579.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="97.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (48 samples, 0.14%)</title><rect x="94.0" y="563.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (48 samples, 0.14%)</title><rect x="94.0" y="547.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (48 samples, 0.14%)</title><rect x="94.0" y="531.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.0" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (48 samples, 0.14%)</title><rect x="94.0" y="515.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="97.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (1,577 samples, 4.68%)</title><rect x="95.6" y="579.0" width="55.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.6" y="590.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (1,577 samples, 4.68%)</title><rect x="95.6" y="563.0" width="55.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.6" y="574.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1,577 samples, 4.68%)</title><rect x="95.6" y="547.0" width="55.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.6" y="558.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,577 samples, 4.68%)</title><rect x="95.6" y="531.0" width="55.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.6" y="542.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,141 samples, 3.39%)</title><rect x="95.6" y="515.0" width="40.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="98.6" y="526.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,141 samples, 3.39%)</title><rect x="95.6" y="499.0" width="40.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.6" y="510.0">one..</text>
</g>
<g>
<title>byte[] (1,141 samples, 3.39%)</title><rect x="95.6" y="483.0" width="40.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="98.6" y="494.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (436 samples, 1.30%)</title><rect x="135.6" y="515.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.6" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (436 samples, 1.30%)</title><rect x="135.6" y="499.0" width="15.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="138.6" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$297/247412214.get (8,690 samples, 25.82%)</title><rect x="150.9" y="627.0" width="304.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.9" y="638.0">ru/mail/polis/service/dariagap/BasicServi..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$get$0 (8,690 samples, 25.82%)</title><rect x="150.9" y="611.0" width="304.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.9" y="622.0">ru/mail/polis/service/dariagap/BasicServi..</text>
</g>
<g>
<title>java/lang/String.getBytes (475 samples, 1.41%)</title><rect x="150.9" y="595.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (475 samples, 1.41%)</title><rect x="150.9" y="579.0" width="16.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="153.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (475 samples, 1.41%)</title><rect x="150.9" y="563.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (475 samples, 1.41%)</title><rect x="150.9" y="547.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.9" y="558.0"></text>
</g>
<g>
<title>byte[] (475 samples, 1.41%)</title><rect x="150.9" y="531.0" width="16.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="153.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (542 samples, 1.61%)</title><rect x="167.6" y="595.0" width="19.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (542 samples, 1.61%)</title><rect x="167.6" y="579.0" width="19.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="170.6" y="590.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (542 samples, 1.61%)</title><rect x="167.6" y="563.0" width="19.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="170.6" y="574.0"></text>
</g>
<g>
<title>one.nio.http.Response (313 samples, 0.93%)</title><rect x="186.6" y="595.0" width="10.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="189.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,230 samples, 3.65%)</title><rect x="197.5" y="595.0" width="43.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.5" y="606.0">one/..</text>
</g>
<g>
<title>byte[] (505 samples, 1.50%)</title><rect x="197.5" y="579.0" width="17.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="200.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String[] (394 samples, 1.17%)</title><rect x="215.2" y="579.0" width="13.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="218.2" y="590.0"></text>
</g>
<g>
<title>java.lang.String (331 samples, 0.98%)</title><rect x="229.1" y="579.0" width="11.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="232.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,012 samples, 14.89%)</title><rect x="240.7" y="595.0" width="175.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.7" y="606.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (651 samples, 1.93%)</title><rect x="240.7" y="579.0" width="22.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="243.7" y="590.0">r..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (651 samples, 1.93%)</title><rect x="240.7" y="563.0" width="22.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="243.7" y="574.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (651 samples, 1.93%)</title><rect x="240.7" y="547.0" width="22.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="243.7" y="558.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (2,379 samples, 7.07%)</title><rect x="263.5" y="579.0" width="83.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="266.5" y="590.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (2,379 samples, 7.07%)</title><rect x="263.5" y="563.0" width="83.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.5" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (612 samples, 1.82%)</title><rect x="263.5" y="547.0" width="21.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.5" y="558.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (612 samples, 1.82%)</title><rect x="263.5" y="531.0" width="21.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.5" y="542.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (612 samples, 1.82%)</title><rect x="263.5" y="515.0" width="21.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="266.5" y="526.0">j..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (310 samples, 0.92%)</title><rect x="284.9" y="547.0" width="10.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.9" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (310 samples, 0.92%)</title><rect x="284.9" y="531.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.9" y="542.0"></text>
</g>
<g>
<title>byte[] (310 samples, 0.92%)</title><rect x="284.9" y="515.0" width="10.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="287.9" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (511 samples, 1.52%)</title><rect x="295.8" y="547.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.8" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (511 samples, 1.52%)</title><rect x="295.8" y="531.0" width="17.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="298.8" y="542.0"></text>
</g>
<g>
<title>byte[] (511 samples, 1.52%)</title><rect x="295.8" y="515.0" width="17.9" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="298.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (946 samples, 2.81%)</title><rect x="313.7" y="547.0" width="33.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.7" y="558.0">ru..</text>
</g>
<g>
<title>byte[] (317 samples, 0.94%)</title><rect x="313.7" y="531.0" width="11.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="316.7" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (629 samples, 1.87%)</title><rect x="324.8" y="531.0" width="22.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.8" y="542.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (629 samples, 1.87%)</title><rect x="324.8" y="515.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="327.8" y="526.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (629 samples, 1.87%)</title><rect x="324.8" y="499.0" width="22.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="327.8" y="510.0">j..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (1,982 samples, 5.89%)</title><rect x="346.9" y="579.0" width="69.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.9" y="590.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (1,091 samples, 3.24%)</title><rect x="346.9" y="563.0" width="38.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.9" y="574.0">org..</text>
</g>
<g>
<title>org.rocksdb.RocksIterator (386 samples, 1.15%)</title><rect x="346.9" y="547.0" width="13.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="349.9" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (705 samples, 2.09%)</title><rect x="360.4" y="547.0" width="24.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="363.4" y="558.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (705 samples, 2.09%)</title><rect x="360.4" y="531.0" width="24.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.4" y="542.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (705 samples, 2.09%)</title><rect x="360.4" y="515.0" width="24.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="363.4" y="526.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (705 samples, 2.09%)</title><rect x="360.4" y="499.0" width="24.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.4" y="510.0">o..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (196 samples, 0.58%)</title><rect x="360.4" y="483.0" width="6.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="363.4" y="494.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (509 samples, 1.51%)</title><rect x="367.3" y="483.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.3" y="494.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (509 samples, 1.51%)</title><rect x="367.3" y="467.0" width="17.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.3" y="478.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (509 samples, 1.51%)</title><rect x="367.3" y="451.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="370.3" y="462.0"></text>
</g>
<g>
<title>java.lang.ref.Finalizer (509 samples, 1.51%)</title><rect x="367.3" y="435.0" width="17.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="370.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (891 samples, 2.65%)</title><rect x="385.1" y="563.0" width="31.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="388.1" y="574.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (891 samples, 2.65%)</title><rect x="385.1" y="547.0" width="31.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.1" y="558.0">ru..</text>
</g>
<g>
<title>byte[] (279 samples, 0.83%)</title><rect x="385.1" y="531.0" width="9.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="388.1" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (612 samples, 1.82%)</title><rect x="394.9" y="531.0" width="21.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.9" y="542.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (612 samples, 1.82%)</title><rect x="394.9" y="515.0" width="21.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="397.9" y="526.0">j..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1,118 samples, 3.32%)</title><rect x="416.4" y="595.0" width="39.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="419.4" y="606.0">ru/..</text>
</g>
<g>
<title>byte[] (517 samples, 1.54%)</title><rect x="416.4" y="579.0" width="18.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="419.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (601 samples, 1.79%)</title><rect x="434.5" y="579.0" width="21.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="437.5" y="590.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBufferR (601 samples, 1.79%)</title><rect x="434.5" y="563.0" width="21.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="437.5" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2,941 samples, 8.74%)</title><rect x="455.5" y="643.0" width="103.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="458.5" y="654.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2,941 samples, 8.74%)</title><rect x="455.5" y="627.0" width="103.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.5" y="638.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (393 samples, 1.17%)</title><rect x="455.5" y="611.0" width="13.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (393 samples, 1.17%)</title><rect x="455.5" y="595.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (393 samples, 1.17%)</title><rect x="455.5" y="579.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (393 samples, 1.17%)</title><rect x="455.5" y="563.0" width="13.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.accept (117 samples, 0.35%)</title><rect x="455.5" y="547.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$0 (117 samples, 0.35%)</title><rect x="455.5" y="531.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (117 samples, 0.35%)</title><rect x="455.5" y="515.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (117 samples, 0.35%)</title><rect x="455.5" y="499.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (117 samples, 0.35%)</title><rect x="455.5" y="483.0" width="4.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="458.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.accept (276 samples, 0.82%)</title><rect x="459.6" y="547.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.lambda$sendResponseFromFuture$0 (276 samples, 0.82%)</title><rect x="459.6" y="531.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (276 samples, 0.82%)</title><rect x="459.6" y="515.0" width="9.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (276 samples, 0.82%)</title><rect x="459.6" y="499.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (196 samples, 0.58%)</title><rect x="459.6" y="483.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.6" y="494.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (196 samples, 0.58%)</title><rect x="459.6" y="467.0" width="6.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="462.6" y="478.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.58%)</title><rect x="459.6" y="451.0" width="6.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="462.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (80 samples, 0.24%)</title><rect x="466.5" y="483.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.5" y="494.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (80 samples, 0.24%)</title><rect x="466.5" y="467.0" width="2.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="469.5" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$136/2054529164.apply (434 samples, 1.29%)</title><rect x="469.3" y="611.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.lambda$proxy$3 (434 samples, 1.29%)</title><rect x="469.3" y="595.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="472.3" y="606.0"></text>
</g>
<g>
<title>one.nio.http.Response (90 samples, 0.27%)</title><rect x="469.3" y="579.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="472.3" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (344 samples, 1.02%)</title><rect x="472.5" y="579.0" width="12.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="475.5" y="590.0"></text>
</g>
<g>
<title>byte[] (159 samples, 0.47%)</title><rect x="472.5" y="563.0" width="5.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="475.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String[] (100 samples, 0.30%)</title><rect x="478.0" y="563.0" width="3.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="481.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (85 samples, 0.25%)</title><rect x="481.6" y="563.0" width="2.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="484.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$145/1854348690.apply (2,114 samples, 6.28%)</title><rect x="484.5" y="611.0" width="74.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.5" y="622.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$getResponseFromGateNode$1 (2,114 samples, 6.28%)</title><rect x="484.5" y="595.0" width="74.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.5" y="606.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.formFinalResponse (2,114 samples, 6.28%)</title><rect x="484.5" y="579.0" width="74.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.5" y="590.0">ru/mail/..</text>
</g>
<g>
<title>java/util/Collection.stream (156 samples, 0.46%)</title><rect x="484.5" y="563.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.spliterator (63 samples, 0.19%)</title><rect x="484.5" y="547.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.5" y="558.0"></text>
</g>
<g>
<title>java/util/Spliterators.spliterator (63 samples, 0.19%)</title><rect x="484.5" y="531.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="487.5" y="542.0"></text>
</g>
<g>
<title>java.util.Spliterators$ArraySpliterator (63 samples, 0.19%)</title><rect x="484.5" y="515.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="487.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (93 samples, 0.28%)</title><rect x="486.7" y="547.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.7" y="558.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (93 samples, 0.28%)</title><rect x="486.7" y="531.0" width="3.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="489.7" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator.comparingLong (42 samples, 0.12%)</title><rect x="490.0" y="563.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.12%)</title><rect x="490.0" y="547.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.12%)</title><rect x="490.0" y="531.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="493.0" y="542.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/553540362.get$Lambda (42 samples, 0.12%)</title><rect x="490.0" y="515.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.0" y="526.0"></text>
</g>
<g>
<title>java.util.Comparator$$Lambda$310 (42 samples, 0.12%)</title><rect x="490.0" y="499.0" width="1.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="493.0" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (603 samples, 1.79%)</title><rect x="491.5" y="563.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="494.5" y="574.0">j..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$312/103219410.apply (603 samples, 1.79%)</title><rect x="491.5" y="547.0" width="21.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="494.5" y="558.0">r..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$2 (603 samples, 1.79%)</title><rect x="491.5" y="531.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.5" y="542.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (85 samples, 0.25%)</title><rect x="491.5" y="515.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.5" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (85 samples, 0.25%)</title><rect x="491.5" y="499.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.5" y="510.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (85 samples, 0.25%)</title><rect x="491.5" y="483.0" width="3.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="494.5" y="494.0"></text>
</g>
<g>
<title>one.nio.http.Response (50 samples, 0.15%)</title><rect x="494.5" y="515.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="497.5" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (179 samples, 0.53%)</title><rect x="496.2" y="515.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.2" y="526.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.18%)</title><rect x="496.2" y="499.0" width="2.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="499.2" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (69 samples, 0.20%)</title><rect x="498.3" y="499.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="501.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.15%)</title><rect x="500.8" y="499.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="503.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getData (70 samples, 0.21%)</title><rect x="502.5" y="515.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="505.5" y="526.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.21%)</title><rect x="502.5" y="499.0" width="2.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="505.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampByData (219 samples, 0.65%)</title><rect x="504.9" y="515.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="507.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.&lt;init&gt; (65 samples, 0.19%)</title><rect x="504.9" y="499.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="507.9" y="510.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.19%)</title><rect x="504.9" y="483.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="507.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (154 samples, 0.46%)</title><rect x="507.2" y="499.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.2" y="510.0"></text>
</g>
<g>
<title>byte[] (68 samples, 0.20%)</title><rect x="507.2" y="483.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="510.2" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (86 samples, 0.26%)</title><rect x="509.6" y="483.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.6" y="494.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (86 samples, 0.26%)</title><rect x="509.6" y="467.0" width="3.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="512.6" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (125 samples, 0.37%)</title><rect x="512.6" y="563.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.6" y="574.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (125 samples, 0.37%)</title><rect x="512.6" y="547.0" width="4.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="515.6" y="558.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (963 samples, 2.86%)</title><rect x="517.0" y="563.0" width="33.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="520.0" y="574.0">ja..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (41 samples, 0.12%)</title><rect x="517.0" y="547.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (41 samples, 0.12%)</title><rect x="517.0" y="531.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.12%)</title><rect x="517.0" y="515.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.0" y="526.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$311/1711067505.get$Lambda (41 samples, 0.12%)</title><rect x="517.0" y="499.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.0" y="510.0"></text>
</g>
<g>
<title>java.util.function.BinaryOperator$$Lambda$311 (41 samples, 0.12%)</title><rect x="517.0" y="483.0" width="1.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="520.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (922 samples, 2.74%)</title><rect x="518.4" y="547.0" width="32.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="521.4" y="558.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (886 samples, 2.63%)</title><rect x="518.4" y="531.0" width="31.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.4" y="542.0">ja..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (886 samples, 2.63%)</title><rect x="518.4" y="515.0" width="31.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.4" y="526.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (820 samples, 2.44%)</title><rect x="518.4" y="499.0" width="28.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.4" y="510.0">ja..</text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (777 samples, 2.31%)</title><rect x="518.4" y="483.0" width="27.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.4" y="494.0">j..</text>
</g>
<g>
<title>java/util/Spliterators$ArraySpliterator.forEachRemaining (777 samples, 2.31%)</title><rect x="518.4" y="467.0" width="27.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="521.4" y="478.0">j..</text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (777 samples, 2.31%)</title><rect x="518.4" y="451.0" width="27.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.4" y="462.0">j..</text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (777 samples, 2.31%)</title><rect x="518.4" y="435.0" width="27.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.4" y="446.0">j..</text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$311/1711067505.apply (777 samples, 2.31%)</title><rect x="518.4" y="419.0" width="27.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.4" y="430.0">j..</text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (777 samples, 2.31%)</title><rect x="518.4" y="403.0" width="27.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.4" y="414.0">j..</text>
</g>
<g>
<title>java/util/Comparator$$Lambda$310/553540362.compare (777 samples, 2.31%)</title><rect x="518.4" y="387.0" width="27.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.4" y="398.0">j..</text>
</g>
<g>
<title>java/util/Comparator.lambda$comparingLong$6043328a$1 (777 samples, 2.31%)</title><rect x="518.4" y="371.0" width="27.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.4" y="382.0">j..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas$$Lambda$307/1071552911.applyAsLong (777 samples, 2.31%)</title><rect x="518.4" y="355.0" width="27.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.4" y="366.0">r..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.lambda$formFinalResponse$1 (777 samples, 2.31%)</title><rect x="518.4" y="339.0" width="27.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.4" y="350.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (255 samples, 0.76%)</title><rect x="518.4" y="323.0" width="9.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (255 samples, 0.76%)</title><rect x="518.4" y="307.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.4" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (255 samples, 0.76%)</title><rect x="518.4" y="291.0" width="9.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="521.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.getTimestampByData (522 samples, 1.55%)</title><rect x="527.4" y="323.0" width="18.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="530.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/Timestamp.&lt;init&gt; (150 samples, 0.45%)</title><rect x="527.4" y="307.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="530.4" y="318.0"></text>
</g>
<g>
<title>byte[] (150 samples, 0.45%)</title><rect x="527.4" y="291.0" width="5.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="530.4" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (372 samples, 1.11%)</title><rect x="532.6" y="307.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.6" y="318.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.44%)</title><rect x="532.6" y="291.0" width="5.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="535.6" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (224 samples, 0.67%)</title><rect x="537.8" y="291.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.8" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (224 samples, 0.67%)</title><rect x="537.8" y="275.0" width="7.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="540.8" y="286.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (43 samples, 0.13%)</title><rect x="545.7" y="483.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (43 samples, 0.13%)</title><rect x="545.7" y="467.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (43 samples, 0.13%)</title><rect x="545.7" y="451.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="548.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (37 samples, 0.11%)</title><rect x="547.2" y="499.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.2" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (37 samples, 0.11%)</title><rect x="547.2" y="483.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.2" y="494.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2ReducingSink (37 samples, 0.11%)</title><rect x="547.2" y="467.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="550.2" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (29 samples, 0.09%)</title><rect x="548.5" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.get (29 samples, 0.09%)</title><rect x="548.5" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="551.5" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (29 samples, 0.09%)</title><rect x="548.5" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.5" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (29 samples, 0.09%)</title><rect x="548.5" y="451.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="551.5" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps.makeRef (36 samples, 0.11%)</title><rect x="549.5" y="531.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="552.5" y="542.0"></text>
</g>
<g>
<title>java.util.stream.ReduceOps$2 (36 samples, 0.11%)</title><rect x="549.5" y="515.0" width="1.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="552.5" y="526.0"></text>
</g>
<g>
<title>one.nio.http.Response (48 samples, 0.14%)</title><rect x="550.7" y="563.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="553.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (177 samples, 0.53%)</title><rect x="552.4" y="563.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.4" y="574.0"></text>
</g>
<g>
<title>byte[] (77 samples, 0.23%)</title><rect x="552.4" y="547.0" width="2.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="555.4" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (48 samples, 0.14%)</title><rect x="555.1" y="547.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="558.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (52 samples, 0.15%)</title><rect x="556.8" y="547.0" width="1.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="559.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (558 samples, 1.66%)</title><rect x="558.6" y="643.0" width="19.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (541 samples, 1.61%)</title><rect x="558.6" y="627.0" width="19.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (539 samples, 1.60%)</title><rect x="558.6" y="611.0" width="18.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="561.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (539 samples, 1.60%)</title><rect x="558.6" y="595.0" width="18.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="561.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (539 samples, 1.60%)</title><rect x="558.6" y="579.0" width="18.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="561.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (17 samples, 0.05%)</title><rect x="577.6" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="580.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.04%)</title><rect x="577.6" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="580.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (15 samples, 0.04%)</title><rect x="577.6" y="595.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.6" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (15 samples, 0.04%)</title><rect x="577.6" y="579.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="580.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.run (282 samples, 0.84%)</title><rect x="578.2" y="643.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="581.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (282 samples, 0.84%)</title><rect x="578.2" y="627.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="581.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (282 samples, 0.84%)</title><rect x="578.2" y="611.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (282 samples, 0.84%)</title><rect x="578.2" y="595.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (282 samples, 0.84%)</title><rect x="578.2" y="579.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="581.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (282 samples, 0.84%)</title><rect x="578.2" y="563.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (282 samples, 0.84%)</title><rect x="578.2" y="547.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (282 samples, 0.84%)</title><rect x="578.2" y="531.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="581.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (282 samples, 0.84%)</title><rect x="578.2" y="515.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (282 samples, 0.84%)</title><rect x="578.2" y="499.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (282 samples, 0.84%)</title><rect x="578.2" y="483.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="581.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (256 samples, 0.76%)</title><rect x="578.2" y="467.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.10%)</title><rect x="578.2" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="581.2" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.10%)</title><rect x="578.2" y="435.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="581.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$258/1749464899.get$Lambda (11 samples, 0.03%)</title><rect x="578.2" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$258 (11 samples, 0.03%)</title><rect x="578.2" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="581.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$269/996253719.get$Lambda (23 samples, 0.07%)</title><rect x="578.6" y="419.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$269 (23 samples, 0.07%)</title><rect x="578.6" y="403.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="581.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (222 samples, 0.66%)</title><rect x="579.4" y="451.0" width="7.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (17 samples, 0.05%)</title><rect x="579.4" y="435.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="582.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (205 samples, 0.61%)</title><rect x="580.0" y="435.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (205 samples, 0.61%)</title><rect x="580.0" y="419.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (205 samples, 0.61%)</title><rect x="580.0" y="403.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (104 samples, 0.31%)</title><rect x="580.0" y="387.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (33 samples, 0.10%)</title><rect x="580.0" y="371.0" width="1.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="583.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/2129579493.apply (45 samples, 0.13%)</title><rect x="581.1" y="371.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="584.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (45 samples, 0.13%)</title><rect x="581.1" y="355.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (45 samples, 0.13%)</title><rect x="581.1" y="339.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.02%)</title><rect x="581.1" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="584.1" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (8 samples, 0.02%)</title><rect x="581.1" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.1" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (8 samples, 0.02%)</title><rect x="581.1" y="291.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="584.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (37 samples, 0.11%)</title><rect x="581.4" y="323.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (32 samples, 0.10%)</title><rect x="581.6" y="307.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (32 samples, 0.10%)</title><rect x="581.6" y="291.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (19 samples, 0.06%)</title><rect x="581.6" y="275.0" width="0.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="584.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="582.3" y="275.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="582.3" y="259.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="582.3" y="243.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="585.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (26 samples, 0.08%)</title><rect x="582.7" y="371.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.7" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (26 samples, 0.08%)</title><rect x="582.7" y="355.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (26 samples, 0.08%)</title><rect x="582.7" y="339.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (25 samples, 0.07%)</title><rect x="582.8" y="323.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (25 samples, 0.07%)</title><rect x="582.8" y="307.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="585.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.06%)</title><rect x="582.9" y="291.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (20 samples, 0.06%)</title><rect x="582.9" y="275.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (20 samples, 0.06%)</title><rect x="582.9" y="259.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.03%)</title><rect x="583.2" y="243.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.03%)</title><rect x="583.2" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="586.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.03%)</title><rect x="583.2" y="211.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="586.2" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.03%)</title><rect x="583.2" y="195.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="586.2" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.03%)</title><rect x="583.2" y="179.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.2" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.03%)</title><rect x="583.2" y="163.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.2" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (11 samples, 0.03%)</title><rect x="583.2" y="147.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.2" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (11 samples, 0.03%)</title><rect x="583.2" y="131.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.2" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (11 samples, 0.03%)</title><rect x="583.2" y="115.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.2" y="126.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (11 samples, 0.03%)</title><rect x="583.2" y="99.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="586.2" y="110.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (11 samples, 0.03%)</title><rect x="583.2" y="83.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.2" y="94.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (11 samples, 0.03%)</title><rect x="583.2" y="67.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.2" y="78.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.03%)</title><rect x="583.2" y="51.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.2" y="62.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (11 samples, 0.03%)</title><rect x="583.2" y="35.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.2" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (101 samples, 0.30%)</title><rect x="583.6" y="387.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="586.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (101 samples, 0.30%)</title><rect x="583.6" y="371.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="586.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/1550627049.apply (100 samples, 0.30%)</title><rect x="583.6" y="355.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (100 samples, 0.30%)</title><rect x="583.6" y="339.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (100 samples, 0.30%)</title><rect x="583.6" y="323.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/286041195.apply (100 samples, 0.30%)</title><rect x="583.6" y="307.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="586.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (100 samples, 0.30%)</title><rect x="583.6" y="291.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.6" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="583.6" y="275.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="583.6" y="259.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="586.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$262/2129579493.get$Lambda (8 samples, 0.02%)</title><rect x="583.6" y="243.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.6" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$262 (8 samples, 0.02%)</title><rect x="583.6" y="227.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="586.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (37 samples, 0.11%)</title><rect x="583.9" y="275.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="586.9" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (37 samples, 0.11%)</title><rect x="583.9" y="259.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.9" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (25 samples, 0.07%)</title><rect x="583.9" y="243.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="586.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="584.8" y="243.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="587.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="584.8" y="227.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="584.8" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="587.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (55 samples, 0.16%)</title><rect x="585.2" y="275.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (29 samples, 0.09%)</title><rect x="585.2" y="259.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="588.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (12 samples, 0.04%)</title><rect x="585.2" y="243.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="588.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (17 samples, 0.05%)</title><rect x="585.6" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="588.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (17 samples, 0.05%)</title><rect x="585.6" y="227.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="588.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="585.6" y="211.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="588.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (26 samples, 0.08%)</title><rect x="586.2" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (15 samples, 0.04%)</title><rect x="586.2" y="243.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="589.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (11 samples, 0.03%)</title><rect x="586.7" y="243.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="589.7" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (11 samples, 0.03%)</title><rect x="586.7" y="227.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="589.7" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (11 samples, 0.03%)</title><rect x="586.7" y="211.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="589.7" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (11 samples, 0.03%)</title><rect x="586.7" y="195.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="589.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (11 samples, 0.03%)</title><rect x="586.7" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.7" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (11 samples, 0.03%)</title><rect x="586.7" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="589.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (26 samples, 0.08%)</title><rect x="587.2" y="467.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (26 samples, 0.08%)</title><rect x="587.2" y="451.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (26 samples, 0.08%)</title><rect x="587.2" y="435.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="590.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (26 samples, 0.08%)</title><rect x="587.2" y="419.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (26 samples, 0.08%)</title><rect x="587.2" y="403.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.2" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (26 samples, 0.08%)</title><rect x="587.2" y="387.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.2" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (11 samples, 0.03%)</title><rect x="587.2" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.2" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (11 samples, 0.03%)</title><rect x="587.2" y="355.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="590.2" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (15 samples, 0.04%)</title><rect x="587.6" y="371.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.6" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (15 samples, 0.04%)</title><rect x="587.6" y="355.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="590.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2,103 samples, 6.25%)</title><rect x="588.1" y="643.0" width="73.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.1" y="654.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2,103 samples, 6.25%)</title><rect x="588.1" y="627.0" width="73.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.1" y="638.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,681 samples, 4.99%)</title><rect x="588.1" y="611.0" width="58.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.1" y="622.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (1,681 samples, 4.99%)</title><rect x="588.1" y="595.0" width="58.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.1" y="606.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,681 samples, 4.99%)</title><rect x="588.1" y="579.0" width="58.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.1" y="590.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (34 samples, 0.10%)</title><rect x="588.1" y="563.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (34 samples, 0.10%)</title><rect x="588.1" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (34 samples, 0.10%)</title><rect x="588.1" y="531.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (34 samples, 0.10%)</title><rect x="588.1" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.1" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (26 samples, 0.08%)</title><rect x="588.1" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.1" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (26 samples, 0.08%)</title><rect x="588.1" y="483.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.08%)</title><rect x="588.1" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (26 samples, 0.08%)</title><rect x="588.1" y="451.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (26 samples, 0.08%)</title><rect x="588.1" y="435.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.1" y="446.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.08%)</title><rect x="588.1" y="419.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="591.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (8 samples, 0.02%)</title><rect x="589.0" y="499.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="589.0" y="483.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="589.0" y="467.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257/324408259.get$Lambda (8 samples, 0.02%)</title><rect x="589.0" y="451.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257 (8 samples, 0.02%)</title><rect x="589.0" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="592.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,647 samples, 4.89%)</title><rect x="589.3" y="563.0" width="57.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.3" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,647 samples, 4.89%)</title><rect x="589.3" y="547.0" width="57.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.3" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,647 samples, 4.89%)</title><rect x="589.3" y="531.0" width="57.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.3" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,647 samples, 4.89%)</title><rect x="589.3" y="515.0" width="57.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="592.3" y="526.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (758 samples, 2.25%)</title><rect x="589.3" y="499.0" width="26.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="592.3" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (758 samples, 2.25%)</title><rect x="589.3" y="483.0" width="26.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.3" y="494.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (758 samples, 2.25%)</title><rect x="589.3" y="467.0" width="26.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.3" y="478.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (758 samples, 2.25%)</title><rect x="589.3" y="451.0" width="26.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.3" y="462.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (758 samples, 2.25%)</title><rect x="589.3" y="435.0" width="26.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="592.3" y="446.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (758 samples, 2.25%)</title><rect x="589.3" y="419.0" width="26.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.3" y="430.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (758 samples, 2.25%)</title><rect x="589.3" y="403.0" width="26.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.3" y="414.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (732 samples, 2.17%)</title><rect x="589.3" y="387.0" width="25.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="592.3" y="398.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (732 samples, 2.17%)</title><rect x="589.3" y="371.0" width="25.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="592.3" y="382.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (722 samples, 2.14%)</title><rect x="589.3" y="355.0" width="25.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.3" y="366.0">j..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (16 samples, 0.05%)</title><rect x="589.3" y="339.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="592.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (673 samples, 2.00%)</title><rect x="589.8" y="339.0" width="23.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.8" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (673 samples, 2.00%)</title><rect x="589.8" y="323.0" width="23.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.8" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.02%)</title><rect x="589.8" y="307.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (8 samples, 0.02%)</title><rect x="589.8" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.8" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$293/843397805.get$Lambda (8 samples, 0.02%)</title><rect x="589.8" y="275.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="592.8" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$293 (8 samples, 0.02%)</title><rect x="589.8" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="592.8" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (32 samples, 0.10%)</title><rect x="590.1" y="307.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.1" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (32 samples, 0.10%)</title><rect x="590.1" y="291.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (20 samples, 0.06%)</title><rect x="590.1" y="275.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="593.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="590.8" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (12 samples, 0.04%)</title><rect x="590.8" y="259.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (12 samples, 0.04%)</title><rect x="590.8" y="243.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="593.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (633 samples, 1.88%)</title><rect x="591.2" y="307.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.2" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (10 samples, 0.03%)</title><rect x="591.2" y="291.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (10 samples, 0.03%)</title><rect x="591.2" y="275.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$292/1701406684.get$Lambda (10 samples, 0.03%)</title><rect x="591.2" y="259.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="594.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$292 (10 samples, 0.03%)</title><rect x="591.2" y="243.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="594.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (36 samples, 0.11%)</title><rect x="591.6" y="291.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (36 samples, 0.11%)</title><rect x="591.6" y="275.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (19 samples, 0.06%)</title><rect x="591.6" y="259.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="594.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="592.3" y="259.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.05%)</title><rect x="592.3" y="243.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.3" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="592.3" y="227.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="595.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (587 samples, 1.74%)</title><rect x="592.8" y="291.0" width="20.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="595.8" y="302.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$117/247522936.apply (34 samples, 0.10%)</title><rect x="592.8" y="275.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (34 samples, 0.10%)</title><rect x="592.8" y="259.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (34 samples, 0.10%)</title><rect x="592.8" y="243.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.8" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (10 samples, 0.03%)</title><rect x="592.8" y="227.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="595.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (24 samples, 0.07%)</title><rect x="593.2" y="227.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.2" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList (8 samples, 0.02%)</title><rect x="593.2" y="211.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="596.2" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (16 samples, 0.05%)</title><rect x="593.5" y="211.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="596.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (553 samples, 1.64%)</title><rect x="594.0" y="275.0" width="19.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.06%)</title><rect x="594.0" y="259.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.0" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.06%)</title><rect x="594.0" y="243.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1864376279.get$Lambda (12 samples, 0.04%)</title><rect x="594.0" y="227.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.0" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$289 (12 samples, 0.04%)</title><rect x="594.0" y="211.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="597.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$291/2093423394.get$Lambda (8 samples, 0.02%)</title><rect x="594.5" y="227.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$291 (8 samples, 0.02%)</title><rect x="594.5" y="211.0" width="0.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="597.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/934677432.linkToTargetMethod (29 samples, 0.09%)</title><rect x="594.7" y="259.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.7" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1618996908.invokeStatic (29 samples, 0.09%)</title><rect x="594.7" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.get$Lambda (29 samples, 0.09%)</title><rect x="594.7" y="227.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$281 (29 samples, 0.09%)</title><rect x="594.7" y="211.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="597.7" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (118 samples, 0.35%)</title><rect x="595.8" y="259.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="598.8" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (43 samples, 0.13%)</title><rect x="595.8" y="243.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="598.8" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.06%)</title><rect x="595.8" y="227.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.8" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.06%)</title><rect x="595.8" y="211.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="598.8" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (24 samples, 0.07%)</title><rect x="596.4" y="227.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.4" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (24 samples, 0.07%)</title><rect x="596.4" y="211.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="599.4" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (32 samples, 0.10%)</title><rect x="597.3" y="243.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.3" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (32 samples, 0.10%)</title><rect x="597.3" y="227.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.3" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (32 samples, 0.10%)</title><rect x="597.3" y="211.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.3" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (12 samples, 0.04%)</title><rect x="597.3" y="195.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.3" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (12 samples, 0.04%)</title><rect x="597.3" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.3" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (12 samples, 0.04%)</title><rect x="597.3" y="163.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.3" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (12 samples, 0.04%)</title><rect x="597.3" y="147.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="600.3" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$278/242831709.get (11 samples, 0.03%)</title><rect x="597.7" y="195.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="600.7" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (11 samples, 0.03%)</title><rect x="597.7" y="179.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="600.7" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="598.1" y="195.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (9 samples, 0.03%)</title><rect x="598.1" y="179.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.1" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (9 samples, 0.03%)</title><rect x="598.1" y="163.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="601.1" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (9 samples, 0.03%)</title><rect x="598.1" y="147.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="601.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (43 samples, 0.13%)</title><rect x="598.4" y="243.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.4" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (43 samples, 0.13%)</title><rect x="598.4" y="227.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="601.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (79 samples, 0.23%)</title><rect x="599.9" y="259.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (45 samples, 0.13%)</title><rect x="599.9" y="243.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.9" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.07%)</title><rect x="599.9" y="227.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="602.9" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.06%)</title><rect x="600.7" y="227.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="603.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (21 samples, 0.06%)</title><rect x="600.7" y="211.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.06%)</title><rect x="600.7" y="195.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="603.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (34 samples, 0.10%)</title><rect x="601.5" y="243.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (34 samples, 0.10%)</title><rect x="601.5" y="227.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (24 samples, 0.07%)</title><rect x="601.5" y="211.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="604.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="602.3" y="211.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="602.3" y="195.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="605.3" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="602.3" y="179.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="605.3" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (11 samples, 0.03%)</title><rect x="602.7" y="259.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="605.7" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (13 samples, 0.04%)</title><rect x="603.0" y="259.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="606.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.05%)</title><rect x="603.5" y="259.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="606.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (10 samples, 0.03%)</title><rect x="604.1" y="259.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (10 samples, 0.03%)</title><rect x="604.1" y="243.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="607.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (256 samples, 0.76%)</title><rect x="604.5" y="259.0" width="8.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$281/1417631985.run (256 samples, 0.76%)</title><rect x="604.5" y="243.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (256 samples, 0.76%)</title><rect x="604.5" y="227.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.10%)</title><rect x="604.5" y="211.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.10%)</title><rect x="604.5" y="195.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="607.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$283/1373007332.get$Lambda (12 samples, 0.04%)</title><rect x="604.7" y="179.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.7" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$283 (12 samples, 0.04%)</title><rect x="604.7" y="163.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="607.7" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$285/1327209964.get$Lambda (16 samples, 0.05%)</title><rect x="605.1" y="179.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="608.1" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$285 (16 samples, 0.05%)</title><rect x="605.1" y="163.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="608.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (26 samples, 0.08%)</title><rect x="605.6" y="211.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (26 samples, 0.08%)</title><rect x="605.6" y="195.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.6" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (16 samples, 0.05%)</title><rect x="605.6" y="179.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="608.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="606.2" y="179.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (10 samples, 0.03%)</title><rect x="606.2" y="163.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.2" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="606.2" y="147.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="609.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (16 samples, 0.05%)</title><rect x="606.6" y="211.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="609.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (18 samples, 0.05%)</title><rect x="607.1" y="211.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.1" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.05%)</title><rect x="607.1" y="195.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="610.1" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (44 samples, 0.13%)</title><rect x="607.7" y="211.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (44 samples, 0.13%)</title><rect x="607.7" y="195.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="610.7" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.10%)</title><rect x="608.1" y="179.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="611.1" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (35 samples, 0.10%)</title><rect x="608.1" y="163.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.1" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (35 samples, 0.10%)</title><rect x="608.1" y="147.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="611.1" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (22 samples, 0.07%)</title><rect x="608.1" y="131.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="611.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="608.8" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (13 samples, 0.04%)</title><rect x="608.8" y="115.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="611.8" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (13 samples, 0.04%)</title><rect x="608.8" y="99.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="611.8" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (40 samples, 0.12%)</title><rect x="609.3" y="211.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.12%)</title><rect x="609.3" y="195.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (40 samples, 0.12%)</title><rect x="609.3" y="179.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.3" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.12%)</title><rect x="609.3" y="163.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.3" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (11 samples, 0.03%)</title><rect x="609.3" y="147.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.3" y="158.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="609.3" y="131.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="612.3" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (29 samples, 0.09%)</title><rect x="609.7" y="147.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.7" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (29 samples, 0.09%)</title><rect x="609.7" y="131.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.7" y="142.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="609.7" y="115.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="612.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (78 samples, 0.23%)</title><rect x="610.7" y="211.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.7" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (23 samples, 0.07%)</title><rect x="610.7" y="195.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="613.7" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (55 samples, 0.16%)</title><rect x="611.5" y="195.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.16%)</title><rect x="611.5" y="179.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/388043093.invoke (55 samples, 0.16%)</title><rect x="611.5" y="163.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.5" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.16%)</title><rect x="611.5" y="147.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="614.5" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (13 samples, 0.04%)</title><rect x="611.5" y="131.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="614.5" y="142.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.04%)</title><rect x="611.5" y="115.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="614.5" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (42 samples, 0.12%)</title><rect x="612.0" y="131.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.0" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (42 samples, 0.12%)</title><rect x="612.0" y="115.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.0" y="126.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.12%)</title><rect x="612.0" y="99.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="615.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/787800536.apply (33 samples, 0.10%)</title><rect x="613.4" y="339.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (33 samples, 0.10%)</title><rect x="613.4" y="323.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (19 samples, 0.06%)</title><rect x="613.4" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.4" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (19 samples, 0.06%)</title><rect x="613.4" y="291.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.4" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (19 samples, 0.06%)</title><rect x="613.4" y="275.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.4" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (19 samples, 0.06%)</title><rect x="613.4" y="259.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="616.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (14 samples, 0.04%)</title><rect x="614.1" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.04%)</title><rect x="614.1" y="291.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="617.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (10 samples, 0.03%)</title><rect x="614.6" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (10 samples, 0.03%)</title><rect x="614.6" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/1655781252.apply (10 samples, 0.03%)</title><rect x="614.6" y="323.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (10 samples, 0.03%)</title><rect x="614.6" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="617.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (10 samples, 0.03%)</title><rect x="614.6" y="291.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (10 samples, 0.03%)</title><rect x="614.6" y="275.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="617.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$271/403338419.apply (26 samples, 0.08%)</title><rect x="614.9" y="387.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (26 samples, 0.08%)</title><rect x="614.9" y="371.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (26 samples, 0.08%)</title><rect x="614.9" y="355.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="617.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (889 samples, 2.64%)</title><rect x="615.8" y="499.0" width="31.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.8" y="510.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (65 samples, 0.19%)</title><rect x="615.8" y="483.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.8" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (65 samples, 0.19%)</title><rect x="615.8" y="467.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.8" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (65 samples, 0.19%)</title><rect x="615.8" y="451.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.8" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (65 samples, 0.19%)</title><rect x="615.8" y="435.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.8" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (65 samples, 0.19%)</title><rect x="615.8" y="419.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="618.8" y="430.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.19%)</title><rect x="615.8" y="403.0" width="2.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="618.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (79 samples, 0.23%)</title><rect x="618.1" y="483.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.1" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (16 samples, 0.05%)</title><rect x="618.1" y="467.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="621.1" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (10 samples, 0.03%)</title><rect x="618.7" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="621.7" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.03%)</title><rect x="618.7" y="451.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.7" y="462.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (10 samples, 0.03%)</title><rect x="618.7" y="435.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.7" y="446.0"></text>
</g>
<g>
<title>byte[] (10 samples, 0.03%)</title><rect x="618.7" y="419.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="621.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (15 samples, 0.04%)</title><rect x="619.0" y="467.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="622.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (15 samples, 0.04%)</title><rect x="619.0" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.0" y="462.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="619.0" y="435.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="622.0" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (38 samples, 0.11%)</title><rect x="619.6" y="467.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (38 samples, 0.11%)</title><rect x="619.6" y="451.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.07%)</title><rect x="619.6" y="435.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="622.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (16 samples, 0.05%)</title><rect x="620.3" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="623.3" y="446.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.05%)</title><rect x="620.3" y="419.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="623.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (241 samples, 0.72%)</title><rect x="620.9" y="483.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (241 samples, 0.72%)</title><rect x="620.9" y="467.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (241 samples, 0.72%)</title><rect x="620.9" y="451.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="623.9" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (16 samples, 0.05%)</title><rect x="621.1" y="435.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="624.1" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.07%)</title><rect x="621.7" y="435.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="624.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeSet (12 samples, 0.04%)</title><rect x="622.5" y="435.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="625.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.06%)</title><rect x="622.9" y="435.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.06%)</title><rect x="622.9" y="419.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.9" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (20 samples, 0.06%)</title><rect x="622.9" y="403.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.9" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (20 samples, 0.06%)</title><rect x="622.9" y="387.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="625.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (23 samples, 0.07%)</title><rect x="623.6" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.6" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (23 samples, 0.07%)</title><rect x="623.6" y="419.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="626.6" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (118 samples, 0.35%)</title><rect x="624.4" y="435.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.4" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (118 samples, 0.35%)</title><rect x="624.4" y="419.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.4" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (118 samples, 0.35%)</title><rect x="624.4" y="403.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.4" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (26 samples, 0.08%)</title><rect x="624.4" y="387.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.4" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (26 samples, 0.08%)</title><rect x="624.4" y="371.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.4" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (26 samples, 0.08%)</title><rect x="624.4" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.4" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="624.4" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.4" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (26 samples, 0.08%)</title><rect x="624.4" y="323.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="627.4" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="624.4" y="307.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="627.4" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (26 samples, 0.08%)</title><rect x="624.4" y="291.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="627.4" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (26 samples, 0.08%)</title><rect x="624.4" y="275.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.4" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.08%)</title><rect x="624.4" y="259.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="627.4" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (49 samples, 0.15%)</title><rect x="625.3" y="387.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.3" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (49 samples, 0.15%)</title><rect x="625.3" y="371.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (27 samples, 0.08%)</title><rect x="625.3" y="355.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (27 samples, 0.08%)</title><rect x="625.3" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="628.3" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (27 samples, 0.08%)</title><rect x="625.3" y="323.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="628.3" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (22 samples, 0.07%)</title><rect x="626.3" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="629.3" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (22 samples, 0.07%)</title><rect x="626.3" y="339.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="629.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (43 samples, 0.13%)</title><rect x="627.0" y="387.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (43 samples, 0.13%)</title><rect x="627.0" y="371.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="630.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (23 samples, 0.07%)</title><rect x="628.5" y="435.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.5" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (23 samples, 0.07%)</title><rect x="628.5" y="419.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="631.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (504 samples, 1.50%)</title><rect x="629.3" y="483.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.3" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (23 samples, 0.07%)</title><rect x="629.3" y="467.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="632.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (41 samples, 0.12%)</title><rect x="630.1" y="467.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.1" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (41 samples, 0.12%)</title><rect x="630.1" y="451.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.1" y="462.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.12%)</title><rect x="630.1" y="435.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="633.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (76 samples, 0.23%)</title><rect x="631.6" y="467.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="634.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (76 samples, 0.23%)</title><rect x="631.6" y="451.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="634.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (26 samples, 0.08%)</title><rect x="631.6" y="435.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="634.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.15%)</title><rect x="632.5" y="435.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.5" y="446.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.15%)</title><rect x="632.5" y="419.0" width="1.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="635.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (364 samples, 1.08%)</title><rect x="634.2" y="467.0" width="12.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (112 samples, 0.33%)</title><rect x="634.2" y="451.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="637.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (112 samples, 0.33%)</title><rect x="634.2" y="435.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="637.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (47 samples, 0.14%)</title><rect x="634.2" y="419.0" width="1.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="637.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (65 samples, 0.19%)</title><rect x="635.9" y="419.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.9" y="430.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.19%)</title><rect x="635.9" y="403.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="638.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (58 samples, 0.17%)</title><rect x="638.2" y="451.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (58 samples, 0.17%)</title><rect x="638.2" y="435.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="641.2" y="446.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.09%)</title><rect x="638.2" y="419.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="641.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.08%)</title><rect x="639.2" y="419.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="642.2" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (41 samples, 0.12%)</title><rect x="640.2" y="451.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="643.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (41 samples, 0.12%)</title><rect x="640.2" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.2" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (41 samples, 0.12%)</title><rect x="640.2" y="419.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.2" y="430.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.06%)</title><rect x="640.2" y="403.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="643.2" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (22 samples, 0.07%)</title><rect x="640.9" y="403.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.9" y="414.0"></text>
</g>
<g>
<title>byte[] (22 samples, 0.07%)</title><rect x="640.9" y="387.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="643.9" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.14%)</title><rect x="641.6" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (46 samples, 0.14%)</title><rect x="641.6" y="435.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.14%)</title><rect x="641.6" y="419.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (46 samples, 0.14%)</title><rect x="641.6" y="403.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (46 samples, 0.14%)</title><rect x="641.6" y="387.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (46 samples, 0.14%)</title><rect x="641.6" y="371.0" width="1.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="644.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (107 samples, 0.32%)</title><rect x="643.3" y="451.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="646.3" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (30 samples, 0.09%)</title><rect x="643.3" y="435.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="646.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (30 samples, 0.09%)</title><rect x="643.3" y="419.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="646.3" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (45 samples, 0.13%)</title><rect x="644.3" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (45 samples, 0.13%)</title><rect x="644.3" y="419.0" width="1.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="647.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$274/408419182.apply (32 samples, 0.10%)</title><rect x="645.9" y="435.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="648.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (32 samples, 0.10%)</title><rect x="645.9" y="419.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.9" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.10%)</title><rect x="645.9" y="403.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="648.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (422 samples, 1.25%)</title><rect x="647.0" y="611.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (422 samples, 1.25%)</title><rect x="647.0" y="595.0" width="14.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (422 samples, 1.25%)</title><rect x="647.0" y="579.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$203/1840219464.run (422 samples, 1.25%)</title><rect x="647.0" y="563.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="650.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (422 samples, 1.25%)</title><rect x="647.0" y="547.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="650.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (58 samples, 0.17%)</title><rect x="647.0" y="531.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="650.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.06%)</title><rect x="647.0" y="515.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="650.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.06%)</title><rect x="647.0" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$216/1348959580.get$Lambda (10 samples, 0.03%)</title><rect x="647.0" y="483.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="650.0" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$216 (10 samples, 0.03%)</title><rect x="647.0" y="467.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="650.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$220/1029944311.get$Lambda (10 samples, 0.03%)</title><rect x="647.4" y="483.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$220 (10 samples, 0.03%)</title><rect x="647.4" y="467.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="650.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (12 samples, 0.04%)</title><rect x="647.7" y="515.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="650.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (26 samples, 0.08%)</title><rect x="648.1" y="515.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="651.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (26 samples, 0.08%)</title><rect x="648.1" y="499.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="651.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (10 samples, 0.03%)</title><rect x="648.1" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="651.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (16 samples, 0.05%)</title><rect x="648.5" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (16 samples, 0.05%)</title><rect x="648.5" y="467.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="651.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (347 samples, 1.03%)</title><rect x="649.0" y="531.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (347 samples, 1.03%)</title><rect x="649.0" y="515.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (347 samples, 1.03%)</title><rect x="649.0" y="499.0" width="12.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (347 samples, 1.03%)</title><rect x="649.0" y="483.0" width="12.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (347 samples, 1.03%)</title><rect x="649.0" y="467.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="652.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (347 samples, 1.03%)</title><rect x="649.0" y="451.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (15 samples, 0.04%)</title><rect x="649.0" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.0" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (15 samples, 0.04%)</title><rect x="649.0" y="419.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.0" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (15 samples, 0.04%)</title><rect x="649.0" y="403.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="652.0" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (9 samples, 0.03%)</title><rect x="649.6" y="435.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="652.6" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (9 samples, 0.03%)</title><rect x="649.6" y="419.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="652.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$282/112583273.run (216 samples, 0.64%)</title><rect x="649.9" y="435.0" width="7.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (216 samples, 0.64%)</title><rect x="649.9" y="419.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (216 samples, 0.64%)</title><rect x="649.9" y="403.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (73 samples, 0.22%)</title><rect x="649.9" y="387.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (42 samples, 0.12%)</title><rect x="649.9" y="371.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="652.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (19 samples, 0.06%)</title><rect x="649.9" y="355.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="652.9" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (19 samples, 0.06%)</title><rect x="649.9" y="339.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="652.9" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (23 samples, 0.07%)</title><rect x="650.5" y="355.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.5" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (23 samples, 0.07%)</title><rect x="650.5" y="339.0" width="0.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="653.5" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (31 samples, 0.09%)</title><rect x="651.4" y="371.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.4" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (31 samples, 0.09%)</title><rect x="651.4" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="654.4" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (31 samples, 0.09%)</title><rect x="651.4" y="339.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (20 samples, 0.06%)</title><rect x="651.4" y="323.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="654.4" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (20 samples, 0.06%)</title><rect x="651.4" y="307.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="654.4" y="318.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (11 samples, 0.03%)</title><rect x="652.1" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.1" y="334.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (11 samples, 0.03%)</title><rect x="652.1" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.1" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (11 samples, 0.03%)</title><rect x="652.1" y="291.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.1" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (11 samples, 0.03%)</title><rect x="652.1" y="275.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="655.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (143 samples, 0.42%)</title><rect x="652.4" y="387.0" width="5.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.4" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (10 samples, 0.03%)</title><rect x="652.4" y="371.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.4" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (10 samples, 0.03%)</title><rect x="652.4" y="355.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="655.4" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="652.4" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="652.4" y="323.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.4" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="652.4" y="307.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="655.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (133 samples, 0.40%)</title><rect x="652.8" y="371.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="655.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (53 samples, 0.16%)</title><rect x="652.8" y="355.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.8" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (19 samples, 0.06%)</title><rect x="652.8" y="339.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="655.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (19 samples, 0.06%)</title><rect x="652.8" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="655.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (19 samples, 0.06%)</title><rect x="652.8" y="307.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="655.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (19 samples, 0.06%)</title><rect x="652.8" y="291.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="655.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (19 samples, 0.06%)</title><rect x="652.8" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.8" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (19 samples, 0.06%)</title><rect x="652.8" y="259.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="655.8" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (10 samples, 0.03%)</title><rect x="653.5" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="656.5" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (10 samples, 0.03%)</title><rect x="653.5" y="323.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="656.5" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (10 samples, 0.03%)</title><rect x="653.5" y="307.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="656.5" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (10 samples, 0.03%)</title><rect x="653.5" y="291.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.5" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (10 samples, 0.03%)</title><rect x="653.5" y="275.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.5" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (10 samples, 0.03%)</title><rect x="653.5" y="259.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="656.5" y="270.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.02%)</title><rect x="653.8" y="339.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="656.8" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (8 samples, 0.02%)</title><rect x="653.8" y="323.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="656.8" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (8 samples, 0.02%)</title><rect x="653.8" y="307.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="656.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (15 samples, 0.04%)</title><rect x="654.1" y="339.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="657.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (28 samples, 0.08%)</title><rect x="654.6" y="355.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="657.6" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (18 samples, 0.05%)</title><rect x="654.6" y="339.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.6" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (18 samples, 0.05%)</title><rect x="654.6" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="657.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (18 samples, 0.05%)</title><rect x="654.6" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.6" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.05%)</title><rect x="654.6" y="291.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="657.6" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (10 samples, 0.03%)</title><rect x="655.3" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.3" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (10 samples, 0.03%)</title><rect x="655.3" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.3" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.03%)</title><rect x="655.3" y="307.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="658.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (52 samples, 0.15%)</title><rect x="655.6" y="355.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="658.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (11 samples, 0.03%)</title><rect x="655.6" y="339.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="658.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (41 samples, 0.12%)</title><rect x="656.0" y="339.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (8 samples, 0.02%)</title><rect x="656.0" y="323.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="659.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (8 samples, 0.02%)</title><rect x="656.0" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (8 samples, 0.02%)</title><rect x="656.0" y="291.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (8 samples, 0.02%)</title><rect x="656.0" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="659.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (33 samples, 0.10%)</title><rect x="656.3" y="323.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (33 samples, 0.10%)</title><rect x="656.3" y="307.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (20 samples, 0.06%)</title><rect x="656.3" y="291.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="659.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (13 samples, 0.04%)</title><rect x="657.0" y="291.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.0" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (13 samples, 0.04%)</title><rect x="657.0" y="275.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="660.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (53 samples, 0.16%)</title><rect x="657.5" y="435.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (53 samples, 0.16%)</title><rect x="657.5" y="419.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (53 samples, 0.16%)</title><rect x="657.5" y="403.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="660.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (32 samples, 0.10%)</title><rect x="657.5" y="387.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.10%)</title><rect x="657.5" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (32 samples, 0.10%)</title><rect x="657.5" y="355.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (32 samples, 0.10%)</title><rect x="657.5" y="339.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$289/1864376279.accept (32 samples, 0.10%)</title><rect x="657.5" y="323.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (32 samples, 0.10%)</title><rect x="657.5" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (32 samples, 0.10%)</title><rect x="657.5" y="291.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="660.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (32 samples, 0.10%)</title><rect x="657.5" y="275.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (32 samples, 0.10%)</title><rect x="657.5" y="259.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$293/843397805.apply (32 samples, 0.10%)</title><rect x="657.5" y="243.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (32 samples, 0.10%)</title><rect x="657.5" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.5" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (32 samples, 0.10%)</title><rect x="657.5" y="211.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="660.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (21 samples, 0.06%)</title><rect x="658.6" y="387.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="661.6" y="398.0"></text>
</g>
<g>
<title>byte[] (21 samples, 0.06%)</title><rect x="658.6" y="371.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="661.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (54 samples, 0.16%)</title><rect x="659.3" y="435.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (54 samples, 0.16%)</title><rect x="659.3" y="419.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="662.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (54 samples, 0.16%)</title><rect x="659.3" y="403.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (54 samples, 0.16%)</title><rect x="659.3" y="387.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.3" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (54 samples, 0.16%)</title><rect x="659.3" y="371.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.3" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (30 samples, 0.09%)</title><rect x="659.3" y="355.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.3" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (9 samples, 0.03%)</title><rect x="659.3" y="339.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="662.3" y="350.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (21 samples, 0.06%)</title><rect x="659.6" y="339.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.6" y="350.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (21 samples, 0.06%)</title><rect x="659.6" y="323.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="662.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.07%)</title><rect x="660.4" y="355.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.4" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.07%)</title><rect x="660.4" y="339.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.4" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.07%)</title><rect x="660.4" y="323.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="663.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (17 samples, 0.05%)</title><rect x="661.2" y="531.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (17 samples, 0.05%)</title><rect x="661.2" y="515.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.05%)</title><rect x="661.2" y="499.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (17 samples, 0.05%)</title><rect x="661.2" y="483.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.03%)</title><rect x="661.2" y="467.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.03%)</title><rect x="661.2" y="451.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 0.03%)</title><rect x="661.2" y="435.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="664.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.03%)</title><rect x="661.2" y="419.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.03%)</title><rect x="661.2" y="403.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (10 samples, 0.03%)</title><rect x="661.2" y="387.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (10 samples, 0.03%)</title><rect x="661.2" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="664.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (10 samples, 0.03%)</title><rect x="661.2" y="355.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.2" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.03%)</title><rect x="661.2" y="339.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="664.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (10 samples, 0.03%)</title><rect x="661.2" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.apply (10 samples, 0.03%)</title><rect x="661.2" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (10 samples, 0.03%)</title><rect x="661.2" y="291.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (10 samples, 0.03%)</title><rect x="661.2" y="275.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (9 samples, 0.03%)</title><rect x="661.2" y="259.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (9 samples, 0.03%)</title><rect x="661.2" y="243.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.2" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (60 samples, 0.18%)</title><rect x="661.8" y="691.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (60 samples, 0.18%)</title><rect x="661.8" y="675.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (60 samples, 0.18%)</title><rect x="661.8" y="659.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (60 samples, 0.18%)</title><rect x="661.8" y="643.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (60 samples, 0.18%)</title><rect x="661.8" y="627.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="664.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (60 samples, 0.18%)</title><rect x="661.8" y="611.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="664.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (60 samples, 0.18%)</title><rect x="661.8" y="595.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (60 samples, 0.18%)</title><rect x="661.8" y="579.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 0.18%)</title><rect x="661.8" y="563.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (60 samples, 0.18%)</title><rect x="661.8" y="547.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="664.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (60 samples, 0.18%)</title><rect x="661.8" y="531.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (60 samples, 0.18%)</title><rect x="661.8" y="515.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (60 samples, 0.18%)</title><rect x="661.8" y="499.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="664.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (60 samples, 0.18%)</title><rect x="661.8" y="483.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (60 samples, 0.18%)</title><rect x="661.8" y="467.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (60 samples, 0.18%)</title><rect x="661.8" y="451.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="664.8" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (60 samples, 0.18%)</title><rect x="661.8" y="435.0" width="2.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="664.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (1,220 samples, 3.62%)</title><rect x="663.9" y="691.0" width="42.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="666.9" y="702.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.08%)</title><rect x="663.9" y="675.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.08%)</title><rect x="663.9" y="659.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1354189177.get$Lambda (17 samples, 0.05%)</title><rect x="663.9" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$248 (17 samples, 0.05%)</title><rect x="663.9" y="627.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="666.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$252/1905917865.get$Lambda (10 samples, 0.03%)</title><rect x="664.5" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="667.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$252 (10 samples, 0.03%)</title><rect x="664.5" y="627.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="667.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/306980751.linkToTargetMethod (43 samples, 0.13%)</title><rect x="664.9" y="675.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.9" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.13%)</title><rect x="664.9" y="659.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/526911886.get$Lambda (43 samples, 0.13%)</title><rect x="664.9" y="643.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.9" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$249 (43 samples, 0.13%)</title><rect x="664.9" y="627.0" width="1.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="667.9" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (307 samples, 0.91%)</title><rect x="666.4" y="675.0" width="10.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1514835762.accept (271 samples, 0.81%)</title><rect x="666.4" y="659.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (271 samples, 0.81%)</title><rect x="666.4" y="643.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (271 samples, 0.81%)</title><rect x="666.4" y="627.0" width="9.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (271 samples, 0.81%)</title><rect x="666.4" y="611.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (271 samples, 0.81%)</title><rect x="666.4" y="595.0" width="9.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (271 samples, 0.81%)</title><rect x="666.4" y="579.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (271 samples, 0.81%)</title><rect x="666.4" y="563.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (271 samples, 0.81%)</title><rect x="666.4" y="547.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (271 samples, 0.81%)</title><rect x="666.4" y="531.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (271 samples, 0.81%)</title><rect x="666.4" y="515.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="669.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (271 samples, 0.81%)</title><rect x="666.4" y="499.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="669.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (271 samples, 0.81%)</title><rect x="666.4" y="483.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (65 samples, 0.19%)</title><rect x="666.4" y="467.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="669.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (65 samples, 0.19%)</title><rect x="666.4" y="451.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (65 samples, 0.19%)</title><rect x="666.4" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (40 samples, 0.12%)</title><rect x="666.4" y="419.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (40 samples, 0.12%)</title><rect x="666.4" y="403.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="669.4" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (40 samples, 0.12%)</title><rect x="666.4" y="387.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="669.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (40 samples, 0.12%)</title><rect x="666.4" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.4" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (40 samples, 0.12%)</title><rect x="666.4" y="355.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="669.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.07%)</title><rect x="667.8" y="419.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (25 samples, 0.07%)</title><rect x="667.8" y="403.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="670.8" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (25 samples, 0.07%)</title><rect x="667.8" y="387.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="670.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (25 samples, 0.07%)</title><rect x="667.8" y="371.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="670.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (25 samples, 0.07%)</title><rect x="667.8" y="355.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="670.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (25 samples, 0.07%)</title><rect x="667.8" y="339.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="670.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (16 samples, 0.05%)</title><rect x="668.6" y="467.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.05%)</title><rect x="668.6" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="671.6" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.05%)</title><rect x="668.6" y="435.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257/324408259.get$Lambda (16 samples, 0.05%)</title><rect x="668.6" y="419.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="671.6" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257 (16 samples, 0.05%)</title><rect x="668.6" y="403.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="671.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (190 samples, 0.56%)</title><rect x="669.2" y="467.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="672.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (100 samples, 0.30%)</title><rect x="669.2" y="451.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (72 samples, 0.21%)</title><rect x="669.2" y="435.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="672.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (72 samples, 0.21%)</title><rect x="669.2" y="419.0" width="2.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="672.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (28 samples, 0.08%)</title><rect x="671.7" y="435.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.7" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (28 samples, 0.08%)</title><rect x="671.7" y="419.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="674.7" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (28 samples, 0.08%)</title><rect x="671.7" y="403.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="674.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (90 samples, 0.27%)</title><rect x="672.7" y="451.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$167/874025876.get (90 samples, 0.27%)</title><rect x="672.7" y="435.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (90 samples, 0.27%)</title><rect x="672.7" y="419.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="675.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (90 samples, 0.27%)</title><rect x="672.7" y="403.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.7" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (90 samples, 0.27%)</title><rect x="672.7" y="387.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.7" y="398.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.26%)</title><rect x="672.8" y="371.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="675.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/2133118391.accept (36 samples, 0.11%)</title><rect x="675.9" y="659.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (36 samples, 0.11%)</title><rect x="675.9" y="643.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/526911886.run (36 samples, 0.11%)</title><rect x="675.9" y="627.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (36 samples, 0.11%)</title><rect x="675.9" y="611.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (36 samples, 0.11%)</title><rect x="675.9" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (36 samples, 0.11%)</title><rect x="675.9" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="678.9" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (36 samples, 0.11%)</title><rect x="675.9" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.9" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (36 samples, 0.11%)</title><rect x="675.9" y="547.0" width="1.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="678.9" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (49 samples, 0.15%)</title><rect x="677.1" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.1" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (49 samples, 0.15%)</title><rect x="677.1" y="659.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="680.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (62 samples, 0.18%)</title><rect x="678.8" y="675.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.8" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (34 samples, 0.10%)</title><rect x="678.8" y="659.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.8" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (34 samples, 0.10%)</title><rect x="678.8" y="643.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="681.8" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (34 samples, 0.10%)</title><rect x="678.8" y="627.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (34 samples, 0.10%)</title><rect x="678.8" y="611.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.8" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (34 samples, 0.10%)</title><rect x="678.8" y="595.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="681.8" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (34 samples, 0.10%)</title><rect x="678.8" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.8" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (34 samples, 0.10%)</title><rect x="678.8" y="563.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="681.8" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (28 samples, 0.08%)</title><rect x="680.0" y="659.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="683.0" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (28 samples, 0.08%)</title><rect x="680.0" y="643.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="683.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (216 samples, 0.64%)</title><rect x="681.0" y="675.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="684.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$183/856242411.run (97 samples, 0.29%)</title><rect x="681.0" y="659.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (97 samples, 0.29%)</title><rect x="681.0" y="643.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="684.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 0.29%)</title><rect x="681.0" y="627.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (97 samples, 0.29%)</title><rect x="681.0" y="611.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (97 samples, 0.29%)</title><rect x="681.0" y="595.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (97 samples, 0.29%)</title><rect x="681.0" y="579.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$175/1535698454.run (97 samples, 0.29%)</title><rect x="681.0" y="563.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.0" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (97 samples, 0.29%)</title><rect x="681.0" y="547.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="684.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (97 samples, 0.29%)</title><rect x="681.0" y="531.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (97 samples, 0.29%)</title><rect x="681.0" y="515.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (67 samples, 0.20%)</title><rect x="681.0" y="499.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="684.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (67 samples, 0.20%)</title><rect x="681.0" y="483.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (67 samples, 0.20%)</title><rect x="681.0" y="467.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1125381564.linkToTargetMethod (47 samples, 0.14%)</title><rect x="681.0" y="451.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1966250569.invoke (47 samples, 0.14%)</title><rect x="681.0" y="435.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.0" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.14%)</title><rect x="681.0" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="684.0" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (47 samples, 0.14%)</title><rect x="681.0" y="403.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (47 samples, 0.14%)</title><rect x="681.0" y="387.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.0" y="398.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.14%)</title><rect x="681.0" y="371.0" width="1.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="684.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20 samples, 0.06%)</title><rect x="682.7" y="451.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="685.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (20 samples, 0.06%)</title><rect x="682.7" y="435.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (20 samples, 0.06%)</title><rect x="682.7" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="685.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257/324408259.get$Lambda (20 samples, 0.06%)</title><rect x="682.7" y="403.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$257 (20 samples, 0.06%)</title><rect x="682.7" y="387.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="685.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (30 samples, 0.09%)</title><rect x="683.4" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="686.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.09%)</title><rect x="683.4" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="686.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (30 samples, 0.09%)</title><rect x="683.4" y="467.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (30 samples, 0.09%)</title><rect x="683.4" y="451.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (30 samples, 0.09%)</title><rect x="683.4" y="435.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.4" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (30 samples, 0.09%)</title><rect x="683.4" y="419.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.4" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (30 samples, 0.09%)</title><rect x="683.4" y="403.0" width="1.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="686.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/2094894093.run (119 samples, 0.35%)</title><rect x="684.4" y="659.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (119 samples, 0.35%)</title><rect x="684.4" y="643.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (47 samples, 0.14%)</title><rect x="684.4" y="627.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (47 samples, 0.14%)</title><rect x="684.4" y="611.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/1998786128.get$Lambda (47 samples, 0.14%)</title><rect x="684.4" y="595.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$256 (47 samples, 0.14%)</title><rect x="684.4" y="579.0" width="1.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="687.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (72 samples, 0.21%)</title><rect x="686.1" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 0.21%)</title><rect x="686.1" y="611.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (72 samples, 0.21%)</title><rect x="686.1" y="595.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="689.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (72 samples, 0.21%)</title><rect x="686.1" y="579.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="689.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (138 samples, 0.41%)</title><rect x="688.6" y="675.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.6" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (38 samples, 0.11%)</title><rect x="688.6" y="659.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="691.6" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (38 samples, 0.11%)</title><rect x="688.6" y="643.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.6" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (38 samples, 0.11%)</title><rect x="688.6" y="627.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (38 samples, 0.11%)</title><rect x="688.6" y="611.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="691.6" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (38 samples, 0.11%)</title><rect x="688.6" y="595.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="691.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (100 samples, 0.30%)</title><rect x="689.9" y="659.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (18 samples, 0.05%)</title><rect x="689.9" y="643.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="692.9" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.05%)</title><rect x="689.9" y="627.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$296/1401189718.get$Lambda (18 samples, 0.05%)</title><rect x="689.9" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="692.9" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$296 (18 samples, 0.05%)</title><rect x="689.9" y="595.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="692.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (82 samples, 0.24%)</title><rect x="690.5" y="643.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="693.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (43 samples, 0.13%)</title><rect x="690.5" y="627.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="693.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (39 samples, 0.12%)</title><rect x="692.1" y="627.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="695.1" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (39 samples, 0.12%)</title><rect x="692.1" y="611.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="695.1" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (39 samples, 0.12%)</title><rect x="692.1" y="595.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="695.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (252 samples, 0.75%)</title><rect x="693.4" y="675.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.04%)</title><rect x="693.4" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="696.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.04%)</title><rect x="693.4" y="643.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$247/1379068579.get$Lambda (15 samples, 0.04%)</title><rect x="693.4" y="627.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="696.4" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$247 (15 samples, 0.04%)</title><rect x="693.4" y="611.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="696.4" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (146 samples, 0.43%)</title><rect x="693.9" y="659.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.9" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (61 samples, 0.18%)</title><rect x="693.9" y="643.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.9" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (61 samples, 0.18%)</title><rect x="693.9" y="627.0" width="2.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="696.9" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (85 samples, 0.25%)</title><rect x="696.1" y="643.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="699.1" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (85 samples, 0.25%)</title><rect x="696.1" y="627.0" width="3.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="699.1" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (91 samples, 0.27%)</title><rect x="699.1" y="659.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.1" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (91 samples, 0.27%)</title><rect x="699.1" y="643.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="702.1" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (72 samples, 0.21%)</title><rect x="702.3" y="675.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (72 samples, 0.21%)</title><rect x="702.3" y="659.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (72 samples, 0.21%)</title><rect x="702.3" y="643.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="705.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (72 samples, 0.21%)</title><rect x="702.3" y="627.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="705.3" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (25 samples, 0.07%)</title><rect x="702.3" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.3" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (25 samples, 0.07%)</title><rect x="702.3" y="595.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="705.3" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (47 samples, 0.14%)</title><rect x="703.1" y="611.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.1" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (47 samples, 0.14%)</title><rect x="703.1" y="595.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (47 samples, 0.14%)</title><rect x="703.1" y="579.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (47 samples, 0.14%)</title><rect x="703.1" y="563.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.1" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (47 samples, 0.14%)</title><rect x="703.1" y="547.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.1" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (47 samples, 0.14%)</title><rect x="703.1" y="531.0" width="1.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="706.1" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (15 samples, 0.04%)</title><rect x="704.8" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (15 samples, 0.04%)</title><rect x="704.8" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.8" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.04%)</title><rect x="704.8" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="707.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (15 samples, 0.04%)</title><rect x="704.8" y="627.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.04%)</title><rect x="704.8" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.8" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.04%)</title><rect x="704.8" y="595.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="707.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (39 samples, 0.12%)</title><rect x="705.3" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (39 samples, 0.12%)</title><rect x="705.3" y="659.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="708.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (39 samples, 0.12%)</title><rect x="705.3" y="643.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="708.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (39 samples, 0.12%)</title><rect x="705.3" y="627.0" width="1.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="708.3" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13,788 samples, 40.96%)</title><rect x="706.7" y="691.0" width="483.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.7" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (137 samples, 0.41%)</title><rect x="706.7" y="675.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.7" y="686.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (137 samples, 0.41%)</title><rect x="706.7" y="659.0" width="4.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="709.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,651 samples, 40.55%)</title><rect x="711.5" y="675.0" width="478.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.5" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,651 samples, 40.55%)</title><rect x="711.5" y="659.0" width="478.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.5" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,651 samples, 40.55%)</title><rect x="711.5" y="643.0" width="478.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.5" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6,687 samples, 19.87%)</title><rect x="711.5" y="627.0" width="234.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.5" y="638.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (6,687 samples, 19.87%)</title><rect x="711.5" y="611.0" width="234.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.5" y="622.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (6,232 samples, 18.51%)</title><rect x="711.5" y="595.0" width="218.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.5" y="606.0">RequestHandler1_entity.handle..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (396 samples, 1.18%)</title><rect x="711.5" y="579.0" width="13.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (396 samples, 1.18%)</title><rect x="711.5" y="563.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (396 samples, 1.18%)</title><rect x="711.5" y="547.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="714.5" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (396 samples, 1.18%)</title><rect x="711.5" y="531.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="714.5" y="542.0"></text>
</g>
<g>
<title>java.lang.String (224 samples, 0.67%)</title><rect x="711.5" y="515.0" width="7.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="714.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (172 samples, 0.51%)</title><rect x="719.3" y="515.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.3" y="526.0"></text>
</g>
<g>
<title>byte[] (172 samples, 0.51%)</title><rect x="719.3" y="499.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="722.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (5,836 samples, 17.34%)</title><rect x="725.4" y="579.0" width="204.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.4" y="590.0">ru/mail/polis/service/daria..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (358 samples, 1.06%)</title><rect x="725.4" y="563.0" width="12.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.4" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (358 samples, 1.06%)</title><rect x="725.4" y="547.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (358 samples, 1.06%)</title><rect x="725.4" y="531.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.4" y="542.0"></text>
</g>
<g>
<title>java.lang.String (135 samples, 0.40%)</title><rect x="725.4" y="515.0" width="4.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="728.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (223 samples, 0.66%)</title><rect x="730.1" y="515.0" width="7.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="733.1" y="526.0"></text>
</g>
<g>
<title>byte[] (223 samples, 0.66%)</title><rect x="730.1" y="499.0" width="7.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="733.1" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (560 samples, 1.66%)</title><rect x="737.9" y="563.0" width="19.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.9" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (560 samples, 1.66%)</title><rect x="737.9" y="547.0" width="19.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.9" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (173 samples, 0.51%)</title><rect x="737.9" y="531.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (173 samples, 0.51%)</title><rect x="737.9" y="515.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.9" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$297/247412214.get$Lambda (173 samples, 0.51%)</title><rect x="737.9" y="499.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$297 (173 samples, 0.51%)</title><rect x="737.9" y="483.0" width="6.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="740.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (387 samples, 1.15%)</title><rect x="744.0" y="531.0" width="13.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (387 samples, 1.15%)</title><rect x="744.0" y="515.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (255 samples, 0.76%)</title><rect x="744.0" y="499.0" width="8.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="747.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (130 samples, 0.39%)</title><rect x="752.9" y="499.0" width="4.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="755.9" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (4,244 samples, 12.61%)</title><rect x="757.5" y="563.0" width="148.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="760.5" y="574.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>java.util.ArrayList (9 samples, 0.03%)</title><rect x="757.5" y="547.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="760.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.04%)</title><rect x="757.8" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="760.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.04%)</title><rect x="757.8" y="531.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$145/1854348690.get$Lambda (12 samples, 0.04%)</title><rect x="757.8" y="515.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.ClusterServiceImpl$$Lambda$145 (12 samples, 0.04%)</title><rect x="757.8" y="499.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="760.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (24 samples, 0.07%)</title><rect x="758.3" y="547.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (24 samples, 0.07%)</title><rect x="758.3" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="761.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.07%)</title><rect x="758.3" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (24 samples, 0.07%)</title><rect x="758.3" y="499.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="761.3" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (24 samples, 0.07%)</title><rect x="758.3" y="483.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.3" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.07%)</title><rect x="758.3" y="467.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="761.3" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (26 samples, 0.08%)</title><rect x="759.1" y="547.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="762.1" y="558.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (21 samples, 0.06%)</title><rect x="759.1" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.1" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (21 samples, 0.06%)</title><rect x="759.1" y="515.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="762.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (35 samples, 0.10%)</title><rect x="760.0" y="547.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="763.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (35 samples, 0.10%)</title><rect x="760.0" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="763.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniExceptionally (20 samples, 0.06%)</title><rect x="760.0" y="515.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="763.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (15 samples, 0.04%)</title><rect x="760.7" y="515.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="763.7" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (15 samples, 0.04%)</title><rect x="760.7" y="499.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="763.7" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (44 samples, 0.13%)</title><rect x="761.3" y="547.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (44 samples, 0.13%)</title><rect x="761.3" y="531.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (29 samples, 0.09%)</title><rect x="761.3" y="515.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="764.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (15 samples, 0.04%)</title><rect x="762.3" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (15 samples, 0.04%)</title><rect x="762.3" y="499.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="765.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.proxy (3,386 samples, 10.06%)</title><rect x="762.8" y="547.0" width="118.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="765.8" y="558.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.04%)</title><rect x="762.8" y="531.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.04%)</title><rect x="762.8" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="765.8" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$136/2054529164.get$Lambda (15 samples, 0.04%)</title><rect x="762.8" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="765.8" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$136 (15 samples, 0.04%)</title><rect x="762.8" y="483.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="765.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (70 samples, 0.21%)</title><rect x="763.3" y="531.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (70 samples, 0.21%)</title><rect x="763.3" y="515.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (40 samples, 0.12%)</title><rect x="763.3" y="499.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="766.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.09%)</title><rect x="764.7" y="499.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="767.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (30 samples, 0.09%)</title><rect x="764.7" y="483.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="767.7" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (30 samples, 0.09%)</title><rect x="764.7" y="467.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="767.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (2,124 samples, 6.31%)</title><rect x="765.8" y="531.0" width="74.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.8" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,124 samples, 6.31%)</title><rect x="765.8" y="515.0" width="74.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="768.8" y="526.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,124 samples, 6.31%)</title><rect x="765.8" y="499.0" width="74.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.8" y="510.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (2,124 samples, 6.31%)</title><rect x="765.8" y="483.0" width="74.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.8" y="494.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.04%)</title><rect x="765.8" y="467.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="768.8" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.04%)</title><rect x="765.8" y="451.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$133/478252441.get$Lambda (13 samples, 0.04%)</title><rect x="765.8" y="435.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$133 (13 samples, 0.04%)</title><rect x="765.8" y="419.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="768.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (85 samples, 0.25%)</title><rect x="766.2" y="467.0" width="3.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (85 samples, 0.25%)</title><rect x="766.2" y="451.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="769.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (44 samples, 0.13%)</title><rect x="766.2" y="435.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="769.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.12%)</title><rect x="767.8" y="435.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (41 samples, 0.12%)</title><rect x="767.8" y="419.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (41 samples, 0.12%)</title><rect x="767.8" y="403.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="770.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (95 samples, 0.28%)</title><rect x="769.2" y="467.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.2" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (95 samples, 0.28%)</title><rect x="769.2" y="451.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 0.17%)</title><rect x="769.2" y="435.0" width="2.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="772.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.12%)</title><rect x="771.2" y="435.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="774.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (39 samples, 0.12%)</title><rect x="771.2" y="419.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.2" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (39 samples, 0.12%)</title><rect x="771.2" y="403.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="774.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (54 samples, 0.16%)</title><rect x="772.5" y="467.0" width="1.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="775.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (79 samples, 0.23%)</title><rect x="774.4" y="467.0" width="2.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="777.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,060 samples, 3.15%)</title><rect x="777.2" y="467.0" width="37.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="780.2" y="478.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (130 samples, 0.39%)</title><rect x="777.2" y="451.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collection.stream (109 samples, 0.32%)</title><rect x="777.2" y="435.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.2" y="446.0"></text>
</g>
<g>
<title>java/util/List.spliterator (41 samples, 0.12%)</title><rect x="777.2" y="419.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="780.2" y="430.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (41 samples, 0.12%)</title><rect x="777.2" y="403.0" width="1.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="780.2" y="414.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (68 samples, 0.20%)</title><rect x="778.6" y="419.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.6" y="430.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (68 samples, 0.20%)</title><rect x="778.6" y="403.0" width="2.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="781.6" y="414.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (21 samples, 0.06%)</title><rect x="781.0" y="435.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="784.0" y="446.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (21 samples, 0.06%)</title><rect x="781.0" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.0" y="430.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (21 samples, 0.06%)</title><rect x="781.0" y="403.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="784.0" y="414.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$57/79290965.get (21 samples, 0.06%)</title><rect x="781.0" y="387.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.0" y="398.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (21 samples, 0.06%)</title><rect x="781.0" y="371.0" width="0.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="784.0" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (381 samples, 1.13%)</title><rect x="781.8" y="451.0" width="13.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="784.8" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (381 samples, 1.13%)</title><rect x="781.8" y="435.0" width="13.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="784.8" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (19 samples, 0.06%)</title><rect x="781.8" y="419.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="784.8" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (28 samples, 0.08%)</title><rect x="782.4" y="419.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="785.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (43 samples, 0.13%)</title><rect x="783.4" y="419.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="786.4" y="430.0"></text>
</g>
<g>
<title>java.util.TreeSet (10 samples, 0.03%)</title><rect x="784.9" y="419.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="787.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.11%)</title><rect x="785.3" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.11%)</title><rect x="785.3" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="788.3" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (37 samples, 0.11%)</title><rect x="785.3" y="387.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.3" y="398.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (37 samples, 0.11%)</title><rect x="785.3" y="371.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="788.3" y="382.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (163 samples, 0.48%)</title><rect x="786.6" y="419.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.6" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (163 samples, 0.48%)</title><rect x="786.6" y="403.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.6" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (163 samples, 0.48%)</title><rect x="786.6" y="387.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="789.6" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (163 samples, 0.48%)</title><rect x="786.6" y="371.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.6" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (61 samples, 0.18%)</title><rect x="786.6" y="355.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.6" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (61 samples, 0.18%)</title><rect x="786.6" y="339.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (61 samples, 0.18%)</title><rect x="786.6" y="323.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.6" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (61 samples, 0.18%)</title><rect x="786.6" y="307.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.6" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (61 samples, 0.18%)</title><rect x="786.6" y="291.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="789.6" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (61 samples, 0.18%)</title><rect x="786.6" y="275.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.6" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (61 samples, 0.18%)</title><rect x="786.6" y="259.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="789.6" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (61 samples, 0.18%)</title><rect x="786.6" y="243.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.6" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.18%)</title><rect x="786.6" y="227.0" width="2.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="789.6" y="238.0"></text>
</g>
<g>
<title>java/util/List.copyOf (61 samples, 0.18%)</title><rect x="788.7" y="355.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.7" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (61 samples, 0.18%)</title><rect x="788.7" y="339.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="791.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (35 samples, 0.10%)</title><rect x="788.7" y="323.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (35 samples, 0.10%)</title><rect x="788.7" y="307.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="791.7" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.10%)</title><rect x="788.7" y="291.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="791.7" y="302.0"></text>
</g>
<g>
<title>java/util/List.of (26 samples, 0.08%)</title><rect x="789.9" y="323.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="792.9" y="334.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (26 samples, 0.08%)</title><rect x="789.9" y="307.0" width="0.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="792.9" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 0.12%)</title><rect x="790.8" y="355.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.8" y="366.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 0.12%)</title><rect x="790.8" y="339.0" width="1.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="793.8" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (35 samples, 0.10%)</title><rect x="792.3" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="795.3" y="430.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (35 samples, 0.10%)</title><rect x="792.3" y="403.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="795.3" y="414.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (46 samples, 0.14%)</title><rect x="793.5" y="419.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="796.5" y="430.0"></text>
</g>
<g>
<title>java.util.TreeMap (46 samples, 0.14%)</title><rect x="793.5" y="403.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="796.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (18 samples, 0.05%)</title><rect x="795.1" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="798.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (384 samples, 1.14%)</title><rect x="795.7" y="451.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.7" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (384 samples, 1.14%)</title><rect x="795.7" y="435.0" width="13.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="798.7" y="446.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (354 samples, 1.05%)</title><rect x="795.7" y="419.0" width="12.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.7" y="430.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (354 samples, 1.05%)</title><rect x="795.7" y="403.0" width="12.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.7" y="414.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (354 samples, 1.05%)</title><rect x="795.7" y="387.0" width="12.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="798.7" y="398.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (68 samples, 0.20%)</title><rect x="795.7" y="371.0" width="2.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="798.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (87 samples, 0.26%)</title><rect x="798.1" y="371.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="801.1" y="382.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (87 samples, 0.26%)</title><rect x="798.1" y="355.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="801.1" y="366.0"></text>
</g>
<g>
<title>byte[] (87 samples, 0.26%)</title><rect x="798.1" y="339.0" width="3.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="801.1" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (199 samples, 0.59%)</title><rect x="801.2" y="371.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="804.2" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (199 samples, 0.59%)</title><rect x="801.2" y="355.0" width="7.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.2" y="366.0"></text>
</g>
<g>
<title>java.lang.String (86 samples, 0.26%)</title><rect x="801.2" y="339.0" width="3.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="804.2" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (113 samples, 0.34%)</title><rect x="804.2" y="339.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.2" y="350.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.34%)</title><rect x="804.2" y="323.0" width="4.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="807.2" y="334.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (30 samples, 0.09%)</title><rect x="808.2" y="419.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="811.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (44 samples, 0.13%)</title><rect x="809.2" y="451.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.2" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (44 samples, 0.13%)</title><rect x="809.2" y="435.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="812.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (103 samples, 0.31%)</title><rect x="810.7" y="451.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="813.7" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (29 samples, 0.09%)</title><rect x="810.7" y="435.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="813.7" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (33 samples, 0.10%)</title><rect x="811.8" y="435.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.8" y="446.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.10%)</title><rect x="811.8" y="419.0" width="1.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="814.8" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (41 samples, 0.12%)</title><rect x="812.9" y="435.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="815.9" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (41 samples, 0.12%)</title><rect x="812.9" y="419.0" width="1.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="815.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (467 samples, 1.39%)</title><rect x="814.4" y="467.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="817.4" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (8 samples, 0.02%)</title><rect x="814.4" y="451.0" width="0.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="817.4" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.map (40 samples, 0.12%)</title><rect x="814.6" y="451.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$120/889968472.apply (40 samples, 0.12%)</title><rect x="814.6" y="435.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="817.6" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (17 samples, 0.05%)</title><rect x="814.6" y="419.0" width="0.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="817.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (23 samples, 0.07%)</title><rect x="815.2" y="419.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.2" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (23 samples, 0.07%)</title><rect x="815.2" y="403.0" width="0.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="818.2" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (57 samples, 0.17%)</title><rect x="816.0" y="451.0" width="2.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="819.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (19 samples, 0.06%)</title><rect x="818.0" y="451.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="821.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (19 samples, 0.06%)</title><rect x="818.0" y="435.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="821.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (17 samples, 0.05%)</title><rect x="818.7" y="451.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.7" y="462.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (17 samples, 0.05%)</title><rect x="818.7" y="435.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.7" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.of (17 samples, 0.05%)</title><rect x="818.7" y="419.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.7" y="430.0"></text>
</g>
<g>
<title>java.util.Optional (17 samples, 0.05%)</title><rect x="818.7" y="403.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="821.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (326 samples, 0.97%)</title><rect x="819.3" y="451.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="822.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (326 samples, 0.97%)</title><rect x="819.3" y="435.0" width="11.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="822.3" y="446.0"></text>
</g>
<g>
<title>java.lang.Class[] (24 samples, 0.07%)</title><rect x="819.3" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="822.3" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.10%)</title><rect x="820.1" y="419.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="823.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList (38 samples, 0.11%)</title><rect x="821.3" y="419.0" width="1.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="824.3" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (133 samples, 0.40%)</title><rect x="822.7" y="419.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="825.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (133 samples, 0.40%)</title><rect x="822.7" y="403.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.7" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (133 samples, 0.40%)</title><rect x="822.7" y="387.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="825.7" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (133 samples, 0.40%)</title><rect x="822.7" y="371.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.7" y="382.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (133 samples, 0.40%)</title><rect x="822.7" y="355.0" width="4.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="825.7" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (45 samples, 0.13%)</title><rect x="827.3" y="419.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="830.3" y="430.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (45 samples, 0.13%)</title><rect x="827.3" y="403.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (34 samples, 0.10%)</title><rect x="827.3" y="387.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="830.3" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (34 samples, 0.10%)</title><rect x="827.3" y="371.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="830.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (11 samples, 0.03%)</title><rect x="828.5" y="387.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.5" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (11 samples, 0.03%)</title><rect x="828.5" y="371.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="831.5" y="382.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (52 samples, 0.15%)</title><rect x="828.9" y="419.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="831.9" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (52 samples, 0.15%)</title><rect x="828.9" y="403.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="831.9" y="414.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (52 samples, 0.15%)</title><rect x="828.9" y="387.0" width="1.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="831.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (271 samples, 0.81%)</title><rect x="830.7" y="467.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="833.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (67 samples, 0.20%)</title><rect x="830.7" y="451.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.7" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (35 samples, 0.10%)</title><rect x="830.7" y="435.0" width="1.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="833.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (32 samples, 0.10%)</title><rect x="832.0" y="435.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (32 samples, 0.10%)</title><rect x="832.0" y="419.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (32 samples, 0.10%)</title><rect x="832.0" y="403.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="835.0" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.07%)</title><rect x="833.1" y="451.0" width="0.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="836.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (181 samples, 0.54%)</title><rect x="833.9" y="451.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (30 samples, 0.09%)</title><rect x="833.9" y="435.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (30 samples, 0.09%)</title><rect x="833.9" y="419.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="836.9" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$127/1782430418.get$Lambda (16 samples, 0.05%)</title><rect x="833.9" y="403.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="836.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$127 (16 samples, 0.05%)</title><rect x="833.9" y="387.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="836.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$129/1151412604.get$Lambda (14 samples, 0.04%)</title><rect x="834.4" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.4" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$129 (14 samples, 0.04%)</title><rect x="834.4" y="387.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="837.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (151 samples, 0.45%)</title><rect x="834.9" y="435.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (151 samples, 0.45%)</title><rect x="834.9" y="419.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="837.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (85 samples, 0.25%)</title><rect x="834.9" y="403.0" width="3.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="837.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.20%)</title><rect x="837.9" y="403.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="840.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (66 samples, 0.20%)</title><rect x="837.9" y="387.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="840.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (66 samples, 0.20%)</title><rect x="837.9" y="371.0" width="2.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="840.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequest (1,177 samples, 3.50%)</title><rect x="840.2" y="531.0" width="41.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="843.2" y="542.0">ru/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (436 samples, 1.30%)</title><rect x="840.2" y="515.0" width="15.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="843.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (58 samples, 0.17%)</title><rect x="840.2" y="499.0" width="2.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="843.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (378 samples, 1.12%)</title><rect x="842.3" y="499.0" width="13.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="845.3" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (366 samples, 1.09%)</title><rect x="842.3" y="483.0" width="12.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="845.3" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (366 samples, 1.09%)</title><rect x="842.3" y="467.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.3" y="478.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (14 samples, 0.04%)</title><rect x="842.3" y="451.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="845.3" y="462.0"></text>
</g>
<g>
<title>java.util.ArrayList (26 samples, 0.08%)</title><rect x="842.8" y="451.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="845.8" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (46 samples, 0.14%)</title><rect x="843.7" y="451.0" width="1.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="846.7" y="462.0"></text>
</g>
<g>
<title>java.util.TreeSet (20 samples, 0.06%)</title><rect x="845.3" y="451.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="848.3" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.09%)</title><rect x="846.0" y="451.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.0" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.09%)</title><rect x="846.0" y="435.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.get$Lambda (31 samples, 0.09%)</title><rect x="846.0" y="419.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="849.0" y="430.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$112 (31 samples, 0.09%)</title><rect x="846.0" y="403.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="849.0" y="414.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (31 samples, 0.09%)</title><rect x="847.1" y="451.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="850.1" y="462.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (31 samples, 0.09%)</title><rect x="847.1" y="435.0" width="1.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="850.1" y="446.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (151 samples, 0.45%)</title><rect x="848.1" y="451.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.1" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$112/321938336.accept (151 samples, 0.45%)</title><rect x="848.1" y="435.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.1" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (151 samples, 0.45%)</title><rect x="848.1" y="419.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.1" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (47 samples, 0.14%)</title><rect x="848.1" y="403.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="851.1" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$115/454153384.accept (47 samples, 0.14%)</title><rect x="848.1" y="387.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="851.1" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (47 samples, 0.14%)</title><rect x="848.1" y="371.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.1" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.14%)</title><rect x="848.1" y="355.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="851.1" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (47 samples, 0.14%)</title><rect x="848.1" y="339.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.1" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.14%)</title><rect x="848.1" y="323.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="851.1" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (47 samples, 0.14%)</title><rect x="848.1" y="307.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.1" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (47 samples, 0.14%)</title><rect x="848.1" y="291.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="851.1" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (47 samples, 0.14%)</title><rect x="848.1" y="275.0" width="1.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="851.1" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (59 samples, 0.18%)</title><rect x="849.8" y="403.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.8" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (59 samples, 0.18%)</title><rect x="849.8" y="387.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.8" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (29 samples, 0.09%)</title><rect x="849.8" y="371.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="852.8" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (29 samples, 0.09%)</title><rect x="849.8" y="355.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.8" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.09%)</title><rect x="849.8" y="339.0" width="1.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="852.8" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (30 samples, 0.09%)</title><rect x="850.8" y="371.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.8" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (30 samples, 0.09%)</title><rect x="850.8" y="355.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="853.8" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (45 samples, 0.13%)</title><rect x="851.9" y="403.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.9" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (45 samples, 0.13%)</title><rect x="851.9" y="387.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="854.9" y="398.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (47 samples, 0.14%)</title><rect x="853.4" y="451.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.4" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap (47 samples, 0.14%)</title><rect x="853.4" y="435.0" width="1.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="856.4" y="446.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (12 samples, 0.04%)</title><rect x="855.1" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="858.1" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (12 samples, 0.04%)</title><rect x="855.1" y="467.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.1" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (12 samples, 0.04%)</title><rect x="855.1" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="858.1" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (52 samples, 0.15%)</title><rect x="855.5" y="515.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.15%)</title><rect x="855.5" y="499.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="858.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.15%)</title><rect x="855.5" y="483.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (21 samples, 0.06%)</title><rect x="855.5" y="467.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="858.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.09%)</title><rect x="856.2" y="467.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.2" y="478.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.09%)</title><rect x="856.2" y="451.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="859.2" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.formHttpRequestBuilder (689 samples, 2.05%)</title><rect x="857.3" y="515.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.3" y="526.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (92 samples, 0.27%)</title><rect x="857.3" y="499.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (92 samples, 0.27%)</title><rect x="857.3" y="483.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="860.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1418385211.invoke (92 samples, 0.27%)</title><rect x="857.3" y="467.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.3" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (92 samples, 0.27%)</title><rect x="857.3" y="451.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.3" y="462.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (22 samples, 0.07%)</title><rect x="857.3" y="435.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.3" y="446.0"></text>
</g>
<g>
<title>java.lang.String (22 samples, 0.07%)</title><rect x="857.3" y="419.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="860.3" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (70 samples, 0.21%)</title><rect x="858.1" y="435.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (70 samples, 0.21%)</title><rect x="858.1" y="419.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.1" y="430.0"></text>
</g>
<g>
<title>byte[] (70 samples, 0.21%)</title><rect x="858.1" y="403.0" width="2.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="861.1" y="414.0"></text>
</g>
<g>
<title>java/net/URI.create (408 samples, 1.21%)</title><rect x="860.6" y="499.0" width="14.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="863.6" y="510.0"></text>
</g>
<g>
<title>java.net.URI (95 samples, 0.28%)</title><rect x="860.6" y="483.0" width="3.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="863.6" y="494.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (313 samples, 0.93%)</title><rect x="863.9" y="483.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.9" y="494.0"></text>
</g>
<g>
<title>java.net.URI$Parser (36 samples, 0.11%)</title><rect x="863.9" y="467.0" width="1.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="866.9" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (277 samples, 0.82%)</title><rect x="865.2" y="467.0" width="9.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.2" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (49 samples, 0.15%)</title><rect x="865.2" y="451.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.2" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (49 samples, 0.15%)</title><rect x="865.2" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.2" y="446.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.05%)</title><rect x="865.2" y="419.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="868.2" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (31 samples, 0.09%)</title><rect x="865.8" y="419.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="868.8" y="430.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.09%)</title><rect x="865.8" y="403.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="868.8" y="414.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (228 samples, 0.68%)</title><rect x="866.9" y="451.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.9" y="462.0"></text>
</g>
<g>
<title>java/lang/String.substring (121 samples, 0.36%)</title><rect x="866.9" y="435.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="869.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (121 samples, 0.36%)</title><rect x="866.9" y="419.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="869.9" y="430.0"></text>
</g>
<g>
<title>java.lang.String (62 samples, 0.18%)</title><rect x="866.9" y="403.0" width="2.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="869.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (59 samples, 0.18%)</title><rect x="869.0" y="403.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.0" y="414.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.18%)</title><rect x="869.0" y="387.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="872.0" y="398.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (107 samples, 0.32%)</title><rect x="871.1" y="435.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="874.1" y="446.0"></text>
</g>
<g>
<title>java/lang/String.substring (52 samples, 0.15%)</title><rect x="871.1" y="419.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.1" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (52 samples, 0.15%)</title><rect x="871.1" y="403.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.1" y="414.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.07%)</title><rect x="871.1" y="387.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="874.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.09%)</title><rect x="871.9" y="387.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.9" y="398.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.09%)</title><rect x="871.9" y="371.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="874.9" y="382.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (55 samples, 0.16%)</title><rect x="872.9" y="419.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="875.9" y="430.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (55 samples, 0.16%)</title><rect x="872.9" y="403.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="875.9" y="414.0"></text>
</g>
<g>
<title>java/lang/String.substring (55 samples, 0.16%)</title><rect x="872.9" y="387.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="875.9" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (55 samples, 0.16%)</title><rect x="872.9" y="371.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="875.9" y="382.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.05%)</title><rect x="872.9" y="355.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="875.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (37 samples, 0.11%)</title><rect x="873.6" y="355.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="876.6" y="366.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.11%)</title><rect x="873.6" y="339.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="876.6" y="350.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (110 samples, 0.33%)</title><rect x="874.9" y="499.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="877.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (38 samples, 0.11%)</title><rect x="874.9" y="483.0" width="1.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="877.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (72 samples, 0.21%)</title><rect x="876.2" y="483.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="879.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (15 samples, 0.04%)</title><rect x="876.2" y="467.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="879.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (57 samples, 0.17%)</title><rect x="876.7" y="467.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.7" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (57 samples, 0.17%)</title><rect x="876.7" y="451.0" width="2.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="879.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (79 samples, 0.23%)</title><rect x="878.7" y="499.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (79 samples, 0.23%)</title><rect x="878.7" y="483.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (79 samples, 0.23%)</title><rect x="878.7" y="467.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.7" y="478.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (79 samples, 0.23%)</title><rect x="878.7" y="451.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (37 samples, 0.11%)</title><rect x="878.7" y="435.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.7" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (37 samples, 0.11%)</title><rect x="878.7" y="419.0" width="1.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="881.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$111/596646507.apply (42 samples, 0.12%)</title><rect x="880.0" y="435.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="883.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (42 samples, 0.12%)</title><rect x="880.0" y="419.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="883.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.05%)</title><rect x="880.0" y="403.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="883.0" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (25 samples, 0.07%)</title><rect x="880.6" y="403.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="883.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (25 samples, 0.07%)</title><rect x="880.6" y="387.0" width="0.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="883.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (43 samples, 0.13%)</title><rect x="881.5" y="547.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="884.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService.get (43 samples, 0.13%)</title><rect x="881.5" y="531.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="884.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="881.5" y="515.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="884.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="881.5" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="884.5" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/BasicService$$Lambda$297/247412214.get$Lambda (14 samples, 0.04%)</title><rect x="881.5" y="483.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="884.5" y="494.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.BasicService$$Lambda$297 (14 samples, 0.04%)</title><rect x="881.5" y="467.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="884.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (29 samples, 0.09%)</title><rect x="882.0" y="515.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (29 samples, 0.09%)</title><rect x="882.0" y="499.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.0" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (17 samples, 0.05%)</title><rect x="882.0" y="483.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="885.0" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (12 samples, 0.04%)</title><rect x="882.6" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="885.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.getAckResponses (240 samples, 0.71%)</title><rect x="883.0" y="547.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="886.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (13 samples, 0.04%)</title><rect x="883.0" y="531.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="886.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (10 samples, 0.03%)</title><rect x="883.4" y="531.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="886.4" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (19 samples, 0.06%)</title><rect x="883.8" y="531.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="886.8" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.04%)</title><rect x="884.5" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="887.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.04%)</title><rect x="884.5" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="887.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.get$Lambda (15 samples, 0.04%)</title><rect x="884.5" y="499.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="887.5" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.Futures$$Lambda$142 (15 samples, 0.04%)</title><rect x="884.5" y="483.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="887.5" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (162 samples, 0.48%)</title><rect x="885.0" y="531.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="888.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$142/1152151799.accept (162 samples, 0.48%)</title><rect x="885.0" y="515.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures.lambda$getAckResponses$1 (162 samples, 0.48%)</title><rect x="885.0" y="499.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="888.0" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.15%)</title><rect x="885.0" y="483.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="888.0" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.15%)</title><rect x="885.0" y="467.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.0" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/Futures$$Lambda$144/1171580348.get$Lambda (52 samples, 0.15%)</title><rect x="885.0" y="451.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="888.0" y="462.0"></text>
</g>
<g>
<title>ru.mail.polis.service.dariagap.Futures$$Lambda$144 (52 samples, 0.15%)</title><rect x="885.0" y="435.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="888.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (110 samples, 0.33%)</title><rect x="886.8" y="483.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (110 samples, 0.33%)</title><rect x="886.8" y="467.0" width="3.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (67 samples, 0.20%)</title><rect x="886.8" y="451.0" width="2.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="889.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (9 samples, 0.03%)</title><rect x="889.2" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="892.2" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (9 samples, 0.03%)</title><rect x="889.2" y="435.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="892.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.10%)</title><rect x="889.5" y="451.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="892.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (33 samples, 0.10%)</title><rect x="889.5" y="435.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (33 samples, 0.10%)</title><rect x="889.5" y="419.0" width="1.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="892.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (21 samples, 0.06%)</title><rect x="890.7" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.7" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.03%)</title><rect x="890.7" y="515.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="893.7" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (10 samples, 0.03%)</title><rect x="891.1" y="515.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="894.1" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (425 samples, 1.26%)</title><rect x="891.4" y="547.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="894.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap (23 samples, 0.07%)</title><rect x="891.4" y="531.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="894.4" y="542.0"></text>
</g>
<g>
<title>java.util.HashSet (11 samples, 0.03%)</title><rect x="892.2" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="895.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (28 samples, 0.08%)</title><rect x="892.6" y="531.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="895.6" y="542.0"></text>
</g>
<g>
<title>java.lang.Integer (28 samples, 0.08%)</title><rect x="892.6" y="515.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="895.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (78 samples, 0.23%)</title><rect x="893.6" y="531.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="896.6" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1122805102.invoke (78 samples, 0.23%)</title><rect x="893.6" y="515.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (78 samples, 0.23%)</title><rect x="893.6" y="499.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (78 samples, 0.23%)</title><rect x="893.6" y="483.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (78 samples, 0.23%)</title><rect x="893.6" y="467.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.6" y="478.0"></text>
</g>
<g>
<title>byte[] (78 samples, 0.23%)</title><rect x="893.6" y="451.0" width="2.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="896.6" y="462.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (53 samples, 0.16%)</title><rect x="896.3" y="531.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.3" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (21 samples, 0.06%)</title><rect x="896.3" y="515.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="899.3" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (32 samples, 0.10%)</title><rect x="897.1" y="515.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.1" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (32 samples, 0.10%)</title><rect x="897.1" y="499.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="900.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (13 samples, 0.04%)</title><rect x="898.2" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="901.2" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (13 samples, 0.04%)</title><rect x="898.2" y="515.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="901.2" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.put (83 samples, 0.25%)</title><rect x="898.6" y="531.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (83 samples, 0.25%)</title><rect x="898.6" y="515.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="901.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (44 samples, 0.13%)</title><rect x="898.6" y="499.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.6" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (44 samples, 0.13%)</title><rect x="898.6" y="483.0" width="1.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="901.6" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (39 samples, 0.12%)</title><rect x="900.2" y="499.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="903.2" y="510.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (39 samples, 0.12%)</title><rect x="900.2" y="483.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="903.2" y="494.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (15 samples, 0.04%)</title><rect x="901.5" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.5" y="542.0"></text>
</g>
<g>
<title>java.util.HashMap (15 samples, 0.04%)</title><rect x="901.5" y="515.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="904.5" y="526.0"></text>
</g>
<g>
<title>java/util/HashSet.add (103 samples, 0.31%)</title><rect x="902.1" y="531.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.put (103 samples, 0.31%)</title><rect x="902.1" y="515.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (103 samples, 0.31%)</title><rect x="902.1" y="499.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (52 samples, 0.15%)</title><rect x="902.1" y="483.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.1" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (52 samples, 0.15%)</title><rect x="902.1" y="467.0" width="1.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="905.1" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (51 samples, 0.15%)</title><rect x="903.9" y="483.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="906.9" y="494.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (51 samples, 0.15%)</title><rect x="903.9" y="467.0" width="1.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="906.9" y="478.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (18 samples, 0.05%)</title><rect x="905.7" y="531.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (18 samples, 0.05%)</title><rect x="905.7" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.7" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (18 samples, 0.05%)</title><rect x="905.7" y="499.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="908.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.sendResponseFromFuture (674 samples, 2.00%)</title><rect x="906.3" y="563.0" width="23.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="909.3" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (142 samples, 0.42%)</title><rect x="906.3" y="547.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (142 samples, 0.42%)</title><rect x="906.3" y="531.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="909.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util$$Lambda$148/1195671230.get$Lambda (142 samples, 0.42%)</title><rect x="906.3" y="515.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="909.3" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.util.Util$$Lambda$148 (142 samples, 0.42%)</title><rect x="906.3" y="499.0" width="5.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="909.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (532 samples, 1.58%)</title><rect x="911.3" y="547.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (532 samples, 1.58%)</title><rect x="911.3" y="531.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="914.3" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (345 samples, 1.02%)</title><rect x="911.3" y="515.0" width="12.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="914.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (183 samples, 0.54%)</title><rect x="923.4" y="515.0" width="6.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.4" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (183 samples, 0.54%)</title><rect x="923.4" y="499.0" width="6.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="926.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (455 samples, 1.35%)</title><rect x="929.9" y="595.0" width="16.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="932.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (455 samples, 1.35%)</title><rect x="929.9" y="579.0" width="16.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (455 samples, 1.35%)</title><rect x="929.9" y="563.0" width="16.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="932.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (172 samples, 0.51%)</title><rect x="929.9" y="547.0" width="6.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="932.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (283 samples, 0.84%)</title><rect x="936.0" y="547.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="939.0" y="558.0"></text>
</g>
<g>
<title>byte[] (283 samples, 0.84%)</title><rect x="936.0" y="531.0" width="9.9" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="939.0" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2,195 samples, 6.52%)</title><rect x="945.9" y="627.0" width="76.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="948.9" y="638.0">one/nio/..</text>
</g>
<g>
<title>one.nio.http.Request (308 samples, 0.91%)</title><rect x="945.9" y="611.0" width="10.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="948.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (703 samples, 2.09%)</title><rect x="956.7" y="611.0" width="24.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="959.7" y="622.0">o..</text>
</g>
<g>
<title>java.lang.String[] (703 samples, 2.09%)</title><rect x="956.7" y="595.0" width="24.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="959.7" y="606.0">j..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,184 samples, 3.52%)</title><rect x="981.3" y="611.0" width="41.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="984.3" y="622.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,184 samples, 3.52%)</title><rect x="981.3" y="595.0" width="41.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.3" y="606.0">one..</text>
</g>
<g>
<title>char[] (635 samples, 1.89%)</title><rect x="981.3" y="579.0" width="22.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="984.3" y="590.0">c..</text>
</g>
<g>
<title>java.lang.String (238 samples, 0.71%)</title><rect x="1003.6" y="579.0" width="8.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1006.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (311 samples, 0.92%)</title><rect x="1011.9" y="579.0" width="10.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.9" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (311 samples, 0.92%)</title><rect x="1011.9" y="563.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (311 samples, 0.92%)</title><rect x="1011.9" y="547.0" width="10.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1014.9" y="558.0"></text>
</g>
<g>
<title>byte[] (311 samples, 0.92%)</title><rect x="1011.9" y="531.0" width="10.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1014.9" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (109 samples, 0.32%)</title><rect x="1022.8" y="627.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1025.8" y="638.0"></text>
</g>
<g>
<title>byte[] (109 samples, 0.32%)</title><rect x="1022.8" y="611.0" width="3.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1025.8" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (418 samples, 1.24%)</title><rect x="1026.6" y="627.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1029.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (418 samples, 1.24%)</title><rect x="1026.6" y="611.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1029.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (418 samples, 1.24%)</title><rect x="1026.6" y="595.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.6" y="606.0"></text>
</g>
<g>
<title>java.lang.String (222 samples, 0.66%)</title><rect x="1026.6" y="579.0" width="7.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1029.6" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (196 samples, 0.58%)</title><rect x="1034.4" y="579.0" width="6.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.4" y="590.0"></text>
</g>
<g>
<title>byte[] (196 samples, 0.58%)</title><rect x="1034.4" y="563.0" width="6.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1037.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,242 samples, 12.60%)</title><rect x="1041.3" y="627.0" width="148.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1044.3" y="638.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (4,242 samples, 12.60%)</title><rect x="1041.3" y="611.0" width="148.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1044.3" y="622.0">one/nio/util/Utf8.r..</text>
</g>
<g>
<title>char[] (2,165 samples, 6.43%)</title><rect x="1041.3" y="595.0" width="75.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1044.3" y="606.0">char[]</text>
</g>
<g>
<title>java.lang.String (754 samples, 2.24%)</title><rect x="1117.2" y="595.0" width="26.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="1120.2" y="606.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,323 samples, 3.93%)</title><rect x="1143.6" y="595.0" width="46.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1146.6" y="606.0">java..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,323 samples, 3.93%)</title><rect x="1143.6" y="579.0" width="46.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1146.6" y="590.0">java..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,323 samples, 3.93%)</title><rect x="1143.6" y="563.0" width="46.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1146.6" y="574.0">java..</text>
</g>
<g>
<title>byte[] (1,323 samples, 3.93%)</title><rect x="1143.6" y="547.0" width="46.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1146.6" y="558.0">byte[]</text>
</g>
</g>
</svg>
