<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (359 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=2468] (182 samples, 50.70%)</title><rect x="10.0" y="963.0" width="598.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="13.0" y="974.0">[NIO Selector #0 tid=2468]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (182 samples, 50.70%)</title><rect x="10.0" y="947.0" width="598.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 3.62%)</title><rect x="10.0" y="931.0" width="42.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="942.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 3.62%)</title><rect x="10.0" y="915.0" width="42.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="926.0">one/..</text>
</g>
<g>
<title>epoll_wait (13 samples, 3.62%)</title><rect x="10.0" y="899.0" width="42.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="910.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 3.34%)</title><rect x="13.3" y="883.0" width="39.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="16.3" y="894.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 3.34%)</title><rect x="13.3" y="867.0" width="39.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.3" y="878.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (12 samples, 3.34%)</title><rect x="13.3" y="851.0" width="39.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="16.3" y="862.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (12 samples, 3.34%)</title><rect x="13.3" y="835.0" width="39.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.3" y="846.0">do_..</text>
</g>
<g>
<title>ep_poll (12 samples, 3.34%)</title><rect x="13.3" y="819.0" width="39.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.3" y="830.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.56%)</title><rect x="13.3" y="803.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="16.3" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.56%)</title><rect x="13.3" y="787.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="16.3" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.56%)</title><rect x="13.3" y="771.0" width="6.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="16.3" y="782.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.56%)</title><rect x="13.3" y="755.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.3" y="766.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.28%)</title><rect x="16.6" y="739.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="19.6" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (10 samples, 2.79%)</title><rect x="19.9" y="803.0" width="32.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="22.9" y="814.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 2.79%)</title><rect x="19.9" y="787.0" width="32.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="22.9" y="798.0">sc..</text>
</g>
<g>
<title>schedule (10 samples, 2.79%)</title><rect x="19.9" y="771.0" width="32.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="22.9" y="782.0">sc..</text>
</g>
<g>
<title>__schedule (10 samples, 2.79%)</title><rect x="19.9" y="755.0" width="32.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="22.9" y="766.0">__..</text>
</g>
<g>
<title>finish_task_switch (10 samples, 2.79%)</title><rect x="19.9" y="739.0" width="32.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="22.9" y="750.0">fi..</text>
</g>
<g>
<title>one/nio/net/Session.process (169 samples, 47.08%)</title><rect x="52.7" y="931.0" width="555.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="55.7" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (169 samples, 47.08%)</title><rect x="52.7" y="915.0" width="555.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="55.7" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (161 samples, 44.85%)</title><rect x="52.7" y="899.0" width="529.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="55.7" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.28%)</title><rect x="52.7" y="883.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="55.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (155 samples, 43.18%)</title><rect x="56.0" y="883.0" width="509.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.0" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (155 samples, 43.18%)</title><rect x="56.0" y="867.0" width="509.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.0" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (154 samples, 42.90%)</title><rect x="56.0" y="851.0" width="506.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.0" y="862.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (58 samples, 16.16%)</title><rect x="56.0" y="835.0" width="190.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.0" y="846.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (57 samples, 15.88%)</title><rect x="56.0" y="819.0" width="187.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.0" y="830.0">one/nio/http/HttpSession..</text>
</g>
<g>
<title>one/nio/net/Session.write (57 samples, 15.88%)</title><rect x="56.0" y="803.0" width="187.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.0" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (56 samples, 15.60%)</title><rect x="56.0" y="787.0" width="184.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.0" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (56 samples, 15.60%)</title><rect x="56.0" y="771.0" width="184.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.0" y="782.0">one/nio/net/Session$Arra..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (56 samples, 15.60%)</title><rect x="56.0" y="755.0" width="184.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="59.0" y="766.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.56%)</title><rect x="56.0" y="739.0" width="6.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="59.0" y="750.0"></text>
</g>
<g>
<title>send (54 samples, 15.04%)</title><rect x="62.6" y="739.0" width="177.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="65.6" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 15.04%)</title><rect x="62.6" y="723.0" width="177.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="65.6" y="734.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>do_syscall_64 (54 samples, 15.04%)</title><rect x="62.6" y="707.0" width="177.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.6" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (44 samples, 12.26%)</title><rect x="65.9" y="691.0" width="144.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="68.9" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (44 samples, 12.26%)</title><rect x="65.9" y="675.0" width="144.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="68.9" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (43 samples, 11.98%)</title><rect x="69.2" y="659.0" width="141.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="72.2" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (42 samples, 11.70%)</title><rect x="69.2" y="643.0" width="138.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="72.2" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (42 samples, 11.70%)</title><rect x="69.2" y="627.0" width="138.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="72.2" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.28%)</title><rect x="69.2" y="611.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.2" y="622.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.28%)</title><rect x="69.2" y="595.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="72.2" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (41 samples, 11.42%)</title><rect x="72.5" y="611.0" width="134.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="75.5" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.28%)</title><rect x="72.5" y="595.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="75.5" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.28%)</title><rect x="72.5" y="579.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="75.5" y="590.0"></text>
</g>
<g>
<title>memset (1 samples, 0.28%)</title><rect x="72.5" y="563.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="75.5" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.28%)</title><rect x="75.7" y="595.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.7" y="606.0"></text>
</g>
<g>
<title>tcp_push (38 samples, 10.58%)</title><rect x="79.0" y="595.0" width="124.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="82.0" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (38 samples, 10.58%)</title><rect x="79.0" y="579.0" width="124.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.0" y="590.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.28%)</title><rect x="79.0" y="563.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="82.0" y="574.0"></text>
</g>
<g>
<title>tcp_mtu_probe (1 samples, 0.28%)</title><rect x="82.3" y="563.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.3" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (36 samples, 10.03%)</title><rect x="85.6" y="563.0" width="118.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="88.6" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (36 samples, 10.03%)</title><rect x="85.6" y="547.0" width="118.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="88.6" y="558.0">__tcp_transmit..</text>
</g>
<g>
<title>ip_queue_xmit (36 samples, 10.03%)</title><rect x="85.6" y="531.0" width="118.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="88.6" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (36 samples, 10.03%)</title><rect x="85.6" y="515.0" width="118.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="88.6" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (35 samples, 9.75%)</title><rect x="88.9" y="499.0" width="115.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.9" y="510.0">ip_local_out</text>
</g>
<g>
<title>ip_output (35 samples, 9.75%)</title><rect x="88.9" y="483.0" width="115.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="91.9" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (35 samples, 9.75%)</title><rect x="88.9" y="467.0" width="115.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="91.9" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (35 samples, 9.75%)</title><rect x="88.9" y="451.0" width="115.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="91.9" y="462.0">__ip_finish_ou..</text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 9.47%)</title><rect x="88.9" y="435.0" width="111.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.9" y="446.0">ip_finish_out..</text>
</g>
<g>
<title>__local_bh_enable_ip (29 samples, 8.08%)</title><rect x="88.9" y="419.0" width="95.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.9" y="430.0">__local_bh_..</text>
</g>
<g>
<title>do_softirq.part.0 (29 samples, 8.08%)</title><rect x="88.9" y="403.0" width="95.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="91.9" y="414.0">do_softirq...</text>
</g>
<g>
<title>do_softirq_own_stack (28 samples, 7.80%)</title><rect x="92.2" y="387.0" width="92.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="95.2" y="398.0">do_softirq_..</text>
</g>
<g>
<title>__softirqentry_text_start (28 samples, 7.80%)</title><rect x="92.2" y="371.0" width="92.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="95.2" y="382.0">__softirqen..</text>
</g>
<g>
<title>net_rx_action (27 samples, 7.52%)</title><rect x="95.5" y="355.0" width="88.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.5" y="366.0">net_rx_act..</text>
</g>
<g>
<title>process_backlog (26 samples, 7.24%)</title><rect x="98.7" y="339.0" width="85.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.7" y="350.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (25 samples, 6.96%)</title><rect x="102.0" y="323.0" width="82.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="105.0" y="334.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (25 samples, 6.96%)</title><rect x="102.0" y="307.0" width="82.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.0" y="318.0">__netif_r..</text>
</g>
<g>
<title>ip_rcv (24 samples, 6.69%)</title><rect x="102.0" y="291.0" width="78.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.0" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 6.41%)</title><rect x="105.3" y="275.0" width="75.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.3" y="286.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 6.41%)</title><rect x="105.3" y="259.0" width="75.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="108.3" y="270.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 6.41%)</title><rect x="105.3" y="243.0" width="75.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.3" y="254.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 6.41%)</title><rect x="105.3" y="227.0" width="75.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.3" y="238.0">ip_proto..</text>
</g>
<g>
<title>tcp_v4_rcv (23 samples, 6.41%)</title><rect x="105.3" y="211.0" width="75.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.3" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 6.41%)</title><rect x="105.3" y="195.0" width="75.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="108.3" y="206.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 6.41%)</title><rect x="105.3" y="179.0" width="75.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="108.3" y="190.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.56%)</title><rect x="105.3" y="163.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.3" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.56%)</title><rect x="105.3" y="147.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="108.3" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.56%)</title><rect x="105.3" y="131.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="108.3" y="142.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.28%)</title><rect x="105.3" y="115.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="108.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.28%)</title><rect x="108.6" y="115.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="111.6" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.28%)</title><rect x="108.6" y="99.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="111.6" y="110.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 1.67%)</title><rect x="111.9" y="163.0" width="19.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="114.9" y="174.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 1.67%)</title><rect x="111.9" y="147.0" width="19.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="114.9" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 1.67%)</title><rect x="111.9" y="131.0" width="19.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.9" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.84%)</title><rect x="111.9" y="115.0" width="9.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="114.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.84%)</title><rect x="111.9" y="99.0" width="9.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="114.9" y="110.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.56%)</title><rect x="115.2" y="83.0" width="6.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.2" y="94.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.84%)</title><rect x="121.8" y="115.0" width="9.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="124.8" y="126.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.84%)</title><rect x="121.8" y="99.0" width="9.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="124.8" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.56%)</title><rect x="125.0" y="83.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="128.0" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.56%)</title><rect x="125.0" y="67.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="128.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.28%)</title><rect x="128.3" y="51.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="131.3" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.28%)</title><rect x="128.3" y="35.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.3" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (14 samples, 3.90%)</title><rect x="131.6" y="163.0" width="46.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.6" y="174.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (14 samples, 3.90%)</title><rect x="131.6" y="147.0" width="46.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="134.6" y="158.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 3.62%)</title><rect x="134.9" y="131.0" width="42.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.9" y="142.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 3.62%)</title><rect x="134.9" y="115.0" width="42.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.9" y="126.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (13 samples, 3.62%)</title><rect x="134.9" y="99.0" width="42.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="137.9" y="110.0">__lo..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.28%)</title><rect x="177.6" y="163.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.6" y="174.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.28%)</title><rect x="177.6" y="147.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="180.6" y="158.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.28%)</title><rect x="180.9" y="291.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="183.9" y="302.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 1.39%)</title><rect x="184.2" y="419.0" width="16.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="187.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 1.39%)</title><rect x="184.2" y="403.0" width="16.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="187.2" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.56%)</title><rect x="190.8" y="387.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="193.8" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.28%)</title><rect x="190.8" y="371.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="193.8" y="382.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.28%)</title><rect x="190.8" y="355.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="193.8" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.28%)</title><rect x="194.1" y="371.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="197.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.28%)</title><rect x="197.4" y="387.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="200.4" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.28%)</title><rect x="200.6" y="435.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="203.6" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.28%)</title><rect x="203.9" y="595.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.9" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.28%)</title><rect x="203.9" y="579.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="206.9" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.28%)</title><rect x="203.9" y="563.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="206.9" y="574.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.28%)</title><rect x="207.2" y="643.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="210.2" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (9 samples, 2.51%)</title><rect x="210.5" y="691.0" width="29.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="213.5" y="702.0">ex..</text>
</g>
<g>
<title>schedule (8 samples, 2.23%)</title><rect x="213.8" y="675.0" width="26.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.8" y="686.0">s..</text>
</g>
<g>
<title>__schedule (8 samples, 2.23%)</title><rect x="213.8" y="659.0" width="26.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.8" y="670.0">_..</text>
</g>
<g>
<title>finish_task_switch (8 samples, 2.23%)</title><rect x="213.8" y="643.0" width="26.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.8" y="654.0">f..</text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.28%)</title><rect x="240.1" y="787.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="243.1" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.28%)</title><rect x="240.1" y="771.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="243.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.28%)</title><rect x="243.4" y="819.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="246.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.28%)</title><rect x="243.4" y="803.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="246.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.28%)</title><rect x="243.4" y="787.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="246.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.28%)</title><rect x="243.4" y="771.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.4" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.28%)</title><rect x="243.4" y="755.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.4" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.28%)</title><rect x="243.4" y="739.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="246.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ServiceImpl.put (96 samples, 26.74%)</title><rect x="246.7" y="835.0" width="315.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.7" y="846.0">ru/mail/polis/service/dariagap/ServiceImpl...</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.28%)</title><rect x="246.7" y="819.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.28%)</title><rect x="246.7" y="803.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.7" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="246.7" y="787.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="246.7" y="771.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="246.7" y="755.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.28%)</title><rect x="246.7" y="739.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsert (95 samples, 26.46%)</title><rect x="249.9" y="819.0" width="312.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.9" y="830.0">ru/mail/polis/dao/dariagap/RocksDBStorage...</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (91 samples, 25.35%)</title><rect x="249.9" y="803.0" width="299.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.9" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (91 samples, 25.35%)</title><rect x="249.9" y="787.0" width="299.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="252.9" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="253.2" y="771.0" width="3.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="256.2" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (86 samples, 23.96%)</title><rect x="256.5" y="771.0" width="282.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="259.5" y="782.0">Java_org_rocksdb_RocksDB_put__J_3BII_3..</text>
</g>
<g>
<title>cfree (1 samples, 0.28%)</title><rect x="259.8" y="755.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="262.8" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.28%)</title><rect x="263.1" y="755.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="266.1" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (83 samples, 23.12%)</title><rect x="266.4" y="755.0" width="272.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="269.4" y="766.0">rocksdb_put_helper(JNIEnv_*, rocksdb..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.28%)</title><rect x="269.7" y="739.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="272.7" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.28%)</title><rect x="273.0" y="739.0" width="3.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="276.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (80 samples, 22.28%)</title><rect x="276.2" y="739.0" width="263.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="279.2" y="750.0">rocksdb::DB::Put(rocksdb::WriteOpti..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (80 samples, 22.28%)</title><rect x="276.2" y="723.0" width="263.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="279.2" y="734.0">rocksdb::DBImpl::Put(rocksdb::Write..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (80 samples, 22.28%)</title><rect x="276.2" y="707.0" width="263.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="279.2" y="718.0">rocksdb::DB::Put(rocksdb::WriteOpti..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.28%)</title><rect x="276.2" y="691.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="279.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (77 samples, 21.45%)</title><rect x="279.5" y="691.0" width="253.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.5" y="702.0">rocksdb::DBImpl::Write(rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (75 samples, 20.89%)</title><rect x="279.5" y="675.0" width="246.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="282.5" y="686.0">rocksdb::DBImpl::WriteImpl(rocksd..</text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.56%)</title><rect x="289.4" y="659.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="292.4" y="670.0"></text>
</g>
<g>
<title>__sched_yield (2 samples, 0.56%)</title><rect x="296.0" y="659.0" width="6.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="299.0" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.56%)</title><rect x="296.0" y="643.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.56%)</title><rect x="296.0" y="627.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="299.0" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.56%)</title><rect x="296.0" y="611.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="299.0" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.56%)</title><rect x="296.0" y="595.0" width="6.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="299.0" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.56%)</title><rect x="296.0" y="579.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.0" y="590.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.56%)</title><rect x="296.0" y="563.0" width="6.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.0" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.28%)</title><rect x="299.2" y="547.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="302.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.28%)</title><rect x="302.5" y="659.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="305.5" y="670.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.28%)</title><rect x="305.8" y="659.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="308.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (40 samples, 11.14%)</title><rect x="309.1" y="659.0" width="131.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="312.1" y="670.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.28%)</title><rect x="309.1" y="643.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="312.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (39 samples, 10.86%)</title><rect x="312.4" y="643.0" width="128.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="315.4" y="654.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (39 samples, 10.86%)</title><rect x="312.4" y="627.0" width="128.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="315.4" y="638.0">rocksdb::log::Wr..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (3 samples, 0.84%)</title><rect x="319.0" y="611.0" width="9.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="322.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.28%)</title><rect x="328.8" y="611.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="331.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (32 samples, 8.91%)</title><rect x="332.1" y="611.0" width="105.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="335.1" y="622.0">rocksdb::Writ..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.28%)</title><rect x="332.1" y="595.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="335.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (31 samples, 8.64%)</title><rect x="335.4" y="595.0" width="101.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="338.4" y="606.0">rocksdb::Wri..</text>
</g>
<g>
<title>__write (29 samples, 8.08%)</title><rect x="338.7" y="579.0" width="95.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="341.7" y="590.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 7.52%)</title><rect x="345.3" y="563.0" width="88.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.3" y="574.0">entry_SYSC..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.28%)</title><rect x="345.3" y="547.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="348.3" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 7.24%)</title><rect x="348.6" y="547.0" width="85.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="351.6" y="558.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_write (26 samples, 7.24%)</title><rect x="348.6" y="531.0" width="85.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="351.6" y="542.0">__x64_sys_..</text>
</g>
<g>
<title>ksys_write (26 samples, 7.24%)</title><rect x="348.6" y="515.0" width="85.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.6" y="526.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.56%)</title><rect x="348.6" y="499.0" width="6.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="351.6" y="510.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.28%)</title><rect x="348.6" y="483.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="351.6" y="494.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.28%)</title><rect x="348.6" y="467.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="351.6" y="478.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.28%)</title><rect x="351.8" y="483.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="354.8" y="494.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.28%)</title><rect x="355.1" y="499.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="358.1" y="510.0"></text>
</g>
<g>
<title>vfs_write (23 samples, 6.41%)</title><rect x="358.4" y="499.0" width="75.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="361.4" y="510.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.56%)</title><rect x="358.4" y="483.0" width="6.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.4" y="494.0"></text>
</g>
<g>
<title>__vfs_write (19 samples, 5.29%)</title><rect x="365.0" y="483.0" width="62.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="368.0" y="494.0">__vfs_..</text>
</g>
<g>
<title>new_sync_write (19 samples, 5.29%)</title><rect x="365.0" y="467.0" width="62.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="368.0" y="478.0">new_sy..</text>
</g>
<g>
<title>ext4_file_write_iter (19 samples, 5.29%)</title><rect x="365.0" y="451.0" width="62.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="368.0" y="462.0">ext4_f..</text>
</g>
<g>
<title>__generic_file_write_iter (17 samples, 4.74%)</title><rect x="368.3" y="435.0" width="55.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="371.3" y="446.0">__gen..</text>
</g>
<g>
<title>generic_perform_write (17 samples, 4.74%)</title><rect x="368.3" y="419.0" width="55.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.3" y="430.0">gener..</text>
</g>
<g>
<title>ext4_da_write_begin (6 samples, 1.67%)</title><rect x="368.3" y="403.0" width="19.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="371.3" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.28%)</title><rect x="368.3" y="387.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.3" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.28%)</title><rect x="368.3" y="371.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="371.3" y="382.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.28%)</title><rect x="371.6" y="387.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.6" y="398.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 1.11%)</title><rect x="374.8" y="387.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="377.8" y="398.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.28%)</title><rect x="374.8" y="371.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="377.8" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.56%)</title><rect x="378.1" y="371.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="381.1" y="382.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.28%)</title><rect x="381.4" y="355.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.4" y="366.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.28%)</title><rect x="381.4" y="339.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.4" y="350.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.28%)</title><rect x="384.7" y="371.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.7" y="382.0"></text>
</g>
<g>
<title>ext4_da_write_end (9 samples, 2.51%)</title><rect x="388.0" y="403.0" width="29.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="391.0" y="414.0">ex..</text>
</g>
<g>
<title>generic_write_end (8 samples, 2.23%)</title><rect x="391.3" y="387.0" width="26.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.3" y="398.0">g..</text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 1.95%)</title><rect x="391.3" y="371.0" width="23.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="394.3" y="382.0">_..</text>
</g>
<g>
<title>ext4_dirty_inode (6 samples, 1.67%)</title><rect x="394.6" y="355.0" width="19.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="397.6" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 1.67%)</title><rect x="394.6" y="339.0" width="19.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.6" y="350.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.28%)</title><rect x="394.6" y="323.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.6" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 1.11%)</title><rect x="397.9" y="323.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="400.9" y="334.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.28%)</title><rect x="397.9" y="307.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="400.9" y="318.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.84%)</title><rect x="401.1" y="307.0" width="9.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="404.1" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (2 samples, 0.56%)</title><rect x="404.4" y="291.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="407.4" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (2 samples, 0.56%)</title><rect x="404.4" y="275.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="407.4" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.28%)</title><rect x="404.4" y="259.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="407.4" y="270.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.28%)</title><rect x="407.7" y="259.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="410.7" y="270.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.28%)</title><rect x="407.7" y="243.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="410.7" y="254.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.28%)</title><rect x="411.0" y="323.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="414.0" y="334.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.28%)</title><rect x="411.0" y="307.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="414.0" y="318.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.28%)</title><rect x="411.0" y="291.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="414.0" y="302.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.28%)</title><rect x="411.0" y="275.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="414.0" y="286.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.28%)</title><rect x="414.3" y="371.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="417.3" y="382.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.28%)</title><rect x="414.3" y="355.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="417.3" y="366.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.56%)</title><rect x="417.6" y="403.0" width="6.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="420.6" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.28%)</title><rect x="420.9" y="387.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.9" y="398.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.28%)</title><rect x="424.2" y="435.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.2" y="446.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (1 samples, 0.28%)</title><rect x="424.2" y="419.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.2" y="430.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.56%)</title><rect x="427.4" y="483.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="430.4" y="494.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.28%)</title><rect x="430.7" y="467.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="433.7" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.28%)</title><rect x="430.7" y="451.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="433.7" y="462.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.28%)</title><rect x="430.7" y="435.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="433.7" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.28%)</title><rect x="430.7" y="419.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="433.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.28%)</title><rect x="434.0" y="579.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="437.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.28%)</title><rect x="437.3" y="611.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="440.3" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="437.3" y="595.0" width="3.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="440.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() [clone .plt] (1 samples, 0.28%)</title><rect x="440.6" y="659.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="443.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.28%)</title><rect x="443.9" y="659.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="446.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.28%)</title><rect x="447.2" y="659.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="450.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (19 samples, 5.29%)</title><rect x="450.4" y="659.0" width="62.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="453.4" y="670.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (18 samples, 5.01%)</title><rect x="453.7" y="643.0" width="59.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="456.7" y="654.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.28%)</title><rect x="453.7" y="627.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="456.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (17 samples, 4.74%)</title><rect x="457.0" y="627.0" width="55.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="460.0" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (16 samples, 4.46%)</title><rect x="457.0" y="611.0" width="52.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="460.0" y="622.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.28%)</title><rect x="457.0" y="595.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="460.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (15 samples, 4.18%)</title><rect x="460.3" y="595.0" width="49.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="463.3" y="606.0">rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="460.3" y="579.0" width="3.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="463.3" y="590.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.28%)</title><rect x="460.3" y="563.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="463.3" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.28%)</title><rect x="460.3" y="547.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.3" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.28%)</title><rect x="460.3" y="531.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.3" y="542.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.28%)</title><rect x="460.3" y="515.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="463.3" y="526.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.28%)</title><rect x="460.3" y="499.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.3" y="510.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.28%)</title><rect x="460.3" y="483.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.3" y="494.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.28%)</title><rect x="460.3" y="467.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.3" y="478.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.28%)</title><rect x="460.3" y="451.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="463.3" y="462.0"></text>
</g>
<g>
<title>mem_cgroup_throttle_swaprate (1 samples, 0.28%)</title><rect x="460.3" y="435.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="463.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (14 samples, 3.90%)</title><rect x="463.6" y="579.0" width="46.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="466.6" y="590.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (1 samples, 0.28%)</title><rect x="463.6" y="563.0" width="3.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="466.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.28%)</title><rect x="463.6" y="547.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="466.6" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 2.79%)</title><rect x="466.9" y="563.0" width="32.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="469.9" y="574.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (10 samples, 2.79%)</title><rect x="466.9" y="547.0" width="32.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="469.9" y="558.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (3 samples, 0.84%)</title><rect x="489.9" y="531.0" width="9.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="492.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (1 samples, 0.28%)</title><rect x="489.9" y="515.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="492.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.56%)</title><rect x="493.2" y="515.0" width="6.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="496.2" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.28%)</title><rect x="496.5" y="499.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="499.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.56%)</title><rect x="499.7" y="563.0" width="6.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="502.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (2 samples, 0.56%)</title><rect x="499.7" y="547.0" width="6.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="502.7" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="503.0" y="531.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="506.0" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="503.0" y="515.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="506.0" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="503.0" y="499.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="506.0" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="506.3" y="563.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.3" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="506.3" y="547.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="509.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="506.3" y="531.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="509.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.28%)</title><rect x="509.6" y="611.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="512.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="509.6" y="595.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="512.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="509.6" y="579.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="509.6" y="563.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.56%)</title><rect x="512.9" y="659.0" width="6.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="515.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.28%)</title><rect x="519.5" y="659.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="522.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.28%)</title><rect x="522.8" y="659.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="525.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.28%)</title><rect x="526.0" y="675.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="529.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.28%)</title><rect x="529.3" y="675.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="532.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.56%)</title><rect x="532.6" y="691.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="535.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.28%)</title><rect x="532.6" y="675.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="535.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.28%)</title><rect x="535.9" y="675.0" width="3.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="538.9" y="686.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.28%)</title><rect x="535.9" y="659.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="538.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.56%)</title><rect x="539.2" y="771.0" width="6.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="542.2" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="539.2" y="755.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="542.2" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.28%)</title><rect x="542.5" y="755.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="545.5" y="766.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.28%)</title><rect x="545.8" y="771.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="548.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (3 samples, 0.84%)</title><rect x="549.1" y="803.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.1" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.28%)</title><rect x="549.1" y="787.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="552.1" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.56%)</title><rect x="552.3" y="787.0" width="6.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="555.3" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.56%)</title><rect x="552.3" y="771.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.56%)</title><rect x="552.3" y="755.0" width="6.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.3" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.56%)</title><rect x="552.3" y="739.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.28%)</title><rect x="555.6" y="723.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (1 samples, 0.28%)</title><rect x="558.9" y="803.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.28%)</title><rect x="558.9" y="787.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="561.9" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.28%)</title><rect x="558.9" y="771.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="561.9" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="558.9" y="755.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="561.9" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="558.9" y="739.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.9" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="558.9" y="723.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.28%)</title><rect x="562.2" y="851.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.2" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.28%)</title><rect x="562.2" y="835.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="565.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.28%)</title><rect x="562.2" y="819.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.56%)</title><rect x="565.5" y="883.0" width="6.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.5" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.56%)</title><rect x="565.5" y="867.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.56%)</title><rect x="565.5" y="851.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.56%)</title><rect x="565.5" y="835.0" width="6.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="568.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.56%)</title><rect x="565.5" y="819.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="568.5" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="568.8" y="803.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.8" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="568.8" y="787.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="571.8" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="568.8" y="771.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="571.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.84%)</title><rect x="572.1" y="883.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 2.23%)</title><rect x="581.9" y="899.0" width="26.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.9" y="910.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 2.23%)</title><rect x="581.9" y="883.0" width="26.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="584.9" y="894.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="581.9" y="867.0" width="3.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="584.9" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.28%)</title><rect x="585.2" y="867.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="588.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.28%)</title><rect x="585.2" y="851.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="588.2" y="862.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.28%)</title><rect x="585.2" y="835.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="588.2" y="846.0"></text>
</g>
<g>
<title>__recv (6 samples, 1.67%)</title><rect x="588.5" y="867.0" width="19.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="591.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.67%)</title><rect x="588.5" y="851.0" width="19.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.67%)</title><rect x="588.5" y="835.0" width="19.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="591.5" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 1.67%)</title><rect x="588.5" y="819.0" width="19.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="591.5" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 1.67%)</title><rect x="588.5" y="803.0" width="19.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="591.5" y="814.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 1.39%)</title><rect x="588.5" y="787.0" width="16.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="591.5" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 1.11%)</title><rect x="591.8" y="771.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="594.8" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.11%)</title><rect x="591.8" y="755.0" width="13.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="594.8" y="766.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.28%)</title><rect x="591.8" y="739.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="594.8" y="750.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.28%)</title><rect x="591.8" y="723.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.8" y="734.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.28%)</title><rect x="591.8" y="707.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="594.8" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.28%)</title><rect x="595.1" y="739.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="598.1" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.28%)</title><rect x="598.4" y="739.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="601.4" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.28%)</title><rect x="598.4" y="723.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.4" y="734.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.28%)</title><rect x="601.6" y="739.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="604.6" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.28%)</title><rect x="604.9" y="787.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="607.9" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.28%)</title><rect x="604.9" y="771.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="607.9" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.28%)</title><rect x="604.9" y="755.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.9" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.28%)</title><rect x="604.9" y="739.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="607.9" y="750.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2469] (177 samples, 49.30%)</title><rect x="608.2" y="963.0" width="581.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="611.2" y="974.0">[NIO Selector #1 tid=2469]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (177 samples, 49.30%)</title><rect x="608.2" y="947.0" width="581.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="611.2" y="958.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 4.46%)</title><rect x="608.2" y="931.0" width="52.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.2" y="942.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 4.46%)</title><rect x="608.2" y="915.0" width="52.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.2" y="926.0">one/n..</text>
</g>
<g>
<title>epoll_wait (16 samples, 4.46%)</title><rect x="608.2" y="899.0" width="52.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="611.2" y="910.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 4.46%)</title><rect x="608.2" y="883.0" width="52.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.2" y="894.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 4.46%)</title><rect x="608.2" y="867.0" width="52.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.2" y="878.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 4.46%)</title><rect x="608.2" y="851.0" width="52.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="611.2" y="862.0">__x64..</text>
</g>
<g>
<title>do_epoll_wait (16 samples, 4.46%)</title><rect x="608.2" y="835.0" width="52.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="611.2" y="846.0">do_ep..</text>
</g>
<g>
<title>ep_poll (16 samples, 4.46%)</title><rect x="608.2" y="819.0" width="52.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="611.2" y="830.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.28%)</title><rect x="608.2" y="803.0" width="3.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.2" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.28%)</title><rect x="608.2" y="787.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="611.2" y="798.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.28%)</title><rect x="608.2" y="771.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="611.2" y="782.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.28%)</title><rect x="608.2" y="755.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="611.2" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.28%)</title><rect x="608.2" y="739.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 4.18%)</title><rect x="611.5" y="803.0" width="49.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="614.5" y="814.0">sched..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 4.18%)</title><rect x="611.5" y="787.0" width="49.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="614.5" y="798.0">sched..</text>
</g>
<g>
<title>schedule (15 samples, 4.18%)</title><rect x="611.5" y="771.0" width="49.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.5" y="782.0">sched..</text>
</g>
<g>
<title>__schedule (15 samples, 4.18%)</title><rect x="611.5" y="755.0" width="49.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="614.5" y="766.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (14 samples, 3.90%)</title><rect x="614.8" y="739.0" width="46.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="617.8" y="750.0">fini..</text>
</g>
<g>
<title>one/nio/net/Session.process (161 samples, 44.85%)</title><rect x="660.8" y="931.0" width="529.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="663.8" y="942.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (161 samples, 44.85%)</title><rect x="660.8" y="915.0" width="529.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.8" y="926.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (155 samples, 43.18%)</title><rect x="660.8" y="899.0" width="509.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.8" y="910.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (150 samples, 41.78%)</title><rect x="664.1" y="883.0" width="493.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="667.1" y="894.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (150 samples, 41.78%)</title><rect x="664.1" y="867.0" width="493.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="667.1" y="878.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_put.handleRequest (150 samples, 41.78%)</title><rect x="664.1" y="851.0" width="493.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.1" y="862.0">RequestHandler1_put.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (77 samples, 21.45%)</title><rect x="664.1" y="835.0" width="253.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="667.1" y="846.0">one/nio/http/HttpSession.sendRespo..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (73 samples, 20.33%)</title><rect x="664.1" y="819.0" width="239.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.1" y="830.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.56%)</title><rect x="664.1" y="803.0" width="6.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.1" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.56%)</title><rect x="664.1" y="787.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.28%)</title><rect x="667.4" y="771.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="670.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.28%)</title><rect x="667.4" y="755.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (71 samples, 19.78%)</title><rect x="670.7" y="803.0" width="233.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="673.7" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.28%)</title><rect x="670.7" y="787.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="673.7" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (70 samples, 19.50%)</title><rect x="674.0" y="787.0" width="230.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.0" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (68 samples, 18.94%)</title><rect x="680.5" y="771.0" width="223.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.5" y="782.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (68 samples, 18.94%)</title><rect x="680.5" y="755.0" width="223.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.5" y="766.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.84%)</title><rect x="680.5" y="739.0" width="9.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="683.5" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="683.8" y="723.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="686.8" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.28%)</title><rect x="687.1" y="723.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="690.1" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.28%)</title><rect x="687.1" y="707.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="690.1" y="718.0"></text>
</g>
<g>
<title>send (65 samples, 18.11%)</title><rect x="690.4" y="739.0" width="213.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="693.4" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 18.11%)</title><rect x="690.4" y="723.0" width="213.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.4" y="734.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (65 samples, 18.11%)</title><rect x="690.4" y="707.0" width="213.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="693.4" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (58 samples, 16.16%)</title><rect x="690.4" y="691.0" width="190.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="693.4" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (58 samples, 16.16%)</title><rect x="690.4" y="675.0" width="190.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.4" y="686.0">__sys_sendto</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.28%)</title><rect x="693.7" y="659.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="696.7" y="670.0"></text>
</g>
<g>
<title>sock_sendmsg (56 samples, 15.60%)</title><rect x="697.0" y="659.0" width="184.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="700.0" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.28%)</title><rect x="697.0" y="643.0" width="3.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="700.0" y="654.0"></text>
</g>
<g>
<title>inet6_sendmsg (55 samples, 15.32%)</title><rect x="700.3" y="643.0" width="180.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.3" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (55 samples, 15.32%)</title><rect x="700.3" y="627.0" width="180.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.3" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.28%)</title><rect x="700.3" y="611.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.3" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (54 samples, 15.04%)</title><rect x="703.5" y="611.0" width="177.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="706.5" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.56%)</title><rect x="706.8" y="595.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="709.8" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.56%)</title><rect x="706.8" y="579.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.8" y="590.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.28%)</title><rect x="713.4" y="595.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="716.4" y="606.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.28%)</title><rect x="713.4" y="579.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="716.4" y="590.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 1.39%)</title><rect x="716.7" y="595.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="719.7" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 1.11%)</title><rect x="716.7" y="579.0" width="13.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="719.7" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.56%)</title><rect x="716.7" y="563.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="719.7" y="574.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.28%)</title><rect x="716.7" y="547.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.7" y="558.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.28%)</title><rect x="720.0" y="547.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="723.0" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.56%)</title><rect x="723.3" y="563.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="726.3" y="574.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.28%)</title><rect x="726.5" y="547.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="729.5" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.28%)</title><rect x="729.8" y="579.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="732.8" y="590.0"></text>
</g>
<g>
<title>tcp_push (44 samples, 12.26%)</title><rect x="733.1" y="595.0" width="144.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="736.1" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (44 samples, 12.26%)</title><rect x="733.1" y="579.0" width="144.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="736.1" y="590.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_write_xmit (44 samples, 12.26%)</title><rect x="733.1" y="563.0" width="144.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="736.1" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 11.42%)</title><rect x="736.4" y="547.0" width="134.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="739.4" y="558.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (41 samples, 11.42%)</title><rect x="736.4" y="531.0" width="134.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="739.4" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 11.42%)</title><rect x="736.4" y="515.0" width="134.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.4" y="526.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (41 samples, 11.42%)</title><rect x="736.4" y="499.0" width="134.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="739.4" y="510.0">ip_local_out</text>
</g>
<g>
<title>ip_output (41 samples, 11.42%)</title><rect x="736.4" y="483.0" width="134.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.4" y="494.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.28%)</title><rect x="736.4" y="467.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.4" y="478.0"></text>
</g>
<g>
<title>ip_finish_output (40 samples, 11.14%)</title><rect x="739.7" y="467.0" width="131.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="742.7" y="478.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (40 samples, 11.14%)</title><rect x="739.7" y="451.0" width="131.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="742.7" y="462.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (40 samples, 11.14%)</title><rect x="739.7" y="435.0" width="131.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="742.7" y="446.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (34 samples, 9.47%)</title><rect x="739.7" y="419.0" width="111.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.7" y="430.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.0 (33 samples, 9.19%)</title><rect x="743.0" y="403.0" width="108.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.0" y="414.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (33 samples, 9.19%)</title><rect x="743.0" y="387.0" width="108.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="746.0" y="398.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (33 samples, 9.19%)</title><rect x="743.0" y="371.0" width="108.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="746.0" y="382.0">__softirqentr..</text>
</g>
<g>
<title>net_rx_action (33 samples, 9.19%)</title><rect x="743.0" y="355.0" width="108.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="746.0" y="366.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (33 samples, 9.19%)</title><rect x="743.0" y="339.0" width="108.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="746.0" y="350.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (33 samples, 9.19%)</title><rect x="743.0" y="323.0" width="108.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.0" y="334.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (33 samples, 9.19%)</title><rect x="743.0" y="307.0" width="108.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="746.0" y="318.0">__netif_recei..</text>
</g>
<g>
<title>ip_rcv (33 samples, 9.19%)</title><rect x="743.0" y="291.0" width="108.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.0" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.56%)</title><rect x="743.0" y="275.0" width="6.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.0" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (31 samples, 8.64%)</title><rect x="749.6" y="275.0" width="101.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="752.6" y="286.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (31 samples, 8.64%)</title><rect x="749.6" y="259.0" width="101.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="752.6" y="270.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (31 samples, 8.64%)</title><rect x="749.6" y="243.0" width="101.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="752.6" y="254.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (31 samples, 8.64%)</title><rect x="749.6" y="227.0" width="101.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="752.6" y="238.0">ip_protocol_..</text>
</g>
<g>
<title>tcp_v4_rcv (31 samples, 8.64%)</title><rect x="749.6" y="211.0" width="101.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="752.6" y="222.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.84%)</title><rect x="752.8" y="195.0" width="9.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="755.8" y="206.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.28%)</title><rect x="762.7" y="195.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="765.7" y="206.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.28%)</title><rect x="766.0" y="195.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="769.0" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.28%)</title><rect x="766.0" y="179.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="769.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (24 samples, 6.69%)</title><rect x="769.3" y="195.0" width="78.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="772.3" y="206.0">tcp_v4_do..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.28%)</title><rect x="769.3" y="179.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="772.3" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 6.41%)</title><rect x="772.6" y="179.0" width="75.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="775.6" y="190.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.28%)</title><rect x="775.8" y="163.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.8" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.28%)</title><rect x="775.8" y="147.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="778.8" y="158.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.28%)</title><rect x="775.8" y="131.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="778.8" y="142.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.28%)</title><rect x="779.1" y="163.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="782.1" y="174.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 1.39%)</title><rect x="782.4" y="163.0" width="16.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="785.4" y="174.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.28%)</title><rect x="792.3" y="147.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="795.3" y="158.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.28%)</title><rect x="795.6" y="147.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="798.6" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (15 samples, 4.18%)</title><rect x="798.9" y="163.0" width="49.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="801.9" y="174.0">tcp_d..</text>
</g>
<g>
<title>sock_def_readable (15 samples, 4.18%)</title><rect x="798.9" y="147.0" width="49.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="801.9" y="158.0">sock_..</text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 4.18%)</title><rect x="798.9" y="131.0" width="49.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="801.9" y="142.0">__wak..</text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 4.18%)</title><rect x="798.9" y="115.0" width="49.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="801.9" y="126.0">__wak..</text>
</g>
<g>
<title>__lock_text_start (15 samples, 4.18%)</title><rect x="798.9" y="99.0" width="49.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="801.9" y="110.0">__loc..</text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.28%)</title><rect x="848.2" y="195.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="851.2" y="206.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 1.67%)</title><rect x="851.4" y="419.0" width="19.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="854.4" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 1.67%)</title><rect x="851.4" y="403.0" width="19.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="854.4" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.56%)</title><rect x="851.4" y="387.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="854.4" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.56%)</title><rect x="851.4" y="371.0" width="6.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="854.4" y="382.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.28%)</title><rect x="854.7" y="355.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="857.7" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.28%)</title><rect x="854.7" y="339.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.7" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.28%)</title><rect x="854.7" y="323.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="857.7" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 1.11%)</title><rect x="858.0" y="387.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="861.0" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.56%)</title><rect x="864.6" y="371.0" width="6.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="867.6" y="382.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.28%)</title><rect x="871.2" y="547.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="874.2" y="558.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.28%)</title><rect x="874.5" y="547.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="877.5" y="558.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.28%)</title><rect x="874.5" y="531.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.5" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.28%)</title><rect x="874.5" y="515.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="877.5" y="526.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.28%)</title><rect x="874.5" y="499.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.5" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.28%)</title><rect x="874.5" y="483.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="877.5" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.28%)</title><rect x="877.7" y="595.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="880.7" y="606.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.28%)</title><rect x="877.7" y="579.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="880.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (7 samples, 1.95%)</title><rect x="881.0" y="691.0" width="23.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.0" y="702.0">e..</text>
</g>
<g>
<title>schedule (7 samples, 1.95%)</title><rect x="881.0" y="675.0" width="23.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="884.0" y="686.0">s..</text>
</g>
<g>
<title>__schedule (7 samples, 1.95%)</title><rect x="881.0" y="659.0" width="23.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.0" y="670.0">_..</text>
</g>
<g>
<title>finish_task_switch (7 samples, 1.95%)</title><rect x="881.0" y="643.0" width="23.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="884.0" y="654.0">f..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 1.11%)</title><rect x="904.0" y="819.0" width="13.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="907.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 1.11%)</title><rect x="904.0" y="803.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="907.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 1.11%)</title><rect x="904.0" y="787.0" width="13.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="907.0" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.28%)</title><rect x="913.9" y="771.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ServiceImpl.put (73 samples, 20.33%)</title><rect x="917.2" y="835.0" width="239.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="920.2" y="846.0">ru/mail/polis/service/dariagap/S..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.28%)</title><rect x="917.2" y="819.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.2" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.28%)</title><rect x="917.2" y="803.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.2" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="917.2" y="787.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="917.2" y="771.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.2" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.28%)</title><rect x="917.2" y="755.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.28%)</title><rect x="917.2" y="739.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="920.2" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.28%)</title><rect x="917.2" y="723.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="920.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsert (72 samples, 20.06%)</title><rect x="920.5" y="819.0" width="236.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.5" y="830.0">ru/mail/polis/dao/dariagap/Rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (72 samples, 20.06%)</title><rect x="920.5" y="803.0" width="236.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.5" y="814.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (72 samples, 20.06%)</title><rect x="920.5" y="787.0" width="236.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="923.5" y="798.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (70 samples, 19.50%)</title><rect x="920.5" y="771.0" width="230.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="923.5" y="782.0">Java_org_rocksdb_RocksDB_put__..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="920.5" y="755.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="923.5" y="766.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.28%)</title><rect x="923.8" y="755.0" width="3.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="926.8" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (68 samples, 18.94%)</title><rect x="927.0" y="755.0" width="223.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.0" y="766.0">rocksdb_put_helper(JNIEnv_*, ..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 18.38%)</title><rect x="927.0" y="739.0" width="217.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="930.0" y="750.0">rocksdb::DB::Put(rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 18.38%)</title><rect x="927.0" y="723.0" width="217.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="930.0" y="734.0">rocksdb::DBImpl::Put(rocksdb..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (66 samples, 18.38%)</title><rect x="927.0" y="707.0" width="217.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="930.0" y="718.0">rocksdb::DB::Put(rocksdb::Wr..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.28%)</title><rect x="927.0" y="691.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="930.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (62 samples, 17.27%)</title><rect x="930.3" y="691.0" width="203.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="933.3" y="702.0">rocksdb::DBImpl::Write(rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (58 samples, 16.16%)</title><rect x="930.3" y="675.0" width="190.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="933.3" y="686.0">rocksdb::DBImpl::WriteImp..</text>
</g>
<g>
<title>__sched_yield (1 samples, 0.28%)</title><rect x="936.9" y="659.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="939.9" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.28%)</title><rect x="936.9" y="643.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.9" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.28%)</title><rect x="936.9" y="627.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="939.9" y="638.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.28%)</title><rect x="936.9" y="611.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="939.9" y="622.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.28%)</title><rect x="936.9" y="595.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="939.9" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.28%)</title><rect x="936.9" y="579.0" width="3.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="939.9" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.28%)</title><rect x="936.9" y="563.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.9" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.28%)</title><rect x="936.9" y="547.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.9" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.28%)</title><rect x="940.2" y="659.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="943.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.28%)</title><rect x="943.5" y="659.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="946.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 8.36%)</title><rect x="946.8" y="659.0" width="98.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="949.8" y="670.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (29 samples, 8.08%)</title><rect x="946.8" y="643.0" width="95.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="949.8" y="654.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (28 samples, 7.80%)</title><rect x="950.1" y="627.0" width="92.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="953.1" y="638.0">rocksdb::lo..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (1 samples, 0.28%)</title><rect x="950.1" y="611.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="953.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (23 samples, 6.41%)</title><rect x="953.3" y="611.0" width="75.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="956.3" y="622.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.28%)</title><rect x="956.6" y="595.0" width="3.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="959.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (21 samples, 5.85%)</title><rect x="959.9" y="595.0" width="69.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="962.9" y="606.0">rocksdb..</text>
</g>
<g>
<title>__write (18 samples, 5.01%)</title><rect x="969.8" y="579.0" width="59.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="972.8" y="590.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 5.01%)</title><rect x="969.8" y="563.0" width="59.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="972.8" y="574.0">entry_..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.28%)</title><rect x="969.8" y="547.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="972.8" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 4.74%)</title><rect x="973.1" y="547.0" width="55.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.1" y="558.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_write (16 samples, 4.46%)</title><rect x="973.1" y="531.0" width="52.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.1" y="542.0">__x64..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.28%)</title><rect x="973.1" y="515.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="976.1" y="526.0"></text>
</g>
<g>
<title>ksys_write (15 samples, 4.18%)</title><rect x="976.4" y="515.0" width="49.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="979.4" y="526.0">ksys_..</text>
</g>
<g>
<title>__fget_light (1 samples, 0.28%)</title><rect x="979.6" y="499.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="982.6" y="510.0"></text>
</g>
<g>
<title>vfs_write (13 samples, 3.62%)</title><rect x="982.9" y="499.0" width="42.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="985.9" y="510.0">vfs_..</text>
</g>
<g>
<title>__vfs_write (9 samples, 2.51%)</title><rect x="989.5" y="483.0" width="29.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.5" y="494.0">__..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.28%)</title><rect x="989.5" y="467.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="992.5" y="478.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 2.23%)</title><rect x="992.8" y="467.0" width="26.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.8" y="478.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (8 samples, 2.23%)</title><rect x="992.8" y="451.0" width="26.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="995.8" y="462.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (7 samples, 1.95%)</title><rect x="992.8" y="435.0" width="23.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="995.8" y="446.0">_..</text>
</g>
<g>
<title>file_update_time (1 samples, 0.28%)</title><rect x="992.8" y="419.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="995.8" y="430.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.28%)</title><rect x="992.8" y="403.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="995.8" y="414.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.28%)</title><rect x="992.8" y="387.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="995.8" y="398.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.28%)</title><rect x="992.8" y="371.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="995.8" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.28%)</title><rect x="992.8" y="355.0" width="3.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="995.8" y="366.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.28%)</title><rect x="992.8" y="339.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="995.8" y="350.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.28%)</title><rect x="992.8" y="323.0" width="3.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="995.8" y="334.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.28%)</title><rect x="992.8" y="307.0" width="3.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="995.8" y="318.0"></text>
</g>
<g>
<title>generic_perform_write (6 samples, 1.67%)</title><rect x="996.1" y="419.0" width="19.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.1" y="430.0"></text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.56%)</title><rect x="996.1" y="403.0" width="6.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="999.1" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (2 samples, 0.56%)</title><rect x="996.1" y="387.0" width="6.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="999.1" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.56%)</title><rect x="996.1" y="371.0" width="6.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="999.1" y="382.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.56%)</title><rect x="996.1" y="355.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.1" y="366.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.28%)</title><rect x="999.4" y="339.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.4" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end (4 samples, 1.11%)</title><rect x="1002.6" y="403.0" width="13.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1005.6" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.56%)</title><rect x="1002.6" y="387.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1005.6" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.56%)</title><rect x="1002.6" y="371.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1005.6" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.56%)</title><rect x="1002.6" y="355.0" width="6.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1005.6" y="366.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.56%)</title><rect x="1009.2" y="387.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.2" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.56%)</title><rect x="1009.2" y="371.0" width="6.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.2" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.56%)</title><rect x="1009.2" y="355.0" width="6.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1012.2" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.56%)</title><rect x="1009.2" y="339.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.2" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.28%)</title><rect x="1009.2" y="323.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1012.2" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.28%)</title><rect x="1009.2" y="307.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1012.2" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.28%)</title><rect x="1009.2" y="291.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1012.2" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (1 samples, 0.28%)</title><rect x="1009.2" y="275.0" width="3.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.2" y="286.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.28%)</title><rect x="1012.5" y="323.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1015.5" y="334.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.28%)</title><rect x="1012.5" y="307.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1015.5" y="318.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.28%)</title><rect x="1012.5" y="291.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1015.5" y="302.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.28%)</title><rect x="1012.5" y="275.0" width="3.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1015.5" y="286.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.28%)</title><rect x="1015.8" y="435.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1018.8" y="446.0"></text>
</g>
<g>
<title>generic_write_check_limits.isra.0 (1 samples, 0.28%)</title><rect x="1015.8" y="419.0" width="3.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1018.8" y="430.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.28%)</title><rect x="1019.1" y="483.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1022.1" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.28%)</title><rect x="1022.4" y="483.0" width="3.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1025.4" y="494.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.28%)</title><rect x="1022.4" y="467.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1025.4" y="478.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.28%)</title><rect x="1022.4" y="451.0" width="3.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.4" y="462.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.28%)</title><rect x="1025.7" y="531.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1028.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.28%)</title><rect x="1028.9" y="611.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1031.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.84%)</title><rect x="1032.2" y="611.0" width="9.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.2" y="622.0"></text>
</g>
<g>
<title>memcpy@plt (1 samples, 0.28%)</title><rect x="1038.8" y="595.0" width="3.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1041.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (1 samples, 0.28%)</title><rect x="1042.1" y="643.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1045.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.28%)</title><rect x="1045.4" y="659.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1048.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.56%)</title><rect x="1048.7" y="659.0" width="6.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1051.7" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.28%)</title><rect x="1051.9" y="643.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1054.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.28%)</title><rect x="1055.2" y="659.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1058.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() (1 samples, 0.28%)</title><rect x="1058.5" y="659.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1061.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (16 samples, 4.46%)</title><rect x="1061.8" y="659.0" width="52.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1064.8" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (16 samples, 4.46%)</title><rect x="1061.8" y="643.0" width="52.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1064.8" y="654.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.28%)</title><rect x="1061.8" y="627.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1064.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.28%)</title><rect x="1065.1" y="627.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1068.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 3.90%)</title><rect x="1068.4" y="627.0" width="46.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1071.4" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (13 samples, 3.62%)</title><rect x="1068.4" y="611.0" width="42.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1071.4" y="622.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 3.62%)</title><rect x="1068.4" y="595.0" width="42.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1071.4" y="606.0">rock..</text>
</g>
<g>
<title>memcpy (1 samples, 0.28%)</title><rect x="1068.4" y="579.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1071.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 3.06%)</title><rect x="1071.7" y="579.0" width="36.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1074.7" y="590.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (1 samples, 0.28%)</title><rect x="1071.7" y="563.0" width="3.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1074.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.28%)</title><rect x="1071.7" y="547.0" width="3.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1074.7" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 1.95%)</title><rect x="1075.0" y="563.0" width="23.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.0" y="574.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (7 samples, 1.95%)</title><rect x="1075.0" y="547.0" width="23.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1078.0" y="558.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (2 samples, 0.56%)</title><rect x="1088.1" y="531.0" width="6.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1091.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.56%)</title><rect x="1088.1" y="515.0" width="6.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1091.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni2892170107468113671.so (1 samples, 0.28%)</title><rect x="1088.1" y="499.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1091.1" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="1091.4" y="499.0" width="3.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1094.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.28%)</title><rect x="1094.7" y="531.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1097.7" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="1094.7" y="515.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1097.7" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="1094.7" y="499.0" width="3.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1097.7" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="1094.7" y="483.0" width="3.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1097.7" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="1094.7" y="467.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1097.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.56%)</title><rect x="1098.0" y="563.0" width="6.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.28%)</title><rect x="1104.5" y="563.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1107.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() (1 samples, 0.28%)</title><rect x="1104.5" y="547.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1107.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.28%)</title><rect x="1107.8" y="579.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1110.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.28%)</title><rect x="1111.1" y="611.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1114.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.28%)</title><rect x="1114.4" y="659.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1117.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.28%)</title><rect x="1117.7" y="659.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (2 samples, 0.56%)</title><rect x="1121.0" y="675.0" width="6.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.56%)</title><rect x="1127.5" y="675.0" width="6.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1130.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.28%)</title><rect x="1134.1" y="691.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.28%)</title><rect x="1137.4" y="691.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.28%)</title><rect x="1140.7" y="691.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1143.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.28%)</title><rect x="1140.7" y="675.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1143.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.28%)</title><rect x="1144.0" y="739.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.28%)</title><rect x="1147.3" y="739.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.3" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="1147.3" y="723.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="1147.3" y="707.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1150.3" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="1147.3" y="691.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.28%)</title><rect x="1150.6" y="771.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1153.6" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.28%)</title><rect x="1150.6" y="755.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1153.6" y="766.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.28%)</title><rect x="1153.8" y="771.0" width="3.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.56%)</title><rect x="1157.1" y="883.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.56%)</title><rect x="1157.1" y="867.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1160.1" y="878.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.56%)</title><rect x="1157.1" y="851.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.1" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.56%)</title><rect x="1157.1" y="835.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1160.1" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.56%)</title><rect x="1157.1" y="819.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1160.1" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.28%)</title><rect x="1160.4" y="803.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1163.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.28%)</title><rect x="1160.4" y="787.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1163.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.28%)</title><rect x="1160.4" y="771.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.28%)</title><rect x="1163.7" y="883.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.28%)</title><rect x="1167.0" y="883.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.0" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.28%)</title><rect x="1167.0" y="867.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1170.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.28%)</title><rect x="1167.0" y="851.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1170.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.28%)</title><rect x="1167.0" y="835.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1170.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.28%)</title><rect x="1167.0" y="819.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1170.0" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.28%)</title><rect x="1167.0" y="803.0" width="3.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.0" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.28%)</title><rect x="1167.0" y="787.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.0" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.28%)</title><rect x="1167.0" y="771.0" width="3.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.0" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.28%)</title><rect x="1167.0" y="755.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.0" y="766.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.28%)</title><rect x="1167.0" y="739.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1170.0" y="750.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.28%)</title><rect x="1167.0" y="723.0" width="3.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.0" y="734.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.28%)</title><rect x="1167.0" y="707.0" width="3.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.28%)</title><rect x="1167.0" y="691.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.0" y="702.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.28%)</title><rect x="1167.0" y="675.0" width="3.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.67%)</title><rect x="1170.3" y="899.0" width="19.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.67%)</title><rect x="1170.3" y="883.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.56%)</title><rect x="1170.3" y="867.0" width="6.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.28%)</title><rect x="1170.3" y="851.0" width="3.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.28%)</title><rect x="1173.6" y="851.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1176.6" y="862.0"></text>
</g>
<g>
<title>__recv (4 samples, 1.11%)</title><rect x="1176.9" y="867.0" width="13.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1179.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.11%)</title><rect x="1176.9" y="851.0" width="13.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1179.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.11%)</title><rect x="1176.9" y="835.0" width="13.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1179.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 1.11%)</title><rect x="1176.9" y="819.0" width="13.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.9" y="830.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.84%)</title><rect x="1176.9" y="803.0" width="9.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1179.9" y="814.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.28%)</title><rect x="1176.9" y="787.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1179.9" y="798.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.56%)</title><rect x="1180.1" y="787.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1183.1" y="798.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.56%)</title><rect x="1180.1" y="771.0" width="6.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1183.1" y="782.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.56%)</title><rect x="1180.1" y="755.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.1" y="766.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.56%)</title><rect x="1180.1" y="739.0" width="6.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1183.1" y="750.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.56%)</title><rect x="1180.1" y="723.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1183.1" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.28%)</title><rect x="1183.4" y="707.0" width="3.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.4" y="718.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.28%)</title><rect x="1183.4" y="691.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.4" y="702.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.28%)</title><rect x="1183.4" y="675.0" width="3.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1186.4" y="686.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.28%)</title><rect x="1186.7" y="803.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1189.7" y="814.0"></text>
</g>
</g>
</svg>
