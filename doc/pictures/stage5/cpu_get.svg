<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="917"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="917"> </text>
<g id="frames">
<g>
<title>all (675 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="13.0" y="894.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.59%)</title><rect x="10.0" y="867.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.59%)</title><rect x="10.0" y="851.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (4 samples, 0.59%)</title><rect x="10.0" y="835.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.59%)</title><rect x="10.0" y="819.0" width="7.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.15%)</title><rect x="17.0" y="867.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="20.0" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.15%)</title><rect x="17.0" y="851.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="20.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 1.33%)</title><rect x="18.7" y="867.0" width="15.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="21.7" y="878.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (9 samples, 1.33%)</title><rect x="18.7" y="851.0" width="15.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="21.7" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.19%)</title><rect x="20.5" y="835.0" width="14.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="23.5" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.19%)</title><rect x="20.5" y="819.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="23.5" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 1.04%)</title><rect x="22.2" y="803.0" width="12.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="25.2" y="814.0"></text>
</g>
<g>
<title>do_futex (7 samples, 1.04%)</title><rect x="22.2" y="787.0" width="12.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="25.2" y="798.0"></text>
</g>
<g>
<title>futex_wait (7 samples, 1.04%)</title><rect x="22.2" y="771.0" width="12.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.2" y="782.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.74%)</title><rect x="22.2" y="755.0" width="8.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="25.2" y="766.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.74%)</title><rect x="22.2" y="739.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.2" y="750.0"></text>
</g>
<g>
<title>__schedule (5 samples, 0.74%)</title><rect x="22.2" y="723.0" width="8.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="25.2" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.59%)</title><rect x="24.0" y="707.0" width="7.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="27.0" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.15%)</title><rect x="31.0" y="755.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.0" y="766.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.15%)</title><rect x="31.0" y="739.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="34.0" y="750.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.15%)</title><rect x="31.0" y="723.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="34.0" y="734.0"></text>
</g>
<g>
<title>hrtimer_init_sleeper (1 samples, 0.15%)</title><rect x="32.7" y="755.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.7" y="766.0"></text>
</g>
<g>
<title>[unknown_Java] (25 samples, 3.70%)</title><rect x="34.5" y="867.0" width="43.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.5" y="878.0">[unk..</text>
</g>
<g>
<title>__pthread_cond_signal (25 samples, 3.70%)</title><rect x="34.5" y="851.0" width="43.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="37.5" y="862.0">__pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 3.56%)</title><rect x="36.2" y="835.0" width="42.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="39.2" y="846.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (24 samples, 3.56%)</title><rect x="36.2" y="819.0" width="42.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="39.2" y="830.0">do_..</text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.44%)</title><rect x="36.2" y="803.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.2" y="814.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.44%)</title><rect x="36.2" y="787.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.2" y="798.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.30%)</title><rect x="38.0" y="771.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="41.0" y="782.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.15%)</title><rect x="38.0" y="755.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="41.0" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.15%)</title><rect x="39.7" y="755.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="42.7" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.15%)</title><rect x="39.7" y="739.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="42.7" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.15%)</title><rect x="39.7" y="723.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="42.7" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (21 samples, 3.11%)</title><rect x="41.5" y="803.0" width="36.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="44.5" y="814.0">exi..</text>
</g>
<g>
<title>schedule (21 samples, 3.11%)</title><rect x="41.5" y="787.0" width="36.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="44.5" y="798.0">sch..</text>
</g>
<g>
<title>__schedule (21 samples, 3.11%)</title><rect x="41.5" y="771.0" width="36.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="44.5" y="782.0">__s..</text>
</g>
<g>
<title>finish_task_switch (21 samples, 3.11%)</title><rect x="41.5" y="755.0" width="36.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="44.5" y="766.0">fin..</text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.15%)</title><rect x="78.2" y="867.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="81.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="78.2" y="851.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="81.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="78.2" y="835.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.15%)</title><rect x="78.2" y="819.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="81.2" y="830.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.15%)</title><rect x="78.2" y="803.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.2" y="814.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.15%)</title><rect x="78.2" y="787.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="81.2" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.15%)</title><rect x="78.2" y="771.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="81.2" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.run (472 samples, 69.93%)</title><rect x="79.9" y="867.0" width="825.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="82.9" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (472 samples, 69.93%)</title><rect x="79.9" y="851.0" width="825.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="82.9" y="862.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (472 samples, 69.93%)</title><rect x="79.9" y="835.0" width="825.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.9" y="846.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.15%)</title><rect x="79.9" y="819.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.15%)</title><rect x="79.9" y="803.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.15%)</title><rect x="79.9" y="787.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.15%)</title><rect x="79.9" y="771.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="82.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (130 samples, 19.26%)</title><rect x="81.7" y="819.0" width="227.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.7" y="830.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (130 samples, 19.26%)</title><rect x="81.7" y="803.0" width="227.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.7" y="814.0">java/util/concurrent/ArrayBloc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (129 samples, 19.11%)</title><rect x="83.4" y="787.0" width="225.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.4" y="798.0">java/util/concurrent/locks/Abs..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (129 samples, 19.11%)</title><rect x="83.4" y="771.0" width="225.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.4" y="782.0">java/util/concurrent/locks/Loc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (129 samples, 19.11%)</title><rect x="83.4" y="755.0" width="225.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="86.4" y="766.0">jdk/internal/misc/Unsafe.park</text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.44%)</title><rect x="83.4" y="739.0" width="5.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="86.4" y="750.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.15%)</title><rect x="83.4" y="723.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="86.4" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="85.2" y="723.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="88.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="85.2" y="707.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="85.2" y="691.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="88.2" y="702.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.15%)</title><rect x="86.9" y="723.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="89.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (126 samples, 18.67%)</title><rect x="88.7" y="739.0" width="220.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="91.7" y="750.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (125 samples, 18.52%)</title><rect x="88.7" y="723.0" width="218.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="91.7" y="734.0">__pthread_cond_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (125 samples, 18.52%)</title><rect x="88.7" y="707.0" width="218.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.7" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (125 samples, 18.52%)</title><rect x="88.7" y="691.0" width="218.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.7" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (125 samples, 18.52%)</title><rect x="88.7" y="675.0" width="218.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="91.7" y="686.0">__x64_sys_futex</text>
</g>
<g>
<title>do_futex (124 samples, 18.37%)</title><rect x="90.4" y="659.0" width="216.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="93.4" y="670.0">do_futex</text>
</g>
<g>
<title>futex_wait (124 samples, 18.37%)</title><rect x="90.4" y="643.0" width="216.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.4" y="654.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (123 samples, 18.22%)</title><rect x="90.4" y="627.0" width="215.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="93.4" y="638.0">futex_wait_queue_me</text>
</g>
<g>
<title>schedule (123 samples, 18.22%)</title><rect x="90.4" y="611.0" width="215.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="93.4" y="622.0">schedule</text>
</g>
<g>
<title>__schedule (123 samples, 18.22%)</title><rect x="90.4" y="595.0" width="215.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.4" y="606.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (123 samples, 18.22%)</title><rect x="90.4" y="579.0" width="215.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="93.4" y="590.0">finish_task_switch</text>
</g>
<g>
<title>hash_futex (1 samples, 0.15%)</title><rect x="305.4" y="627.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="308.4" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.15%)</title><rect x="307.2" y="723.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="310.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/1168571660.run (341 samples, 50.52%)</title><rect x="308.9" y="819.0" width="596.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.9" y="830.0">ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/1168571660.run</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$0 (341 samples, 50.52%)</title><rect x="308.9" y="803.0" width="596.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="311.9" y="814.0">ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (52 samples, 7.70%)</title><rect x="308.9" y="787.0" width="90.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.9" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getSync (52 samples, 7.70%)</title><rect x="308.9" y="771.0" width="90.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.9" y="782.0">ru/mail/po..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.15%)</title><rect x="308.9" y="755.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="311.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (51 samples, 7.56%)</title><rect x="310.7" y="755.0" width="89.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.7" y="766.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (15 samples, 2.22%)</title><rect x="310.7" y="739.0" width="26.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.7" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (15 samples, 2.22%)</title><rect x="310.7" y="723.0" width="26.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.7" y="734.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (11 samples, 1.63%)</title><rect x="310.7" y="707.0" width="19.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="313.7" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (11 samples, 1.63%)</title><rect x="310.7" y="691.0" width="19.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="313.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (9 samples, 1.33%)</title><rect x="310.7" y="675.0" width="15.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="313.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (9 samples, 1.33%)</title><rect x="310.7" y="659.0" width="15.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="313.7" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="310.7" y="643.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="313.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (8 samples, 1.19%)</title><rect x="312.4" y="643.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="315.4" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="319.4" y="627.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="322.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (3 samples, 0.44%)</title><rect x="321.2" y="627.0" width="5.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="324.2" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="322.9" y="611.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="325.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.15%)</title><rect x="324.7" y="611.0" width="1.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="327.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::FindKeyForward() [clone .plt] (1 samples, 0.15%)</title><rect x="324.7" y="595.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="327.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (2 samples, 0.30%)</title><rect x="326.4" y="675.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="329.4" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (2 samples, 0.30%)</title><rect x="329.9" y="707.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.9" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (2 samples, 0.30%)</title><rect x="329.9" y="691.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="332.9" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (1 samples, 0.15%)</title><rect x="329.9" y="675.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="332.9" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.15%)</title><rect x="329.9" y="659.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="332.9" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.15%)</title><rect x="329.9" y="643.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="332.9" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.15%)</title><rect x="329.9" y="627.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="332.9" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.15%)</title><rect x="329.9" y="611.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="332.9" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="329.9" y="595.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="332.9" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.15%)</title><rect x="331.7" y="675.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="334.7" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (1 samples, 0.15%)</title><rect x="333.4" y="707.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.4" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.15%)</title><rect x="333.4" y="691.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.4" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (1 samples, 0.15%)</title><rect x="333.4" y="675.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="336.4" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.15%)</title><rect x="333.4" y="659.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="336.4" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.15%)</title><rect x="333.4" y="643.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="336.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.15%)</title><rect x="333.4" y="627.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="336.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.15%)</title><rect x="333.4" y="611.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="336.4" y="622.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.15%)</title><rect x="333.4" y="595.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="336.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.hasNext (1 samples, 0.15%)</title><rect x="335.2" y="707.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.2" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.15%)</title><rect x="335.2" y="691.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.15%)</title><rect x="335.2" y="675.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="338.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (36 samples, 5.33%)</title><rect x="336.9" y="739.0" width="62.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="339.9" y="750.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (19 samples, 2.81%)</title><rect x="336.9" y="723.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="339.9" y="734.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (19 samples, 2.81%)</title><rect x="336.9" y="707.0" width="33.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.9" y="718.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (18 samples, 2.67%)</title><rect x="336.9" y="691.0" width="31.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="339.9" y="702.0">Ja..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="338.7" y="675.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="341.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (16 samples, 2.37%)</title><rect x="340.4" y="675.0" width="28.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="343.4" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (14 samples, 2.07%)</title><rect x="342.1" y="659.0" width="24.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="345.1" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="342.1" y="643.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="345.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (7 samples, 1.04%)</title><rect x="343.9" y="643.0" width="12.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="346.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (2 samples, 0.30%)</title><rect x="345.6" y="627.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="348.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (2 samples, 0.30%)</title><rect x="345.6" y="611.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="348.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (2 samples, 0.30%)</title><rect x="345.6" y="595.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="348.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (2 samples, 0.30%)</title><rect x="345.6" y="579.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="348.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.30%)</title><rect x="345.6" y="563.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="348.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.30%)</title><rect x="345.6" y="547.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="348.6" y="558.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (2 samples, 0.30%)</title><rect x="345.6" y="531.0" width="3.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="348.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.30%)</title><rect x="349.1" y="627.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="352.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (2 samples, 0.30%)</title><rect x="349.1" y="611.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="352.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.15%)</title><rect x="350.9" y="595.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="353.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.30%)</title><rect x="352.6" y="627.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="355.6" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="352.6" y="611.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.15%)</title><rect x="354.4" y="611.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="357.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.15%)</title><rect x="354.4" y="595.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="357.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (5 samples, 0.74%)</title><rect x="356.1" y="643.0" width="8.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="359.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (5 samples, 0.74%)</title><rect x="356.1" y="627.0" width="8.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="359.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.15%)</title><rect x="356.1" y="611.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="359.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.59%)</title><rect x="357.9" y="611.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="360.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.15%)</title><rect x="364.9" y="643.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="367.9" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="364.9" y="627.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="367.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.15%)</title><rect x="366.6" y="659.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="369.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.15%)</title><rect x="368.4" y="691.0" width="1.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="371.4" y="702.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.15%)</title><rect x="368.4" y="675.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="371.4" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (17 samples, 2.52%)</title><rect x="370.1" y="723.0" width="29.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.1" y="734.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (17 samples, 2.52%)</title><rect x="370.1" y="707.0" width="29.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="373.1" y="718.0">or..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="370.1" y="691.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="373.1" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (15 samples, 2.22%)</title><rect x="371.9" y="691.0" width="26.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="374.9" y="702.0">J..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (15 samples, 2.22%)</title><rect x="371.9" y="675.0" width="26.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="374.9" y="686.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (14 samples, 2.07%)</title><rect x="371.9" y="659.0" width="24.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="374.9" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.15%)</title><rect x="375.4" y="643.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="378.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (2 samples, 0.30%)</title><rect x="377.1" y="643.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.15%)</title><rect x="377.1" y="627.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="380.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.15%)</title><rect x="377.1" y="611.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="380.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.15%)</title><rect x="378.9" y="627.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="381.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (5 samples, 0.74%)</title><rect x="380.6" y="643.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="383.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (2 samples, 0.30%)</title><rect x="380.6" y="627.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (2 samples, 0.30%)</title><rect x="384.1" y="627.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="387.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (2 samples, 0.30%)</title><rect x="384.1" y="611.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="387.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.15%)</title><rect x="384.1" y="595.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="387.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (1 samples, 0.15%)</title><rect x="385.9" y="595.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="388.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (1 samples, 0.15%)</title><rect x="385.9" y="579.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="388.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.15%)</title><rect x="385.9" y="563.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="388.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) const (1 samples, 0.15%)</title><rect x="385.9" y="547.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="388.9" y="558.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.15%)</title><rect x="387.6" y="627.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="390.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.15%)</title><rect x="389.3" y="643.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="392.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.30%)</title><rect x="391.1" y="643.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="394.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.30%)</title><rect x="391.1" y="627.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="394.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ForwardRangeDelIterator::ForwardRangeDelIterator(rocksdb::InternalKeyComparator const*) (1 samples, 0.15%)</title><rect x="391.1" y="611.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="394.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ReverseRangeDelIterator::ReverseRangeDelIterator(rocksdb::InternalKeyComparator const*) (1 samples, 0.15%)</title><rect x="392.8" y="611.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="395.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.15%)</title><rect x="394.6" y="643.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="397.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.15%)</title><rect x="396.3" y="659.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="399.3" y="670.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.15%)</title><rect x="398.1" y="691.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="401.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (204 samples, 30.22%)</title><rect x="399.8" y="787.0" width="356.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.8" y="798.0">ru/mail/polis/service/dariagap/ClusterServiceImp..</text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.15%)</title><rect x="399.8" y="771.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.15%)</title><rect x="399.8" y="755.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="402.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.15%)</title><rect x="399.8" y="739.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="402.8" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.15%)</title><rect x="399.8" y="723.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="402.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.15%)</title><rect x="399.8" y="707.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (1 samples, 0.15%)</title><rect x="399.8" y="691.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="402.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (53 samples, 7.85%)</title><rect x="401.6" y="771.0" width="92.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="404.6" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getSync (53 samples, 7.85%)</title><rect x="401.6" y="755.0" width="92.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="404.6" y="766.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (52 samples, 7.70%)</title><rect x="403.3" y="739.0" width="90.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="750.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.15%)</title><rect x="403.3" y="723.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.15%)</title><rect x="403.3" y="707.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.3" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.15%)</title><rect x="403.3" y="691.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="403.3" y="675.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="403.3" y="659.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="406.3" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="403.3" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (9 samples, 1.33%)</title><rect x="405.1" y="723.0" width="15.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (9 samples, 1.33%)</title><rect x="405.1" y="707.0" width="15.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.1" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (6 samples, 0.89%)</title><rect x="405.1" y="691.0" width="10.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.1" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (6 samples, 0.89%)</title><rect x="405.1" y="675.0" width="10.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="408.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (6 samples, 0.89%)</title><rect x="405.1" y="659.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="408.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (5 samples, 0.74%)</title><rect x="405.1" y="643.0" width="8.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="408.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (5 samples, 0.74%)</title><rect x="405.1" y="627.0" width="8.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="408.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (5 samples, 0.74%)</title><rect x="405.1" y="611.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="408.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (2 samples, 0.30%)</title><rect x="405.1" y="595.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="408.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.15%)</title><rect x="408.6" y="595.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="411.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.15%)</title><rect x="410.3" y="595.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="413.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (1 samples, 0.15%)</title><rect x="412.1" y="595.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="415.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.15%)</title><rect x="413.8" y="643.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="416.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (1 samples, 0.15%)</title><rect x="413.8" y="627.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="416.8" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (3 samples, 0.44%)</title><rect x="415.6" y="691.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (3 samples, 0.44%)</title><rect x="415.6" y="675.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.6" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (2 samples, 0.30%)</title><rect x="415.6" y="659.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="418.6" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.15%)</title><rect x="415.6" y="643.0" width="1.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="418.6" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.15%)</title><rect x="417.3" y="643.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="420.3" y="654.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.15%)</title><rect x="417.3" y="627.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="420.3" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.15%)</title><rect x="417.3" y="611.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="420.3" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.15%)</title><rect x="417.3" y="595.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="420.3" y="606.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.15%)</title><rect x="417.3" y="579.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="420.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::key() const (1 samples, 0.15%)</title><rect x="419.1" y="659.0" width="1.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="422.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (42 samples, 6.22%)</title><rect x="420.8" y="723.0" width="73.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.8" y="734.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (22 samples, 3.26%)</title><rect x="420.8" y="707.0" width="38.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="423.8" y="718.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (22 samples, 3.26%)</title><rect x="420.8" y="691.0" width="38.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="423.8" y="702.0">org..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="420.8" y="675.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="423.8" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (21 samples, 3.11%)</title><rect x="422.6" y="675.0" width="36.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="425.6" y="686.0">Jav..</text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.15%)</title><rect x="422.6" y="659.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="425.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (20 samples, 2.96%)</title><rect x="424.3" y="659.0" width="35.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="427.3" y="670.0">ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="426.1" y="643.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="429.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (1 samples, 0.15%)</title><rect x="427.8" y="643.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="430.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (1 samples, 0.15%)</title><rect x="427.8" y="627.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="430.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (1 samples, 0.15%)</title><rect x="429.6" y="643.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="432.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (16 samples, 2.37%)</title><rect x="431.3" y="643.0" width="28.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="434.3" y="654.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.15%)</title><rect x="431.3" y="627.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="434.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (9 samples, 1.33%)</title><rect x="433.1" y="627.0" width="15.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="436.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (5 samples, 0.74%)</title><rect x="433.1" y="611.0" width="8.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="436.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (5 samples, 0.74%)</title><rect x="433.1" y="595.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="436.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (4 samples, 0.59%)</title><rect x="434.8" y="579.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="437.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.15%)</title><rect x="434.8" y="563.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="437.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (3 samples, 0.44%)</title><rect x="436.5" y="563.0" width="5.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="439.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.44%)</title><rect x="436.5" y="547.0" width="5.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="439.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.44%)</title><rect x="436.5" y="531.0" width="5.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="439.5" y="542.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.15%)</title><rect x="436.5" y="515.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="439.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::Hash64(char const*, unsigned long) [clone .plt] (1 samples, 0.15%)</title><rect x="438.3" y="515.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="441.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Statistics*) (1 samples, 0.15%)</title><rect x="440.0" y="515.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="443.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (1 samples, 0.15%)</title><rect x="441.8" y="611.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="444.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.44%)</title><rect x="443.5" y="611.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="446.5" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="443.5" y="595.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="446.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.15%)</title><rect x="445.3" y="595.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="448.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.15%)</title><rect x="447.0" y="595.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="450.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (6 samples, 0.89%)</title><rect x="448.8" y="627.0" width="10.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="451.8" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (6 samples, 0.89%)</title><rect x="448.8" y="611.0" width="10.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="451.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (5 samples, 0.74%)</title><rect x="448.8" y="595.0" width="8.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="451.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.44%)</title><rect x="452.3" y="579.0" width="5.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="455.3" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="455.8" y="563.0" width="1.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="458.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.15%)</title><rect x="457.5" y="595.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="460.5" y="606.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (19 samples, 2.81%)</title><rect x="459.3" y="707.0" width="33.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="462.3" y="718.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (18 samples, 2.67%)</title><rect x="459.3" y="691.0" width="31.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.3" y="702.0">or..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.74%)</title><rect x="459.3" y="675.0" width="8.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="462.3" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (12 samples, 1.78%)</title><rect x="468.0" y="675.0" width="21.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="471.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (12 samples, 1.78%)</title><rect x="468.0" y="659.0" width="21.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="471.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (11 samples, 1.63%)</title><rect x="469.8" y="643.0" width="19.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="472.8" y="654.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.15%)</title><rect x="469.8" y="627.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="472.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (1 samples, 0.15%)</title><rect x="471.5" y="627.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="474.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.15%)</title><rect x="471.5" y="611.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="474.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.30%)</title><rect x="473.3" y="627.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="476.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (5 samples, 0.74%)</title><rect x="476.8" y="627.0" width="8.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="479.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.15%)</title><rect x="476.8" y="611.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="479.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.15%)</title><rect x="478.5" y="611.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="481.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (3 samples, 0.44%)</title><rect x="480.3" y="611.0" width="5.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="483.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (3 samples, 0.44%)</title><rect x="480.3" y="595.0" width="5.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="483.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (2 samples, 0.30%)</title><rect x="482.0" y="579.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="485.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (1 samples, 0.15%)</title><rect x="482.0" y="563.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="485.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.15%)</title><rect x="483.7" y="563.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="486.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.30%)</title><rect x="485.5" y="627.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="488.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.15%)</title><rect x="487.2" y="611.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="490.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (1 samples, 0.15%)</title><rect x="487.2" y="595.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="490.2" y="606.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.15%)</title><rect x="489.0" y="675.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="492.0" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (1 samples, 0.15%)</title><rect x="490.7" y="691.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.7" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (1 samples, 0.15%)</title><rect x="490.7" y="675.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.7" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (1 samples, 0.15%)</title><rect x="490.7" y="659.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.7" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (1 samples, 0.15%)</title><rect x="490.7" y="643.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.7" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (1 samples, 0.15%)</title><rect x="490.7" y="627.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.15%)</title><rect x="490.7" y="611.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="493.7" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.15%)</title><rect x="490.7" y="595.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="493.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.15%)</title><rect x="490.7" y="579.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="493.7" y="590.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.15%)</title><rect x="490.7" y="563.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="493.7" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.15%)</title><rect x="490.7" y="547.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="493.7" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.15%)</title><rect x="492.5" y="707.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="495.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.proxy (147 samples, 21.78%)</title><rect x="494.2" y="771.0" width="257.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.2" y="782.0">ru/mail/polis/service/dariagap/Clu..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (147 samples, 21.78%)</title><rect x="494.2" y="755.0" width="257.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="497.2" y="766.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (147 samples, 21.78%)</title><rect x="494.2" y="739.0" width="257.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.2" y="750.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.44%)</title><rect x="494.2" y="723.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.44%)</title><rect x="494.2" y="707.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.15%)</title><rect x="496.0" y="691.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.15%)</title><rect x="496.0" y="675.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="499.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="497.7" y="691.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (6 samples, 0.89%)</title><rect x="499.5" y="723.0" width="10.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="502.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.89%)</title><rect x="499.5" y="707.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="502.5" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="499.5" y="691.0" width="1.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="502.5" y="702.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.74%)</title><rect x="501.2" y="691.0" width="8.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="504.2" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.74%)</title><rect x="501.2" y="675.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="504.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.74%)</title><rect x="501.2" y="659.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="504.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 0.74%)</title><rect x="501.2" y="643.0" width="8.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.2" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 0.59%)</title><rect x="501.2" y="627.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="504.2" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.44%)</title><rect x="501.2" y="611.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="504.2" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.44%)</title><rect x="501.2" y="595.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="504.2" y="606.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.15%)</title><rect x="501.2" y="579.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="504.2" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.30%)</title><rect x="503.0" y="579.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.0" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.30%)</title><rect x="503.0" y="563.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="506.0" y="574.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.30%)</title><rect x="503.0" y="547.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="506.0" y="558.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.15%)</title><rect x="503.0" y="531.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="506.0" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.15%)</title><rect x="504.7" y="531.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.7" y="542.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.15%)</title><rect x="504.7" y="515.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="507.7" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="506.5" y="611.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="509.5" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.15%)</title><rect x="506.5" y="595.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="509.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="506.5" y="579.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="509.5" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.15%)</title><rect x="506.5" y="563.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.5" y="574.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.15%)</title><rect x="508.2" y="627.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="511.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.30%)</title><rect x="510.0" y="723.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="513.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.59%)</title><rect x="513.5" y="723.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="516.5" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.15%)</title><rect x="513.5" y="707.0" width="1.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="516.5" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.44%)</title><rect x="515.2" y="707.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.15%)</title><rect x="515.2" y="691.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.15%)</title><rect x="515.2" y="675.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.30%)</title><rect x="517.0" y="691.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.30%)</title><rect x="517.0" y="675.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.30%)</title><rect x="517.0" y="659.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="520.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.15%)</title><rect x="520.5" y="723.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="520.5" y="707.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="520.5" y="691.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="523.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (6 samples, 0.89%)</title><rect x="522.2" y="723.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.2" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.15%)</title><rect x="522.2" y="707.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="525.2" y="718.0"></text>
</g>
<g>
<title>setsockopt (5 samples, 0.74%)</title><rect x="524.0" y="707.0" width="8.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="527.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.74%)</title><rect x="524.0" y="691.0" width="8.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="527.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (1 samples, 0.15%)</title><rect x="524.0" y="675.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="527.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.59%)</title><rect x="525.7" y="675.0" width="7.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.59%)</title><rect x="525.7" y="659.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="528.7" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (3 samples, 0.44%)</title><rect x="527.5" y="643.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.5" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.15%)</title><rect x="527.5" y="627.0" width="1.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="530.5" y="638.0"></text>
</g>
<g>
<title>security_socket_setsockopt (1 samples, 0.15%)</title><rect x="529.2" y="627.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="532.2" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.15%)</title><rect x="529.2" y="611.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="532.2" y="622.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.15%)</title><rect x="529.2" y="595.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="532.2" y="606.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.15%)</title><rect x="530.9" y="627.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.15%)</title><rect x="530.9" y="611.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="533.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (125 samples, 18.52%)</title><rect x="532.7" y="723.0" width="218.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="535.7" y="734.0">one/nio/net/NativeSocket.writ..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.15%)</title><rect x="532.7" y="707.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="535.7" y="718.0"></text>
</g>
<g>
<title>send (124 samples, 18.37%)</title><rect x="534.4" y="707.0" width="216.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="537.4" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (122 samples, 18.07%)</title><rect x="537.9" y="691.0" width="213.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="540.9" y="702.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (122 samples, 18.07%)</title><rect x="537.9" y="675.0" width="213.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="540.9" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (52 samples, 7.70%)</title><rect x="539.7" y="659.0" width="90.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="542.7" y="670.0">__x64_sys_..</text>
</g>
<g>
<title>__sys_sendto (52 samples, 7.70%)</title><rect x="539.7" y="643.0" width="90.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="542.7" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (52 samples, 7.70%)</title><rect x="539.7" y="627.0" width="90.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.7" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (51 samples, 7.56%)</title><rect x="539.7" y="611.0" width="89.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="542.7" y="622.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (51 samples, 7.56%)</title><rect x="539.7" y="595.0" width="89.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="542.7" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.15%)</title><rect x="539.7" y="579.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="542.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 7.41%)</title><rect x="541.4" y="579.0" width="87.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.4" y="590.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.15%)</title><rect x="543.2" y="563.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="546.2" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="543.2" y="547.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="546.2" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.15%)</title><rect x="544.9" y="563.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.9" y="574.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.15%)</title><rect x="546.7" y="563.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="549.7" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.30%)</title><rect x="548.4" y="563.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="551.4" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.30%)</title><rect x="548.4" y="547.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.4" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.15%)</title><rect x="548.4" y="531.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="551.4" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.15%)</title><rect x="548.4" y="515.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="551.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.15%)</title><rect x="550.2" y="531.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="553.2" y="542.0"></text>
</g>
<g>
<title>tcp_push (44 samples, 6.52%)</title><rect x="551.9" y="563.0" width="76.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="554.9" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (44 samples, 6.52%)</title><rect x="551.9" y="547.0" width="76.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="554.9" y="558.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (44 samples, 6.52%)</title><rect x="551.9" y="531.0" width="76.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="554.9" y="542.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (41 samples, 6.07%)</title><rect x="553.7" y="515.0" width="71.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="556.7" y="526.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (39 samples, 5.78%)</title><rect x="557.2" y="499.0" width="68.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="560.2" y="510.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (39 samples, 5.78%)</title><rect x="557.2" y="483.0" width="68.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="560.2" y="494.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (37 samples, 5.48%)</title><rect x="558.9" y="467.0" width="64.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="561.9" y="478.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.30%)</title><rect x="560.7" y="451.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="563.7" y="462.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.30%)</title><rect x="560.7" y="435.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="563.7" y="446.0"></text>
</g>
<g>
<title>ip_output (34 samples, 5.04%)</title><rect x="564.2" y="451.0" width="59.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="567.2" y="462.0">ip_out..</text>
</g>
<g>
<title>ip_finish_output (34 samples, 5.04%)</title><rect x="564.2" y="435.0" width="59.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.2" y="446.0">ip_fin..</text>
</g>
<g>
<title>__ip_finish_output (34 samples, 5.04%)</title><rect x="564.2" y="419.0" width="59.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="567.2" y="430.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 5.04%)</title><rect x="564.2" y="403.0" width="59.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="567.2" y="414.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 4.59%)</title><rect x="565.9" y="387.0" width="54.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="568.9" y="398.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (31 samples, 4.59%)</title><rect x="565.9" y="371.0" width="54.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="568.9" y="382.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 4.59%)</title><rect x="565.9" y="355.0" width="54.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="568.9" y="366.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 4.59%)</title><rect x="565.9" y="339.0" width="54.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="568.9" y="350.0">__sof..</text>
</g>
<g>
<title>net_rx_action (29 samples, 4.30%)</title><rect x="567.7" y="323.0" width="50.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="570.7" y="334.0">net_r..</text>
</g>
<g>
<title>process_backlog (29 samples, 4.30%)</title><rect x="567.7" y="307.0" width="50.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="570.7" y="318.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (28 samples, 4.15%)</title><rect x="569.4" y="291.0" width="49.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="572.4" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 4.15%)</title><rect x="569.4" y="275.0" width="49.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="572.4" y="286.0">__ne..</text>
</g>
<g>
<title>ip_rcv (28 samples, 4.15%)</title><rect x="569.4" y="259.0" width="49.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="572.4" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 4.15%)</title><rect x="569.4" y="243.0" width="49.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.4" y="254.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (28 samples, 4.15%)</title><rect x="569.4" y="227.0" width="49.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="572.4" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 4.15%)</title><rect x="569.4" y="211.0" width="49.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="572.4" y="222.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 4.15%)</title><rect x="569.4" y="195.0" width="49.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="572.4" y="206.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 4.15%)</title><rect x="569.4" y="179.0" width="49.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="572.4" y="190.0">tcp_..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.15%)</title><rect x="569.4" y="163.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="572.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 4.00%)</title><rect x="571.2" y="163.0" width="47.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="574.2" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (26 samples, 3.85%)</title><rect x="572.9" y="147.0" width="45.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="575.9" y="158.0">tcp_..</text>
</g>
<g>
<title>tcp_ack (5 samples, 0.74%)</title><rect x="572.9" y="131.0" width="8.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="575.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.30%)</title><rect x="574.7" y="115.0" width="3.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="577.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.30%)</title><rect x="574.7" y="99.0" width="3.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="577.7" y="110.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.30%)</title><rect x="574.7" y="83.0" width="3.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.15%)</title><rect x="576.4" y="67.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.4" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.15%)</title><rect x="578.1" y="115.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="581.1" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="579.9" y="115.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (18 samples, 2.67%)</title><rect x="581.6" y="131.0" width="31.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.6" y="142.0">tc..</text>
</g>
<g>
<title>sock_def_readable (18 samples, 2.67%)</title><rect x="581.6" y="115.0" width="31.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="584.6" y="126.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.15%)</title><rect x="581.6" y="99.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.6" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (17 samples, 2.52%)</title><rect x="583.4" y="99.0" width="29.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.4" y="110.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 2.52%)</title><rect x="583.4" y="83.0" width="29.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.4" y="94.0">__..</text>
</g>
<g>
<title>__lock_text_start (17 samples, 2.52%)</title><rect x="583.4" y="67.0" width="29.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="586.4" y="78.0">__..</text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.30%)</title><rect x="613.1" y="131.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="616.1" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.15%)</title><rect x="614.9" y="115.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="617.9" y="126.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.15%)</title><rect x="616.6" y="131.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="619.6" y="142.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.15%)</title><rect x="618.4" y="323.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="621.4" y="334.0"></text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.30%)</title><rect x="620.1" y="387.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.30%)</title><rect x="620.1" y="371.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="623.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.30%)</title><rect x="620.1" y="355.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="623.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.15%)</title><rect x="621.9" y="339.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="624.9" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="623.6" y="467.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="626.6" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="625.3" y="515.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="628.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.15%)</title><rect x="627.1" y="515.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="630.1" y="526.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.15%)</title><rect x="628.8" y="611.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="631.8" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (69 samples, 10.22%)</title><rect x="630.6" y="659.0" width="120.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="633.6" y="670.0">exit_to_usermod..</text>
</g>
<g>
<title>schedule (69 samples, 10.22%)</title><rect x="630.6" y="643.0" width="120.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="633.6" y="654.0">schedule</text>
</g>
<g>
<title>__schedule (69 samples, 10.22%)</title><rect x="630.6" y="627.0" width="120.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="633.6" y="638.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (68 samples, 10.07%)</title><rect x="632.3" y="611.0" width="118.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="635.3" y="622.0">finish_task_sw..</text>
</g>
<g>
<title>ru/mail/polis/util/Replicas.analyseResponse (1 samples, 0.15%)</title><rect x="751.2" y="771.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.15%)</title><rect x="751.2" y="755.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.15%)</title><rect x="751.2" y="739.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="754.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.15%)</title><rect x="751.2" y="723.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (2 samples, 0.30%)</title><rect x="753.0" y="771.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="756.0" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.15%)</title><rect x="753.0" y="755.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.0" y="766.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.15%)</title><rect x="754.7" y="755.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.15%)</title><rect x="754.7" y="739.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.7" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.15%)</title><rect x="754.7" y="723.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.sendResponse (85 samples, 12.59%)</title><rect x="756.5" y="787.0" width="148.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="759.5" y="798.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (85 samples, 12.59%)</title><rect x="756.5" y="771.0" width="148.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="759.5" y="782.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.44%)</title><rect x="758.2" y="755.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="761.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.44%)</title><rect x="758.2" y="739.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.44%)</title><rect x="758.2" y="723.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="761.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.15%)</title><rect x="761.7" y="707.0" width="1.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="764.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (81 samples, 12.00%)</title><rect x="763.5" y="755.0" width="141.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="766.5" y="766.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.15%)</title><rect x="763.5" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="766.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.15%)</title><rect x="763.5" y="723.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (80 samples, 11.85%)</title><rect x="765.2" y="739.0" width="139.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.2" y="750.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;1097844ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.15%)</title><rect x="765.2" y="723.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="768.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (79 samples, 11.70%)</title><rect x="766.9" y="723.0" width="138.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="769.9" y="734.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.15%)</title><rect x="766.9" y="707.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="769.9" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="766.9" y="691.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="769.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (78 samples, 11.56%)</title><rect x="768.7" y="707.0" width="136.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.7" y="718.0">one/nio/net/Sessi..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (78 samples, 11.56%)</title><rect x="768.7" y="691.0" width="136.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.7" y="702.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>send (78 samples, 11.56%)</title><rect x="768.7" y="675.0" width="136.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="771.7" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 11.56%)</title><rect x="768.7" y="659.0" width="136.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.7" y="670.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (78 samples, 11.56%)</title><rect x="768.7" y="643.0" width="136.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="771.7" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (56 samples, 8.30%)</title><rect x="768.7" y="627.0" width="97.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.7" y="638.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (56 samples, 8.30%)</title><rect x="768.7" y="611.0" width="97.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.7" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (49 samples, 7.26%)</title><rect x="772.2" y="595.0" width="85.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="775.2" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (48 samples, 7.11%)</title><rect x="772.2" y="579.0" width="83.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.2" y="590.0">inet6_sen..</text>
</g>
<g>
<title>tcp_sendmsg (48 samples, 7.11%)</title><rect x="772.2" y="563.0" width="83.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="775.2" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.15%)</title><rect x="772.2" y="547.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="775.2" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.30%)</title><rect x="773.9" y="547.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="776.9" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (45 samples, 6.67%)</title><rect x="777.4" y="547.0" width="78.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="780.4" y="558.0">tcp_sendm..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.15%)</title><rect x="779.2" y="531.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="782.2" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="779.2" y="515.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="782.2" y="526.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.15%)</title><rect x="780.9" y="531.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="783.9" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="782.7" y="531.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="785.7" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.15%)</title><rect x="782.7" y="515.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="785.7" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.15%)</title><rect x="782.7" y="499.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="785.7" y="510.0"></text>
</g>
<g>
<title>memset (1 samples, 0.15%)</title><rect x="782.7" y="483.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="785.7" y="494.0"></text>
</g>
<g>
<title>tcp_push (41 samples, 6.07%)</title><rect x="784.4" y="531.0" width="71.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.4" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (41 samples, 6.07%)</title><rect x="784.4" y="515.0" width="71.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="787.4" y="526.0">__tcp_pu..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.15%)</title><rect x="784.4" y="499.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="787.4" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (40 samples, 5.93%)</title><rect x="786.2" y="499.0" width="69.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="789.2" y="510.0">tcp_wri..</text>
</g>
<g>
<title>__tcp_transmit_skb (35 samples, 5.19%)</title><rect x="786.2" y="483.0" width="61.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="789.2" y="494.0">__tcp_..</text>
</g>
<g>
<title>ip_queue_xmit (33 samples, 4.89%)</title><rect x="789.7" y="467.0" width="57.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="792.7" y="478.0">ip_que..</text>
</g>
<g>
<title>__ip_queue_xmit (33 samples, 4.89%)</title><rect x="789.7" y="451.0" width="57.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="792.7" y="462.0">__ip_q..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.15%)</title><rect x="791.4" y="435.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="794.4" y="446.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="791.4" y="419.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.4" y="430.0"></text>
</g>
<g>
<title>ip_local_out (30 samples, 4.44%)</title><rect x="793.2" y="435.0" width="52.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="796.2" y="446.0">ip_lo..</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.15%)</title><rect x="793.2" y="419.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="796.2" y="430.0"></text>
</g>
<g>
<title>ip_output (29 samples, 4.30%)</title><rect x="794.9" y="419.0" width="50.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="797.9" y="430.0">ip_ou..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="794.9" y="403.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="797.9" y="414.0"></text>
</g>
<g>
<title>ip_finish_output (28 samples, 4.15%)</title><rect x="796.7" y="403.0" width="48.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="799.7" y="414.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (28 samples, 4.15%)</title><rect x="796.7" y="387.0" width="48.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="799.7" y="398.0">__ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.15%)</title><rect x="796.7" y="371.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.7" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (27 samples, 4.00%)</title><rect x="798.4" y="371.0" width="47.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="801.4" y="382.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 3.56%)</title><rect x="801.9" y="355.0" width="42.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="804.9" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.0 (23 samples, 3.41%)</title><rect x="803.7" y="339.0" width="40.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="806.7" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (22 samples, 3.26%)</title><rect x="805.4" y="323.0" width="38.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="808.4" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (21 samples, 3.11%)</title><rect x="805.4" y="307.0" width="36.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="808.4" y="318.0">__s..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.15%)</title><rect x="807.2" y="291.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="810.2" y="302.0"></text>
</g>
<g>
<title>net_rx_action (18 samples, 2.67%)</title><rect x="808.9" y="291.0" width="31.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="811.9" y="302.0">ne..</text>
</g>
<g>
<title>process_backlog (18 samples, 2.67%)</title><rect x="808.9" y="275.0" width="31.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="811.9" y="286.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (18 samples, 2.67%)</title><rect x="808.9" y="259.0" width="31.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="811.9" y="270.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (18 samples, 2.67%)</title><rect x="808.9" y="243.0" width="31.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="811.9" y="254.0">__..</text>
</g>
<g>
<title>ip_rcv (18 samples, 2.67%)</title><rect x="808.9" y="227.0" width="31.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="811.9" y="238.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (17 samples, 2.52%)</title><rect x="810.7" y="211.0" width="29.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="813.7" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (16 samples, 2.37%)</title><rect x="812.4" y="195.0" width="28.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="815.4" y="206.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 2.37%)</title><rect x="812.4" y="179.0" width="28.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="815.4" y="190.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 2.37%)</title><rect x="812.4" y="163.0" width="28.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="815.4" y="174.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 2.37%)</title><rect x="812.4" y="147.0" width="28.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.4" y="158.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="812.4" y="131.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="815.4" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.15%)</title><rect x="814.1" y="131.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="817.1" y="142.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.15%)</title><rect x="814.1" y="115.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (14 samples, 2.07%)</title><rect x="815.9" y="131.0" width="24.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.9" y="142.0">t..</text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.15%)</title><rect x="815.9" y="115.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="818.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (13 samples, 1.93%)</title><rect x="817.6" y="115.0" width="22.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="820.6" y="126.0">t..</text>
</g>
<g>
<title>tcp_ack (9 samples, 1.33%)</title><rect x="817.6" y="99.0" width="15.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="820.6" y="110.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.15%)</title><rect x="821.1" y="83.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.1" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.59%)</title><rect x="822.9" y="83.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="825.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.15%)</title><rect x="826.4" y="67.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.4" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.15%)</title><rect x="826.4" y="51.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.4" y="62.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.15%)</title><rect x="828.1" y="67.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.1" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.15%)</title><rect x="829.9" y="83.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="832.9" y="94.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.15%)</title><rect x="831.6" y="83.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="834.6" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (4 samples, 0.59%)</title><rect x="833.4" y="99.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.15%)</title><rect x="833.4" y="83.0" width="1.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.4" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.44%)</title><rect x="835.1" y="83.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.1" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.44%)</title><rect x="835.1" y="67.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="838.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.44%)</title><rect x="835.1" y="51.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="838.1" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.30%)</title><rect x="836.9" y="35.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="839.9" y="46.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.15%)</title><rect x="840.4" y="291.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="843.4" y="302.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.15%)</title><rect x="842.1" y="307.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="845.1" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.15%)</title><rect x="843.9" y="355.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="846.9" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.15%)</title><rect x="843.9" y="339.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="846.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="843.9" y="323.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="846.9" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.15%)</title><rect x="843.9" y="307.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="846.9" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.15%)</title><rect x="843.9" y="291.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.9" y="302.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="845.6" y="435.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="848.6" y="446.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.15%)</title><rect x="847.4" y="483.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="850.4" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.15%)</title><rect x="849.1" y="483.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="852.1" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="850.9" y="483.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="853.9" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.15%)</title><rect x="852.6" y="483.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="855.6" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.15%)</title><rect x="854.4" y="483.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.4" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.15%)</title><rect x="856.1" y="579.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="859.1" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.74%)</title><rect x="857.9" y="595.0" width="8.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="860.9" y="606.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.44%)</title><rect x="857.9" y="579.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="860.9" y="590.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.44%)</title><rect x="857.9" y="563.0" width="5.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="860.9" y="574.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.44%)</title><rect x="857.9" y="547.0" width="5.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="860.9" y="558.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.30%)</title><rect x="863.1" y="579.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="866.1" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (22 samples, 3.26%)</title><rect x="866.6" y="627.0" width="38.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="869.6" y="638.0">exi..</text>
</g>
<g>
<title>schedule (22 samples, 3.26%)</title><rect x="866.6" y="611.0" width="38.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="869.6" y="622.0">sch..</text>
</g>
<g>
<title>__schedule (22 samples, 3.26%)</title><rect x="866.6" y="595.0" width="38.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="869.6" y="606.0">__s..</text>
</g>
<g>
<title>finish_task_switch (20 samples, 2.96%)</title><rect x="870.1" y="579.0" width="35.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="873.1" y="590.0">fi..</text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (21 samples, 3.11%)</title><rect x="905.1" y="867.0" width="36.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.1" y="878.0">jav..</text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (20 samples, 2.96%)</title><rect x="905.1" y="851.0" width="34.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="908.1" y="862.0">ja..</text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (20 samples, 2.96%)</title><rect x="905.1" y="835.0" width="34.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.1" y="846.0">ja..</text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (20 samples, 2.96%)</title><rect x="905.1" y="819.0" width="34.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="908.1" y="830.0">or..</text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (20 samples, 2.96%)</title><rect x="905.1" y="803.0" width="34.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.1" y="814.0">or..</text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (20 samples, 2.96%)</title><rect x="905.1" y="787.0" width="34.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.1" y="798.0">or..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (20 samples, 2.96%)</title><rect x="905.1" y="771.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="908.1" y="782.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (20 samples, 2.96%)</title><rect x="905.1" y="755.0" width="34.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.1" y="766.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (3 samples, 0.44%)</title><rect x="905.1" y="739.0" width="5.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="908.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.74%)</title><rect x="910.3" y="739.0" width="8.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="913.3" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 0.74%)</title><rect x="910.3" y="723.0" width="8.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="913.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (12 samples, 1.78%)</title><rect x="919.0" y="739.0" width="21.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="922.0" y="750.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (12 samples, 1.78%)</title><rect x="919.0" y="723.0" width="21.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="922.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.15%)</title><rect x="920.8" y="707.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="923.8" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="920.8" y="691.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="923.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::~MergingIterator() (10 samples, 1.48%)</title><rect x="922.5" y="707.0" width="17.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="925.5" y="718.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="926.0" y="691.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="929.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::~BlockBasedTableIterator() (6 samples, 0.89%)</title><rect x="927.8" y="691.0" width="10.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.8" y="702.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.15%)</title><rect x="931.3" y="675.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="934.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle(void*, void*) (1 samples, 0.15%)</title><rect x="933.0" y="675.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="936.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::~IndexBlockIter() (2 samples, 0.30%)</title><rect x="934.8" y="675.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="937.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() [clone .plt] (1 samples, 0.15%)</title><rect x="938.3" y="691.0" width="1.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="941.3" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.15%)</title><rect x="940.0" y="851.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="943.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.15%)</title><rect x="940.0" y="835.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.0" y="846.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.15%)</title><rect x="940.0" y="819.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="943.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.15%)</title><rect x="941.8" y="867.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.8" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="941.8" y="851.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/FinalReference.&lt;init&gt; (1 samples, 0.15%)</title><rect x="941.8" y="835.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.8" y="846.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.15%)</title><rect x="941.8" y="819.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="944.8" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.15%)</title><rect x="943.5" y="867.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="946.5" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1 samples, 0.15%)</title><rect x="943.5" y="851.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.5" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (1 samples, 0.15%)</title><rect x="943.5" y="835.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.notifyAll (1 samples, 0.15%)</title><rect x="943.5" y="819.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="946.5" y="830.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (132 samples, 19.56%)</title><rect x="945.3" y="867.0" width="230.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="948.3" y="878.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (111 samples, 16.44%)</title><rect x="945.3" y="851.0" width="194.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="948.3" y="862.0">one/nio/net/NativeSelecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (111 samples, 16.44%)</title><rect x="945.3" y="835.0" width="194.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="948.3" y="846.0">one/nio/net/NativeSelecto..</text>
</g>
<g>
<title>epoll_wait (111 samples, 16.44%)</title><rect x="945.3" y="819.0" width="194.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="948.3" y="830.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 16.15%)</title><rect x="948.8" y="803.0" width="190.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="951.8" y="814.0">entry_SYSCALL_64_after_hw..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.15%)</title><rect x="948.8" y="787.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="951.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (108 samples, 16.00%)</title><rect x="950.5" y="787.0" width="188.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="953.5" y="798.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (107 samples, 15.85%)</title><rect x="952.3" y="771.0" width="187.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.3" y="782.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>do_epoll_wait (107 samples, 15.85%)</title><rect x="952.3" y="755.0" width="187.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.3" y="766.0">do_epoll_wait</text>
</g>
<g>
<title>ep_poll (107 samples, 15.85%)</title><rect x="952.3" y="739.0" width="187.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="955.3" y="750.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (7 samples, 1.04%)</title><rect x="954.0" y="723.0" width="12.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="957.0" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.59%)</title><rect x="957.5" y="707.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="960.5" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.44%)</title><rect x="959.2" y="691.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.2" y="702.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.30%)</title><rect x="959.2" y="675.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="962.2" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.15%)</title><rect x="961.0" y="659.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="964.0" y="670.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.15%)</title><rect x="962.7" y="675.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="965.7" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.15%)</title><rect x="964.5" y="707.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.5" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (99 samples, 14.67%)</title><rect x="966.2" y="723.0" width="173.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="969.2" y="734.0">schedule_hrtimeout_range</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (99 samples, 14.67%)</title><rect x="966.2" y="707.0" width="173.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="969.2" y="718.0">schedule_hrtimeout_ran..</text>
</g>
<g>
<title>schedule (98 samples, 14.52%)</title><rect x="968.0" y="691.0" width="171.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="971.0" y="702.0">schedule</text>
</g>
<g>
<title>__schedule (97 samples, 14.37%)</title><rect x="969.7" y="675.0" width="169.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="972.7" y="686.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (95 samples, 14.07%)</title><rect x="973.2" y="659.0" width="166.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="976.2" y="670.0">finish_task_switch</text>
</g>
<g>
<title>one/nio/net/Session.process (21 samples, 3.11%)</title><rect x="1139.3" y="851.0" width="36.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1142.3" y="862.0">one..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.44%)</title><rect x="1139.3" y="835.0" width="5.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1142.3" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.44%)</title><rect x="1139.3" y="819.0" width="5.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.3" y="830.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.44%)</title><rect x="1139.3" y="803.0" width="5.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1142.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (18 samples, 2.67%)</title><rect x="1144.5" y="835.0" width="31.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1147.5" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 1.48%)</title><rect x="1144.5" y="819.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1147.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (8 samples, 1.19%)</title><rect x="1144.5" y="803.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (8 samples, 1.19%)</title><rect x="1144.5" y="787.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1147.5" y="798.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8 samples, 1.19%)</title><rect x="1144.5" y="771.0" width="14.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1147.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (8 samples, 1.19%)</title><rect x="1144.5" y="755.0" width="14.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 1.19%)</title><rect x="1144.5" y="739.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1147.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (8 samples, 1.19%)</title><rect x="1144.5" y="723.0" width="14.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.15%)</title><rect x="1144.5" y="707.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.15%)</title><rect x="1144.5" y="691.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.15%)</title><rect x="1144.5" y="675.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.15%)</title><rect x="1144.5" y="659.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1147.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 1.04%)</title><rect x="1146.3" y="707.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1149.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 1.04%)</title><rect x="1146.3" y="691.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 1.04%)</title><rect x="1146.3" y="675.0" width="12.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1149.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 1.04%)</title><rect x="1146.3" y="659.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1149.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 1.04%)</title><rect x="1146.3" y="643.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1149.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 1.04%)</title><rect x="1146.3" y="627.0" width="12.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1149.3" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.04%)</title><rect x="1146.3" y="611.0" width="12.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1149.3" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.04%)</title><rect x="1146.3" y="595.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1149.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.74%)</title><rect x="1148.0" y="579.0" width="8.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1151.0" y="590.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.74%)</title><rect x="1148.0" y="563.0" width="8.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1151.0" y="574.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.74%)</title><rect x="1148.0" y="547.0" width="8.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1151.0" y="558.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.44%)</title><rect x="1151.5" y="531.0" width="5.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.5" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.44%)</title><rect x="1151.5" y="515.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.44%)</title><rect x="1151.5" y="499.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1154.5" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.15%)</title><rect x="1156.8" y="579.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.8" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.15%)</title><rect x="1156.8" y="563.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1159.8" y="574.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.15%)</title><rect x="1156.8" y="547.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1159.8" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.15%)</title><rect x="1156.8" y="531.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1159.8" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.30%)</title><rect x="1158.5" y="803.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.15%)</title><rect x="1160.3" y="787.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.3" y="798.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.15%)</title><rect x="1160.3" y="771.0" width="1.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1163.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.19%)</title><rect x="1162.0" y="819.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1165.0" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.04%)</title><rect x="1162.0" y="803.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1165.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.30%)</title><rect x="1162.0" y="787.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1165.0" y="798.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="1162.0" y="771.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1165.0" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.15%)</title><rect x="1163.8" y="771.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1166.8" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.15%)</title><rect x="1163.8" y="755.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1166.8" y="766.0"></text>
</g>
<g>
<title>__recv (5 samples, 0.74%)</title><rect x="1165.5" y="787.0" width="8.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1168.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.74%)</title><rect x="1165.5" y="771.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1168.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.15%)</title><rect x="1165.5" y="755.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1168.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.59%)</title><rect x="1167.3" y="755.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.59%)</title><rect x="1167.3" y="739.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1170.3" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 0.59%)</title><rect x="1167.3" y="723.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1170.3" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.30%)</title><rect x="1169.0" y="707.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1172.0" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.15%)</title><rect x="1169.0" y="691.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1172.0" y="702.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.15%)</title><rect x="1170.8" y="691.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1173.8" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="1170.8" y="675.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.8" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.15%)</title><rect x="1170.8" y="659.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.8" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.15%)</title><rect x="1170.8" y="643.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1173.8" y="654.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.15%)</title><rect x="1170.8" y="627.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1173.8" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.15%)</title><rect x="1172.5" y="707.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1175.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.15%)</title><rect x="1174.3" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1177.3" y="814.0"></text>
</g>
<g>
<title>start_thread (8 samples, 1.19%)</title><rect x="1176.0" y="867.0" width="14.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1179.0" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 1.19%)</title><rect x="1176.0" y="851.0" width="14.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1179.0" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (8 samples, 1.19%)</title><rect x="1176.0" y="835.0" width="14.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.0" y="846.0"></text>
</g>
<g>
<title>VMThread::run() (8 samples, 1.19%)</title><rect x="1176.0" y="819.0" width="14.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.0" y="830.0"></text>
</g>
<g>
<title>VMThread::loop() (8 samples, 1.19%)</title><rect x="1176.0" y="803.0" width="14.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.0" y="814.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.15%)</title><rect x="1176.0" y="787.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.0" y="798.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (5 samples, 0.74%)</title><rect x="1177.8" y="787.0" width="8.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.8" y="798.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (5 samples, 0.74%)</title><rect x="1177.8" y="771.0" width="8.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.8" y="782.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (5 samples, 0.74%)</title><rect x="1177.8" y="755.0" width="8.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.8" y="766.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (5 samples, 0.74%)</title><rect x="1177.8" y="739.0" width="8.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.8" y="750.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (5 samples, 0.74%)</title><rect x="1177.8" y="723.0" width="8.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.8" y="734.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool) (5 samples, 0.74%)</title><rect x="1177.8" y="707.0" width="8.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.8" y="718.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned long, bool) (5 samples, 0.74%)</title><rect x="1177.8" y="691.0" width="8.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.8" y="702.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (4 samples, 0.59%)</title><rect x="1177.8" y="675.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.8" y="686.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (4 samples, 0.59%)</title><rect x="1177.8" y="659.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.8" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(FastScanClosure*, oopDesc*, Klass*) (3 samples, 0.44%)</title><rect x="1179.5" y="643.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.5" y="654.0"></text>
</g>
<g>
<title>DefNewGeneration::copy_to_survivor_space(oopDesc*) (2 samples, 0.30%)</title><rect x="1181.3" y="627.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="638.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (1 samples, 0.15%)</title><rect x="1184.8" y="675.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>StringTable::oops_do(OopClosure*) (1 samples, 0.15%)</title><rect x="1184.8" y="659.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.8" y="670.0"></text>
</g>
<g>
<title>__sched_yield (2 samples, 0.30%)</title><rect x="1186.5" y="787.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1189.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.30%)</title><rect x="1186.5" y="771.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1189.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.15%)</title><rect x="1186.5" y="755.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1189.5" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="1188.3" y="755.0" width="1.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.15%)</title><rect x="1188.3" y="739.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.15%)</title><rect x="1188.3" y="723.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
</g>
</svg>
