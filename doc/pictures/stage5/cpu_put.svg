<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (657 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 1.22%)</title><rect x="10.0" y="931.0" width="14.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 1.22%)</title><rect x="10.0" y="915.0" width="14.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (7 samples, 1.07%)</title><rect x="11.8" y="899.0" width="12.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.8" y="910.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.61%)</title><rect x="13.6" y="883.0" width="7.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.6" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="20.8" y="883.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="23.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="20.8" y="867.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="23.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="20.8" y="851.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="23.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.15%)</title><rect x="20.8" y="835.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="23.8" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.15%)</title><rect x="20.8" y="819.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="23.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.15%)</title><rect x="20.8" y="803.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="23.8" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="22.6" y="883.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="25.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 2.28%)</title><rect x="24.4" y="931.0" width="26.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="27.4" y="942.0">[..</text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (15 samples, 2.28%)</title><rect x="24.4" y="915.0" width="26.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="27.4" y="926.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 2.28%)</title><rect x="24.4" y="899.0" width="26.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.4" y="910.0">e..</text>
</g>
<g>
<title>do_syscall_64 (15 samples, 2.28%)</title><rect x="24.4" y="883.0" width="26.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="27.4" y="894.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 2.28%)</title><rect x="24.4" y="867.0" width="26.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.4" y="878.0">_..</text>
</g>
<g>
<title>do_futex (15 samples, 2.28%)</title><rect x="24.4" y="851.0" width="26.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="27.4" y="862.0">d..</text>
</g>
<g>
<title>drop_futex_key_refs.isra.0 (1 samples, 0.15%)</title><rect x="24.4" y="835.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.4" y="846.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 2.13%)</title><rect x="26.2" y="835.0" width="25.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="29.2" y="846.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (12 samples, 1.83%)</title><rect x="28.0" y="819.0" width="21.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.0" y="830.0">f..</text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.15%)</title><rect x="28.0" y="803.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="31.0" y="814.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.15%)</title><rect x="28.0" y="787.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="31.0" y="798.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.15%)</title><rect x="28.0" y="771.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="31.0" y="782.0"></text>
</g>
<g>
<title>schedule (11 samples, 1.67%)</title><rect x="29.8" y="803.0" width="19.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.8" y="814.0"></text>
</g>
<g>
<title>__schedule (11 samples, 1.67%)</title><rect x="29.8" y="787.0" width="19.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="32.8" y="798.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 1.67%)</title><rect x="29.8" y="771.0" width="19.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="32.8" y="782.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.15%)</title><rect x="49.5" y="819.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="52.5" y="830.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.15%)</title><rect x="49.5" y="803.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="52.5" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.15%)</title><rect x="49.5" y="787.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.5" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (17 samples, 2.59%)</title><rect x="51.3" y="931.0" width="30.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="54.3" y="942.0">[u..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.15%)</title><rect x="51.3" y="915.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="54.3" y="926.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.15%)</title><rect x="51.3" y="899.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="54.3" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.15%)</title><rect x="53.1" y="915.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="56.1" y="926.0"></text>
</g>
<g>
<title>CardTableRS::is_in_young(oopDesc*) const (1 samples, 0.15%)</title><rect x="53.1" y="899.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="56.1" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.15%)</title><rect x="54.9" y="915.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="57.9" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (14 samples, 2.13%)</title><rect x="56.7" y="915.0" width="25.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="59.7" y="926.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 2.13%)</title><rect x="56.7" y="899.0" width="25.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.7" y="910.0">e..</text>
</g>
<g>
<title>do_syscall_64 (14 samples, 2.13%)</title><rect x="56.7" y="883.0" width="25.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.7" y="894.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.30%)</title><rect x="56.7" y="867.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.7" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.30%)</title><rect x="56.7" y="851.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="59.7" y="862.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.30%)</title><rect x="56.7" y="835.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="59.7" y="846.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.30%)</title><rect x="56.7" y="819.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="59.7" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.30%)</title><rect x="56.7" y="803.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="59.7" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.30%)</title><rect x="56.7" y="787.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.7" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 1.83%)</title><rect x="60.3" y="867.0" width="21.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="63.3" y="878.0">e..</text>
</g>
<g>
<title>schedule (12 samples, 1.83%)</title><rect x="60.3" y="851.0" width="21.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="63.3" y="862.0">s..</text>
</g>
<g>
<title>__schedule (11 samples, 1.67%)</title><rect x="62.1" y="835.0" width="19.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="65.1" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 1.67%)</title><rect x="62.1" y="819.0" width="19.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="65.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (473 samples, 71.99%)</title><rect x="81.8" y="931.0" width="849.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.8" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (473 samples, 71.99%)</title><rect x="81.8" y="915.0" width="849.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.8" y="926.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (473 samples, 71.99%)</title><rect x="81.8" y="899.0" width="849.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.8" y="910.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.15%)</title><rect x="81.8" y="883.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.15%)</title><rect x="81.8" y="867.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.15%)</title><rect x="81.8" y="851.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.15%)</title><rect x="81.8" y="835.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.8" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/1168571660.run (1 samples, 0.15%)</title><rect x="81.8" y="819.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (67 samples, 10.20%)</title><rect x="83.6" y="883.0" width="120.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.6" y="894.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (67 samples, 10.20%)</title><rect x="83.6" y="867.0" width="120.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="86.6" y="878.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (66 samples, 10.05%)</title><rect x="83.6" y="851.0" width="118.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="86.6" y="862.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (66 samples, 10.05%)</title><rect x="83.6" y="835.0" width="118.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.6" y="846.0">java/util/conc..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (66 samples, 10.05%)</title><rect x="83.6" y="819.0" width="118.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.6" y="830.0">jdk/internal/m..</text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.61%)</title><rect x="85.4" y="803.0" width="7.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="88.4" y="814.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.15%)</title><rect x="85.4" y="787.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="88.4" y="798.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.15%)</title><rect x="87.2" y="787.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="90.2" y="798.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.15%)</title><rect x="87.2" y="771.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="90.2" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.15%)</title><rect x="89.0" y="787.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="92.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="89.0" y="771.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="92.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="89.0" y="755.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.0" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.15%)</title><rect x="89.0" y="739.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.0" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.15%)</title><rect x="89.0" y="723.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.0" y="734.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.15%)</title><rect x="89.0" y="707.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="92.0" y="718.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.15%)</title><rect x="89.0" y="691.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.0" y="702.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.15%)</title><rect x="89.0" y="675.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_unlock@plt (1 samples, 0.15%)</title><rect x="90.8" y="787.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="93.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 9.28%)</title><rect x="92.6" y="803.0" width="109.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="95.6" y="814.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (59 samples, 8.98%)</title><rect x="92.6" y="787.0" width="106.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="95.6" y="798.0">__pthread_con..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 8.83%)</title><rect x="94.4" y="771.0" width="104.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="97.4" y="782.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 8.83%)</title><rect x="94.4" y="755.0" width="104.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.4" y="766.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_futex (58 samples, 8.83%)</title><rect x="94.4" y="739.0" width="104.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="97.4" y="750.0">__x64_sys_fu..</text>
</g>
<g>
<title>do_futex (58 samples, 8.83%)</title><rect x="94.4" y="723.0" width="104.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="97.4" y="734.0">do_futex</text>
</g>
<g>
<title>futex_wait (58 samples, 8.83%)</title><rect x="94.4" y="707.0" width="104.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="97.4" y="718.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (56 samples, 8.52%)</title><rect x="98.0" y="691.0" width="100.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.0" y="702.0">futex_wait_q..</text>
</g>
<g>
<title>schedule (56 samples, 8.52%)</title><rect x="98.0" y="675.0" width="100.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="101.0" y="686.0">schedule</text>
</g>
<g>
<title>__schedule (56 samples, 8.52%)</title><rect x="98.0" y="659.0" width="100.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="101.0" y="670.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (56 samples, 8.52%)</title><rect x="98.0" y="643.0" width="100.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.0" y="654.0">finish_task_..</text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.15%)</title><rect x="198.6" y="787.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="201.6" y="798.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.15%)</title><rect x="200.4" y="787.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="203.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.15%)</title><rect x="202.2" y="851.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.2" y="862.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.15%)</title><rect x="202.2" y="835.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="205.2" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/1168571660.run (405 samples, 61.64%)</title><rect x="204.0" y="883.0" width="727.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.0" y="894.0">ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/1168571660.run</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$0 (405 samples, 61.64%)</title><rect x="204.0" y="867.0" width="727.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.0" y="878.0">ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$0</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.15%)</title><rect x="205.8" y="851.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="205.8" y="835.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="205.8" y="819.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="208.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (79 samples, 12.02%)</title><rect x="207.6" y="851.0" width="141.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.6" y="862.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.putSync (79 samples, 12.02%)</title><rect x="207.6" y="835.0" width="141.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.6" y="846.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.15%)</title><rect x="207.6" y="819.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.6" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.15%)</title><rect x="207.6" y="803.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="210.6" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.15%)</title><rect x="207.6" y="787.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="210.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (78 samples, 11.87%)</title><rect x="209.4" y="819.0" width="140.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.4" y="830.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (78 samples, 11.87%)</title><rect x="209.4" y="803.0" width="140.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="212.4" y="814.0">org/rocksdb/RocksD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (75 samples, 11.42%)</title><rect x="213.0" y="787.0" width="134.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.0" y="798.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (74 samples, 11.26%)</title><rect x="214.7" y="771.0" width="133.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="217.7" y="782.0">Java_org_rocksdb..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (73 samples, 11.11%)</title><rect x="216.5" y="755.0" width="131.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="219.5" y="766.0">rocksdb_put_help..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.30%)</title><rect x="218.3" y="739.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="221.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (70 samples, 10.65%)</title><rect x="221.9" y="739.0" width="125.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="224.9" y="750.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (70 samples, 10.65%)</title><rect x="221.9" y="723.0" width="125.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="224.9" y="734.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (70 samples, 10.65%)</title><rect x="221.9" y="707.0" width="125.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="224.9" y="718.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (69 samples, 10.50%)</title><rect x="221.9" y="691.0" width="124.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="224.9" y="702.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::MemTableInsertStatusCheck(rocksdb::Status const&amp;) (1 samples, 0.15%)</title><rect x="221.9" y="675.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="224.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (67 samples, 10.20%)</title><rect x="223.7" y="675.0" width="120.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="226.7" y="686.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (4 samples, 0.61%)</title><rect x="227.3" y="659.0" width="7.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="230.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (37 samples, 5.63%)</title><rect x="234.5" y="659.0" width="66.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="237.5" y="670.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (36 samples, 5.48%)</title><rect x="234.5" y="643.0" width="64.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="237.5" y="654.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (35 samples, 5.33%)</title><rect x="236.3" y="627.0" width="62.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="239.3" y="638.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="236.3" y="611.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="239.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (33 samples, 5.02%)</title><rect x="238.1" y="611.0" width="59.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="241.1" y="622.0">rocksd..</text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.15%)</title><rect x="238.1" y="595.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="241.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (32 samples, 4.87%)</title><rect x="239.9" y="595.0" width="57.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="242.9" y="606.0">rocksd..</text>
</g>
<g>
<title>__write (32 samples, 4.87%)</title><rect x="239.9" y="579.0" width="57.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="242.9" y="590.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 4.87%)</title><rect x="239.9" y="563.0" width="57.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="242.9" y="574.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (32 samples, 4.87%)</title><rect x="239.9" y="547.0" width="57.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="242.9" y="558.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_write (31 samples, 4.72%)</title><rect x="241.7" y="531.0" width="55.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.7" y="542.0">__x64..</text>
</g>
<g>
<title>ksys_write (31 samples, 4.72%)</title><rect x="241.7" y="515.0" width="55.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="244.7" y="526.0">ksys_..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.15%)</title><rect x="241.7" y="499.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="244.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="241.7" y="483.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="244.7" y="494.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.15%)</title><rect x="241.7" y="467.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="244.7" y="478.0"></text>
</g>
<g>
<title>vfs_write (30 samples, 4.57%)</title><rect x="243.5" y="499.0" width="53.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="246.5" y="510.0">vfs_w..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.30%)</title><rect x="245.3" y="483.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="248.3" y="494.0"></text>
</g>
<g>
<title>__vfs_write (24 samples, 3.65%)</title><rect x="248.9" y="483.0" width="43.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="251.9" y="494.0">__vf..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.15%)</title><rect x="250.7" y="467.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="253.7" y="478.0"></text>
</g>
<g>
<title>new_sync_write (22 samples, 3.35%)</title><rect x="252.5" y="467.0" width="39.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.5" y="478.0">new..</text>
</g>
<g>
<title>ext4_file_write_iter (21 samples, 3.20%)</title><rect x="254.3" y="451.0" width="37.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.3" y="462.0">ext..</text>
</g>
<g>
<title>__generic_file_write_iter (21 samples, 3.20%)</title><rect x="254.3" y="435.0" width="37.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="257.3" y="446.0">__g..</text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.15%)</title><rect x="254.3" y="419.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="257.3" y="430.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.15%)</title><rect x="256.1" y="419.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="259.1" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (19 samples, 2.89%)</title><rect x="257.9" y="419.0" width="34.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="260.9" y="430.0">ge..</text>
</g>
<g>
<title>ext4_da_write_begin (5 samples, 0.76%)</title><rect x="257.9" y="403.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="260.9" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.30%)</title><rect x="257.9" y="387.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="260.9" y="398.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.30%)</title><rect x="257.9" y="371.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="260.9" y="382.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.15%)</title><rect x="257.9" y="355.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.9" y="366.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.15%)</title><rect x="259.6" y="355.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="262.6" y="366.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.15%)</title><rect x="259.6" y="339.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="262.6" y="350.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.46%)</title><rect x="261.4" y="387.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.4" y="398.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.46%)</title><rect x="261.4" y="371.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="264.4" y="382.0"></text>
</g>
<g>
<title>__page_cache_alloc (1 samples, 0.15%)</title><rect x="261.4" y="355.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.4" y="366.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.15%)</title><rect x="261.4" y="339.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="264.4" y="350.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="261.4" y="323.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="264.4" y="334.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="261.4" y="307.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="264.4" y="318.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.15%)</title><rect x="261.4" y="291.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="264.4" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.30%)</title><rect x="263.2" y="355.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="266.2" y="366.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.30%)</title><rect x="263.2" y="339.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="266.2" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end (14 samples, 2.13%)</title><rect x="266.8" y="403.0" width="25.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="269.8" y="414.0">e..</text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.15%)</title><rect x="268.6" y="387.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="271.6" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.15%)</title><rect x="268.6" y="371.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="271.6" y="382.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.15%)</title><rect x="268.6" y="355.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="271.6" y="366.0"></text>
</g>
<g>
<title>generic_write_end (12 samples, 1.83%)</title><rect x="270.4" y="387.0" width="21.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="273.4" y="398.0">g..</text>
</g>
<g>
<title>__mark_inode_dirty (10 samples, 1.52%)</title><rect x="270.4" y="371.0" width="18.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="273.4" y="382.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.15%)</title><rect x="270.4" y="355.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="273.4" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (9 samples, 1.37%)</title><rect x="272.2" y="355.0" width="16.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.2" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (7 samples, 1.07%)</title><rect x="275.8" y="339.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.8" y="350.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.61%)</title><rect x="275.8" y="323.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="278.8" y="334.0"></text>
</g>
<g>
<title>ext4_do_update_inode (4 samples, 0.61%)</title><rect x="275.8" y="307.0" width="7.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="278.8" y="318.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.46%)</title><rect x="277.6" y="291.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="280.6" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (3 samples, 0.46%)</title><rect x="277.6" y="275.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.6" y="286.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.15%)</title><rect x="279.4" y="259.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="282.4" y="270.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.15%)</title><rect x="281.2" y="259.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="284.2" y="270.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.15%)</title><rect x="281.2" y="243.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.2" y="254.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.46%)</title><rect x="283.0" y="323.0" width="5.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="286.0" y="334.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.30%)</title><rect x="283.0" y="307.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="286.0" y="318.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.15%)</title><rect x="283.0" y="291.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="286.0" y="302.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.15%)</title><rect x="283.0" y="275.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="286.0" y="286.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.15%)</title><rect x="284.8" y="291.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="287.8" y="302.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.15%)</title><rect x="286.6" y="307.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="289.6" y="318.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.15%)</title><rect x="286.6" y="291.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="289.6" y="302.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.30%)</title><rect x="288.4" y="371.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.4" y="382.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (2 samples, 0.30%)</title><rect x="288.4" y="355.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="291.4" y="366.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.15%)</title><rect x="290.2" y="339.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.2" y="350.0"></text>
</g>
<g>
<title>__set_page_dirty (1 samples, 0.15%)</title><rect x="290.2" y="323.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="293.2" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.15%)</title><rect x="290.2" y="307.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="293.2" y="318.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.15%)</title><rect x="292.0" y="483.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="295.0" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.30%)</title><rect x="293.8" y="483.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="296.8" y="494.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.30%)</title><rect x="293.8" y="467.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="296.8" y="478.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.30%)</title><rect x="293.8" y="451.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="296.8" y="462.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.30%)</title><rect x="293.8" y="435.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="296.8" y="446.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.15%)</title><rect x="295.6" y="419.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.15%)</title><rect x="297.4" y="611.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="300.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::UpdateFileChecksum(rocksdb::Slice const&amp;) (1 samples, 0.15%)</title><rect x="297.4" y="595.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="300.4" y="606.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.15%)</title><rect x="299.2" y="643.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="302.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.15%)</title><rect x="301.0" y="659.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="304.0" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="301.0" y="643.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="304.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (22 samples, 3.35%)</title><rect x="302.8" y="659.0" width="39.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="305.8" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (22 samples, 3.35%)</title><rect x="302.8" y="643.0" width="39.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="305.8" y="654.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (22 samples, 3.35%)</title><rect x="302.8" y="627.0" width="39.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="305.8" y="638.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 3.04%)</title><rect x="304.6" y="611.0" width="35.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="307.6" y="622.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.15%)</title><rect x="304.6" y="595.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="307.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (19 samples, 2.89%)</title><rect x="306.3" y="595.0" width="34.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="309.3" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (19 samples, 2.89%)</title><rect x="306.3" y="579.0" width="34.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="309.3" y="590.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (2 samples, 0.30%)</title><rect x="306.3" y="563.0" width="3.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="309.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.15%)</title><rect x="308.1" y="547.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="311.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (16 samples, 2.44%)</title><rect x="309.9" y="563.0" width="28.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="312.9" y="574.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (14 samples, 2.13%)</title><rect x="309.9" y="547.0" width="25.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="312.9" y="558.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (1 samples, 0.15%)</title><rect x="333.3" y="531.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="336.3" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="333.3" y="515.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="336.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.30%)</title><rect x="335.1" y="547.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="338.1" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="336.9" y="531.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="339.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.15%)</title><rect x="338.7" y="563.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="341.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.15%)</title><rect x="340.5" y="611.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="343.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.15%)</title><rect x="342.3" y="659.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="345.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.15%)</title><rect x="344.1" y="675.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="347.1" y="686.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) [clone .plt] (1 samples, 0.15%)</title><rect x="345.9" y="691.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="348.9" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.15%)</title><rect x="347.7" y="787.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="350.7" y="798.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.15%)</title><rect x="347.7" y="771.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="350.7" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.15%)</title><rect x="347.7" y="755.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="350.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromGateNode (206 samples, 31.35%)</title><rect x="349.5" y="851.0" width="369.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.5" y="862.0">ru/mail/polis/service/dariagap/ClusterServiceImpl...</text>
</g>
<g>
<title>one/nio/http/Request.getMethod (2 samples, 0.30%)</title><rect x="349.5" y="835.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getResponseFromCurrent (61 samples, 9.28%)</title><rect x="353.0" y="835.0" width="109.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.0" y="846.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.putSync (61 samples, 9.28%)</title><rect x="353.0" y="819.0" width="109.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.0" y="830.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.30%)</title><rect x="353.0" y="803.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.0" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.30%)</title><rect x="353.0" y="787.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.0" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.30%)</title><rect x="353.0" y="771.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.0" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.30%)</title><rect x="353.0" y="755.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.0" y="766.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.30%)</title><rect x="353.0" y="739.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.30%)</title><rect x="353.0" y="723.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsertWithTimestamp (59 samples, 8.98%)</title><rect x="356.6" y="803.0" width="106.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="359.6" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (58 samples, 8.83%)</title><rect x="356.6" y="787.0" width="104.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="359.6" y="798.0">org/rocksdb/..</text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.15%)</title><rect x="358.4" y="771.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="361.4" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (56 samples, 8.52%)</title><rect x="360.2" y="771.0" width="100.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="363.2" y="782.0">org/rocksdb/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (55 samples, 8.37%)</title><rect x="360.2" y="755.0" width="98.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="363.2" y="766.0">Java_org_roc..</text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.15%)</title><rect x="360.2" y="739.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="363.2" y="750.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (54 samples, 8.22%)</title><rect x="362.0" y="739.0" width="97.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="365.0" y="750.0">rocksdb_put..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (53 samples, 8.07%)</title><rect x="362.0" y="723.0" width="95.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="365.0" y="734.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 7.91%)</title><rect x="363.8" y="707.0" width="93.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="366.8" y="718.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 7.91%)</title><rect x="363.8" y="691.0" width="93.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="366.8" y="702.0">rocksdb::DB..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.15%)</title><rect x="363.8" y="675.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="366.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (50 samples, 7.61%)</title><rect x="365.6" y="675.0" width="89.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="368.6" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.15%)</title><rect x="365.6" y="659.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="368.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.15%)</title><rect x="367.4" y="659.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="370.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (47 samples, 7.15%)</title><rect x="369.2" y="659.0" width="84.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="372.2" y="670.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.15%)</title><rect x="374.6" y="643.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="377.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.15%)</title><rect x="376.4" y="643.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="379.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.15%)</title><rect x="378.2" y="643.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="381.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (28 samples, 4.26%)</title><rect x="380.0" y="643.0" width="50.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="383.0" y="654.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (27 samples, 4.11%)</title><rect x="380.0" y="627.0" width="48.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="383.0" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (27 samples, 4.11%)</title><rect x="380.0" y="611.0" width="48.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="383.0" y="622.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (3 samples, 0.46%)</title><rect x="383.6" y="595.0" width="5.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="386.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (22 samples, 3.35%)</title><rect x="389.0" y="595.0" width="39.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="392.0" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (22 samples, 3.35%)</title><rect x="389.0" y="579.0" width="39.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="392.0" y="590.0">roc..</text>
</g>
<g>
<title>__write (22 samples, 3.35%)</title><rect x="389.0" y="563.0" width="39.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="392.0" y="574.0">__w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 3.35%)</title><rect x="389.0" y="547.0" width="39.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="392.0" y="558.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (22 samples, 3.35%)</title><rect x="389.0" y="531.0" width="39.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="392.0" y="542.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (21 samples, 3.20%)</title><rect x="390.8" y="515.0" width="37.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="393.8" y="526.0">__x..</text>
</g>
<g>
<title>__f_unlock_pos (1 samples, 0.15%)</title><rect x="390.8" y="499.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="393.8" y="510.0"></text>
</g>
<g>
<title>ksys_write (20 samples, 3.04%)</title><rect x="392.6" y="499.0" width="35.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="395.6" y="510.0">ksy..</text>
</g>
<g>
<title>vfs_write (19 samples, 2.89%)</title><rect x="394.4" y="483.0" width="34.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="397.4" y="494.0">vf..</text>
</g>
<g>
<title>__fsnotify_parent (1 samples, 0.15%)</title><rect x="394.4" y="467.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.4" y="478.0"></text>
</g>
<g>
<title>__vfs_write (15 samples, 2.28%)</title><rect x="396.1" y="467.0" width="27.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.1" y="478.0">_..</text>
</g>
<g>
<title>new_sync_write (15 samples, 2.28%)</title><rect x="396.1" y="451.0" width="27.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="399.1" y="462.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (15 samples, 2.28%)</title><rect x="396.1" y="435.0" width="27.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="399.1" y="446.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (14 samples, 2.13%)</title><rect x="396.1" y="419.0" width="25.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.1" y="430.0">_..</text>
</g>
<g>
<title>file_update_time (2 samples, 0.30%)</title><rect x="397.9" y="403.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="400.9" y="414.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.15%)</title><rect x="399.7" y="387.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="402.7" y="398.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.15%)</title><rect x="399.7" y="371.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.7" y="382.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.15%)</title><rect x="399.7" y="355.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="402.7" y="366.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.15%)</title><rect x="399.7" y="339.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="402.7" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.15%)</title><rect x="399.7" y="323.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.7" y="334.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.15%)</title><rect x="399.7" y="307.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.7" y="318.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.15%)</title><rect x="399.7" y="291.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="402.7" y="302.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.15%)</title><rect x="399.7" y="275.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="402.7" y="286.0"></text>
</g>
<g>
<title>generic_perform_write (11 samples, 1.67%)</title><rect x="401.5" y="403.0" width="19.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.5" y="414.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.15%)</title><rect x="401.5" y="387.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="404.5" y="398.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.15%)</title><rect x="401.5" y="371.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.5" y="382.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.15%)</title><rect x="401.5" y="355.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="404.5" y="366.0"></text>
</g>
<g>
<title>__page_cache_alloc (1 samples, 0.15%)</title><rect x="401.5" y="339.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="404.5" y="350.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.15%)</title><rect x="401.5" y="323.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="404.5" y="334.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.15%)</title><rect x="401.5" y="307.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="404.5" y="318.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.15%)</title><rect x="401.5" y="291.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="404.5" y="302.0"></text>
</g>
<g>
<title>clear_page_rep (1 samples, 0.15%)</title><rect x="401.5" y="275.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="404.5" y="286.0"></text>
</g>
<g>
<title>ext4_da_write_end (9 samples, 1.37%)</title><rect x="403.3" y="387.0" width="16.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.3" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.15%)</title><rect x="403.3" y="371.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="406.3" y="382.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.15%)</title><rect x="403.3" y="355.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.3" y="366.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.15%)</title><rect x="403.3" y="339.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="406.3" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.15%)</title><rect x="403.3" y="323.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="406.3" y="334.0"></text>
</g>
<g>
<title>generic_write_end (8 samples, 1.22%)</title><rect x="405.1" y="371.0" width="14.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="408.1" y="382.0"></text>
</g>
<g>
<title>__mark_inode_dirty (8 samples, 1.22%)</title><rect x="405.1" y="355.0" width="14.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="408.1" y="366.0"></text>
</g>
<g>
<title>ext4_dirty_inode (8 samples, 1.22%)</title><rect x="405.1" y="339.0" width="14.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="408.1" y="350.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (6 samples, 0.91%)</title><rect x="406.9" y="323.0" width="10.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="409.9" y="334.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (4 samples, 0.61%)</title><rect x="406.9" y="307.0" width="7.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="409.9" y="318.0"></text>
</g>
<g>
<title>ext4_do_update_inode (4 samples, 0.61%)</title><rect x="406.9" y="291.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="409.9" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.61%)</title><rect x="406.9" y="275.0" width="7.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="409.9" y="286.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (4 samples, 0.61%)</title><rect x="406.9" y="259.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="409.9" y="270.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.30%)</title><rect x="406.9" y="243.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="409.9" y="254.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.30%)</title><rect x="410.5" y="243.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="413.5" y="254.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.15%)</title><rect x="412.3" y="227.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.3" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.30%)</title><rect x="414.1" y="307.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="417.1" y="318.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.15%)</title><rect x="414.1" y="291.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="417.1" y="302.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.15%)</title><rect x="414.1" y="275.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="417.1" y="286.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.15%)</title><rect x="414.1" y="259.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="417.1" y="270.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.15%)</title><rect x="414.1" y="243.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="417.1" y="254.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.15%)</title><rect x="415.9" y="291.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="418.9" y="302.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.15%)</title><rect x="415.9" y="275.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.9" y="286.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.15%)</title><rect x="415.9" y="259.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="418.9" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.15%)</title><rect x="417.7" y="323.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="420.7" y="334.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.15%)</title><rect x="419.5" y="387.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="422.5" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.15%)</title><rect x="419.5" y="371.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="422.5" y="382.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.15%)</title><rect x="421.3" y="419.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="424.3" y="430.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.15%)</title><rect x="423.1" y="467.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="426.1" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.30%)</title><rect x="424.9" y="467.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.9" y="478.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.30%)</title><rect x="424.9" y="451.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.9" y="462.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.15%)</title><rect x="424.9" y="435.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.9" y="446.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.15%)</title><rect x="424.9" y="419.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="427.9" y="430.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.15%)</title><rect x="424.9" y="403.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="427.9" y="414.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.15%)</title><rect x="426.7" y="435.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="429.7" y="446.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (1 samples, 0.15%)</title><rect x="428.5" y="627.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="431.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (11 samples, 1.67%)</title><rect x="430.3" y="643.0" width="19.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="433.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (11 samples, 1.67%)</title><rect x="430.3" y="627.0" width="19.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="433.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.15%)</title><rect x="430.3" y="611.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="433.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (10 samples, 1.52%)</title><rect x="432.1" y="611.0" width="17.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="435.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 1.37%)</title><rect x="432.1" y="595.0" width="16.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="435.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.15%)</title><rect x="432.1" y="579.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="435.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 1.22%)</title><rect x="433.9" y="579.0" width="14.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="436.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (7 samples, 1.07%)</title><rect x="433.9" y="563.0" width="12.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="436.9" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (7 samples, 1.07%)</title><rect x="433.9" y="547.0" width="12.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="436.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (7 samples, 1.07%)</title><rect x="433.9" y="531.0" width="12.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="436.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni12475090429549727118.so (3 samples, 0.46%)</title><rect x="441.1" y="515.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="444.1" y="526.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.15%)</title><rect x="441.1" y="499.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="444.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.30%)</title><rect x="442.8" y="499.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="445.8" y="510.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="444.6" y="483.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="447.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.15%)</title><rect x="446.4" y="563.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="449.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.15%)</title><rect x="448.2" y="595.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="451.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.15%)</title><rect x="450.0" y="643.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="453.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.15%)</title><rect x="451.8" y="643.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="454.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.15%)</title><rect x="451.8" y="627.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="454.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::~SuperVersionContext() (1 samples, 0.15%)</title><rect x="453.6" y="659.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="456.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.15%)</title><rect x="455.4" y="675.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="458.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.15%)</title><rect x="457.2" y="723.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="460.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.15%)</title><rect x="459.0" y="755.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="462.0" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="459.0" y="739.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="462.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.15%)</title><rect x="460.8" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.8" y="798.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.15%)</title><rect x="460.8" y="771.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="460.8" y="755.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="460.8" y="739.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.15%)</title><rect x="460.8" y="723.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.proxy (133 samples, 20.24%)</title><rect x="462.6" y="835.0" width="238.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.6" y="846.0">ru/mail/polis/service/dariagap/C..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (133 samples, 20.24%)</title><rect x="462.6" y="819.0" width="238.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.6" y="830.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (133 samples, 20.24%)</title><rect x="462.6" y="803.0" width="238.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.6" y="814.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.15%)</title><rect x="466.2" y="787.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="466.2" y="771.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="466.2" y="755.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8 samples, 1.22%)</title><rect x="468.0" y="787.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="471.0" y="798.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.46%)</title><rect x="477.0" y="771.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="480.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.15%)</title><rect x="477.0" y="755.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="480.0" y="766.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.30%)</title><rect x="478.8" y="755.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="481.8" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.15%)</title><rect x="480.6" y="739.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="483.6" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.15%)</title><rect x="480.6" y="723.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="483.6" y="734.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.15%)</title><rect x="480.6" y="707.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="483.6" y="718.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.15%)</title><rect x="480.6" y="691.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="483.6" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.15%)</title><rect x="480.6" y="675.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.6" y="686.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.15%)</title><rect x="480.6" y="659.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.6" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="480.6" y="643.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="483.6" y="654.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.15%)</title><rect x="480.6" y="627.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="483.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.61%)</title><rect x="482.4" y="787.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.30%)</title><rect x="482.4" y="771.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.15%)</title><rect x="484.2" y="755.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.15%)</title><rect x="484.2" y="739.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.15%)</title><rect x="484.2" y="723.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.15%)</title><rect x="484.2" y="707.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.15%)</title><rect x="484.2" y="691.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.30%)</title><rect x="486.0" y="771.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.30%)</title><rect x="486.0" y="755.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="489.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.30%)</title><rect x="486.0" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="489.0" y="750.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.15%)</title><rect x="487.7" y="723.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="490.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.76%)</title><rect x="489.5" y="787.0" width="9.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="492.5" y="798.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.46%)</title><rect x="493.1" y="771.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (6 samples, 0.91%)</title><rect x="498.5" y="787.0" width="10.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.5" y="798.0"></text>
</g>
<g>
<title>setsockopt (6 samples, 0.91%)</title><rect x="498.5" y="771.0" width="10.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="501.5" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.76%)</title><rect x="500.3" y="755.0" width="9.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="503.3" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.76%)</title><rect x="500.3" y="739.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="503.3" y="750.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (5 samples, 0.76%)</title><rect x="500.3" y="723.0" width="9.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="503.3" y="734.0"></text>
</g>
<g>
<title>__sys_setsockopt (5 samples, 0.76%)</title><rect x="500.3" y="707.0" width="9.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.3" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.15%)</title><rect x="502.1" y="691.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="505.1" y="702.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.15%)</title><rect x="503.9" y="691.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.9" y="702.0"></text>
</g>
<g>
<title>sock_setsockopt (2 samples, 0.30%)</title><rect x="505.7" y="691.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="508.7" y="702.0"></text>
</g>
<g>
<title>sock_set_timeout (1 samples, 0.15%)</title><rect x="507.5" y="675.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="510.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (106 samples, 16.13%)</title><rect x="509.3" y="787.0" width="190.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.3" y="798.0">one/nio/net/NativeSocket...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.15%)</title><rect x="509.3" y="771.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="512.3" y="782.0"></text>
</g>
<g>
<title>send (105 samples, 15.98%)</title><rect x="511.1" y="771.0" width="188.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="514.1" y="782.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 15.83%)</title><rect x="512.9" y="755.0" width="186.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="515.9" y="766.0">entry_SYSCALL_64_after_h..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.15%)</title><rect x="512.9" y="739.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="515.9" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (103 samples, 15.68%)</title><rect x="514.7" y="739.0" width="185.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="517.7" y="750.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (56 samples, 8.52%)</title><rect x="514.7" y="723.0" width="100.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="517.7" y="734.0">__x64_sys_se..</text>
</g>
<g>
<title>__sys_sendto (56 samples, 8.52%)</title><rect x="514.7" y="707.0" width="100.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="517.7" y="718.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (56 samples, 8.52%)</title><rect x="514.7" y="691.0" width="100.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="517.7" y="702.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (56 samples, 8.52%)</title><rect x="514.7" y="675.0" width="100.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.7" y="686.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (56 samples, 8.52%)</title><rect x="514.7" y="659.0" width="100.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.7" y="670.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (55 samples, 8.37%)</title><rect x="514.7" y="643.0" width="98.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.7" y="654.0">tcp_sendmsg_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="521.9" y="627.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="524.9" y="638.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.15%)</title><rect x="521.9" y="611.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="524.9" y="622.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.15%)</title><rect x="521.9" y="595.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="524.9" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.15%)</title><rect x="521.9" y="579.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="524.9" y="590.0"></text>
</g>
<g>
<title>tcp_push (49 samples, 7.46%)</title><rect x="523.7" y="627.0" width="88.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.7" y="638.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (49 samples, 7.46%)</title><rect x="523.7" y="611.0" width="88.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.7" y="622.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (49 samples, 7.46%)</title><rect x="523.7" y="595.0" width="88.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="526.7" y="606.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (47 samples, 7.15%)</title><rect x="525.5" y="579.0" width="84.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.5" y="590.0">__tcp_tran..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.15%)</title><rect x="527.3" y="563.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="530.3" y="574.0"></text>
</g>
<g>
<title>ip_queue_xmit (45 samples, 6.85%)</title><rect x="529.1" y="563.0" width="80.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="532.1" y="574.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (45 samples, 6.85%)</title><rect x="529.1" y="547.0" width="80.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="532.1" y="558.0">__ip_queu..</text>
</g>
<g>
<title>ip_local_out (45 samples, 6.85%)</title><rect x="529.1" y="531.0" width="80.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="532.1" y="542.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.15%)</title><rect x="530.9" y="515.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="533.9" y="526.0"></text>
</g>
<g>
<title>ip_output (43 samples, 6.54%)</title><rect x="532.6" y="515.0" width="77.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.6" y="526.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (43 samples, 6.54%)</title><rect x="532.6" y="499.0" width="77.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.6" y="510.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="532.6" y="483.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.6" y="494.0"></text>
</g>
<g>
<title>__ip_finish_output (41 samples, 6.24%)</title><rect x="534.4" y="483.0" width="73.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="537.4" y="494.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (41 samples, 6.24%)</title><rect x="534.4" y="467.0" width="73.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="537.4" y="478.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (35 samples, 5.33%)</title><rect x="536.2" y="451.0" width="62.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="539.2" y="462.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (35 samples, 5.33%)</title><rect x="536.2" y="435.0" width="62.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="539.2" y="446.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (34 samples, 5.18%)</title><rect x="538.0" y="419.0" width="61.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="541.0" y="430.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (34 samples, 5.18%)</title><rect x="538.0" y="403.0" width="61.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="541.0" y="414.0">__soft..</text>
</g>
<g>
<title>net_rx_action (34 samples, 5.18%)</title><rect x="538.0" y="387.0" width="61.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="541.0" y="398.0">net_rx..</text>
</g>
<g>
<title>process_backlog (33 samples, 5.02%)</title><rect x="539.8" y="371.0" width="59.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="542.8" y="382.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (33 samples, 5.02%)</title><rect x="539.8" y="355.0" width="59.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="542.8" y="366.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (33 samples, 5.02%)</title><rect x="539.8" y="339.0" width="59.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="542.8" y="350.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.30%)</title><rect x="539.8" y="323.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="542.8" y="334.0"></text>
</g>
<g>
<title>ip_rcv (31 samples, 4.72%)</title><rect x="543.4" y="323.0" width="55.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.4" y="334.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (31 samples, 4.72%)</title><rect x="543.4" y="307.0" width="55.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="546.4" y="318.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (30 samples, 4.57%)</title><rect x="545.2" y="291.0" width="53.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.2" y="302.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (29 samples, 4.41%)</title><rect x="545.2" y="275.0" width="52.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="548.2" y="286.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (29 samples, 4.41%)</title><rect x="545.2" y="259.0" width="52.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="548.2" y="270.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (29 samples, 4.41%)</title><rect x="545.2" y="243.0" width="52.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="548.2" y="254.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.15%)</title><rect x="548.8" y="227.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="551.8" y="238.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.15%)</title><rect x="550.6" y="227.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.6" y="238.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.15%)</title><rect x="550.6" y="211.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="553.6" y="222.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 3.81%)</title><rect x="552.4" y="227.0" width="44.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.4" y="238.0">tcp_..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.15%)</title><rect x="552.4" y="211.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.4" y="222.0"></text>
</g>
<g>
<title>tcp_rcv_established (24 samples, 3.65%)</title><rect x="554.2" y="211.0" width="43.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="557.2" y="222.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.15%)</title><rect x="556.0" y="195.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="559.0" y="206.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.15%)</title><rect x="556.0" y="179.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="559.0" y="190.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.30%)</title><rect x="557.8" y="195.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.8" y="206.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.15%)</title><rect x="559.6" y="179.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="562.6" y="190.0"></text>
</g>
<g>
<title>tcp_data_ready (20 samples, 3.04%)</title><rect x="561.4" y="195.0" width="35.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="564.4" y="206.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (20 samples, 3.04%)</title><rect x="561.4" y="179.0" width="35.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="564.4" y="190.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (20 samples, 3.04%)</title><rect x="561.4" y="163.0" width="35.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="564.4" y="174.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (20 samples, 3.04%)</title><rect x="561.4" y="147.0" width="35.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="564.4" y="158.0">__w..</text>
</g>
<g>
<title>__lock_text_start (20 samples, 3.04%)</title><rect x="561.4" y="131.0" width="35.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="564.4" y="142.0">__l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.15%)</title><rect x="597.3" y="275.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.3" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 0.76%)</title><rect x="599.1" y="451.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="602.1" y="462.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.76%)</title><rect x="599.1" y="435.0" width="9.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="602.1" y="446.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.46%)</title><rect x="600.9" y="419.0" width="5.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="603.9" y="430.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.30%)</title><rect x="600.9" y="403.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="603.9" y="414.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.15%)</title><rect x="602.7" y="387.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="605.7" y="398.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.15%)</title><rect x="602.7" y="371.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="605.7" y="382.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.15%)</title><rect x="602.7" y="355.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="605.7" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.15%)</title><rect x="604.5" y="403.0" width="1.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="607.5" y="414.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.15%)</title><rect x="606.3" y="419.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="609.3" y="430.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.15%)</title><rect x="606.3" y="403.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.3" y="414.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.15%)</title><rect x="606.3" y="387.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.3" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.15%)</title><rect x="608.1" y="483.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.1" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.15%)</title><rect x="609.9" y="579.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="612.9" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.15%)</title><rect x="611.7" y="627.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.7" y="638.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.15%)</title><rect x="613.5" y="643.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.5" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (47 samples, 7.15%)</title><rect x="615.3" y="723.0" width="84.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="618.3" y="734.0">exit_to_us..</text>
</g>
<g>
<title>schedule (47 samples, 7.15%)</title><rect x="615.3" y="707.0" width="84.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="618.3" y="718.0">schedule</text>
</g>
<g>
<title>__schedule (47 samples, 7.15%)</title><rect x="615.3" y="691.0" width="84.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="618.3" y="702.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (45 samples, 6.85%)</title><rect x="618.9" y="675.0" width="80.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.9" y="686.0">finish_ta..</text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.15%)</title><rect x="699.7" y="787.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="702.7" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.15%)</title><rect x="699.7" y="771.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.7" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.15%)</title><rect x="699.7" y="755.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="702.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNodes (10 samples, 1.52%)</title><rect x="701.5" y="835.0" width="17.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.5" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (2 samples, 0.30%)</title><rect x="701.5" y="819.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="704.5" y="830.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.sort (2 samples, 0.30%)</title><rect x="701.5" y="803.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="704.5" y="814.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.binarySort (1 samples, 0.15%)</title><rect x="701.5" y="787.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.15%)</title><rect x="701.5" y="771.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.15%)</title><rect x="701.5" y="755.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.compare (1 samples, 0.15%)</title><rect x="701.5" y="739.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.5" y="750.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.countRunAndMakeAscending (1 samples, 0.15%)</title><rect x="703.3" y="787.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.put (7 samples, 1.07%)</title><rect x="705.1" y="819.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 1.07%)</title><rect x="705.1" y="803.0" width="12.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="708.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.sendResponse (1 samples, 0.15%)</title><rect x="715.8" y="787.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.15%)</title><rect x="717.6" y="819.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.6" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.15%)</title><rect x="717.6" y="803.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.15%)</title><rect x="717.6" y="787.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.15%)</title><rect x="717.6" y="771.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="720.6" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.sendResponse (118 samples, 17.96%)</title><rect x="719.4" y="851.0" width="212.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.4" y="862.0">ru/mail/polis/service/dariag..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (118 samples, 17.96%)</title><rect x="719.4" y="835.0" width="212.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.4" y="846.0">one/nio/http/HttpSession.sen..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.15%)</title><rect x="721.2" y="819.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="724.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="721.2" y="803.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="721.2" y="787.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.2" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.15%)</title><rect x="721.2" y="771.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="724.2" y="782.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.15%)</title><rect x="721.2" y="755.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="724.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (115 samples, 17.50%)</title><rect x="723.0" y="819.0" width="206.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.0" y="830.0">one/nio/http/HttpSession.wr..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.61%)</title><rect x="723.0" y="803.0" width="7.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="726.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (4 samples, 0.61%)</title><rect x="723.0" y="787.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="726.0" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.15%)</title><rect x="728.4" y="771.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="731.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (111 samples, 16.89%)</title><rect x="730.2" y="803.0" width="199.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.2" y="814.0">one/nio/net/Session.write</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.15%)</title><rect x="730.2" y="787.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="733.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (110 samples, 16.74%)</title><rect x="732.0" y="787.0" width="197.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="735.0" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.15%)</title><rect x="732.0" y="771.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="735.0" y="782.0"></text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.15%)</title><rect x="733.8" y="771.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="736.8" y="782.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.15%)</title><rect x="735.6" y="771.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="738.6" y="782.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.15%)</title><rect x="735.6" y="755.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="738.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (107 samples, 16.29%)</title><rect x="737.4" y="771.0" width="192.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.4" y="782.0">one/nio/net/Session$Array..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (107 samples, 16.29%)</title><rect x="737.4" y="755.0" width="192.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.4" y="766.0">one/nio/net/NativeSocket...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.15%)</title><rect x="737.4" y="739.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="740.4" y="750.0"></text>
</g>
<g>
<title>send (106 samples, 16.13%)</title><rect x="739.2" y="739.0" width="190.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="742.2" y="750.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (104 samples, 15.83%)</title><rect x="742.8" y="723.0" width="186.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="745.8" y="734.0">entry_SYSCALL_64_after_h..</text>
</g>
<g>
<title>do_syscall_64 (104 samples, 15.83%)</title><rect x="742.8" y="707.0" width="186.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="745.8" y="718.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (87 samples, 13.24%)</title><rect x="748.2" y="691.0" width="156.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="751.2" y="702.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (87 samples, 13.24%)</title><rect x="748.2" y="675.0" width="156.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="751.2" y="686.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (84 samples, 12.79%)</title><rect x="748.2" y="659.0" width="150.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="751.2" y="670.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (82 samples, 12.48%)</title><rect x="750.0" y="643.0" width="147.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.0" y="654.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (81 samples, 12.33%)</title><rect x="751.8" y="627.0" width="145.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="754.8" y="638.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.15%)</title><rect x="753.6" y="611.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="756.6" y="622.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.30%)</title><rect x="755.4" y="611.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="758.4" y="622.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.15%)</title><rect x="758.9" y="611.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="761.9" y="622.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (73 samples, 11.11%)</title><rect x="760.7" y="611.0" width="131.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="763.7" y="622.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.15%)</title><rect x="764.3" y="595.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="767.3" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.46%)</title><rect x="766.1" y="595.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="769.1" y="606.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.46%)</title><rect x="766.1" y="579.0" width="5.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="769.1" y="590.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.15%)</title><rect x="767.9" y="563.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="770.9" y="574.0"></text>
</g>
<g>
<title>memset (1 samples, 0.15%)</title><rect x="767.9" y="547.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="770.9" y="558.0"></text>
</g>
<g>
<title>memset (1 samples, 0.15%)</title><rect x="769.7" y="563.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="772.7" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.30%)</title><rect x="771.5" y="595.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="774.5" y="606.0"></text>
</g>
<g>
<title>tcp_push (64 samples, 9.74%)</title><rect x="775.1" y="595.0" width="115.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="778.1" y="606.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (64 samples, 9.74%)</title><rect x="775.1" y="579.0" width="115.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="778.1" y="590.0">__tcp_push_pen..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.15%)</title><rect x="775.1" y="563.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="778.1" y="574.0"></text>
</g>
<g>
<title>tcp_write_xmit (63 samples, 9.59%)</title><rect x="776.9" y="563.0" width="113.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="779.9" y="574.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (55 samples, 8.37%)</title><rect x="784.1" y="547.0" width="98.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="787.1" y="558.0">__tcp_transm..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.15%)</title><rect x="789.5" y="531.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="792.5" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (51 samples, 7.76%)</title><rect x="791.3" y="531.0" width="91.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.3" y="542.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (51 samples, 7.76%)</title><rect x="791.3" y="515.0" width="91.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="794.3" y="526.0">__ip_queue_..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.15%)</title><rect x="794.9" y="499.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="797.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.15%)</title><rect x="794.9" y="483.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="797.9" y="494.0"></text>
</g>
<g>
<title>ip_local_out (44 samples, 6.70%)</title><rect x="796.7" y="499.0" width="79.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="799.7" y="510.0">ip_local_..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.15%)</title><rect x="796.7" y="483.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="799.7" y="494.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.15%)</title><rect x="796.7" y="467.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="799.7" y="478.0"></text>
</g>
<g>
<title>ip_output (43 samples, 6.54%)</title><rect x="798.5" y="483.0" width="77.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="801.5" y="494.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (43 samples, 6.54%)</title><rect x="798.5" y="467.0" width="77.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="801.5" y="478.0">ip_finish..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.15%)</title><rect x="798.5" y="451.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="801.5" y="462.0"></text>
</g>
<g>
<title>__ip_finish_output (42 samples, 6.39%)</title><rect x="800.3" y="451.0" width="75.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="803.3" y="462.0">__ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (42 samples, 6.39%)</title><rect x="800.3" y="435.0" width="75.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="803.3" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (36 samples, 5.48%)</title><rect x="802.1" y="419.0" width="64.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="805.1" y="430.0">__local..</text>
</g>
<g>
<title>do_softirq.part.0 (36 samples, 5.48%)</title><rect x="802.1" y="403.0" width="64.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="805.1" y="414.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (35 samples, 5.33%)</title><rect x="803.9" y="387.0" width="62.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="806.9" y="398.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (35 samples, 5.33%)</title><rect x="803.9" y="371.0" width="62.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="806.9" y="382.0">__soft..</text>
</g>
<g>
<title>net_rx_action (35 samples, 5.33%)</title><rect x="803.9" y="355.0" width="62.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.9" y="366.0">net_rx..</text>
</g>
<g>
<title>process_backlog (34 samples, 5.18%)</title><rect x="805.6" y="339.0" width="61.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="808.6" y="350.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (34 samples, 5.18%)</title><rect x="805.6" y="323.0" width="61.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="808.6" y="334.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 5.18%)</title><rect x="805.6" y="307.0" width="61.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="808.6" y="318.0">__neti..</text>
</g>
<g>
<title>ip_rcv (33 samples, 5.02%)</title><rect x="807.4" y="291.0" width="59.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="810.4" y="302.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (33 samples, 5.02%)</title><rect x="807.4" y="275.0" width="59.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="810.4" y="286.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (33 samples, 5.02%)</title><rect x="807.4" y="259.0" width="59.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="810.4" y="270.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (33 samples, 5.02%)</title><rect x="807.4" y="243.0" width="59.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="810.4" y="254.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (33 samples, 5.02%)</title><rect x="807.4" y="227.0" width="59.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="810.4" y="238.0">ip_pro..</text>
</g>
<g>
<title>sock_put (1 samples, 0.15%)</title><rect x="807.4" y="211.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="810.4" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 4.87%)</title><rect x="809.2" y="211.0" width="57.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="812.2" y="222.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.46%)</title><rect x="811.0" y="195.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.0" y="206.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.15%)</title><rect x="814.6" y="179.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="817.6" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.46%)</title><rect x="816.4" y="195.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="819.4" y="206.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.30%)</title><rect x="816.4" y="179.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="819.4" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.15%)</title><rect x="820.0" y="179.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 3.81%)</title><rect x="821.8" y="195.0" width="44.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.8" y="206.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (25 samples, 3.81%)</title><rect x="821.8" y="179.0" width="44.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="824.8" y="190.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.30%)</title><rect x="821.8" y="163.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="824.8" y="174.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.30%)</title><rect x="821.8" y="147.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.8" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.30%)</title><rect x="821.8" y="131.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="824.8" y="142.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.30%)</title><rect x="821.8" y="115.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.8" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.30%)</title><rect x="821.8" y="99.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.8" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.15%)</title><rect x="825.4" y="163.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.4" y="174.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 1.83%)</title><rect x="827.2" y="163.0" width="21.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="830.2" y="174.0">t..</text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.15%)</title><rect x="832.6" y="147.0" width="1.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="835.6" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 1.07%)</title><rect x="834.4" y="147.0" width="12.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="837.4" y="158.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.91%)</title><rect x="836.2" y="131.0" width="10.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.2" y="142.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.30%)</title><rect x="836.2" y="115.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.2" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.15%)</title><rect x="838.0" y="99.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="841.0" y="110.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.61%)</title><rect x="839.8" y="115.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="842.8" y="126.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.61%)</title><rect x="839.8" y="99.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="842.8" y="110.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.30%)</title><rect x="843.4" y="83.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="846.4" y="94.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.30%)</title><rect x="843.4" y="67.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="846.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.15%)</title><rect x="845.2" y="51.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.2" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.15%)</title><rect x="845.2" y="35.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.2" y="46.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.15%)</title><rect x="847.0" y="147.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="850.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (9 samples, 1.37%)</title><rect x="848.8" y="163.0" width="16.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="851.8" y="174.0"></text>
</g>
<g>
<title>sock_def_readable (8 samples, 1.22%)</title><rect x="850.5" y="147.0" width="14.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="853.5" y="158.0"></text>
</g>
<g>
<title>__wake_up_sync_key (8 samples, 1.22%)</title><rect x="850.5" y="131.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="853.5" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (8 samples, 1.22%)</title><rect x="850.5" y="115.0" width="14.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="853.5" y="126.0"></text>
</g>
<g>
<title>__lock_text_start (8 samples, 1.22%)</title><rect x="850.5" y="99.0" width="14.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="853.5" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.15%)</title><rect x="864.9" y="163.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="867.9" y="174.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.61%)</title><rect x="866.7" y="419.0" width="7.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="869.7" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.61%)</title><rect x="866.7" y="403.0" width="7.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="869.7" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.46%)</title><rect x="866.7" y="387.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="869.7" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.30%)</title><rect x="866.7" y="371.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.7" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.15%)</title><rect x="866.7" y="355.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="869.7" y="366.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.15%)</title><rect x="868.5" y="355.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="871.5" y="366.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.15%)</title><rect x="868.5" y="339.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="871.5" y="350.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.15%)</title><rect x="868.5" y="323.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="871.5" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.15%)</title><rect x="870.3" y="371.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.3" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.15%)</title><rect x="872.1" y="387.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="875.1" y="398.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.15%)</title><rect x="872.1" y="371.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="875.1" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.15%)</title><rect x="873.9" y="419.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="876.9" y="430.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.15%)</title><rect x="875.7" y="499.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="878.7" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.46%)</title><rect x="877.5" y="499.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="880.5" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.15%)</title><rect x="882.9" y="547.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="885.9" y="558.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.15%)</title><rect x="884.7" y="547.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="887.7" y="558.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.15%)</title><rect x="886.5" y="547.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.5" y="558.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.15%)</title><rect x="888.3" y="547.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="891.3" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.15%)</title><rect x="890.1" y="595.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.1" y="606.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.15%)</title><rect x="890.1" y="579.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="893.1" y="590.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.46%)</title><rect x="891.9" y="611.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="894.9" y="622.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.15%)</title><rect x="897.2" y="643.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="900.2" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.15%)</title><rect x="897.2" y="627.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="900.2" y="638.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.15%)</title><rect x="897.2" y="611.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="900.2" y="622.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.15%)</title><rect x="897.2" y="595.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="900.2" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.46%)</title><rect x="899.0" y="659.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="902.0" y="670.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.46%)</title><rect x="899.0" y="643.0" width="5.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="902.0" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.46%)</title><rect x="899.0" y="627.0" width="5.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="902.0" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.46%)</title><rect x="899.0" y="611.0" width="5.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="902.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (14 samples, 2.13%)</title><rect x="904.4" y="691.0" width="25.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="907.4" y="702.0">e..</text>
</g>
<g>
<title>schedule (13 samples, 1.98%)</title><rect x="906.2" y="675.0" width="23.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="909.2" y="686.0">s..</text>
</g>
<g>
<title>__schedule (13 samples, 1.98%)</title><rect x="906.2" y="659.0" width="23.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="909.2" y="670.0">_..</text>
</g>
<g>
<title>finish_task_switch (13 samples, 1.98%)</title><rect x="906.2" y="643.0" width="23.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="909.2" y="654.0">f..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.15%)</title><rect x="929.6" y="819.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="932.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.15%)</title><rect x="929.6" y="803.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="932.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.15%)</title><rect x="929.6" y="787.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="932.6" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (142 samples, 21.61%)</title><rect x="931.4" y="931.0" width="255.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.4" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.15%)</title><rect x="931.4" y="915.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="934.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (84 samples, 12.79%)</title><rect x="933.2" y="915.0" width="150.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="936.2" y="926.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (83 samples, 12.63%)</title><rect x="935.0" y="899.0" width="149.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="938.0" y="910.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>epoll_wait (83 samples, 12.63%)</title><rect x="935.0" y="883.0" width="149.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="938.0" y="894.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 12.18%)</title><rect x="940.4" y="867.0" width="143.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="943.4" y="878.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.15%)</title><rect x="940.4" y="851.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="943.4" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 12.02%)</title><rect x="942.1" y="851.0" width="141.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="945.1" y="862.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (78 samples, 11.87%)</title><rect x="943.9" y="835.0" width="140.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="946.9" y="846.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>do_epoll_wait (78 samples, 11.87%)</title><rect x="943.9" y="819.0" width="140.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="946.9" y="830.0">do_epoll_wait</text>
</g>
<g>
<title>ep_poll (78 samples, 11.87%)</title><rect x="943.9" y="803.0" width="140.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="946.9" y="814.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (8 samples, 1.22%)</title><rect x="945.7" y="787.0" width="14.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.7" y="798.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 1.22%)</title><rect x="945.7" y="771.0" width="14.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="948.7" y="782.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 0.91%)</title><rect x="949.3" y="755.0" width="10.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="952.3" y="766.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.46%)</title><rect x="951.1" y="739.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="954.1" y="750.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.15%)</title><rect x="952.9" y="723.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="955.9" y="734.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.15%)</title><rect x="954.7" y="723.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="957.7" y="734.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.30%)</title><rect x="956.5" y="739.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="959.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (69 samples, 10.50%)</title><rect x="960.1" y="787.0" width="123.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.1" y="798.0">schedule_hrtime..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (69 samples, 10.50%)</title><rect x="960.1" y="771.0" width="123.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="963.1" y="782.0">schedule_hrtime..</text>
</g>
<g>
<title>schedule (69 samples, 10.50%)</title><rect x="960.1" y="755.0" width="123.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.1" y="766.0">schedule</text>
</g>
<g>
<title>__schedule (69 samples, 10.50%)</title><rect x="960.1" y="739.0" width="123.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.1" y="750.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (69 samples, 10.50%)</title><rect x="960.1" y="723.0" width="123.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="963.1" y="734.0">finish_task_swi..</text>
</g>
<g>
<title>one/nio/net/Session.process (56 samples, 8.52%)</title><rect x="1084.0" y="915.0" width="100.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.0" y="926.0">one/nio/net/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.30%)</title><rect x="1085.8" y="899.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1088.8" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.30%)</title><rect x="1085.8" y="883.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1088.8" y="894.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.30%)</title><rect x="1085.8" y="867.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1088.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 8.07%)</title><rect x="1089.4" y="899.0" width="95.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1092.4" y="910.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34 samples, 5.18%)</title><rect x="1089.4" y="883.0" width="61.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1092.4" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (30 samples, 4.57%)</title><rect x="1091.2" y="867.0" width="53.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1094.2" y="878.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (30 samples, 4.57%)</title><rect x="1091.2" y="851.0" width="53.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.2" y="862.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (19 samples, 2.89%)</title><rect x="1091.2" y="835.0" width="34.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1094.2" y="846.0">Re..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.15%)</title><rect x="1093.0" y="819.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.15%)</title><rect x="1093.0" y="803.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.15%)</title><rect x="1093.0" y="787.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (17 samples, 2.59%)</title><rect x="1094.8" y="819.0" width="30.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1097.8" y="830.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 2.59%)</title><rect x="1094.8" y="803.0" width="30.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.8" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (17 samples, 2.59%)</title><rect x="1094.8" y="787.0" width="30.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1097.8" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.30%)</title><rect x="1094.8" y="771.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1097.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.30%)</title><rect x="1094.8" y="755.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.30%)</title><rect x="1094.8" y="739.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.30%)</title><rect x="1094.8" y="723.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1097.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 2.28%)</title><rect x="1098.4" y="771.0" width="26.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1101.4" y="782.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 2.28%)</title><rect x="1098.4" y="755.0" width="26.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.4" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 2.28%)</title><rect x="1098.4" y="739.0" width="26.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1101.4" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 2.28%)</title><rect x="1098.4" y="723.0" width="26.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1101.4" y="734.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 2.28%)</title><rect x="1098.4" y="707.0" width="26.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1101.4" y="718.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.76%)</title><rect x="1098.4" y="691.0" width="9.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1101.4" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.15%)</title><rect x="1098.4" y="675.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1101.4" y="686.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.15%)</title><rect x="1100.2" y="675.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.2" y="686.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.30%)</title><rect x="1102.0" y="675.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1105.0" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.15%)</title><rect x="1105.6" y="675.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1108.6" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 1.22%)</title><rect x="1107.4" y="691.0" width="14.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1110.4" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.07%)</title><rect x="1109.2" y="675.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1112.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.07%)</title><rect x="1109.2" y="659.0" width="12.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 1.07%)</title><rect x="1109.2" y="643.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1112.2" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 1.07%)</title><rect x="1109.2" y="627.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1112.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 1.07%)</title><rect x="1109.2" y="611.0" width="12.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1112.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 1.07%)</title><rect x="1109.2" y="595.0" width="12.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1112.2" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 1.07%)</title><rect x="1109.2" y="579.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1112.2" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 1.07%)</title><rect x="1109.2" y="563.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1112.2" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.15%)</title><rect x="1121.8" y="691.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1124.8" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.15%)</title><rect x="1123.5" y="691.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1126.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (11 samples, 1.67%)</title><rect x="1125.3" y="835.0" width="19.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1128.3" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (11 samples, 1.67%)</title><rect x="1125.3" y="819.0" width="19.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1128.3" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (11 samples, 1.67%)</title><rect x="1125.3" y="803.0" width="19.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1128.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.15%)</title><rect x="1145.1" y="867.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1148.1" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.15%)</title><rect x="1145.1" y="851.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1148.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.15%)</title><rect x="1145.1" y="835.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1148.1" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.15%)</title><rect x="1145.1" y="819.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.1" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.15%)</title><rect x="1145.1" y="803.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.15%)</title><rect x="1145.1" y="787.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.15%)</title><rect x="1145.1" y="771.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.15%)</title><rect x="1145.1" y="755.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.1" y="766.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.15%)</title><rect x="1145.1" y="739.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1148.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.30%)</title><rect x="1146.9" y="867.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.30%)</title><rect x="1146.9" y="851.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1149.9" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.15%)</title><rect x="1148.7" y="835.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1151.7" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.15%)</title><rect x="1148.7" y="819.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1151.7" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.15%)</title><rect x="1148.7" y="803.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.7" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.15%)</title><rect x="1148.7" y="787.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.7" y="798.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.15%)</title><rect x="1148.7" y="771.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.7" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.15%)</title><rect x="1148.7" y="755.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.7" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 2.89%)</title><rect x="1150.5" y="883.0" width="34.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1153.5" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 2.89%)</title><rect x="1150.5" y="867.0" width="34.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1153.5" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.76%)</title><rect x="1152.3" y="851.0" width="9.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1155.3" y="862.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.15%)</title><rect x="1152.3" y="835.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1155.3" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.61%)</title><rect x="1154.1" y="835.0" width="7.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1157.1" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.46%)</title><rect x="1155.9" y="819.0" width="5.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1158.9" y="830.0"></text>
</g>
<g>
<title>__recv (12 samples, 1.83%)</title><rect x="1161.3" y="851.0" width="21.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1164.3" y="862.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 1.83%)</title><rect x="1161.3" y="835.0" width="21.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1164.3" y="846.0">e..</text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.15%)</title><rect x="1161.3" y="819.0" width="1.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1164.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.67%)</title><rect x="1163.1" y="819.0" width="19.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1166.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 1.67%)</title><rect x="1163.1" y="803.0" width="19.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1166.1" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 1.67%)</title><rect x="1163.1" y="787.0" width="19.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1166.1" y="798.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.15%)</title><rect x="1164.9" y="771.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1167.9" y="782.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 1.07%)</title><rect x="1166.7" y="771.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.7" y="782.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.76%)</title><rect x="1166.7" y="755.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1169.7" y="766.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.76%)</title><rect x="1166.7" y="739.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1169.7" y="750.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.15%)</title><rect x="1168.4" y="723.0" width="1.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1171.4" y="734.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.15%)</title><rect x="1168.4" y="707.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1171.4" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.15%)</title><rect x="1170.2" y="723.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1173.2" y="734.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.15%)</title><rect x="1170.2" y="707.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.2" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.30%)</title><rect x="1172.0" y="723.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1175.0" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.15%)</title><rect x="1175.6" y="755.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1178.6" y="766.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.15%)</title><rect x="1175.6" y="739.0" width="1.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1178.6" y="750.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="1177.4" y="755.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1180.4" y="766.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.30%)</title><rect x="1179.2" y="771.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.2" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.15%)</title><rect x="1179.2" y="755.0" width="1.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1182.2" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="1179.2" y="739.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1182.2" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.15%)</title><rect x="1179.2" y="723.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.15%)</title><rect x="1181.0" y="755.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1184.0" y="766.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.15%)</title><rect x="1182.8" y="851.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1185.8" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.15%)</title><rect x="1184.6" y="915.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="926.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.30%)</title><rect x="1186.4" y="931.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.4" y="942.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.30%)</title><rect x="1186.4" y="915.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1189.4" y="926.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.30%)</title><rect x="1186.4" y="899.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="910.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.30%)</title><rect x="1186.4" y="883.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="894.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.30%)</title><rect x="1186.4" y="867.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.4" y="878.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.15%)</title><rect x="1186.4" y="851.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.4" y="862.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.15%)</title><rect x="1186.4" y="835.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.4" y="846.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.15%)</title><rect x="1186.4" y="819.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.4" y="830.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.15%)</title><rect x="1186.4" y="803.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.4" y="814.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.0] (1 samples, 0.15%)</title><rect x="1186.4" y="787.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.4" y="798.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.15%)</title><rect x="1186.4" y="771.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.4" y="782.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.15%)</title><rect x="1186.4" y="755.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.4" y="766.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.15%)</title><rect x="1186.4" y="739.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.4" y="750.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.15%)</title><rect x="1188.2" y="851.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="862.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.15%)</title><rect x="1188.2" y="835.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="846.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (1 samples, 0.15%)</title><rect x="1188.2" y="819.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.2" y="830.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (1 samples, 0.15%)</title><rect x="1188.2" y="803.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.2" y="814.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (1 samples, 0.15%)</title><rect x="1188.2" y="787.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>GCHeapLog::log_heap(CollectedHeap*, bool) [clone .part.0] (1 samples, 0.15%)</title><rect x="1188.2" y="771.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.2" y="782.0"></text>
</g>
<g>
<title>MetaspaceUtils::print_on(outputStream*) (1 samples, 0.15%)</title><rect x="1188.2" y="755.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.2" y="766.0"></text>
</g>
</g>
</svg>
