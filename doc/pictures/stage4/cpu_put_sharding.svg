<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (463 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 1.30%)</title><rect x="10.0" y="899.0" width="15.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 1.30%)</title><rect x="10.0" y="883.0" width="15.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 1.30%)</title><rect x="10.0" y="867.0" width="15.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.22%)</title><rect x="12.5" y="851.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="15.5" y="862.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.86%)</title><rect x="15.1" y="851.0" width="10.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="18.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 3.02%)</title><rect x="25.3" y="899.0" width="35.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="28.3" y="910.0">[un..</text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (14 samples, 3.02%)</title><rect x="25.3" y="883.0" width="35.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="28.3" y="894.0">pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.38%)</title><rect x="32.9" y="867.0" width="28.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.9" y="878.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.38%)</title><rect x="32.9" y="851.0" width="28.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="35.9" y="862.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 2.38%)</title><rect x="32.9" y="835.0" width="28.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="35.9" y="846.0">__..</text>
</g>
<g>
<title>do_futex (11 samples, 2.38%)</title><rect x="32.9" y="819.0" width="28.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.9" y="830.0">do..</text>
</g>
<g>
<title>futex_wait (11 samples, 2.38%)</title><rect x="32.9" y="803.0" width="28.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="35.9" y="814.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 2.16%)</title><rect x="32.9" y="787.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.9" y="798.0">f..</text>
</g>
<g>
<title>hrtimer_sleeper_start_expires (1 samples, 0.22%)</title><rect x="35.5" y="771.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.5" y="782.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.22%)</title><rect x="35.5" y="755.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="38.5" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="35.5" y="739.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="38.5" y="750.0"></text>
</g>
<g>
<title>schedule (8 samples, 1.73%)</title><rect x="38.0" y="771.0" width="20.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="41.0" y="782.0"></text>
</g>
<g>
<title>__schedule (8 samples, 1.73%)</title><rect x="38.0" y="755.0" width="20.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="41.0" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (8 samples, 1.73%)</title><rect x="38.0" y="739.0" width="20.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="41.0" y="750.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.22%)</title><rect x="58.4" y="787.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="61.4" y="798.0"></text>
</g>
<g>
<title>[unknown_Java] (21 samples, 4.54%)</title><rect x="61.0" y="899.0" width="53.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="64.0" y="910.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_signal (21 samples, 4.54%)</title><rect x="61.0" y="883.0" width="53.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="64.0" y="894.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 4.54%)</title><rect x="61.0" y="867.0" width="53.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.0" y="878.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (21 samples, 4.54%)</title><rect x="61.0" y="851.0" width="53.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="64.0" y="862.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.08%)</title><rect x="61.0" y="835.0" width="12.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="64.0" y="846.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.08%)</title><rect x="61.0" y="819.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.0" y="830.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.08%)</title><rect x="61.0" y="803.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.0" y="814.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.86%)</title><rect x="63.5" y="787.0" width="10.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="66.5" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.86%)</title><rect x="63.5" y="771.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.5" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.86%)</title><rect x="63.5" y="755.0" width="10.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="66.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (16 samples, 3.46%)</title><rect x="73.7" y="835.0" width="40.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="76.7" y="846.0">exi..</text>
</g>
<g>
<title>schedule (16 samples, 3.46%)</title><rect x="73.7" y="819.0" width="40.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="76.7" y="830.0">sch..</text>
</g>
<g>
<title>__schedule (16 samples, 3.46%)</title><rect x="73.7" y="803.0" width="40.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="76.7" y="814.0">__s..</text>
</g>
<g>
<title>finish_task_switch (16 samples, 3.46%)</title><rect x="73.7" y="787.0" width="40.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.7" y="798.0">fin..</text>
</g>
<g>
<title>java/lang/Thread.run (318 samples, 68.68%)</title><rect x="114.5" y="899.0" width="810.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.5" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (318 samples, 68.68%)</title><rect x="114.5" y="883.0" width="810.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="117.5" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (318 samples, 68.68%)</title><rect x="114.5" y="867.0" width="810.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.5" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (272 samples, 58.75%)</title><rect x="117.0" y="851.0" width="693.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.0" y="862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (271 samples, 58.53%)</title><rect x="117.0" y="835.0" width="690.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.0" y="846.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/796090938.run (271 samples, 58.53%)</title><rect x="117.0" y="819.0" width="690.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="120.0" y="830.0">ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/796090938.run</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$1 (271 samples, 58.53%)</title><rect x="117.0" y="803.0" width="690.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="120.0" y="814.0">ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (125 samples, 27.00%)</title><rect x="117.0" y="787.0" width="318.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.0" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.65%)</title><rect x="124.7" y="771.0" width="7.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="127.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.65%)</title><rect x="124.7" y="755.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.65%)</title><rect x="124.7" y="739.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.7" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.22%)</title><rect x="124.7" y="723.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="127.7" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.43%)</title><rect x="127.2" y="723.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="130.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.43%)</title><rect x="127.2" y="707.0" width="5.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="130.2" y="718.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.43%)</title><rect x="127.2" y="691.0" width="5.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="130.2" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (119 samples, 25.70%)</title><rect x="132.3" y="771.0" width="303.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="135.3" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 1.51%)</title><rect x="132.3" y="755.0" width="17.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.22%)</title><rect x="140.0" y="739.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.0" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.22%)</title><rect x="140.0" y="723.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="143.0" y="734.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.22%)</title><rect x="140.0" y="707.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="143.0" y="718.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.22%)</title><rect x="140.0" y="691.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="143.0" y="702.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.22%)</title><rect x="140.0" y="675.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="143.0" y="686.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.22%)</title><rect x="140.0" y="659.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="143.0" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.22%)</title><rect x="140.0" y="643.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="143.0" y="654.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.22%)</title><rect x="140.0" y="627.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="143.0" y="638.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.22%)</title><rect x="140.0" y="611.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="143.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.65%)</title><rect x="142.5" y="739.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.65%)</title><rect x="142.5" y="723.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="145.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.65%)</title><rect x="142.5" y="707.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 24.19%)</title><rect x="150.2" y="755.0" width="285.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.2" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (112 samples, 24.19%)</title><rect x="150.2" y="739.0" width="285.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.2" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.22%)</title><rect x="150.2" y="723.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="153.2" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="150.2" y="707.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="153.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (111 samples, 23.97%)</title><rect x="152.7" y="723.0" width="282.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.7" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.22%)</title><rect x="155.3" y="707.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="158.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (109 samples, 23.54%)</title><rect x="157.8" y="707.0" width="277.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.8" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.43%)</title><rect x="160.4" y="691.0" width="5.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="163.4" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.43%)</title><rect x="160.4" y="675.0" width="5.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="163.4" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.22%)</title><rect x="160.4" y="659.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="163.4" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.22%)</title><rect x="162.9" y="659.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="165.9" y="670.0"></text>
</g>
<g>
<title>send (106 samples, 22.89%)</title><rect x="165.5" y="691.0" width="270.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="168.5" y="702.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (105 samples, 22.68%)</title><rect x="168.0" y="675.0" width="267.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="171.0" y="686.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (105 samples, 22.68%)</title><rect x="168.0" y="659.0" width="267.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="171.0" y="670.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (87 samples, 18.79%)</title><rect x="170.6" y="643.0" width="221.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.6" y="654.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (87 samples, 18.79%)</title><rect x="170.6" y="627.0" width="221.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.6" y="638.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (84 samples, 18.14%)</title><rect x="175.7" y="611.0" width="214.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="178.7" y="622.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.22%)</title><rect x="175.7" y="595.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="178.7" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (83 samples, 17.93%)</title><rect x="178.2" y="595.0" width="211.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="181.2" y="606.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (82 samples, 17.71%)</title><rect x="180.8" y="579.0" width="208.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="183.8" y="590.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.43%)</title><rect x="180.8" y="563.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="183.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (79 samples, 17.06%)</title><rect x="185.9" y="563.0" width="201.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="188.9" y="574.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.22%)</title><rect x="188.4" y="547.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.4" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.22%)</title><rect x="191.0" y="547.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="194.0" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 1.30%)</title><rect x="193.5" y="547.0" width="15.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 1.30%)</title><rect x="193.5" y="531.0" width="15.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.43%)</title><rect x="196.0" y="515.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.43%)</title><rect x="196.0" y="499.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="199.0" y="510.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.22%)</title><rect x="196.0" y="483.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="199.0" y="494.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.22%)</title><rect x="198.6" y="483.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="201.6" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.65%)</title><rect x="201.1" y="515.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.1" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.22%)</title><rect x="206.2" y="499.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="209.2" y="510.0"></text>
</g>
<g>
<title>tcp_push (68 samples, 14.69%)</title><rect x="208.8" y="547.0" width="173.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="211.8" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (67 samples, 14.47%)</title><rect x="211.3" y="531.0" width="170.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="214.3" y="542.0">__tcp_push_pending_fra..</text>
</g>
<g>
<title>tcp_write_xmit (64 samples, 13.82%)</title><rect x="219.0" y="515.0" width="163.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="222.0" y="526.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (60 samples, 12.96%)</title><rect x="221.5" y="499.0" width="152.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="224.5" y="510.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (59 samples, 12.74%)</title><rect x="221.5" y="483.0" width="150.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="224.5" y="494.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (59 samples, 12.74%)</title><rect x="221.5" y="467.0" width="150.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="224.5" y="478.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.22%)</title><rect x="226.6" y="451.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="229.6" y="462.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.22%)</title><rect x="226.6" y="435.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="229.6" y="446.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.22%)</title><rect x="229.2" y="451.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (55 samples, 11.88%)</title><rect x="231.7" y="451.0" width="140.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.7" y="462.0">ip_local_out</text>
</g>
<g>
<title>ip_output (55 samples, 11.88%)</title><rect x="231.7" y="435.0" width="140.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="234.7" y="446.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.22%)</title><rect x="234.3" y="419.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="237.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (53 samples, 11.45%)</title><rect x="236.8" y="419.0" width="135.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="239.8" y="430.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.22%)</title><rect x="236.8" y="403.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.8" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (52 samples, 11.23%)</title><rect x="239.4" y="403.0" width="132.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="242.4" y="414.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (52 samples, 11.23%)</title><rect x="239.4" y="387.0" width="132.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.4" y="398.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (45 samples, 9.72%)</title><rect x="241.9" y="371.0" width="114.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="244.9" y="382.0">__local_bh_ena..</text>
</g>
<g>
<title>do_softirq.part.0 (45 samples, 9.72%)</title><rect x="241.9" y="355.0" width="114.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.9" y="366.0">do_softirq.par..</text>
</g>
<g>
<title>do_softirq_own_stack (45 samples, 9.72%)</title><rect x="241.9" y="339.0" width="114.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="244.9" y="350.0">do_softirq_own..</text>
</g>
<g>
<title>__softirqentry_text_start (45 samples, 9.72%)</title><rect x="241.9" y="323.0" width="114.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="244.9" y="334.0">__softirqentry..</text>
</g>
<g>
<title>net_rx_action (44 samples, 9.50%)</title><rect x="244.5" y="307.0" width="112.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="247.5" y="318.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (43 samples, 9.29%)</title><rect x="247.0" y="291.0" width="109.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="250.0" y="302.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (42 samples, 9.07%)</title><rect x="249.6" y="275.0" width="107.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="252.6" y="286.0">__netif_recei..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (42 samples, 9.07%)</title><rect x="249.6" y="259.0" width="107.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.6" y="270.0">__netif_recei..</text>
</g>
<g>
<title>ip_rcv (42 samples, 9.07%)</title><rect x="249.6" y="243.0" width="107.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="252.6" y="254.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.22%)</title><rect x="249.6" y="227.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="252.6" y="238.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.22%)</title><rect x="252.1" y="227.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="255.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (40 samples, 8.64%)</title><rect x="254.7" y="227.0" width="101.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="257.7" y="238.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (40 samples, 8.64%)</title><rect x="254.7" y="211.0" width="101.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="257.7" y="222.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 8.42%)</title><rect x="257.2" y="195.0" width="99.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="260.2" y="206.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (39 samples, 8.42%)</title><rect x="257.2" y="179.0" width="99.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="260.2" y="190.0">ip_protocol_..</text>
</g>
<g>
<title>sock_put (1 samples, 0.22%)</title><rect x="259.8" y="163.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="262.8" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (37 samples, 7.99%)</title><rect x="262.3" y="163.0" width="94.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="265.3" y="174.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.65%)</title><rect x="267.4" y="147.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.4" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.22%)</title><rect x="275.1" y="147.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="278.1" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.22%)</title><rect x="275.1" y="131.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="278.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 6.70%)</title><rect x="277.6" y="147.0" width="79.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="280.6" y="158.0">tcp_v4_do..</text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.43%)</title><rect x="280.2" y="131.0" width="5.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="283.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (28 samples, 6.05%)</title><rect x="285.2" y="131.0" width="71.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.2" y="142.0">tcp_rcv_..</text>
</g>
<g>
<title>tcp_ack (8 samples, 1.73%)</title><rect x="285.2" y="115.0" width="20.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="288.2" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 1.08%)</title><rect x="290.3" y="99.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="293.3" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.65%)</title><rect x="290.3" y="83.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.3" y="94.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.22%)</title><rect x="290.3" y="67.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.3" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.22%)</title><rect x="290.3" y="51.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="293.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.22%)</title><rect x="290.3" y="35.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="293.3" y="46.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.43%)</title><rect x="292.9" y="67.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="295.9" y="78.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.43%)</title><rect x="292.9" y="51.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="295.9" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.22%)</title><rect x="298.0" y="83.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="301.0" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.0 (1 samples, 0.22%)</title><rect x="300.5" y="83.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.5" y="94.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.22%)</title><rect x="303.1" y="99.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.1" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (19 samples, 4.10%)</title><rect x="305.6" y="115.0" width="48.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="308.6" y="126.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (19 samples, 4.10%)</title><rect x="305.6" y="99.0" width="48.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="308.6" y="110.0">sock..</text>
</g>
<g>
<title>__wake_up_sync_key (19 samples, 4.10%)</title><rect x="305.6" y="83.0" width="48.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.6" y="94.0">__wa..</text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 4.10%)</title><rect x="305.6" y="67.0" width="48.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.6" y="78.0">__wa..</text>
</g>
<g>
<title>__lock_text_start (19 samples, 4.10%)</title><rect x="305.6" y="51.0" width="48.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="308.6" y="62.0">__lo..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.22%)</title><rect x="354.1" y="115.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="357.1" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.22%)</title><rect x="354.1" y="99.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="357.1" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (6 samples, 1.30%)</title><rect x="356.6" y="371.0" width="15.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.6" y="382.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 1.30%)</title><rect x="356.6" y="355.0" width="15.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="359.6" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 1.30%)</title><rect x="356.6" y="339.0" width="15.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.6" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.22%)</title><rect x="356.6" y="323.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.6" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 1.08%)</title><rect x="359.2" y="323.0" width="12.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.2" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.65%)</title><rect x="359.2" y="307.0" width="7.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.2" y="318.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.65%)</title><rect x="359.2" y="291.0" width="7.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="362.2" y="302.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.43%)</title><rect x="361.7" y="275.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.7" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.43%)</title><rect x="366.8" y="307.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="369.8" y="318.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.22%)</title><rect x="371.9" y="483.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="374.9" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.22%)</title><rect x="374.4" y="499.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="377.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.22%)</title><rect x="377.0" y="499.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="380.0" y="510.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.22%)</title><rect x="377.0" y="483.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.0" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.22%)</title><rect x="379.5" y="499.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="382.5" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.43%)</title><rect x="382.1" y="547.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="385.1" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.22%)</title><rect x="384.6" y="531.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="387.6" y="542.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.22%)</title><rect x="387.2" y="563.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="390.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.22%)</title><rect x="389.7" y="611.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="392.7" y="622.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.22%)</title><rect x="389.7" y="595.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="392.7" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.22%)</title><rect x="389.7" y="579.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="392.7" y="590.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.22%)</title><rect x="389.7" y="563.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="392.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (17 samples, 3.67%)</title><rect x="392.3" y="643.0" width="43.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="395.3" y="654.0">exit..</text>
</g>
<g>
<title>schedule (17 samples, 3.67%)</title><rect x="392.3" y="627.0" width="43.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.3" y="638.0">sche..</text>
</g>
<g>
<title>__schedule (17 samples, 3.67%)</title><rect x="392.3" y="611.0" width="43.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.3" y="622.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (17 samples, 3.67%)</title><rect x="392.3" y="595.0" width="43.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="395.3" y="606.0">fini..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.proxy (55 samples, 11.88%)</title><rect x="435.6" y="787.0" width="140.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.6" y="798.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (55 samples, 11.88%)</title><rect x="435.6" y="771.0" width="140.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.6" y="782.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (55 samples, 11.88%)</title><rect x="435.6" y="755.0" width="140.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.6" y="766.0">one/nio/http/HttpC..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (3 samples, 0.65%)</title><rect x="438.2" y="739.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.65%)</title><rect x="438.2" y="723.0" width="7.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="441.2" y="734.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.65%)</title><rect x="438.2" y="707.0" width="7.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="441.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.65%)</title><rect x="438.2" y="691.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.65%)</title><rect x="438.2" y="675.0" width="7.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="441.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.65%)</title><rect x="438.2" y="659.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="441.2" y="670.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.65%)</title><rect x="438.2" y="643.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="441.2" y="654.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.22%)</title><rect x="438.2" y="627.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.2" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.43%)</title><rect x="440.7" y="627.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="443.7" y="638.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.43%)</title><rect x="440.7" y="611.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.7" y="622.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.22%)</title><rect x="443.3" y="595.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="446.3" y="606.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.22%)</title><rect x="443.3" y="579.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="446.3" y="590.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.22%)</title><rect x="443.3" y="563.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="446.3" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.22%)</title><rect x="443.3" y="547.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="446.3" y="558.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.22%)</title><rect x="443.3" y="531.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="446.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.43%)</title><rect x="445.8" y="739.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.22%)</title><rect x="445.8" y="723.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="448.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.22%)</title><rect x="445.8" y="707.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="448.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.22%)</title><rect x="445.8" y="691.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.8" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.22%)</title><rect x="445.8" y="675.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="448.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.22%)</title><rect x="448.4" y="723.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="448.4" y="707.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="448.4" y="691.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.4" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.43%)</title><rect x="450.9" y="739.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.43%)</title><rect x="450.9" y="723.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="453.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.43%)</title><rect x="450.9" y="707.0" width="5.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="453.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.43%)</title><rect x="450.9" y="691.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.9" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.22%)</title><rect x="453.5" y="675.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="456.5" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.86%)</title><rect x="456.0" y="739.0" width="10.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.0" y="750.0"></text>
</g>
<g>
<title>setsockopt (4 samples, 0.86%)</title><rect x="456.0" y="723.0" width="10.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="459.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.43%)</title><rect x="461.1" y="707.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="464.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.43%)</title><rect x="461.1" y="691.0" width="5.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.43%)</title><rect x="461.1" y="675.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.1" y="686.0"></text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.43%)</title><rect x="461.1" y="659.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="464.1" y="670.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.22%)</title><rect x="461.1" y="643.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="464.1" y="654.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.22%)</title><rect x="463.7" y="643.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (43 samples, 9.29%)</title><rect x="466.2" y="739.0" width="109.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.2" y="750.0">one/nio/net/N..</text>
</g>
<g>
<title>send (43 samples, 9.29%)</title><rect x="466.2" y="723.0" width="109.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="469.2" y="734.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 9.29%)</title><rect x="466.2" y="707.0" width="109.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="469.2" y="718.0">entry_SYSCALL..</text>
</g>
<g>
<title>do_syscall_64 (43 samples, 9.29%)</title><rect x="466.2" y="691.0" width="109.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.2" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (29 samples, 6.26%)</title><rect x="468.7" y="675.0" width="74.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="471.7" y="686.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (29 samples, 6.26%)</title><rect x="468.7" y="659.0" width="74.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="471.7" y="670.0">__sys_se..</text>
</g>
<g>
<title>sock_sendmsg (29 samples, 6.26%)</title><rect x="468.7" y="643.0" width="74.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="471.7" y="654.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (29 samples, 6.26%)</title><rect x="468.7" y="627.0" width="74.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="471.7" y="638.0">inet6_se..</text>
</g>
<g>
<title>tcp_sendmsg (29 samples, 6.26%)</title><rect x="468.7" y="611.0" width="74.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="471.7" y="622.0">tcp_send..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.22%)</title><rect x="468.7" y="595.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="471.7" y="606.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.43%)</title><rect x="471.3" y="595.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.3" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (26 samples, 5.62%)</title><rect x="476.4" y="595.0" width="66.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="479.4" y="606.0">tcp_sen..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.22%)</title><rect x="476.4" y="579.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="479.4" y="590.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.22%)</title><rect x="476.4" y="563.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="479.4" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.65%)</title><rect x="478.9" y="579.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.9" y="590.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.65%)</title><rect x="478.9" y="563.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="481.9" y="574.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.22%)</title><rect x="478.9" y="547.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.9" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.22%)</title><rect x="478.9" y="531.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.9" y="542.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.22%)</title><rect x="481.5" y="547.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="484.5" y="558.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.22%)</title><rect x="481.5" y="531.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.5" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.22%)</title><rect x="484.0" y="547.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="487.0" y="558.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.22%)</title><rect x="486.6" y="579.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="489.6" y="590.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.22%)</title><rect x="486.6" y="563.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.6" y="574.0"></text>
</g>
<g>
<title>tcp_push (20 samples, 4.32%)</title><rect x="489.1" y="579.0" width="51.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="492.1" y="590.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (20 samples, 4.32%)</title><rect x="489.1" y="563.0" width="51.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.1" y="574.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (20 samples, 4.32%)</title><rect x="489.1" y="547.0" width="51.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="492.1" y="558.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 3.89%)</title><rect x="489.1" y="531.0" width="45.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="492.1" y="542.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (17 samples, 3.67%)</title><rect x="491.7" y="515.0" width="43.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.7" y="526.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (16 samples, 3.46%)</title><rect x="491.7" y="499.0" width="40.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.7" y="510.0">__i..</text>
</g>
<g>
<title>ip_local_out (16 samples, 3.46%)</title><rect x="491.7" y="483.0" width="40.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.7" y="494.0">ip_..</text>
</g>
<g>
<title>ip_output (15 samples, 3.24%)</title><rect x="491.7" y="467.0" width="38.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="494.7" y="478.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (15 samples, 3.24%)</title><rect x="491.7" y="451.0" width="38.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="494.7" y="462.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (15 samples, 3.24%)</title><rect x="491.7" y="435.0" width="38.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.7" y="446.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (15 samples, 3.24%)</title><rect x="491.7" y="419.0" width="38.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.7" y="430.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 2.59%)</title><rect x="491.7" y="403.0" width="30.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.7" y="414.0">__..</text>
</g>
<g>
<title>do_softirq.part.0 (12 samples, 2.59%)</title><rect x="491.7" y="387.0" width="30.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="494.7" y="398.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (12 samples, 2.59%)</title><rect x="491.7" y="371.0" width="30.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.7" y="382.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (12 samples, 2.59%)</title><rect x="491.7" y="355.0" width="30.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.7" y="366.0">__..</text>
</g>
<g>
<title>net_rx_action (12 samples, 2.59%)</title><rect x="491.7" y="339.0" width="30.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="494.7" y="350.0">ne..</text>
</g>
<g>
<title>process_backlog (12 samples, 2.59%)</title><rect x="491.7" y="323.0" width="30.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.7" y="334.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (12 samples, 2.59%)</title><rect x="491.7" y="307.0" width="30.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="494.7" y="318.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (12 samples, 2.59%)</title><rect x="491.7" y="291.0" width="30.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="494.7" y="302.0">__..</text>
</g>
<g>
<title>ip_rcv (12 samples, 2.59%)</title><rect x="491.7" y="275.0" width="30.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="494.7" y="286.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 2.59%)</title><rect x="491.7" y="259.0" width="30.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.7" y="270.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (12 samples, 2.59%)</title><rect x="491.7" y="243.0" width="30.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.7" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 2.59%)</title><rect x="491.7" y="227.0" width="30.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="494.7" y="238.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 2.59%)</title><rect x="491.7" y="211.0" width="30.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.7" y="222.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 2.59%)</title><rect x="491.7" y="195.0" width="30.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="494.7" y="206.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.22%)</title><rect x="491.7" y="179.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.7" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.22%)</title><rect x="494.2" y="179.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (10 samples, 2.16%)</title><rect x="496.8" y="179.0" width="25.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="499.8" y="190.0">t..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.22%)</title><rect x="496.8" y="163.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="499.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (9 samples, 1.94%)</title><rect x="499.3" y="163.0" width="23.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="502.3" y="174.0">t..</text>
</g>
<g>
<title>tcp_ack (3 samples, 0.65%)</title><rect x="499.3" y="147.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="502.3" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.43%)</title><rect x="501.9" y="131.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.9" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.43%)</title><rect x="501.9" y="115.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.9" y="126.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.43%)</title><rect x="501.9" y="99.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.9" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.43%)</title><rect x="501.9" y="83.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.9" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.22%)</title><rect x="504.4" y="67.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="507.4" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.22%)</title><rect x="504.4" y="51.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="507.4" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.22%)</title><rect x="504.4" y="35.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="507.4" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (6 samples, 1.30%)</title><rect x="507.0" y="147.0" width="15.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (6 samples, 1.30%)</title><rect x="507.0" y="131.0" width="15.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="510.0" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (6 samples, 1.30%)</title><rect x="507.0" y="115.0" width="15.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="510.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 1.30%)</title><rect x="507.0" y="99.0" width="15.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="510.0" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 1.30%)</title><rect x="507.0" y="83.0" width="15.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="510.0" y="94.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.65%)</title><rect x="522.3" y="403.0" width="7.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="525.3" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.65%)</title><rect x="522.3" y="387.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.3" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.65%)</title><rect x="522.3" y="371.0" width="7.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.43%)</title><rect x="522.3" y="355.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.22%)</title><rect x="522.3" y="339.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.3" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.22%)</title><rect x="524.8" y="339.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="527.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.22%)</title><rect x="524.8" y="323.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="527.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.22%)</title><rect x="524.8" y="307.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.8" y="318.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.22%)</title><rect x="527.4" y="355.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="530.4" y="366.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.22%)</title><rect x="529.9" y="467.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="532.9" y="478.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.22%)</title><rect x="532.5" y="499.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="535.5" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.22%)</title><rect x="535.0" y="531.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="538.0" y="542.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.22%)</title><rect x="537.6" y="531.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.6" y="542.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.22%)</title><rect x="540.1" y="579.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.1" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.22%)</title><rect x="540.1" y="563.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="543.1" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (13 samples, 2.81%)</title><rect x="542.7" y="675.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="545.7" y="686.0">ex..</text>
</g>
<g>
<title>schedule (13 samples, 2.81%)</title><rect x="542.7" y="659.0" width="33.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="545.7" y="670.0">sc..</text>
</g>
<g>
<title>__schedule (12 samples, 2.59%)</title><rect x="545.2" y="643.0" width="30.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="548.2" y="654.0">__..</text>
</g>
<g>
<title>finish_task_switch (12 samples, 2.59%)</title><rect x="545.2" y="627.0" width="30.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="548.2" y="638.0">fi..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.putSync (86 samples, 18.57%)</title><rect x="575.8" y="787.0" width="219.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="578.8" y="798.0">ru/mail/polis/service/dariaga..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsert (86 samples, 18.57%)</title><rect x="575.8" y="771.0" width="219.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="578.8" y="782.0">ru/mail/polis/dao/dariagap/Ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (86 samples, 18.57%)</title><rect x="575.8" y="755.0" width="219.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="578.8" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (85 samples, 18.36%)</title><rect x="578.3" y="739.0" width="216.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.3" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (83 samples, 17.93%)</title><rect x="580.9" y="723.0" width="211.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="583.9" y="734.0">Java_org_rocksdb_RocksDB_put..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.22%)</title><rect x="583.4" y="707.0" width="2.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="586.4" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) [clone .plt] (1 samples, 0.22%)</title><rect x="586.0" y="707.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="589.0" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (80 samples, 17.28%)</title><rect x="588.5" y="707.0" width="203.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="591.5" y="718.0">rocksdb_put_helper(JNIEnv_*..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 17.06%)</title><rect x="588.5" y="691.0" width="201.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="591.5" y="702.0">rocksdb::DB::Put(rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 17.06%)</title><rect x="588.5" y="675.0" width="201.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="591.5" y="686.0">rocksdb::DBImpl::Put(rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (79 samples, 17.06%)</title><rect x="588.5" y="659.0" width="201.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="591.5" y="670.0">rocksdb::DB::Put(rocksdb::..</text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.43%)</title><rect x="588.5" y="643.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="591.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (74 samples, 15.98%)</title><rect x="593.6" y="643.0" width="188.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="596.6" y="654.0">rocksdb::DBImpl::Write(r..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.22%)</title><rect x="593.6" y="627.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="596.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteContext::~WriteContext() (1 samples, 0.22%)</title><rect x="596.2" y="627.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="599.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (72 samples, 15.55%)</title><rect x="598.7" y="627.0" width="183.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="601.7" y="638.0">rocksdb::DBImpl::WriteIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.22%)</title><rect x="603.8" y="611.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="606.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.22%)</title><rect x="606.4" y="611.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="609.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (40 samples, 8.64%)</title><rect x="608.9" y="611.0" width="102.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="611.9" y="622.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (40 samples, 8.64%)</title><rect x="608.9" y="595.0" width="102.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="611.9" y="606.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (40 samples, 8.64%)</title><rect x="608.9" y="579.0" width="102.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="611.9" y="590.0">rocksdb::log..</text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (2 samples, 0.43%)</title><rect x="611.5" y="563.0" width="5.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="614.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (35 samples, 7.56%)</title><rect x="616.6" y="563.0" width="89.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="619.6" y="574.0">rocksdb::W..</text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.22%)</title><rect x="619.1" y="547.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="622.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (33 samples, 7.13%)</title><rect x="621.7" y="547.0" width="84.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="624.7" y="558.0">rocksdb::W..</text>
</g>
<g>
<title>__write (30 samples, 6.48%)</title><rect x="626.8" y="531.0" width="76.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="629.8" y="542.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 6.26%)</title><rect x="629.3" y="515.0" width="73.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="632.3" y="526.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (29 samples, 6.26%)</title><rect x="629.3" y="499.0" width="73.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="632.3" y="510.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_write (28 samples, 6.05%)</title><rect x="631.9" y="483.0" width="71.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="634.9" y="494.0">__x64_sy..</text>
</g>
<g>
<title>ksys_write (28 samples, 6.05%)</title><rect x="631.9" y="467.0" width="71.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="634.9" y="478.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.22%)</title><rect x="631.9" y="451.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="634.9" y="462.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.22%)</title><rect x="631.9" y="435.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.9" y="446.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.22%)</title><rect x="631.9" y="419.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="634.9" y="430.0"></text>
</g>
<g>
<title>vfs_write (27 samples, 5.83%)</title><rect x="634.4" y="451.0" width="68.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="637.4" y="462.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.22%)</title><rect x="634.4" y="435.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="637.4" y="446.0"></text>
</g>
<g>
<title>__vfs_write (24 samples, 5.18%)</title><rect x="637.0" y="435.0" width="61.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="640.0" y="446.0">__vfs_..</text>
</g>
<g>
<title>new_sync_write (24 samples, 5.18%)</title><rect x="637.0" y="419.0" width="61.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="640.0" y="430.0">new_sy..</text>
</g>
<g>
<title>ext4_file_write_iter (24 samples, 5.18%)</title><rect x="637.0" y="403.0" width="61.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="640.0" y="414.0">ext4_f..</text>
</g>
<g>
<title>__generic_file_write_iter (24 samples, 5.18%)</title><rect x="637.0" y="387.0" width="61.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.0" y="398.0">__gene..</text>
</g>
<g>
<title>__x86_indirect_thunk_r11 (1 samples, 0.22%)</title><rect x="637.0" y="371.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="640.0" y="382.0"></text>
</g>
<g>
<title>generic_perform_write (22 samples, 4.75%)</title><rect x="639.5" y="371.0" width="56.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="642.5" y="382.0">generi..</text>
</g>
<g>
<title>ext4_da_write_begin (4 samples, 0.86%)</title><rect x="639.5" y="355.0" width="10.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="642.5" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.43%)</title><rect x="639.5" y="339.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="642.5" y="350.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.43%)</title><rect x="639.5" y="323.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="642.5" y="334.0"></text>
</g>
<g>
<title>_raw_read_lock (1 samples, 0.22%)</title><rect x="639.5" y="307.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="642.5" y="318.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.22%)</title><rect x="642.1" y="307.0" width="2.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.1" y="318.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.22%)</title><rect x="644.6" y="339.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.6" y="350.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.22%)</title><rect x="644.6" y="323.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="647.6" y="334.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.22%)</title><rect x="647.1" y="339.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="650.1" y="350.0"></text>
</g>
<g>
<title>ext4_da_write_end (14 samples, 3.02%)</title><rect x="649.7" y="355.0" width="35.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="652.7" y="366.0">ext..</text>
</g>
<g>
<title>generic_write_end (14 samples, 3.02%)</title><rect x="649.7" y="339.0" width="35.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.7" y="350.0">gen..</text>
</g>
<g>
<title>__mark_inode_dirty (12 samples, 2.59%)</title><rect x="649.7" y="323.0" width="30.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="652.7" y="334.0">__..</text>
</g>
<g>
<title>ext4_dirty_inode (11 samples, 2.38%)</title><rect x="652.2" y="307.0" width="28.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.2" y="318.0">ex..</text>
</g>
<g>
<title>ext4_mark_inode_dirty (11 samples, 2.38%)</title><rect x="652.2" y="291.0" width="28.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="655.2" y="302.0">ex..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (7 samples, 1.51%)</title><rect x="652.2" y="275.0" width="17.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="655.2" y="286.0"></text>
</g>
<g>
<title>ext4_do_update_inode (7 samples, 1.51%)</title><rect x="652.2" y="259.0" width="17.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="655.2" y="270.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.65%)</title><rect x="662.4" y="243.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="665.4" y="254.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (3 samples, 0.65%)</title><rect x="662.4" y="227.0" width="7.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="665.4" y="238.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.86%)</title><rect x="670.1" y="275.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.1" y="286.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.43%)</title><rect x="670.1" y="259.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="673.1" y="270.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.22%)</title><rect x="672.6" y="243.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="675.6" y="254.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.22%)</title><rect x="672.6" y="227.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="675.6" y="238.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.22%)</title><rect x="675.2" y="259.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="678.2" y="270.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.22%)</title><rect x="675.2" y="243.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="678.2" y="254.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.22%)</title><rect x="675.2" y="227.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="678.2" y="238.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.22%)</title><rect x="677.7" y="259.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="680.7" y="270.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.43%)</title><rect x="680.3" y="323.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="683.3" y="334.0"></text>
</g>
<g>
<title>__block_commit_write.isra.0 (2 samples, 0.43%)</title><rect x="680.3" y="307.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="683.3" y="318.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.22%)</title><rect x="682.8" y="291.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="685.8" y="302.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.22%)</title><rect x="685.4" y="355.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="688.4" y="366.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.22%)</title><rect x="687.9" y="355.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="690.9" y="366.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.43%)</title><rect x="690.5" y="355.0" width="5.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="693.5" y="366.0"></text>
</g>
<g>
<title>copy_user_generic_string (2 samples, 0.43%)</title><rect x="690.5" y="339.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="693.5" y="350.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.22%)</title><rect x="695.6" y="371.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="698.6" y="382.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.43%)</title><rect x="698.1" y="435.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="701.1" y="446.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.43%)</title><rect x="698.1" y="419.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="701.1" y="430.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.43%)</title><rect x="698.1" y="403.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="701.1" y="414.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.43%)</title><rect x="698.1" y="387.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="701.1" y="398.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.43%)</title><rect x="698.1" y="371.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.1" y="382.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (1 samples, 0.22%)</title><rect x="703.2" y="531.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="706.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (2 samples, 0.43%)</title><rect x="705.8" y="563.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="708.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.43%)</title><rect x="705.8" y="547.0" width="5.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="708.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::FSWritableFile::PrepareWrite(unsigned long, unsigned long, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.22%)</title><rect x="708.3" y="531.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="711.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.22%)</title><rect x="710.9" y="611.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.22%)</title><rect x="713.4" y="611.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="716.4" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_lock@plt (1 samples, 0.22%)</title><rect x="713.4" y="595.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="716.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.22%)</title><rect x="716.0" y="611.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="719.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::SuperVersionContext::Clean() [clone .plt] (1 samples, 0.22%)</title><rect x="718.5" y="611.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="721.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::TrimHistoryScheduler::Empty() (2 samples, 0.43%)</title><rect x="721.1" y="611.0" width="5.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="724.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (20 samples, 4.32%)</title><rect x="726.2" y="611.0" width="50.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="729.2" y="622.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (20 samples, 4.32%)</title><rect x="726.2" y="595.0" width="50.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="729.2" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (20 samples, 4.32%)</title><rect x="726.2" y="579.0" width="50.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="729.2" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (20 samples, 4.32%)</title><rect x="726.2" y="563.0" width="50.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="729.2" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (20 samples, 4.32%)</title><rect x="726.2" y="547.0" width="50.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="729.2" y="558.0">rocks..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.22%)</title><rect x="726.2" y="531.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="729.2" y="542.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.22%)</title><rect x="726.2" y="515.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="729.2" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.22%)</title><rect x="726.2" y="499.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="729.2" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.22%)</title><rect x="726.2" y="483.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="729.2" y="494.0"></text>
</g>
<g>
<title>do_user_addr_fault (1 samples, 0.22%)</title><rect x="726.2" y="467.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="729.2" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.22%)</title><rect x="726.2" y="451.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.2" y="462.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.22%)</title><rect x="726.2" y="435.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.2" y="446.0"></text>
</g>
<g>
<title>do_anonymous_page (1 samples, 0.22%)</title><rect x="726.2" y="419.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="729.2" y="430.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.22%)</title><rect x="726.2" y="403.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.2" y="414.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.22%)</title><rect x="726.2" y="387.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="729.2" y="398.0"></text>
</g>
<g>
<title>__zone_watermark_ok (1 samples, 0.22%)</title><rect x="726.2" y="371.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="729.2" y="382.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.22%)</title><rect x="728.7" y="531.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="731.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (17 samples, 3.67%)</title><rect x="731.3" y="531.0" width="43.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="734.3" y="542.0">rock..</text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (2 samples, 0.43%)</title><rect x="741.4" y="515.0" width="5.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="744.4" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.22%)</title><rect x="744.0" y="499.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="747.0" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 2.38%)</title><rect x="746.5" y="515.0" width="28.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="749.5" y="526.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (10 samples, 2.16%)</title><rect x="749.1" y="499.0" width="25.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="752.1" y="510.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (1 samples, 0.22%)</title><rect x="769.5" y="483.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="772.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="772.0" y="483.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="775.0" y="494.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.22%)</title><rect x="772.0" y="467.0" width="2.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="775.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.22%)</title><rect x="774.6" y="531.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="777.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::AssertHeld() [clone .plt] (1 samples, 0.22%)</title><rect x="777.1" y="611.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="780.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.22%)</title><rect x="779.7" y="611.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="782.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.22%)</title><rect x="782.2" y="643.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="785.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.22%)</title><rect x="784.8" y="643.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="787.8" y="654.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.22%)</title><rect x="787.3" y="643.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="790.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.22%)</title><rect x="789.9" y="691.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="792.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.22%)</title><rect x="792.4" y="723.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="795.4" y="734.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.22%)</title><rect x="792.4" y="707.0" width="2.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="795.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNode (5 samples, 1.08%)</title><rect x="795.0" y="787.0" width="12.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.0" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.22%)</title><rect x="797.5" y="771.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.22%)</title><rect x="797.5" y="755.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="800.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.22%)</title><rect x="797.5" y="739.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="800.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.22%)</title><rect x="797.5" y="723.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="800.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.65%)</title><rect x="800.1" y="771.0" width="7.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.65%)</title><rect x="800.1" y="755.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="803.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.22%)</title><rect x="807.7" y="835.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="810.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.43%)</title><rect x="810.3" y="851.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.43%)</title><rect x="810.3" y="835.0" width="5.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.43%)</title><rect x="810.3" y="819.0" width="5.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.43%)</title><rect x="810.3" y="803.0" width="5.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (43 samples, 9.29%)</title><rect x="815.4" y="851.0" width="109.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.4" y="862.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (43 samples, 9.29%)</title><rect x="815.4" y="835.0" width="109.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="818.4" y="846.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (43 samples, 9.29%)</title><rect x="815.4" y="819.0" width="109.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.4" y="830.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.22%)</title><rect x="815.4" y="803.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="818.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.22%)</title><rect x="815.4" y="787.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.22%)</title><rect x="815.4" y="771.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (42 samples, 9.07%)</title><rect x="817.9" y="803.0" width="107.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.9" y="814.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (42 samples, 9.07%)</title><rect x="817.9" y="787.0" width="107.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="820.9" y="798.0">jdk/internal/..</text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.86%)</title><rect x="817.9" y="771.0" width="10.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="820.9" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.43%)</title><rect x="820.5" y="755.0" width="5.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="823.5" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="823.0" y="739.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="826.0" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.22%)</title><rect x="825.6" y="755.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="828.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 7.99%)</title><rect x="828.1" y="771.0" width="94.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="831.1" y="782.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (35 samples, 7.56%)</title><rect x="828.1" y="755.0" width="89.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="831.1" y="766.0">__pthread_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 7.13%)</title><rect x="833.2" y="739.0" width="84.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="836.2" y="750.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (33 samples, 7.13%)</title><rect x="833.2" y="723.0" width="84.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="836.2" y="734.0">do_syscall..</text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 6.91%)</title><rect x="835.7" y="707.0" width="81.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="838.7" y="718.0">__x64_sys..</text>
</g>
<g>
<title>do_futex (32 samples, 6.91%)</title><rect x="835.7" y="691.0" width="81.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="838.7" y="702.0">do_futex</text>
</g>
<g>
<title>futex_wait (32 samples, 6.91%)</title><rect x="835.7" y="675.0" width="81.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="838.7" y="686.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (32 samples, 6.91%)</title><rect x="835.7" y="659.0" width="81.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="838.7" y="670.0">futex_wai..</text>
</g>
<g>
<title>schedule (32 samples, 6.91%)</title><rect x="835.7" y="643.0" width="81.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="838.7" y="654.0">schedule</text>
</g>
<g>
<title>__schedule (32 samples, 6.91%)</title><rect x="835.7" y="627.0" width="81.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="838.7" y="638.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (32 samples, 6.91%)</title><rect x="835.7" y="611.0" width="81.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="838.7" y="622.0">finish_ta..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.43%)</title><rect x="917.3" y="755.0" width="5.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="920.3" y="766.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.22%)</title><rect x="922.4" y="771.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="925.4" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (103 samples, 22.25%)</title><rect x="924.9" y="899.0" width="262.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="927.9" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (75 samples, 16.20%)</title><rect x="924.9" y="883.0" width="191.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="927.9" y="894.0">one/nio/net/NativeSelecto..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (75 samples, 16.20%)</title><rect x="924.9" y="867.0" width="191.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.9" y="878.0">one/nio/net/NativeSelecto..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.22%)</title><rect x="924.9" y="851.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="927.9" y="862.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.22%)</title><rect x="927.5" y="851.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="930.5" y="862.0"></text>
</g>
<g>
<title>epoll_wait (73 samples, 15.77%)</title><rect x="930.0" y="851.0" width="186.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="933.0" y="862.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 15.12%)</title><rect x="937.7" y="835.0" width="178.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="940.7" y="846.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>do_syscall_64 (70 samples, 15.12%)</title><rect x="937.7" y="819.0" width="178.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="940.7" y="830.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (70 samples, 15.12%)</title><rect x="937.7" y="803.0" width="178.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="940.7" y="814.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>do_epoll_wait (70 samples, 15.12%)</title><rect x="937.7" y="787.0" width="178.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.7" y="798.0">do_epoll_wait</text>
</g>
<g>
<title>ep_poll (68 samples, 14.69%)</title><rect x="940.2" y="771.0" width="173.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="943.2" y="782.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 1.30%)</title><rect x="945.3" y="755.0" width="15.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.3" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (6 samples, 1.30%)</title><rect x="945.3" y="739.0" width="15.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="948.3" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (6 samples, 1.30%)</title><rect x="945.3" y="723.0" width="15.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="948.3" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.22%)</title><rect x="950.4" y="707.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="953.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.65%)</title><rect x="953.0" y="707.0" width="7.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.0" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.22%)</title><rect x="955.5" y="691.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="958.5" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.22%)</title><rect x="958.1" y="691.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.1" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (60 samples, 12.96%)</title><rect x="960.6" y="755.0" width="152.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="963.6" y="766.0">schedule_hrtimeout_..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (60 samples, 12.96%)</title><rect x="960.6" y="739.0" width="152.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="963.6" y="750.0">schedule_hrtimeout_..</text>
</g>
<g>
<title>schedule (60 samples, 12.96%)</title><rect x="960.6" y="723.0" width="152.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.6" y="734.0">schedule</text>
</g>
<g>
<title>__schedule (60 samples, 12.96%)</title><rect x="960.6" y="707.0" width="152.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="963.6" y="718.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (60 samples, 12.96%)</title><rect x="960.6" y="691.0" width="152.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="963.6" y="702.0">finish_task_switch</text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.22%)</title><rect x="1113.5" y="771.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1116.5" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (28 samples, 6.05%)</title><rect x="1116.1" y="883.0" width="71.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1119.1" y="894.0">one/nio/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.43%)</title><rect x="1116.1" y="867.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.43%)</title><rect x="1116.1" y="851.0" width="5.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1119.1" y="862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.22%)</title><rect x="1118.6" y="835.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1121.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (26 samples, 5.62%)</title><rect x="1121.2" y="867.0" width="66.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.2" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18 samples, 3.89%)</title><rect x="1121.2" y="851.0" width="45.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.2" y="862.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.43%)</title><rect x="1121.2" y="835.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (11 samples, 2.38%)</title><rect x="1126.3" y="835.0" width="28.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.3" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (11 samples, 2.38%)</title><rect x="1126.3" y="819.0" width="28.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.3" y="830.0">on..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (7 samples, 1.51%)</title><rect x="1126.3" y="803.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1129.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (7 samples, 1.51%)</title><rect x="1126.3" y="787.0" width="17.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1129.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (7 samples, 1.51%)</title><rect x="1126.3" y="771.0" width="17.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1129.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 1.51%)</title><rect x="1126.3" y="755.0" width="17.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 1.51%)</title><rect x="1126.3" y="739.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1129.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.22%)</title><rect x="1126.3" y="723.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1129.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.22%)</title><rect x="1126.3" y="707.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1129.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 1.30%)</title><rect x="1128.8" y="723.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1131.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 1.30%)</title><rect x="1128.8" y="707.0" width="15.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1131.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 1.30%)</title><rect x="1128.8" y="691.0" width="15.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1131.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 1.30%)</title><rect x="1128.8" y="675.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1131.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 1.30%)</title><rect x="1128.8" y="659.0" width="15.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1131.8" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 1.30%)</title><rect x="1128.8" y="643.0" width="15.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1131.8" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.08%)</title><rect x="1131.4" y="627.0" width="12.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.4" y="638.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.43%)</title><rect x="1131.4" y="611.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1134.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.65%)</title><rect x="1136.5" y="611.0" width="7.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1139.5" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.65%)</title><rect x="1136.5" y="595.0" width="7.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1139.5" y="606.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.65%)</title><rect x="1136.5" y="579.0" width="7.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1139.5" y="590.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.43%)</title><rect x="1136.5" y="563.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1139.5" y="574.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.22%)</title><rect x="1136.5" y="547.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1139.5" y="558.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.0 (1 samples, 0.22%)</title><rect x="1136.5" y="531.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1139.5" y="542.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="1139.0" y="547.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1142.0" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.22%)</title><rect x="1139.0" y="531.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1142.0" y="542.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="1139.0" y="515.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1142.0" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.22%)</title><rect x="1141.6" y="563.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.6" y="574.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.86%)</title><rect x="1144.1" y="803.0" width="10.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1147.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.86%)</title><rect x="1144.1" y="787.0" width="10.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.86%)</title><rect x="1144.1" y="771.0" width="10.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1147.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 1.08%)</title><rect x="1154.3" y="835.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 1.08%)</title><rect x="1154.3" y="819.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1157.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 1.08%)</title><rect x="1154.3" y="803.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1157.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 1.73%)</title><rect x="1167.1" y="851.0" width="20.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1170.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.51%)</title><rect x="1169.6" y="835.0" width="17.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.6" y="846.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.22%)</title><rect x="1172.2" y="819.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1175.2" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.43%)</title><rect x="1174.7" y="819.0" width="5.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1177.7" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.22%)</title><rect x="1174.7" y="803.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.7" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.22%)</title><rect x="1177.3" y="803.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1180.3" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.22%)</title><rect x="1177.3" y="787.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1180.3" y="798.0"></text>
</g>
<g>
<title>__recv (3 samples, 0.65%)</title><rect x="1179.8" y="819.0" width="7.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1182.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.65%)</title><rect x="1179.8" y="803.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.65%)</title><rect x="1179.8" y="787.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.65%)</title><rect x="1179.8" y="771.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.8" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.65%)</title><rect x="1179.8" y="755.0" width="7.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.65%)</title><rect x="1179.8" y="739.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1182.8" y="750.0"></text>
</g>
<g>
<title>inet6_recvmsg (3 samples, 0.65%)</title><rect x="1179.8" y="723.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1182.8" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.43%)</title><rect x="1179.8" y="707.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1182.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.22%)</title><rect x="1184.9" y="707.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1187.9" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.22%)</title><rect x="1184.9" y="691.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1187.9" y="702.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.22%)</title><rect x="1184.9" y="675.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1187.9" y="686.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.22%)</title><rect x="1187.5" y="899.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1190.5" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.22%)</title><rect x="1187.5" y="883.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1190.5" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.22%)</title><rect x="1187.5" y="867.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.5" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.22%)</title><rect x="1187.5" y="851.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.22%)</title><rect x="1187.5" y="835.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.5" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (1 samples, 0.22%)</title><rect x="1187.5" y="819.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.22%)</title><rect x="1187.5" y="803.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.5" y="814.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (1 samples, 0.22%)</title><rect x="1187.5" y="787.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.5" y="798.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (1 samples, 0.22%)</title><rect x="1187.5" y="771.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.5" y="782.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (1 samples, 0.22%)</title><rect x="1187.5" y="755.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.5" y="766.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool) (1 samples, 0.22%)</title><rect x="1187.5" y="739.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.5" y="750.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned long, bool) (1 samples, 0.22%)</title><rect x="1187.5" y="723.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="734.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (1 samples, 0.22%)</title><rect x="1187.5" y="707.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.5" y="718.0"></text>
</g>
<g>
<title>CardGeneration::younger_refs_iterate(OopsInGenClosure*, unsigned int) (1 samples, 0.22%)</title><rect x="1187.5" y="691.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.5" y="702.0"></text>
</g>
<g>
<title>CardTableRS::younger_refs_in_space_iterate(Space*, OopsInGenClosure*, unsigned int) (1 samples, 0.22%)</title><rect x="1187.5" y="675.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.5" y="686.0"></text>
</g>
<g>
<title>ClearNoncleanCardWrapper::do_MemRegion(MemRegion) (1 samples, 0.22%)</title><rect x="1187.5" y="659.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="670.0"></text>
</g>
<g>
<title>DirtyCardToOopClosure::do_MemRegion(MemRegion) (1 samples, 0.22%)</title><rect x="1187.5" y="643.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.5" y="654.0"></text>
</g>
<g>
<title>BlockOffsetArrayContigSpace::block_start_unsafe(void const*) const (1 samples, 0.22%)</title><rect x="1187.5" y="627.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.5" y="638.0"></text>
</g>
<g>
<title>ContiguousSpace::block_size(HeapWord const*) const (1 samples, 0.22%)</title><rect x="1187.5" y="611.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.5" y="622.0"></text>
</g>
</g>
</svg>
