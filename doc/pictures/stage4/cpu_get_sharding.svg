<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (419 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.95%)</title><rect x="10.0" y="883.0" width="11.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.24%)</title><rect x="10.0" y="867.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.72%)</title><rect x="12.8" y="867.0" width="8.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="15.8" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.72%)</title><rect x="12.8" y="851.0" width="8.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.8" y="862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.24%)</title><rect x="15.6" y="835.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="18.6" y="846.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.24%)</title><rect x="18.4" y="835.0" width="2.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="21.4" y="846.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.48%)</title><rect x="21.3" y="883.0" width="5.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="24.3" y="894.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.24%)</title><rect x="21.3" y="867.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="24.3" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.24%)</title><rect x="24.1" y="867.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 1.43%)</title><rect x="26.9" y="883.0" width="16.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="29.9" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 1.43%)</title><rect x="26.9" y="867.0" width="16.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.43%)</title><rect x="26.9" y="851.0" width="16.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="29.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.43%)</title><rect x="26.9" y="835.0" width="16.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="29.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.19%)</title><rect x="29.7" y="819.0" width="14.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="32.7" y="830.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.19%)</title><rect x="29.7" y="803.0" width="14.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 1.19%)</title><rect x="29.7" y="787.0" width="14.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="32.7" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 1.19%)</title><rect x="29.7" y="771.0" width="14.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="32.7" y="782.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.19%)</title><rect x="29.7" y="755.0" width="14.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.7" y="766.0"></text>
</g>
<g>
<title>__schedule (5 samples, 1.19%)</title><rect x="29.7" y="739.0" width="14.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="32.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.19%)</title><rect x="29.7" y="723.0" width="14.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.7" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (16 samples, 3.82%)</title><rect x="43.8" y="883.0" width="45.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="46.8" y="894.0">[unk..</text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.24%)</title><rect x="43.8" y="867.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="46.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (3 samples, 0.72%)</title><rect x="46.6" y="867.0" width="8.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="49.6" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.48%)</title><rect x="49.4" y="851.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.4" y="862.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (2 samples, 0.48%)</title><rect x="49.4" y="835.0" width="5.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="52.4" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 2.86%)</title><rect x="55.1" y="867.0" width="33.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="58.1" y="878.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 2.86%)</title><rect x="55.1" y="851.0" width="33.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="58.1" y="862.0">en..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 2.86%)</title><rect x="55.1" y="835.0" width="33.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="58.1" y="846.0">do..</text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 2.86%)</title><rect x="55.1" y="819.0" width="33.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.1" y="830.0">ex..</text>
</g>
<g>
<title>schedule (12 samples, 2.86%)</title><rect x="55.1" y="803.0" width="33.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="58.1" y="814.0">sc..</text>
</g>
<g>
<title>__schedule (12 samples, 2.86%)</title><rect x="55.1" y="787.0" width="33.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.1" y="798.0">__..</text>
</g>
<g>
<title>finish_task_switch (12 samples, 2.86%)</title><rect x="55.1" y="771.0" width="33.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="58.1" y="782.0">fi..</text>
</g>
<g>
<title>java/lang/Thread.run (290 samples, 69.21%)</title><rect x="88.9" y="883.0" width="816.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.9" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (290 samples, 69.21%)</title><rect x="88.9" y="867.0" width="816.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.9" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (290 samples, 69.21%)</title><rect x="88.9" y="851.0" width="816.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.9" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (253 samples, 60.38%)</title><rect x="88.9" y="835.0" width="712.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.9" y="846.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (252 samples, 60.14%)</title><rect x="88.9" y="819.0" width="709.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="91.9" y="830.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/796090938.run (252 samples, 60.14%)</title><rect x="88.9" y="803.0" width="709.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.9" y="814.0">ru/mail/polis/service/dariagap/ClusterServiceImpl$$Lambda$65/796090938.run</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$1 (252 samples, 60.14%)</title><rect x="88.9" y="787.0" width="709.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.9" y="798.0">ru/mail/polis/service/dariagap/ClusterServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (108 samples, 25.78%)</title><rect x="88.9" y="771.0" width="304.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.9" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.24%)</title><rect x="88.9" y="755.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="88.9" y="739.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="88.9" y="723.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.9" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.24%)</title><rect x="88.9" y="707.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (107 samples, 25.54%)</title><rect x="91.7" y="755.0" width="301.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.7" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.95%)</title><rect x="91.7" y="739.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.72%)</title><rect x="94.5" y="723.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.72%)</title><rect x="94.5" y="707.0" width="8.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.72%)</title><rect x="94.5" y="691.0" width="8.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.5" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.24%)</title><rect x="97.3" y="675.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="100.3" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.24%)</title><rect x="100.1" y="675.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="103.1" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (103 samples, 24.58%)</title><rect x="102.9" y="739.0" width="290.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.9" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (102 samples, 24.34%)</title><rect x="105.8" y="723.0" width="287.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.8" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (102 samples, 24.34%)</title><rect x="105.8" y="707.0" width="287.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.8" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (102 samples, 24.34%)</title><rect x="105.8" y="691.0" width="287.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.8" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.48%)</title><rect x="105.8" y="675.0" width="5.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="108.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.24%)</title><rect x="108.6" y="659.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="111.6" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.24%)</title><rect x="108.6" y="643.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="111.6" y="654.0"></text>
</g>
<g>
<title>send (100 samples, 23.87%)</title><rect x="111.4" y="675.0" width="281.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="114.4" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 23.39%)</title><rect x="117.0" y="659.0" width="276.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="120.0" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.24%)</title><rect x="117.0" y="643.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.0" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (97 samples, 23.15%)</title><rect x="119.8" y="643.0" width="273.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.8" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (73 samples, 17.42%)</title><rect x="119.8" y="627.0" width="205.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.8" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (72 samples, 17.18%)</title><rect x="119.8" y="611.0" width="202.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="122.8" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (69 samples, 16.47%)</title><rect x="119.8" y="595.0" width="194.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="122.8" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (68 samples, 16.23%)</title><rect x="122.6" y="579.0" width="191.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="125.6" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (68 samples, 16.23%)</title><rect x="122.6" y="563.0" width="191.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="125.6" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="122.6" y="547.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="125.6" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.48%)</title><rect x="125.5" y="547.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.5" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (65 samples, 15.51%)</title><rect x="131.1" y="547.0" width="183.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="134.1" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.24%)</title><rect x="133.9" y="531.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="136.9" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.48%)</title><rect x="136.7" y="531.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="139.7" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.24%)</title><rect x="139.5" y="515.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="142.5" y="526.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.24%)</title><rect x="139.5" y="499.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="142.5" y="510.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.24%)</title><rect x="139.5" y="483.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="142.5" y="494.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.24%)</title><rect x="139.5" y="467.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="142.5" y="478.0"></text>
</g>
<g>
<title>rmqueue (1 samples, 0.24%)</title><rect x="139.5" y="451.0" width="2.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="142.5" y="462.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.72%)</title><rect x="142.4" y="531.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="145.4" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.72%)</title><rect x="142.4" y="515.0" width="8.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.4" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.24%)</title><rect x="145.2" y="499.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="148.2" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.24%)</title><rect x="145.2" y="483.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="148.2" y="494.0"></text>
</g>
<g>
<title>memset (1 samples, 0.24%)</title><rect x="148.0" y="499.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="151.0" y="510.0"></text>
</g>
<g>
<title>tcp_push (57 samples, 13.60%)</title><rect x="150.8" y="531.0" width="160.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="153.8" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (57 samples, 13.60%)</title><rect x="150.8" y="515.0" width="160.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="153.8" y="526.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.48%)</title><rect x="153.6" y="499.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="156.6" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 12.89%)</title><rect x="159.3" y="499.0" width="152.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="162.3" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (50 samples, 11.93%)</title><rect x="159.3" y="483.0" width="140.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="162.3" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.24%)</title><rect x="162.1" y="467.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="165.1" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (47 samples, 11.22%)</title><rect x="164.9" y="467.0" width="132.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.9" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (46 samples, 10.98%)</title><rect x="167.7" y="451.0" width="129.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="170.7" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (45 samples, 10.74%)</title><rect x="170.5" y="435.0" width="126.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="173.5" y="446.0">ip_local_out</text>
</g>
<g>
<title>ip_output (45 samples, 10.74%)</title><rect x="170.5" y="419.0" width="126.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="173.5" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (43 samples, 10.26%)</title><rect x="176.2" y="403.0" width="121.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.2" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.24%)</title><rect x="179.0" y="387.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.0" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (41 samples, 9.79%)</title><rect x="181.8" y="387.0" width="115.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="184.8" y="398.0">__ip_finish_ou..</text>
</g>
<g>
<title>ip_finish_output2 (41 samples, 9.79%)</title><rect x="181.8" y="371.0" width="115.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="184.8" y="382.0">ip_finish_outp..</text>
</g>
<g>
<title>__local_bh_enable_ip (32 samples, 7.64%)</title><rect x="190.2" y="355.0" width="90.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="193.2" y="366.0">__local_bh..</text>
</g>
<g>
<title>do_softirq.part.0 (32 samples, 7.64%)</title><rect x="190.2" y="339.0" width="90.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="193.2" y="350.0">do_softirq..</text>
</g>
<g>
<title>do_softirq_own_stack (32 samples, 7.64%)</title><rect x="190.2" y="323.0" width="90.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.2" y="334.0">do_softirq..</text>
</g>
<g>
<title>__softirqentry_text_start (32 samples, 7.64%)</title><rect x="190.2" y="307.0" width="90.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="193.2" y="318.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (31 samples, 7.40%)</title><rect x="193.1" y="291.0" width="87.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="196.1" y="302.0">net_rx_act..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.24%)</title><rect x="193.1" y="275.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="196.1" y="286.0"></text>
</g>
<g>
<title>process_backlog (30 samples, 7.16%)</title><rect x="195.9" y="275.0" width="84.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.9" y="286.0">process_ba..</text>
</g>
<g>
<title>__netif_receive_skb (30 samples, 7.16%)</title><rect x="195.9" y="259.0" width="84.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.9" y="270.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (29 samples, 6.92%)</title><rect x="198.7" y="243.0" width="81.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.7" y="254.0">__netif_r..</text>
</g>
<g>
<title>ip_rcv (28 samples, 6.68%)</title><rect x="201.5" y="227.0" width="78.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="204.5" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.24%)</title><rect x="201.5" y="211.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (27 samples, 6.44%)</title><rect x="204.3" y="211.0" width="76.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.3" y="222.0">ip_rcv_f..</text>
</g>
<g>
<title>ip_local_deliver (27 samples, 6.44%)</title><rect x="204.3" y="195.0" width="76.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.3" y="206.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 6.44%)</title><rect x="204.3" y="179.0" width="76.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="207.3" y="190.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 6.44%)</title><rect x="204.3" y="163.0" width="76.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="207.3" y="174.0">ip_proto..</text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 6.44%)</title><rect x="204.3" y="147.0" width="76.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.3" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.24%)</title><rect x="204.3" y="131.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="207.3" y="142.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.24%)</title><rect x="204.3" y="115.0" width="2.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="207.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.24%)</title><rect x="207.1" y="131.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="210.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (25 samples, 5.97%)</title><rect x="210.0" y="131.0" width="70.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="213.0" y="142.0">tcp_v4_d..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.24%)</title><rect x="215.6" y="115.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="218.6" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.24%)</title><rect x="218.4" y="115.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.4" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (21 samples, 5.01%)</title><rect x="221.2" y="115.0" width="59.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="224.2" y="126.0">tcp_rc..</text>
</g>
<g>
<title>tcp_ack (6 samples, 1.43%)</title><rect x="226.8" y="99.0" width="16.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="229.8" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.24%)</title><rect x="229.7" y="83.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="232.7" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.72%)</title><rect x="232.5" y="83.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="235.5" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.48%)</title><rect x="232.5" y="67.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="235.5" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.48%)</title><rect x="232.5" y="51.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="235.5" y="62.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.48%)</title><rect x="232.5" y="35.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.5" y="46.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.24%)</title><rect x="238.1" y="67.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="241.1" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.24%)</title><rect x="240.9" y="83.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="243.9" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (13 samples, 3.10%)</title><rect x="243.7" y="99.0" width="36.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="246.7" y="110.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (13 samples, 3.10%)</title><rect x="243.7" y="83.0" width="36.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="246.7" y="94.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (11 samples, 2.63%)</title><rect x="249.4" y="67.0" width="31.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="252.4" y="78.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (11 samples, 2.63%)</title><rect x="249.4" y="51.0" width="31.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="252.4" y="62.0">__..</text>
</g>
<g>
<title>__lock_text_start (11 samples, 2.63%)</title><rect x="249.4" y="35.0" width="31.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.4" y="46.0">__..</text>
</g>
<g>
<title>dev_queue_xmit (5 samples, 1.19%)</title><rect x="280.4" y="355.0" width="14.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.4" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 1.19%)</title><rect x="280.4" y="339.0" width="14.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="283.4" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.95%)</title><rect x="280.4" y="323.0" width="11.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.4" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.95%)</title><rect x="280.4" y="307.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="283.4" y="318.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.72%)</title><rect x="280.4" y="291.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="283.4" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.72%)</title><rect x="280.4" y="275.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.4" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.72%)</title><rect x="280.4" y="259.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="283.4" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.24%)</title><rect x="288.8" y="291.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="291.8" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.24%)</title><rect x="291.6" y="323.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.6" y="334.0"></text>
</g>
<g>
<title>do_softirq.part.0 (1 samples, 0.24%)</title><rect x="294.4" y="355.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="297.4" y="366.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.24%)</title><rect x="297.3" y="467.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="300.3" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.24%)</title><rect x="300.1" y="483.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="303.1" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.24%)</title><rect x="302.9" y="483.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.9" y="494.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.24%)</title><rect x="302.9" y="467.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="305.9" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.24%)</title><rect x="305.7" y="483.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="308.7" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.24%)</title><rect x="308.5" y="483.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="311.5" y="494.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.24%)</title><rect x="311.3" y="531.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="314.3" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.24%)</title><rect x="311.3" y="515.0" width="2.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="314.3" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.72%)</title><rect x="314.2" y="595.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.2" y="606.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.48%)</title><rect x="314.2" y="579.0" width="5.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="317.2" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.48%)</title><rect x="314.2" y="563.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="317.2" y="574.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.48%)</title><rect x="314.2" y="547.0" width="5.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.2" y="558.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="319.8" y="579.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="322.8" y="590.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.24%)</title><rect x="322.6" y="611.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (24 samples, 5.73%)</title><rect x="325.4" y="627.0" width="67.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.4" y="638.0">exit_to..</text>
</g>
<g>
<title>schedule (24 samples, 5.73%)</title><rect x="325.4" y="611.0" width="67.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="328.4" y="622.0">schedule</text>
</g>
<g>
<title>__schedule (24 samples, 5.73%)</title><rect x="325.4" y="595.0" width="67.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.4" y="606.0">__sched..</text>
</g>
<g>
<title>finish_task_switch (23 samples, 5.49%)</title><rect x="328.2" y="579.0" width="64.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.2" y="590.0">finish_..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.getSync (67 samples, 15.99%)</title><rect x="393.0" y="771.0" width="188.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.0" y="782.0">ru/mail/polis/service/da..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (67 samples, 15.99%)</title><rect x="393.0" y="755.0" width="188.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.0" y="766.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.24%)</title><rect x="393.0" y="739.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.24%)</title><rect x="393.0" y="723.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (23 samples, 5.49%)</title><rect x="395.8" y="739.0" width="64.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.8" y="750.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (23 samples, 5.49%)</title><rect x="395.8" y="723.0" width="64.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="398.8" y="734.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.24%)</title><rect x="395.8" y="707.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="398.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.24%)</title><rect x="395.8" y="691.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.8" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.24%)</title><rect x="395.8" y="675.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.8" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.24%)</title><rect x="395.8" y="659.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="398.8" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.24%)</title><rect x="395.8" y="643.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.8" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (1 samples, 0.24%)</title><rect x="395.8" y="627.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.8" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (15 samples, 3.58%)</title><rect x="398.6" y="707.0" width="42.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="401.6" y="718.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (15 samples, 3.58%)</title><rect x="398.6" y="691.0" width="42.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.6" y="702.0">org/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.24%)</title><rect x="398.6" y="675.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="401.6" y="686.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.24%)</title><rect x="398.6" y="659.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="401.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (14 samples, 3.34%)</title><rect x="401.5" y="675.0" width="39.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="404.5" y="686.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (1 samples, 0.24%)</title><rect x="401.5" y="659.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="404.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (13 samples, 3.10%)</title><rect x="404.3" y="659.0" width="36.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="407.3" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::AppendInternalKey(std::string*, rocksdb::ParsedInternalKey const&amp;) (1 samples, 0.24%)</title><rect x="404.3" y="643.0" width="2.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="407.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (10 samples, 2.39%)</title><rect x="407.1" y="643.0" width="28.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="410.1" y="654.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Next() (3 samples, 0.72%)</title><rect x="412.7" y="627.0" width="8.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="415.7" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.24%)</title><rect x="418.4" y="611.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="421.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (5 samples, 1.19%)</title><rect x="421.2" y="627.0" width="14.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="424.2" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (4 samples, 0.95%)</title><rect x="424.0" y="611.0" width="11.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="427.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.24%)</title><rect x="424.0" y="595.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="427.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (3 samples, 0.72%)</title><rect x="426.8" y="595.0" width="8.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="429.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.24%)</title><rect x="432.4" y="579.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="435.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBIter::IsVisible(unsigned long, rocksdb::Slice const&amp;, bool*) [clone .plt] (1 samples, 0.24%)</title><rect x="435.3" y="643.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="438.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::ParseKey(rocksdb::ParsedInternalKey*) (1 samples, 0.24%)</title><rect x="438.1" y="643.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="441.1" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (4 samples, 0.95%)</title><rect x="440.9" y="707.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="443.9" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (4 samples, 0.95%)</title><rect x="440.9" y="691.0" width="11.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="443.9" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (4 samples, 0.95%)</title><rect x="440.9" y="675.0" width="11.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="443.9" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.72%)</title><rect x="440.9" y="659.0" width="8.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="443.9" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.48%)</title><rect x="443.7" y="643.0" width="5.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="446.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.48%)</title><rect x="443.7" y="627.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="446.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="443.7" y="611.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="446.7" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.24%)</title><rect x="443.7" y="595.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="446.7" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.24%)</title><rect x="446.5" y="611.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="449.5" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="449.3" y="659.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="452.3" y="670.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="449.3" y="643.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="452.3" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (3 samples, 0.72%)</title><rect x="452.1" y="707.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="455.1" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (3 samples, 0.72%)</title><rect x="452.1" y="691.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.1" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (2 samples, 0.48%)</title><rect x="455.0" y="675.0" width="5.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="458.0" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.24%)</title><rect x="455.0" y="659.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="458.0" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.24%)</title><rect x="455.0" y="643.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="458.0" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="457.8" y="659.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="460.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.24%)</title><rect x="457.8" y="643.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="460.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (43 samples, 10.26%)</title><rect x="460.6" y="739.0" width="121.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="463.6" y="750.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (21 samples, 5.01%)</title><rect x="460.6" y="723.0" width="59.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="463.6" y="734.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (21 samples, 5.01%)</title><rect x="460.6" y="707.0" width="59.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="463.6" y="718.0">org/ro..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.48%)</title><rect x="460.6" y="691.0" width="5.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="463.6" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (17 samples, 4.06%)</title><rect x="466.2" y="691.0" width="47.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="469.2" y="702.0">Java..</text>
</g>
<g>
<title>cfree (1 samples, 0.24%)</title><rect x="466.2" y="675.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="469.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (3 samples, 0.72%)</title><rect x="469.0" y="675.0" width="8.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="472.0" y="686.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.24%)</title><rect x="471.9" y="659.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="474.9" y="670.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.24%)</title><rect x="474.7" y="659.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="477.7" y="670.0"></text>
</g>
<g>
<title>jni_ReleaseByteArrayElements (1 samples, 0.24%)</title><rect x="477.5" y="675.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="480.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (12 samples, 2.86%)</title><rect x="480.3" y="675.0" width="33.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="483.3" y="686.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (1 samples, 0.24%)</title><rect x="483.1" y="659.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="486.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (3 samples, 0.72%)</title><rect x="485.9" y="659.0" width="8.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="488.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::IsVisible(unsigned long, rocksdb::Slice const&amp;, bool*) (1 samples, 0.24%)</title><rect x="488.8" y="643.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="491.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::ParseKey(rocksdb::ParsedInternalKey*) [clone .plt] (1 samples, 0.24%)</title><rect x="491.6" y="643.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="494.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (7 samples, 1.67%)</title><rect x="494.4" y="659.0" width="19.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="497.4" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni6908697550040774122.so (7 samples, 1.67%)</title><rect x="494.4" y="643.0" width="19.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="497.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (7 samples, 1.67%)</title><rect x="494.4" y="627.0" width="19.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="497.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.48%)</title><rect x="508.5" y="611.0" width="5.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="511.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.48%)</title><rect x="514.1" y="691.0" width="5.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="517.1" y="702.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.24%)</title><rect x="514.1" y="675.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="517.1" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.24%)</title><rect x="516.9" y="675.0" width="2.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="519.9" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (21 samples, 5.01%)</title><rect x="519.7" y="723.0" width="59.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.7" y="734.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (17 samples, 4.06%)</title><rect x="519.7" y="707.0" width="47.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.7" y="718.0">org/..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.24%)</title><rect x="519.7" y="691.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="522.7" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (12 samples, 2.86%)</title><rect x="522.6" y="691.0" width="33.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="525.6" y="702.0">Ja..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (12 samples, 2.86%)</title><rect x="522.6" y="675.0" width="33.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="525.6" y="686.0">ro..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (1 samples, 0.24%)</title><rect x="525.4" y="659.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="528.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (10 samples, 2.39%)</title><rect x="528.2" y="659.0" width="28.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="531.2" y="670.0">ro..</text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.24%)</title><rect x="531.0" y="643.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="534.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::RegisterCleanup(void (*)(void*, void*), void*, void*) (1 samples, 0.24%)</title><rect x="533.8" y="643.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="536.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (1 samples, 0.24%)</title><rect x="536.6" y="643.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="539.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.24%)</title><rect x="536.6" y="627.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="539.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.24%)</title><rect x="536.6" y="611.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="539.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (3 samples, 0.72%)</title><rect x="539.5" y="643.0" width="8.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="542.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.24%)</title><rect x="542.3" y="627.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="545.3" y="638.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) [clone .plt] (1 samples, 0.24%)</title><rect x="545.1" y="627.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="548.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.24%)</title><rect x="547.9" y="643.0" width="2.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="550.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::~MergeIteratorBuilder() (2 samples, 0.48%)</title><rect x="550.7" y="643.0" width="5.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="553.7" y="654.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.48%)</title><rect x="556.3" y="691.0" width="5.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="559.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.24%)</title><rect x="562.0" y="691.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="565.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.24%)</title><rect x="564.8" y="691.0" width="2.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="567.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (4 samples, 0.95%)</title><rect x="567.6" y="707.0" width="11.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.6" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (4 samples, 0.95%)</title><rect x="567.6" y="691.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="570.6" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (4 samples, 0.95%)</title><rect x="567.6" y="675.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.6" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (4 samples, 0.95%)</title><rect x="567.6" y="659.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.6" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (4 samples, 0.95%)</title><rect x="567.6" y="643.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.6" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.95%)</title><rect x="567.6" y="627.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.6" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.24%)</title><rect x="567.6" y="611.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="570.6" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (3 samples, 0.72%)</title><rect x="570.4" y="611.0" width="8.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="573.4" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.48%)</title><rect x="573.2" y="595.0" width="5.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="576.2" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.48%)</title><rect x="573.2" y="579.0" width="5.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="576.2" y="590.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (2 samples, 0.48%)</title><rect x="573.2" y="563.0" width="5.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="576.2" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (1 samples, 0.24%)</title><rect x="578.9" y="723.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.proxy (72 samples, 17.18%)</title><rect x="581.7" y="771.0" width="202.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.7" y="782.0">ru/mail/polis/service/dari..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (72 samples, 17.18%)</title><rect x="581.7" y="755.0" width="202.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.7" y="766.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (72 samples, 17.18%)</title><rect x="581.7" y="739.0" width="202.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.7" y="750.0">one/nio/http/HttpClient.in..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (9 samples, 2.15%)</title><rect x="581.7" y="723.0" width="25.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.7" y="734.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.24%)</title><rect x="584.5" y="707.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="587.5" y="718.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.24%)</title><rect x="584.5" y="691.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="587.5" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.24%)</title><rect x="584.5" y="675.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="587.5" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.24%)</title><rect x="584.5" y="659.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="587.5" y="670.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.24%)</title><rect x="584.5" y="643.0" width="2.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="587.5" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.24%)</title><rect x="584.5" y="627.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="587.5" y="638.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.24%)</title><rect x="584.5" y="611.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="587.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 1.67%)</title><rect x="587.3" y="707.0" width="19.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="590.3" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.24%)</title><rect x="587.3" y="691.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="590.3" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.24%)</title><rect x="587.3" y="675.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="590.3" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.24%)</title><rect x="587.3" y="659.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="590.3" y="670.0"></text>
</g>
<g>
<title>__recv (6 samples, 1.43%)</title><rect x="590.1" y="691.0" width="16.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="593.1" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.19%)</title><rect x="593.0" y="675.0" width="14.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="596.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.19%)</title><rect x="593.0" y="659.0" width="14.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="596.0" y="670.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.24%)</title><rect x="595.8" y="643.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="598.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.72%)</title><rect x="598.6" y="643.0" width="8.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.6" y="654.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.72%)</title><rect x="598.6" y="627.0" width="8.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="601.6" y="638.0"></text>
</g>
<g>
<title>sock_recvmsg (3 samples, 0.72%)</title><rect x="598.6" y="611.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="601.6" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.48%)</title><rect x="598.6" y="595.0" width="5.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="601.6" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.48%)</title><rect x="598.6" y="579.0" width="5.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="601.6" y="590.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="598.6" y="563.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.6" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.24%)</title><rect x="598.6" y="547.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="601.6" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.24%)</title><rect x="598.6" y="531.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="601.6" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.24%)</title><rect x="598.6" y="515.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="601.6" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.24%)</title><rect x="598.6" y="499.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="601.6" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.24%)</title><rect x="601.4" y="563.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="604.4" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.24%)</title><rect x="601.4" y="547.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="604.4" y="558.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.24%)</title><rect x="601.4" y="531.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="604.4" y="542.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.24%)</title><rect x="604.2" y="595.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="607.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.24%)</title><rect x="604.2" y="579.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="607.2" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.24%)</title><rect x="604.2" y="563.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="607.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.95%)</title><rect x="607.0" y="723.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.24%)</title><rect x="607.0" y="707.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="610.0" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.24%)</title><rect x="607.0" y="691.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="610.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.24%)</title><rect x="607.0" y="675.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="610.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.48%)</title><rect x="609.9" y="707.0" width="5.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.48%)</title><rect x="609.9" y="691.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.9" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.48%)</title><rect x="609.9" y="675.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.48%)</title><rect x="609.9" y="659.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="612.7" y="643.0" width="2.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="615.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.24%)</title><rect x="612.7" y="627.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="615.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.24%)</title><rect x="615.5" y="707.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="615.5" y="691.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="615.5" y="675.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.5" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 1.43%)</title><rect x="618.3" y="723.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 1.43%)</title><rect x="618.3" y="707.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.24%)</title><rect x="626.8" y="691.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="629.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.24%)</title><rect x="626.8" y="675.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="629.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.24%)</title><rect x="626.8" y="659.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.8" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.48%)</title><rect x="629.6" y="691.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.48%)</title><rect x="629.6" y="675.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.48%)</title><rect x="629.6" y="659.0" width="5.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.6" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.24%)</title><rect x="629.6" y="643.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNode (1 samples, 0.24%)</title><rect x="632.4" y="643.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.4" y="654.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (5 samples, 1.19%)</title><rect x="635.2" y="723.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.2" y="734.0"></text>
</g>
<g>
<title>setsockopt (5 samples, 1.19%)</title><rect x="635.2" y="707.0" width="14.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="638.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.95%)</title><rect x="638.0" y="691.0" width="11.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="641.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.95%)</title><rect x="638.0" y="675.0" width="11.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="641.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.95%)</title><rect x="638.0" y="659.0" width="11.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.0" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.95%)</title><rect x="638.0" y="643.0" width="11.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="641.0" y="654.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (1 samples, 0.24%)</title><rect x="638.0" y="627.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="641.0" y="638.0"></text>
</g>
<g>
<title>apparmor_socket_setsockopt (1 samples, 0.24%)</title><rect x="640.8" y="627.0" width="2.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="643.8" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.24%)</title><rect x="643.7" y="627.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="646.7" y="638.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="643.7" y="611.0" width="2.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.7" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="646.5" y="627.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="649.5" y="638.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="646.5" y="611.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (48 samples, 11.46%)</title><rect x="649.3" y="723.0" width="135.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.3" y="734.0">one/nio/net/Nativ..</text>
</g>
<g>
<title>send (48 samples, 11.46%)</title><rect x="649.3" y="707.0" width="135.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="652.3" y="718.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 11.46%)</title><rect x="649.3" y="691.0" width="135.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="652.3" y="702.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (48 samples, 11.46%)</title><rect x="649.3" y="675.0" width="135.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.3" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (33 samples, 7.88%)</title><rect x="649.3" y="659.0" width="92.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.3" y="670.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (33 samples, 7.88%)</title><rect x="649.3" y="643.0" width="92.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="652.3" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (33 samples, 7.88%)</title><rect x="649.3" y="627.0" width="92.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="652.3" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (32 samples, 7.64%)</title><rect x="652.1" y="611.0" width="90.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="655.1" y="622.0">inet6_send..</text>
</g>
<g>
<title>tcp_sendmsg (32 samples, 7.64%)</title><rect x="652.1" y="595.0" width="90.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="655.1" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (32 samples, 7.64%)</title><rect x="652.1" y="579.0" width="90.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="655.1" y="590.0">tcp_sendms..</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.24%)</title><rect x="652.1" y="563.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="655.1" y="574.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.24%)</title><rect x="652.1" y="547.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="655.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (31 samples, 7.40%)</title><rect x="654.9" y="563.0" width="87.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="657.9" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (31 samples, 7.40%)</title><rect x="654.9" y="547.0" width="87.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="657.9" y="558.0">__tcp_push..</text>
</g>
<g>
<title>tcp_write_xmit (31 samples, 7.40%)</title><rect x="654.9" y="531.0" width="87.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="657.9" y="542.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_transmit_skb (28 samples, 6.68%)</title><rect x="654.9" y="515.0" width="78.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="657.9" y="526.0">__tcp_tra..</text>
</g>
<g>
<title>ip_queue_xmit (25 samples, 5.97%)</title><rect x="660.5" y="499.0" width="70.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="663.5" y="510.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 5.97%)</title><rect x="660.5" y="483.0" width="70.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="663.5" y="494.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (24 samples, 5.73%)</title><rect x="663.4" y="467.0" width="67.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="666.4" y="478.0">ip_loca..</text>
</g>
<g>
<title>ip_output (24 samples, 5.73%)</title><rect x="663.4" y="451.0" width="67.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="666.4" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (23 samples, 5.49%)</title><rect x="666.2" y="435.0" width="64.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="669.2" y="446.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (22 samples, 5.25%)</title><rect x="666.2" y="419.0" width="61.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="669.2" y="430.0">__ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (22 samples, 5.25%)</title><rect x="666.2" y="403.0" width="61.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="669.2" y="414.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (18 samples, 4.30%)</title><rect x="669.0" y="387.0" width="50.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="672.0" y="398.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.0 (18 samples, 4.30%)</title><rect x="669.0" y="371.0" width="50.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.0" y="382.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (17 samples, 4.06%)</title><rect x="671.8" y="355.0" width="47.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.8" y="366.0">do_s..</text>
</g>
<g>
<title>__softirqentry_text_start (17 samples, 4.06%)</title><rect x="671.8" y="339.0" width="47.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="674.8" y="350.0">__so..</text>
</g>
<g>
<title>net_rx_action (17 samples, 4.06%)</title><rect x="671.8" y="323.0" width="47.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="674.8" y="334.0">net_..</text>
</g>
<g>
<title>process_backlog (17 samples, 4.06%)</title><rect x="671.8" y="307.0" width="47.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="674.8" y="318.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (17 samples, 4.06%)</title><rect x="671.8" y="291.0" width="47.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="674.8" y="302.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (16 samples, 3.82%)</title><rect x="674.6" y="275.0" width="45.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="677.6" y="286.0">__ne..</text>
</g>
<g>
<title>ip_rcv (16 samples, 3.82%)</title><rect x="674.6" y="259.0" width="45.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="677.6" y="270.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (16 samples, 3.82%)</title><rect x="674.6" y="243.0" width="45.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="677.6" y="254.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (16 samples, 3.82%)</title><rect x="674.6" y="227.0" width="45.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="677.6" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 3.82%)</title><rect x="674.6" y="211.0" width="45.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.6" y="222.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 3.82%)</title><rect x="674.6" y="195.0" width="45.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.6" y="206.0">ip_p..</text>
</g>
<g>
<title>tcp_v4_rcv (16 samples, 3.82%)</title><rect x="674.6" y="179.0" width="45.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="677.6" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_v4_do_rcv (16 samples, 3.82%)</title><rect x="674.6" y="163.0" width="45.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.6" y="174.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (16 samples, 3.82%)</title><rect x="674.6" y="147.0" width="45.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="677.6" y="158.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.24%)</title><rect x="677.4" y="131.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="680.4" y="142.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.95%)</title><rect x="680.3" y="131.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="683.3" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (3 samples, 0.72%)</title><rect x="680.3" y="115.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.3" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.72%)</title><rect x="680.3" y="99.0" width="8.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="683.3" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.48%)</title><rect x="680.3" y="83.0" width="5.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="683.3" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.48%)</title><rect x="680.3" y="67.0" width="5.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="683.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.48%)</title><rect x="680.3" y="51.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="683.3" y="62.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.24%)</title><rect x="683.1" y="35.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="686.1" y="46.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.24%)</title><rect x="685.9" y="83.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="688.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.24%)</title><rect x="685.9" y="67.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="688.9" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.24%)</title><rect x="688.7" y="115.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="691.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (10 samples, 2.39%)</title><rect x="691.5" y="131.0" width="28.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="694.5" y="142.0">tc..</text>
</g>
<g>
<title>sock_def_readable (9 samples, 2.15%)</title><rect x="694.3" y="115.0" width="25.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="697.3" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (9 samples, 2.15%)</title><rect x="694.3" y="99.0" width="25.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="697.3" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 2.15%)</title><rect x="694.3" y="83.0" width="25.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="697.3" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 2.15%)</title><rect x="694.3" y="67.0" width="25.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="697.3" y="78.0">_..</text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.72%)</title><rect x="719.7" y="387.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="722.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.72%)</title><rect x="719.7" y="371.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.7" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.72%)</title><rect x="719.7" y="355.0" width="8.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="722.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.72%)</title><rect x="719.7" y="339.0" width="8.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="722.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.48%)</title><rect x="722.5" y="323.0" width="5.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="725.5" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.48%)</title><rect x="722.5" y="307.0" width="5.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="725.5" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.24%)</title><rect x="725.3" y="291.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="728.3" y="302.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.24%)</title><rect x="728.1" y="419.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="731.1" y="430.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.24%)</title><rect x="731.0" y="499.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="734.0" y="510.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.24%)</title><rect x="731.0" y="483.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="734.0" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.24%)</title><rect x="733.8" y="515.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="736.8" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.48%)</title><rect x="736.6" y="515.0" width="5.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="739.6" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.24%)</title><rect x="736.6" y="499.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="739.6" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.24%)</title><rect x="739.4" y="499.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="742.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.24%)</title><rect x="739.4" y="483.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.24%)</title><rect x="739.4" y="467.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="742.4" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.24%)</title><rect x="739.4" y="451.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="742.4" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (15 samples, 3.58%)</title><rect x="742.2" y="659.0" width="42.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.2" y="670.0">exit..</text>
</g>
<g>
<title>schedule (14 samples, 3.34%)</title><rect x="745.0" y="643.0" width="39.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="748.0" y="654.0">sch..</text>
</g>
<g>
<title>__schedule (14 samples, 3.34%)</title><rect x="745.0" y="627.0" width="39.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="748.0" y="638.0">__s..</text>
</g>
<g>
<title>finish_task_switch (14 samples, 3.34%)</title><rect x="745.0" y="611.0" width="39.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="748.0" y="622.0">fin..</text>
</g>
<g>
<title>ru/mail/polis/util/Util.getNode (5 samples, 1.19%)</title><rect x="784.5" y="771.0" width="14.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.5" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.48%)</title><rect x="784.5" y="755.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="787.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.48%)</title><rect x="784.5" y="739.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="787.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.48%)</title><rect x="784.5" y="723.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.48%)</title><rect x="784.5" y="707.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.5" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.72%)</title><rect x="790.1" y="755.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.72%)</title><rect x="790.1" y="739.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.1" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.24%)</title><rect x="795.7" y="723.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="798.7" y="734.0"></text>
</g>
<g>
<title>Klass::klass_holder() const (1 samples, 0.24%)</title><rect x="795.7" y="707.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="798.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1 samples, 0.24%)</title><rect x="798.5" y="819.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="801.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.24%)</title><rect x="798.5" y="803.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="801.5" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.setRelease (1 samples, 0.24%)</title><rect x="798.5" y="787.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (37 samples, 8.83%)</title><rect x="801.4" y="835.0" width="104.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="804.4" y="846.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (37 samples, 8.83%)</title><rect x="801.4" y="819.0" width="104.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.4" y="830.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (36 samples, 8.59%)</title><rect x="801.4" y="803.0" width="101.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.4" y="814.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.24%)</title><rect x="801.4" y="787.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 8.35%)</title><rect x="804.2" y="787.0" width="98.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.2" y="798.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 8.35%)</title><rect x="804.2" y="771.0" width="98.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.2" y="782.0">jdk/internal..</text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.72%)</title><rect x="804.2" y="755.0" width="8.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="807.2" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (3 samples, 0.72%)</title><rect x="804.2" y="739.0" width="8.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="807.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.72%)</title><rect x="804.2" y="723.0" width="8.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="807.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.72%)</title><rect x="804.2" y="707.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="807.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.72%)</title><rect x="804.2" y="691.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="807.2" y="702.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.72%)</title><rect x="804.2" y="675.0" width="8.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="807.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.72%)</title><rect x="804.2" y="659.0" width="8.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="807.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 7.64%)</title><rect x="812.6" y="755.0" width="90.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="815.6" y="766.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (31 samples, 7.40%)</title><rect x="812.6" y="739.0" width="87.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="815.6" y="750.0">__pthread_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 6.68%)</title><rect x="821.1" y="723.0" width="78.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="824.1" y="734.0">entry_SYS..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.24%)</title><rect x="821.1" y="707.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="824.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 6.44%)</title><rect x="823.9" y="707.0" width="76.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="826.9" y="718.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 6.44%)</title><rect x="823.9" y="691.0" width="76.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="826.9" y="702.0">__x64_sy..</text>
</g>
<g>
<title>do_futex (27 samples, 6.44%)</title><rect x="823.9" y="675.0" width="76.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="826.9" y="686.0">do_futex</text>
</g>
<g>
<title>futex_wait (27 samples, 6.44%)</title><rect x="823.9" y="659.0" width="76.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="826.9" y="670.0">futex_wait</text>
</g>
<g>
<title>futex_wait_queue_me (27 samples, 6.44%)</title><rect x="823.9" y="643.0" width="76.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="826.9" y="654.0">futex_wa..</text>
</g>
<g>
<title>schedule (27 samples, 6.44%)</title><rect x="823.9" y="627.0" width="76.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="826.9" y="638.0">schedule</text>
</g>
<g>
<title>__schedule (27 samples, 6.44%)</title><rect x="823.9" y="611.0" width="76.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="826.9" y="622.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (26 samples, 6.21%)</title><rect x="826.7" y="595.0" width="73.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.7" y="606.0">finish_t..</text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.24%)</title><rect x="899.9" y="739.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="902.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.24%)</title><rect x="902.7" y="803.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="905.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.24%)</title><rect x="902.7" y="787.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="905.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.24%)</title><rect x="902.7" y="771.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.24%)</title><rect x="902.7" y="755.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="905.7" y="766.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (4 samples, 0.95%)</title><rect x="905.6" y="883.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.6" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (4 samples, 0.95%)</title><rect x="905.6" y="867.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="908.6" y="878.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (4 samples, 0.95%)</title><rect x="905.6" y="851.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.6" y="862.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (4 samples, 0.95%)</title><rect x="905.6" y="835.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="908.6" y="846.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (4 samples, 0.95%)</title><rect x="905.6" y="819.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.6" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (4 samples, 0.95%)</title><rect x="905.6" y="803.0" width="11.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.6" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (4 samples, 0.95%)</title><rect x="905.6" y="787.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.6" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (4 samples, 0.95%)</title><rect x="905.6" y="771.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.6" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (2 samples, 0.48%)</title><rect x="905.6" y="755.0" width="5.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="908.6" y="766.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.48%)</title><rect x="911.2" y="755.0" width="5.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="914.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (2 samples, 0.48%)</title><rect x="911.2" y="739.0" width="5.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="914.2" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (93 samples, 22.20%)</title><rect x="916.8" y="883.0" width="261.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.8" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.24%)</title><rect x="916.8" y="867.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="919.8" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.24%)</title><rect x="919.6" y="867.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="922.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.24%)</title><rect x="919.6" y="851.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.24%)</title><rect x="919.6" y="835.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="922.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56 samples, 13.37%)</title><rect x="922.5" y="867.0" width="157.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="925.5" y="878.0">one/nio/net/NativeSe..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.72%)</title><rect x="922.5" y="851.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="925.5" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.72%)</title><rect x="922.5" y="835.0" width="8.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (1 samples, 0.24%)</title><rect x="928.1" y="819.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="931.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (53 samples, 12.65%)</title><rect x="930.9" y="851.0" width="149.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="933.9" y="862.0">one/nio/net/NativeS..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (2 samples, 0.48%)</title><rect x="933.7" y="835.0" width="5.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="936.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (50 samples, 11.93%)</title><rect x="939.4" y="835.0" width="140.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="942.4" y="846.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 11.46%)</title><rect x="945.0" y="819.0" width="135.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.0" y="830.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (48 samples, 11.46%)</title><rect x="945.0" y="803.0" width="135.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.0" y="814.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (48 samples, 11.46%)</title><rect x="945.0" y="787.0" width="135.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="948.0" y="798.0">__x64_sys_epoll_w..</text>
</g>
<g>
<title>do_epoll_wait (48 samples, 11.46%)</title><rect x="945.0" y="771.0" width="135.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="948.0" y="782.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="945.0" y="755.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.0" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="945.0" y="739.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.0" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="945.0" y="723.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="948.0" y="734.0"></text>
</g>
<g>
<title>ep_poll (47 samples, 11.22%)</title><rect x="947.8" y="755.0" width="132.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="950.8" y="766.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (5 samples, 1.19%)</title><rect x="950.6" y="739.0" width="14.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="953.6" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.95%)</title><rect x="950.6" y="723.0" width="11.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.6" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.72%)</title><rect x="953.4" y="707.0" width="8.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.48%)</title><rect x="953.4" y="691.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.24%)</title><rect x="956.3" y="675.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.3" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.24%)</title><rect x="959.1" y="691.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="962.1" y="702.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.24%)</title><rect x="961.9" y="723.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="964.9" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (41 samples, 9.79%)</title><rect x="964.7" y="739.0" width="115.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="967.7" y="750.0">schedule_hrtim..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (41 samples, 9.79%)</title><rect x="964.7" y="723.0" width="115.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="967.7" y="734.0">schedule_hrtim..</text>
</g>
<g>
<title>schedule (41 samples, 9.79%)</title><rect x="964.7" y="707.0" width="115.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="967.7" y="718.0">schedule</text>
</g>
<g>
<title>__schedule (41 samples, 9.79%)</title><rect x="964.7" y="691.0" width="115.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="967.7" y="702.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (40 samples, 9.55%)</title><rect x="967.5" y="675.0" width="112.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="970.5" y="686.0">finish_task_sw..</text>
</g>
<g>
<title>one/nio/net/Session.process (35 samples, 8.35%)</title><rect x="1080.2" y="867.0" width="98.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1083.2" y="878.0">one/nio/net/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.24%)</title><rect x="1080.2" y="851.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1083.2" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.24%)</title><rect x="1080.2" y="835.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1083.2" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.24%)</title><rect x="1080.2" y="819.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1083.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 8.11%)</title><rect x="1083.0" y="851.0" width="95.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1086.0" y="862.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 5.49%)</title><rect x="1083.0" y="835.0" width="64.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1086.0" y="846.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 4.06%)</title><rect x="1083.0" y="819.0" width="47.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1086.0" y="830.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 4.06%)</title><rect x="1083.0" y="803.0" width="47.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1086.0" y="814.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (16 samples, 3.82%)</title><rect x="1083.0" y="787.0" width="45.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.0" y="798.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.24%)</title><rect x="1083.0" y="771.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/ClusterServiceImpl.entity (15 samples, 3.58%)</title><rect x="1085.8" y="771.0" width="42.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1088.8" y="782.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (15 samples, 3.58%)</title><rect x="1085.8" y="755.0" width="42.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.8" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 3.58%)</title><rect x="1085.8" y="739.0" width="42.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.8" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (15 samples, 3.58%)</title><rect x="1085.8" y="723.0" width="42.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.8" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.48%)</title><rect x="1085.8" y="707.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.48%)</title><rect x="1085.8" y="691.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.48%)</title><rect x="1085.8" y="675.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1088.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.48%)</title><rect x="1085.8" y="659.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 3.10%)</title><rect x="1091.4" y="707.0" width="36.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1094.4" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 3.10%)</title><rect x="1091.4" y="691.0" width="36.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1094.4" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 3.10%)</title><rect x="1091.4" y="675.0" width="36.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1094.4" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 3.10%)</title><rect x="1091.4" y="659.0" width="36.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1094.4" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 3.10%)</title><rect x="1091.4" y="643.0" width="36.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1094.4" y="654.0">jdk..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.24%)</title><rect x="1091.4" y="627.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1094.4" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.24%)</title><rect x="1094.2" y="627.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1097.2" y="638.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.24%)</title><rect x="1094.2" y="611.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.2" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 2.15%)</title><rect x="1097.1" y="627.0" width="25.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1100.1" y="638.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.91%)</title><rect x="1099.9" y="611.0" width="22.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.9" y="622.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.91%)</title><rect x="1099.9" y="595.0" width="22.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1102.9" y="606.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 1.91%)</title><rect x="1099.9" y="579.0" width="22.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.9" y="590.0">_..</text>
</g>
<g>
<title>do_futex (8 samples, 1.91%)</title><rect x="1099.9" y="563.0" width="22.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1102.9" y="574.0">d..</text>
</g>
<g>
<title>futex_wake (8 samples, 1.91%)</title><rect x="1099.9" y="547.0" width="22.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.9" y="558.0">f..</text>
</g>
<g>
<title>get_futex_key (1 samples, 0.24%)</title><rect x="1102.7" y="531.0" width="2.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1105.7" y="542.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 1.43%)</title><rect x="1105.5" y="531.0" width="16.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1108.5" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 1.43%)</title><rect x="1105.5" y="515.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 1.43%)</title><rect x="1105.5" y="499.0" width="16.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.5" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.48%)</title><rect x="1122.4" y="627.0" width="5.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1125.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.24%)</title><rect x="1128.0" y="787.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1131.0" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.24%)</title><rect x="1128.0" y="771.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1131.0" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.24%)</title><rect x="1128.0" y="755.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1131.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.24%)</title><rect x="1128.0" y="739.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1131.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.95%)</title><rect x="1130.9" y="819.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.24%)</title><rect x="1130.9" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1133.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.24%)</title><rect x="1130.9" y="787.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.24%)</title><rect x="1130.9" y="771.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.24%)</title><rect x="1130.9" y="755.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.48%)</title><rect x="1133.7" y="803.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1136.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.48%)</title><rect x="1133.7" y="787.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.7" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.24%)</title><rect x="1139.3" y="803.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1142.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.24%)</title><rect x="1142.1" y="819.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1145.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.24%)</title><rect x="1142.1" y="803.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1145.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.24%)</title><rect x="1142.1" y="787.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1145.1" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1144.9" y="819.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1147.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.24%)</title><rect x="1144.9" y="803.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1147.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="1144.9" y="787.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1147.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.24%)</title><rect x="1144.9" y="771.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1147.9" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 2.63%)</title><rect x="1147.8" y="835.0" width="30.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1150.8" y="846.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 2.63%)</title><rect x="1147.8" y="819.0" width="30.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1150.8" y="830.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.72%)</title><rect x="1150.6" y="803.0" width="8.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1153.6" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.24%)</title><rect x="1150.6" y="787.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.6" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.48%)</title><rect x="1153.4" y="787.0" width="5.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1156.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.24%)</title><rect x="1156.2" y="771.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.2" y="782.0"></text>
</g>
<g>
<title>__recv (7 samples, 1.67%)</title><rect x="1159.0" y="803.0" width="19.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1162.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.67%)</title><rect x="1159.0" y="787.0" width="19.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.67%)</title><rect x="1159.0" y="771.0" width="19.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1162.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (6 samples, 1.43%)</title><rect x="1161.8" y="755.0" width="16.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1164.8" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (6 samples, 1.43%)</title><rect x="1161.8" y="739.0" width="16.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1164.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 1.19%)</title><rect x="1161.8" y="723.0" width="14.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1164.8" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.95%)</title><rect x="1164.7" y="707.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1167.7" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.24%)</title><rect x="1164.7" y="691.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1167.7" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (3 samples, 0.72%)</title><rect x="1167.5" y="691.0" width="8.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.5" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.24%)</title><rect x="1167.5" y="675.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.5" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.24%)</title><rect x="1170.3" y="675.0" width="2.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.3" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.24%)</title><rect x="1170.3" y="659.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1173.3" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.24%)</title><rect x="1170.3" y="643.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.3" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.24%)</title><rect x="1170.3" y="627.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1173.3" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.24%)</title><rect x="1170.3" y="611.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1173.3" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.24%)</title><rect x="1173.1" y="675.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.1" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.24%)</title><rect x="1173.1" y="659.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.1" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.24%)</title><rect x="1173.1" y="643.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1176.1" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.24%)</title><rect x="1175.9" y="723.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.9" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.24%)</title><rect x="1175.9" y="707.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.24%)</title><rect x="1175.9" y="691.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.9" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.24%)</title><rect x="1175.9" y="675.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.9" y="686.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.95%)</title><rect x="1178.7" y="883.0" width="11.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1181.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.95%)</title><rect x="1178.7" y="867.0" width="11.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1181.7" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.95%)</title><rect x="1178.7" y="851.0" width="11.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="862.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.95%)</title><rect x="1178.7" y="835.0" width="11.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.7" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.95%)</title><rect x="1178.7" y="819.0" width="11.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.7" y="830.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (4 samples, 0.95%)</title><rect x="1178.7" y="803.0" width="11.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.7" y="814.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (4 samples, 0.95%)</title><rect x="1178.7" y="787.0" width="11.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="798.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (4 samples, 0.95%)</title><rect x="1178.7" y="771.0" width="11.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.7" y="782.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (4 samples, 0.95%)</title><rect x="1178.7" y="755.0" width="11.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="766.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (4 samples, 0.95%)</title><rect x="1178.7" y="739.0" width="11.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.7" y="750.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool) (4 samples, 0.95%)</title><rect x="1178.7" y="723.0" width="11.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.7" y="734.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned long, bool) (4 samples, 0.95%)</title><rect x="1178.7" y="707.0" width="11.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.7" y="718.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (3 samples, 0.72%)</title><rect x="1178.7" y="691.0" width="8.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.7" y="702.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (3 samples, 0.72%)</title><rect x="1178.7" y="675.0" width="8.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.7" y="686.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(FastScanClosure*, oopDesc*, Klass*) (3 samples, 0.72%)</title><rect x="1178.7" y="659.0" width="8.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.7" y="670.0"></text>
</g>
<g>
<title>GenCollectedHeap::young_process_roots(StrongRootsScope*, OopsInGenClosure*, OopsInGenClosure*, CLDClosure*, OopStorage::ParState&lt;false, false&gt;*) (1 samples, 0.24%)</title><rect x="1187.2" y="691.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.2" y="702.0"></text>
</g>
<g>
<title>GenCollectedHeap::process_roots(StrongRootsScope*, GenCollectedHeap::ScanningOption, OopClosure*, CLDClosure*, CLDClosure*, CodeBlobToOopClosure*) (1 samples, 0.24%)</title><rect x="1187.2" y="675.0" width="2.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.2" y="686.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.24%)</title><rect x="1187.2" y="659.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.2" y="670.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.24%)</title><rect x="1187.2" y="643.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.2" y="654.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.24%)</title><rect x="1187.2" y="627.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.2" y="638.0"></text>
</g>
<g>
<title>OopMapSet::all_do(frame const*, RegisterMap const*, OopClosure*, void (*)(oopDesc**, oopDesc**), OopClosure*) (1 samples, 0.24%)</title><rect x="1187.2" y="611.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.2" y="622.0"></text>
</g>
</g>
</svg>
