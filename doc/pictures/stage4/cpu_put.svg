<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (277 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.36%)</title><rect x="10.0" y="899.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.36%)</title><rect x="10.0" y="883.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.36%)</title><rect x="10.0" y="867.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.36%)</title><rect x="10.0" y="851.0" width="4.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 2.17%)</title><rect x="14.3" y="899.0" width="25.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="17.3" y="910.0">[..</text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (6 samples, 2.17%)</title><rect x="14.3" y="883.0" width="25.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="17.3" y="894.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 2.17%)</title><rect x="14.3" y="867.0" width="25.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="17.3" y="878.0">e..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 2.17%)</title><rect x="14.3" y="851.0" width="25.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="17.3" y="862.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 2.17%)</title><rect x="14.3" y="835.0" width="25.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="17.3" y="846.0">_..</text>
</g>
<g>
<title>do_futex (6 samples, 2.17%)</title><rect x="14.3" y="819.0" width="25.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="17.3" y="830.0">d..</text>
</g>
<g>
<title>futex_wait (6 samples, 2.17%)</title><rect x="14.3" y="803.0" width="25.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="17.3" y="814.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 2.17%)</title><rect x="14.3" y="787.0" width="25.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="17.3" y="798.0">f..</text>
</g>
<g>
<title>schedule (6 samples, 2.17%)</title><rect x="14.3" y="771.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="17.3" y="782.0">s..</text>
</g>
<g>
<title>__schedule (6 samples, 2.17%)</title><rect x="14.3" y="755.0" width="25.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="17.3" y="766.0">_..</text>
</g>
<g>
<title>finish_task_switch (6 samples, 2.17%)</title><rect x="14.3" y="739.0" width="25.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="17.3" y="750.0">f..</text>
</g>
<g>
<title>[unknown_Java] (12 samples, 4.33%)</title><rect x="39.8" y="899.0" width="51.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="42.8" y="910.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 4.33%)</title><rect x="39.8" y="883.0" width="51.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="42.8" y="894.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 4.33%)</title><rect x="39.8" y="867.0" width="51.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="42.8" y="878.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 4.33%)</title><rect x="39.8" y="851.0" width="51.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="42.8" y="862.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.72%)</title><rect x="39.8" y="835.0" width="8.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="42.8" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.72%)</title><rect x="39.8" y="819.0" width="8.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="42.8" y="830.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.72%)</title><rect x="39.8" y="803.0" width="8.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="42.8" y="814.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.36%)</title><rect x="39.8" y="787.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="42.8" y="798.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.36%)</title><rect x="44.1" y="787.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.1" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.36%)</title><rect x="44.1" y="771.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.1" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.36%)</title><rect x="44.1" y="755.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="47.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (10 samples, 3.61%)</title><rect x="48.3" y="835.0" width="42.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="51.3" y="846.0">exit..</text>
</g>
<g>
<title>schedule (10 samples, 3.61%)</title><rect x="48.3" y="819.0" width="42.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.3" y="830.0">sche..</text>
</g>
<g>
<title>__schedule (10 samples, 3.61%)</title><rect x="48.3" y="803.0" width="42.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="51.3" y="814.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (10 samples, 3.61%)</title><rect x="48.3" y="787.0" width="42.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="51.3" y="798.0">fini..</text>
</g>
<g>
<title>java/lang/Thread.run (199 samples, 71.84%)</title><rect x="90.9" y="899.0" width="847.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.9" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (199 samples, 71.84%)</title><rect x="90.9" y="883.0" width="847.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.9" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (199 samples, 71.84%)</title><rect x="90.9" y="867.0" width="847.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.9" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (186 samples, 67.15%)</title><rect x="90.9" y="851.0" width="792.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="93.9" y="862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (186 samples, 67.15%)</title><rect x="90.9" y="835.0" width="792.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.9" y="846.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$65/302282871.run (186 samples, 67.15%)</title><rect x="90.9" y="819.0" width="792.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.9" y="830.0">ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$65/302282871.run</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$entity$1 (186 samples, 67.15%)</title><rect x="90.9" y="803.0" width="792.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.9" y="814.0">ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.putSync (186 samples, 67.15%)</title><rect x="90.9" y="787.0" width="792.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.9" y="798.0">ru/mail/polis/service/dariagap/AsyncServiceImpl.putSync</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (92 samples, 33.21%)</title><rect x="90.9" y="771.0" width="392.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="93.9" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.36%)</title><rect x="95.2" y="755.0" width="4.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="98.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (88 samples, 31.77%)</title><rect x="99.5" y="755.0" width="374.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="102.5" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 1.08%)</title><rect x="99.5" y="739.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.72%)</title><rect x="103.7" y="723.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.72%)</title><rect x="103.7" y="707.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.72%)</title><rect x="103.7" y="691.0" width="8.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.36%)</title><rect x="108.0" y="675.0" width="4.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="111.0" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (85 samples, 30.69%)</title><rect x="112.2" y="739.0" width="362.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="115.2" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (85 samples, 30.69%)</title><rect x="112.2" y="723.0" width="362.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="115.2" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (85 samples, 30.69%)</title><rect x="112.2" y="707.0" width="362.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.2" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.36%)</title><rect x="116.5" y="691.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.5" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (83 samples, 29.96%)</title><rect x="120.8" y="691.0" width="353.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="123.8" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 1.08%)</title><rect x="120.8" y="675.0" width="12.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="123.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.36%)</title><rect x="129.3" y="659.0" width="4.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="132.3" y="670.0"></text>
</g>
<g>
<title>send (80 samples, 28.88%)</title><rect x="133.5" y="675.0" width="340.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="136.5" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 28.52%)</title><rect x="137.8" y="659.0" width="336.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.8" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.72%)</title><rect x="137.8" y="643.0" width="8.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="140.8" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (77 samples, 27.80%)</title><rect x="146.3" y="643.0" width="328.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.3" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (65 samples, 23.47%)</title><rect x="146.3" y="627.0" width="276.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.3" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (65 samples, 23.47%)</title><rect x="146.3" y="611.0" width="276.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="149.3" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (64 samples, 23.10%)</title><rect x="146.3" y="595.0" width="272.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="149.3" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.72%)</title><rect x="154.8" y="579.0" width="8.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="157.8" y="590.0"></text>
</g>
<g>
<title>inet6_sendmsg (60 samples, 21.66%)</title><rect x="163.4" y="579.0" width="255.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="166.4" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (60 samples, 21.66%)</title><rect x="163.4" y="563.0" width="255.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="166.4" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (59 samples, 21.30%)</title><rect x="167.6" y="547.0" width="251.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.6" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.36%)</title><rect x="171.9" y="531.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.9" y="542.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.36%)</title><rect x="171.9" y="515.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="174.9" y="526.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.36%)</title><rect x="176.1" y="531.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="179.1" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.36%)</title><rect x="176.1" y="515.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="179.1" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.72%)</title><rect x="180.4" y="531.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="183.4" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.72%)</title><rect x="180.4" y="515.0" width="8.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="183.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.36%)</title><rect x="180.4" y="499.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="183.4" y="510.0"></text>
</g>
<g>
<title>memset (1 samples, 0.36%)</title><rect x="180.4" y="483.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="183.4" y="494.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.36%)</title><rect x="184.7" y="499.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.7" y="510.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.36%)</title><rect x="184.7" y="483.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="187.7" y="494.0"></text>
</g>
<g>
<title>tcp_push (54 samples, 19.49%)</title><rect x="188.9" y="531.0" width="230.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.9" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (54 samples, 19.49%)</title><rect x="188.9" y="515.0" width="230.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="191.9" y="526.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (54 samples, 19.49%)</title><rect x="188.9" y="499.0" width="230.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="191.9" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (50 samples, 18.05%)</title><rect x="188.9" y="483.0" width="213.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.9" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (50 samples, 18.05%)</title><rect x="188.9" y="467.0" width="213.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="191.9" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (50 samples, 18.05%)</title><rect x="188.9" y="451.0" width="213.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.9" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (50 samples, 18.05%)</title><rect x="188.9" y="435.0" width="213.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="191.9" y="446.0">ip_local_out</text>
</g>
<g>
<title>ip_output (50 samples, 18.05%)</title><rect x="188.9" y="419.0" width="213.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.9" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (49 samples, 17.69%)</title><rect x="193.2" y="403.0" width="208.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="196.2" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.36%)</title><rect x="193.2" y="387.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.2" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (48 samples, 17.33%)</title><rect x="197.4" y="387.0" width="204.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.4" y="398.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (46 samples, 16.61%)</title><rect x="201.7" y="371.0" width="196.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="204.7" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (42 samples, 15.16%)</title><rect x="201.7" y="355.0" width="178.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.7" y="366.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.0 (41 samples, 14.80%)</title><rect x="206.0" y="339.0" width="174.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="209.0" y="350.0">do_softirq.part.0</text>
</g>
<g>
<title>do_softirq_own_stack (39 samples, 14.08%)</title><rect x="214.5" y="323.0" width="166.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="217.5" y="334.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (38 samples, 13.72%)</title><rect x="214.5" y="307.0" width="161.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="217.5" y="318.0">__softirqentry_text_s..</text>
</g>
<g>
<title>net_rx_action (38 samples, 13.72%)</title><rect x="214.5" y="291.0" width="161.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="217.5" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (37 samples, 13.36%)</title><rect x="218.7" y="275.0" width="157.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="221.7" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (37 samples, 13.36%)</title><rect x="218.7" y="259.0" width="157.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="221.7" y="270.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (37 samples, 13.36%)</title><rect x="218.7" y="243.0" width="157.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="221.7" y="254.0">__netif_receive_skb_..</text>
</g>
<g>
<title>ip_rcv (37 samples, 13.36%)</title><rect x="218.7" y="227.0" width="157.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="221.7" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (37 samples, 13.36%)</title><rect x="218.7" y="211.0" width="157.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="221.7" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (37 samples, 13.36%)</title><rect x="218.7" y="195.0" width="157.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="221.7" y="206.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (36 samples, 13.00%)</title><rect x="223.0" y="179.0" width="153.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="226.0" y="190.0">ip_local_deliver_fi..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (35 samples, 12.64%)</title><rect x="223.0" y="163.0" width="149.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="226.0" y="174.0">ip_protocol_deliver..</text>
</g>
<g>
<title>tcp_v4_rcv (35 samples, 12.64%)</title><rect x="223.0" y="147.0" width="149.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="226.0" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.36%)</title><rect x="235.8" y="131.0" width="4.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="238.8" y="142.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.36%)</title><rect x="235.8" y="115.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="238.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (29 samples, 10.47%)</title><rect x="240.0" y="131.0" width="123.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.0" y="142.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.36%)</title><rect x="240.0" y="115.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="243.0" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.36%)</title><rect x="244.3" y="115.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 9.75%)</title><rect x="248.6" y="115.0" width="115.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="251.6" y="126.0">tcp_rcv_establ..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.36%)</title><rect x="252.8" y="99.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="255.8" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.36%)</title><rect x="252.8" y="83.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="255.8" y="94.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 2.17%)</title><rect x="257.1" y="99.0" width="25.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.1" y="110.0">t..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.36%)</title><rect x="261.3" y="83.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="264.3" y="94.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.36%)</title><rect x="265.6" y="83.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="268.6" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.72%)</title><rect x="269.9" y="83.0" width="8.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="272.9" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.72%)</title><rect x="269.9" y="67.0" width="8.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="272.9" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.36%)</title><rect x="269.9" y="51.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.9" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.36%)</title><rect x="269.9" y="35.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="272.9" y="46.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.36%)</title><rect x="274.1" y="51.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="277.1" y="62.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.36%)</title><rect x="274.1" y="35.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.1" y="46.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.36%)</title><rect x="278.4" y="83.0" width="4.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="281.4" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (17 samples, 6.14%)</title><rect x="282.6" y="99.0" width="72.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="285.6" y="110.0">tcp_data..</text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.36%)</title><rect x="282.6" y="83.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="285.6" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 5.78%)</title><rect x="286.9" y="83.0" width="68.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="289.9" y="94.0">sock_de..</text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 5.42%)</title><rect x="291.2" y="67.0" width="63.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="294.2" y="78.0">__wake_..</text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 5.42%)</title><rect x="291.2" y="51.0" width="63.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="294.2" y="62.0">__wake_..</text>
</g>
<g>
<title>__lock_text_start (15 samples, 5.42%)</title><rect x="291.2" y="35.0" width="63.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="294.2" y="46.0">__lock_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.36%)</title><rect x="355.1" y="99.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="358.1" y="110.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.36%)</title><rect x="355.1" y="83.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="358.1" y="94.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.36%)</title><rect x="359.3" y="99.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.3" y="110.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.72%)</title><rect x="363.6" y="131.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="366.6" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.36%)</title><rect x="372.1" y="163.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="375.1" y="174.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.36%)</title><rect x="376.4" y="307.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="379.4" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 1.44%)</title><rect x="380.6" y="355.0" width="17.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="383.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 1.08%)</title><rect x="384.9" y="339.0" width="12.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="387.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.36%)</title><rect x="389.1" y="323.0" width="4.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="392.1" y="334.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.36%)</title><rect x="389.1" y="307.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.1" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.36%)</title><rect x="393.4" y="323.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="396.4" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.36%)</title><rect x="397.7" y="371.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="400.7" y="382.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.36%)</title><rect x="401.9" y="483.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="404.9" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.36%)</title><rect x="406.2" y="483.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="409.2" y="494.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.36%)</title><rect x="410.4" y="483.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="413.4" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.36%)</title><rect x="414.7" y="483.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="417.7" y="494.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.36%)</title><rect x="419.0" y="595.0" width="4.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.36%)</title><rect x="419.0" y="579.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="422.0" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (12 samples, 4.33%)</title><rect x="423.2" y="627.0" width="51.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.2" y="638.0">exit_..</text>
</g>
<g>
<title>schedule (12 samples, 4.33%)</title><rect x="423.2" y="611.0" width="51.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="426.2" y="622.0">sched..</text>
</g>
<g>
<title>__schedule (12 samples, 4.33%)</title><rect x="423.2" y="595.0" width="51.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="426.2" y="606.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (10 samples, 3.61%)</title><rect x="431.7" y="579.0" width="42.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="434.7" y="590.0">fini..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.36%)</title><rect x="474.3" y="755.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.36%)</title><rect x="474.3" y="739.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.36%)</title><rect x="474.3" y="723.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.3" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.36%)</title><rect x="478.6" y="755.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="481.6" y="766.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.36%)</title><rect x="478.6" y="739.0" width="4.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="481.6" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.36%)</title><rect x="478.6" y="723.0" width="4.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="481.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.upsert (94 samples, 33.94%)</title><rect x="482.9" y="771.0" width="400.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.9" y="782.0">ru/mail/polis/dao/dariagap/RocksDBStorage.upsert</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (94 samples, 33.94%)</title><rect x="482.9" y="755.0" width="400.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="485.9" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (93 samples, 33.57%)</title><rect x="487.1" y="739.0" width="396.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.1" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (90 samples, 32.49%)</title><rect x="491.4" y="723.0" width="383.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="494.4" y="734.0">Java_org_rocksdb_RocksDB_put__J_3BII_3BII</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (90 samples, 32.49%)</title><rect x="491.4" y="707.0" width="383.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="494.4" y="718.0">rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (89 samples, 32.13%)</title><rect x="495.6" y="691.0" width="379.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="498.6" y="702.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.36%)</title><rect x="495.6" y="675.0" width="4.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="498.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (88 samples, 31.77%)</title><rect x="499.9" y="675.0" width="374.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="502.9" y="686.0">rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, ..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (87 samples, 31.41%)</title><rect x="499.9" y="659.0" width="370.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="502.9" y="670.0">rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, roc..</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.36%)</title><rect x="508.4" y="643.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="511.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.36%)</title><rect x="512.7" y="643.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="515.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (76 samples, 27.44%)</title><rect x="516.9" y="643.0" width="323.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="519.9" y="654.0">rocksdb::DBImpl::Write(rocksdb::WriteOptions..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.36%)</title><rect x="521.2" y="627.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="524.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (72 samples, 25.99%)</title><rect x="525.5" y="627.0" width="306.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="528.5" y="638.0">rocksdb::DBImpl::WriteImpl(rocksdb::Write..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.72%)</title><rect x="529.7" y="611.0" width="8.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="532.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.36%)</title><rect x="538.2" y="611.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="541.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.36%)</title><rect x="542.5" y="611.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="545.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (52 samples, 18.77%)</title><rect x="546.8" y="611.0" width="221.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="549.8" y="622.0">rocksdb::DBImpl::WriteToWAL(r..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (51 samples, 18.41%)</title><rect x="546.8" y="595.0" width="217.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="549.8" y="606.0">rocksdb::DBImpl::WriteToWAL(r..</text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (50 samples, 18.05%)</title><rect x="551.0" y="579.0" width="213.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="554.0" y="590.0">rocksdb::log::Writer::AddRec..</text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (2 samples, 0.72%)</title><rect x="551.0" y="563.0" width="8.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="554.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (47 samples, 16.97%)</title><rect x="559.5" y="563.0" width="200.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="562.5" y="574.0">rocksdb::WritableFileWrite..</text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;, rocksdb::IOOptions const&amp;, rocksdb::IODebugContext*) (1 samples, 0.36%)</title><rect x="559.5" y="547.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="562.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (46 samples, 16.61%)</title><rect x="563.8" y="547.0" width="195.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="566.8" y="558.0">rocksdb::WritableFileWrit..</text>
</g>
<g>
<title>__write (44 samples, 15.88%)</title><rect x="572.3" y="531.0" width="187.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="575.3" y="542.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 15.52%)</title><rect x="576.6" y="515.0" width="183.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.6" y="526.0">entry_SYSCALL_64_after_h..</text>
</g>
<g>
<title>do_syscall_64 (43 samples, 15.52%)</title><rect x="576.6" y="499.0" width="183.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="579.6" y="510.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_write (43 samples, 15.52%)</title><rect x="576.6" y="483.0" width="183.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="579.6" y="494.0">__x64_sys_write</text>
</g>
<g>
<title>ksys_write (42 samples, 15.16%)</title><rect x="580.8" y="467.0" width="178.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="583.8" y="478.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.72%)</title><rect x="585.1" y="451.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.1" y="462.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.72%)</title><rect x="585.1" y="435.0" width="8.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="588.1" y="446.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.72%)</title><rect x="585.1" y="419.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="588.1" y="430.0"></text>
</g>
<g>
<title>vfs_write (39 samples, 14.08%)</title><rect x="593.6" y="451.0" width="166.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.6" y="462.0">vfs_write</text>
</g>
<g>
<title>__sb_start_write (4 samples, 1.44%)</title><rect x="597.9" y="435.0" width="17.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.9" y="446.0"></text>
</g>
<g>
<title>__vfs_write (34 samples, 12.27%)</title><rect x="614.9" y="435.0" width="144.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="617.9" y="446.0">__vfs_write</text>
</g>
<g>
<title>new_sync_write (34 samples, 12.27%)</title><rect x="614.9" y="419.0" width="144.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="617.9" y="430.0">new_sync_write</text>
</g>
<g>
<title>ext4_file_write_iter (34 samples, 12.27%)</title><rect x="614.9" y="403.0" width="144.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="617.9" y="414.0">ext4_file_write_iter</text>
</g>
<g>
<title>__generic_file_write_iter (33 samples, 11.91%)</title><rect x="614.9" y="387.0" width="140.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="617.9" y="398.0">__generic_file_wri..</text>
</g>
<g>
<title>ext4_da_write_begin (2 samples, 0.72%)</title><rect x="619.2" y="371.0" width="8.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="622.2" y="382.0"></text>
</g>
<g>
<title>generic_perform_write (30 samples, 10.83%)</title><rect x="627.7" y="371.0" width="127.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="630.7" y="382.0">generic_perform_..</text>
</g>
<g>
<title>ext4_da_write_begin (7 samples, 2.53%)</title><rect x="627.7" y="355.0" width="29.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="630.7" y="366.0">ex..</text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.36%)</title><rect x="636.2" y="339.0" width="4.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.2" y="350.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.36%)</title><rect x="636.2" y="323.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="639.2" y="334.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.36%)</title><rect x="636.2" y="307.0" width="4.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="639.2" y="318.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.36%)</title><rect x="636.2" y="291.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="639.2" y="302.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.36%)</title><rect x="640.5" y="339.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="643.5" y="350.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 1.08%)</title><rect x="644.7" y="339.0" width="12.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="647.7" y="350.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 1.08%)</title><rect x="644.7" y="323.0" width="12.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.7" y="334.0"></text>
</g>
<g>
<title>add_to_page_cache_lru (1 samples, 0.36%)</title><rect x="644.7" y="307.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="647.7" y="318.0"></text>
</g>
<g>
<title>__add_to_page_cache_locked (1 samples, 0.36%)</title><rect x="644.7" y="291.0" width="4.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="647.7" y="302.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.72%)</title><rect x="649.0" y="307.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.0" y="318.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.36%)</title><rect x="649.0" y="291.0" width="4.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.0" y="302.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.36%)</title><rect x="653.2" y="291.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="656.2" y="302.0"></text>
</g>
<g>
<title>ext4_da_write_end (22 samples, 7.94%)</title><rect x="657.5" y="355.0" width="93.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="660.5" y="366.0">ext4_da_wri..</text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 1.08%)</title><rect x="657.5" y="339.0" width="12.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.5" y="350.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 1.08%)</title><rect x="657.5" y="323.0" width="12.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="660.5" y="334.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.36%)</title><rect x="661.8" y="307.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="664.8" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.36%)</title><rect x="661.8" y="291.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="664.8" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.36%)</title><rect x="661.8" y="275.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="664.8" y="286.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.36%)</title><rect x="666.0" y="307.0" width="4.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="669.0" y="318.0"></text>
</g>
<g>
<title>generic_write_end (19 samples, 6.86%)</title><rect x="670.3" y="339.0" width="80.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="673.3" y="350.0">generic_w..</text>
</g>
<g>
<title>__block_commit_write.isra.0 (1 samples, 0.36%)</title><rect x="670.3" y="323.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="673.3" y="334.0"></text>
</g>
<g>
<title>__mark_inode_dirty (16 samples, 5.78%)</title><rect x="674.5" y="323.0" width="68.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.5" y="334.0">__mark_..</text>
</g>
<g>
<title>ext4_dirty_inode (16 samples, 5.78%)</title><rect x="674.5" y="307.0" width="68.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="677.5" y="318.0">ext4_di..</text>
</g>
<g>
<title>ext4_mark_inode_dirty (16 samples, 5.78%)</title><rect x="674.5" y="291.0" width="68.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="677.5" y="302.0">ext4_ma..</text>
</g>
<g>
<title>ext4_mark_iloc_dirty (9 samples, 3.25%)</title><rect x="674.5" y="275.0" width="38.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="677.5" y="286.0">ext..</text>
</g>
<g>
<title>ext4_do_update_inode (8 samples, 2.89%)</title><rect x="674.5" y="259.0" width="34.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="677.5" y="270.0">ex..</text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 2.17%)</title><rect x="683.1" y="243.0" width="25.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="686.1" y="254.0">e..</text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.36%)</title><rect x="683.1" y="227.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.1" y="238.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.0 (5 samples, 1.81%)</title><rect x="687.3" y="227.0" width="21.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="690.3" y="238.0">e..</text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.72%)</title><rect x="700.1" y="211.0" width="8.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.1" y="222.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.36%)</title><rect x="704.4" y="195.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.4" y="206.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.36%)</title><rect x="708.6" y="259.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="711.6" y="270.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (7 samples, 2.53%)</title><rect x="712.9" y="275.0" width="29.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="715.9" y="286.0">ex..</text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 1.08%)</title><rect x="712.9" y="259.0" width="12.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="715.9" y="270.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.36%)</title><rect x="717.1" y="243.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="720.1" y="254.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.36%)</title><rect x="717.1" y="227.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="720.1" y="238.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.36%)</title><rect x="721.4" y="243.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="724.4" y="254.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.72%)</title><rect x="725.7" y="259.0" width="8.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="728.7" y="270.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.72%)</title><rect x="725.7" y="243.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="728.7" y="254.0"></text>
</g>
<g>
<title>jbd2_write_access_granted (1 samples, 0.36%)</title><rect x="729.9" y="227.0" width="4.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.9" y="238.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.36%)</title><rect x="734.2" y="259.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="737.2" y="270.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.36%)</title><rect x="738.4" y="259.0" width="4.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="741.4" y="270.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.72%)</title><rect x="742.7" y="323.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="745.7" y="334.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.36%)</title><rect x="751.2" y="355.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="754.2" y="366.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.36%)</title><rect x="755.5" y="387.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="758.5" y="398.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.36%)</title><rect x="759.7" y="563.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="762.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.36%)</title><rect x="764.0" y="595.0" width="4.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="767.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (1 samples, 0.36%)</title><rect x="768.3" y="611.0" width="4.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="771.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 5.05%)</title><rect x="772.5" y="611.0" width="59.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="775.5" y="622.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 5.05%)</title><rect x="772.5" y="595.0" width="59.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="775.5" y="606.0">rocksd..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 5.05%)</title><rect x="772.5" y="579.0" width="59.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="775.5" y="590.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 5.05%)</title><rect x="772.5" y="563.0" width="59.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="775.5" y="574.0">rocksd..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.36%)</title><rect x="772.5" y="547.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="775.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 4.69%)</title><rect x="776.8" y="547.0" width="55.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="779.8" y="558.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (2 samples, 0.72%)</title><rect x="776.8" y="531.0" width="8.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="779.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (10 samples, 3.61%)</title><rect x="785.3" y="531.0" width="42.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="788.3" y="542.0">rock..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 3.25%)</title><rect x="785.3" y="515.0" width="38.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="788.3" y="526.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (7 samples, 2.53%)</title><rect x="789.6" y="499.0" width="29.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="792.6" y="510.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (1 samples, 0.36%)</title><rect x="815.1" y="483.0" width="4.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.1" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (1 samples, 0.36%)</title><rect x="815.1" y="467.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="818.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.36%)</title><rect x="819.4" y="499.0" width="4.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="822.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.36%)</title><rect x="823.6" y="515.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="826.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.36%)</title><rect x="827.9" y="531.0" width="4.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="830.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.36%)</title><rect x="832.2" y="627.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="835.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.36%)</title><rect x="836.4" y="627.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="839.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.36%)</title><rect x="840.7" y="643.0" width="4.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="843.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.36%)</title><rect x="844.9" y="643.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="847.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.72%)</title><rect x="849.2" y="643.0" width="8.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="852.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.36%)</title><rect x="849.2" y="627.0" width="4.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) [clone .plt] (1 samples, 0.36%)</title><rect x="853.5" y="627.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="856.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.36%)</title><rect x="857.7" y="643.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="860.7" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.36%)</title><rect x="862.0" y="643.0" width="4.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="865.0" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.36%)</title><rect x="866.2" y="643.0" width="4.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="869.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.36%)</title><rect x="870.5" y="659.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="873.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.36%)</title><rect x="874.8" y="723.0" width="4.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="877.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.36%)</title><rect x="874.8" y="707.0" width="4.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="877.8" y="718.0"></text>
</g>
<g>
<title>__libc_malloc (1 samples, 0.36%)</title><rect x="879.0" y="723.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="882.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 4.69%)</title><rect x="883.3" y="851.0" width="55.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="886.3" y="862.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 4.33%)</title><rect x="887.5" y="835.0" width="51.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.5" y="846.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 4.33%)</title><rect x="887.5" y="819.0" width="51.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.5" y="830.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 4.33%)</title><rect x="887.5" y="803.0" width="51.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.5" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 4.33%)</title><rect x="887.5" y="787.0" width="51.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.5" y="798.0">jdk/i..</text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.72%)</title><rect x="887.5" y="771.0" width="8.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="890.5" y="782.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.36%)</title><rect x="887.5" y="755.0" width="4.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="890.5" y="766.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.36%)</title><rect x="891.8" y="755.0" width="4.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="894.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 3.61%)</title><rect x="896.1" y="771.0" width="42.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="899.1" y="782.0">[unk..</text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 3.25%)</title><rect x="896.1" y="755.0" width="38.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="899.1" y="766.0">__p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 2.89%)</title><rect x="900.3" y="739.0" width="34.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="903.3" y="750.0">en..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 2.89%)</title><rect x="900.3" y="723.0" width="34.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="903.3" y="734.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 2.89%)</title><rect x="900.3" y="707.0" width="34.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="903.3" y="718.0">__..</text>
</g>
<g>
<title>do_futex (8 samples, 2.89%)</title><rect x="900.3" y="691.0" width="34.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="903.3" y="702.0">do..</text>
</g>
<g>
<title>futex_wait (8 samples, 2.89%)</title><rect x="900.3" y="675.0" width="34.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="903.3" y="686.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (8 samples, 2.89%)</title><rect x="900.3" y="659.0" width="34.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="903.3" y="670.0">fu..</text>
</g>
<g>
<title>schedule (8 samples, 2.89%)</title><rect x="900.3" y="643.0" width="34.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="903.3" y="654.0">sc..</text>
</g>
<g>
<title>__schedule (8 samples, 2.89%)</title><rect x="900.3" y="627.0" width="34.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="903.3" y="638.0">__..</text>
</g>
<g>
<title>finish_task_switch (8 samples, 2.89%)</title><rect x="900.3" y="611.0" width="34.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="903.3" y="622.0">fi..</text>
</g>
<g>
<title>_pthread_cleanup_pop (1 samples, 0.36%)</title><rect x="934.4" y="755.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="937.4" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (59 samples, 21.30%)</title><rect x="938.7" y="899.0" width="251.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.7" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.36%)</title><rect x="938.7" y="883.0" width="4.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.7" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.36%)</title><rect x="938.7" y="867.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.36%)</title><rect x="938.7" y="851.0" width="4.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="941.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (20 samples, 7.22%)</title><rect x="942.9" y="883.0" width="85.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="945.9" y="894.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (20 samples, 7.22%)</title><rect x="942.9" y="867.0" width="85.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="945.9" y="878.0">one/nio/ne..</text>
</g>
<g>
<title>epoll_wait (19 samples, 6.86%)</title><rect x="947.2" y="851.0" width="80.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="950.2" y="862.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 6.50%)</title><rect x="951.4" y="835.0" width="76.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="954.4" y="846.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 6.50%)</title><rect x="951.4" y="819.0" width="76.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="954.4" y="830.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 6.14%)</title><rect x="955.7" y="803.0" width="72.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="958.7" y="814.0">__x64_sy..</text>
</g>
<g>
<title>do_epoll_wait (17 samples, 6.14%)</title><rect x="955.7" y="787.0" width="72.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="958.7" y="798.0">do_epoll..</text>
</g>
<g>
<title>ep_poll (17 samples, 6.14%)</title><rect x="955.7" y="771.0" width="72.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="958.7" y="782.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.72%)</title><rect x="955.7" y="755.0" width="8.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="958.7" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.72%)</title><rect x="955.7" y="739.0" width="8.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="958.7" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (2 samples, 0.72%)</title><rect x="955.7" y="723.0" width="8.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="958.7" y="734.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.36%)</title><rect x="955.7" y="707.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="958.7" y="718.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.36%)</title><rect x="960.0" y="707.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.0" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 5.42%)</title><rect x="964.2" y="755.0" width="63.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.2" y="766.0">schedul..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 5.42%)</title><rect x="964.2" y="739.0" width="63.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="967.2" y="750.0">schedul..</text>
</g>
<g>
<title>schedule (15 samples, 5.42%)</title><rect x="964.2" y="723.0" width="63.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="967.2" y="734.0">schedule</text>
</g>
<g>
<title>__schedule (15 samples, 5.42%)</title><rect x="964.2" y="707.0" width="63.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="967.2" y="718.0">__sched..</text>
</g>
<g>
<title>finish_task_switch (15 samples, 5.42%)</title><rect x="964.2" y="691.0" width="63.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="967.2" y="702.0">finish_..</text>
</g>
<g>
<title>one/nio/net/Session.process (38 samples, 13.72%)</title><rect x="1028.1" y="883.0" width="161.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1031.1" y="894.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.36%)</title><rect x="1032.4" y="867.0" width="4.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.4" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.36%)</title><rect x="1032.4" y="851.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.4" y="862.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.36%)</title><rect x="1032.4" y="835.0" width="4.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1035.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (36 samples, 13.00%)</title><rect x="1036.6" y="867.0" width="153.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.6" y="878.0">one/nio/http/HttpSe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 7.58%)</title><rect x="1036.6" y="851.0" width="89.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1039.6" y="862.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (18 samples, 6.50%)</title><rect x="1036.6" y="835.0" width="76.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.6" y="846.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (18 samples, 6.50%)</title><rect x="1036.6" y="819.0" width="76.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1039.6" y="830.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (12 samples, 4.33%)</title><rect x="1036.6" y="803.0" width="51.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1039.6" y="814.0">Reque..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.entity (12 samples, 4.33%)</title><rect x="1036.6" y="787.0" width="51.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1039.6" y="798.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (12 samples, 4.33%)</title><rect x="1036.6" y="771.0" width="51.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1039.6" y="782.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 4.33%)</title><rect x="1036.6" y="755.0" width="51.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1039.6" y="766.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 4.33%)</title><rect x="1036.6" y="739.0" width="51.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1039.6" y="750.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.36%)</title><rect x="1036.6" y="723.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1039.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.36%)</title><rect x="1036.6" y="707.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1039.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.36%)</title><rect x="1036.6" y="691.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1039.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 3.97%)</title><rect x="1040.9" y="723.0" width="46.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.9" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 3.97%)</title><rect x="1040.9" y="707.0" width="46.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1043.9" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 3.97%)</title><rect x="1040.9" y="691.0" width="46.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1043.9" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 2.89%)</title><rect x="1053.7" y="675.0" width="34.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1056.7" y="686.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 2.89%)</title><rect x="1053.7" y="659.0" width="34.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1056.7" y="670.0">jd..</text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 2.53%)</title><rect x="1053.7" y="643.0" width="29.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1056.7" y="654.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 2.53%)</title><rect x="1053.7" y="627.0" width="29.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1056.7" y="638.0">en..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 2.53%)</title><rect x="1053.7" y="611.0" width="29.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1056.7" y="622.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 2.53%)</title><rect x="1053.7" y="595.0" width="29.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1056.7" y="606.0">__..</text>
</g>
<g>
<title>do_futex (7 samples, 2.53%)</title><rect x="1053.7" y="579.0" width="29.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1056.7" y="590.0">do..</text>
</g>
<g>
<title>futex_wake (7 samples, 2.53%)</title><rect x="1053.7" y="563.0" width="29.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1056.7" y="574.0">fu..</text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.36%)</title><rect x="1053.7" y="547.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1056.7" y="558.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 2.17%)</title><rect x="1057.9" y="547.0" width="25.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1060.9" y="558.0">w..</text>
</g>
<g>
<title>try_to_wake_up (6 samples, 2.17%)</title><rect x="1057.9" y="531.0" width="25.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1060.9" y="542.0">t..</text>
</g>
<g>
<title>__lock_text_start (6 samples, 2.17%)</title><rect x="1057.9" y="515.0" width="25.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1060.9" y="526.0">_..</text>
</g>
<g>
<title>pthread_cond_signal (1 samples, 0.36%)</title><rect x="1083.5" y="643.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1086.5" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 2.17%)</title><rect x="1087.8" y="803.0" width="25.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1090.8" y="814.0">o..</text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 2.17%)</title><rect x="1087.8" y="787.0" width="25.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1090.8" y="798.0">j..</text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 2.17%)</title><rect x="1087.8" y="771.0" width="25.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1090.8" y="782.0">j..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 1.08%)</title><rect x="1113.3" y="835.0" width="12.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1116.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 1.08%)</title><rect x="1113.3" y="819.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1116.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 1.08%)</title><rect x="1113.3" y="803.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1116.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 5.42%)</title><rect x="1126.1" y="851.0" width="63.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1129.1" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 5.05%)</title><rect x="1130.4" y="835.0" width="59.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.4" y="846.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 1.44%)</title><rect x="1134.6" y="819.0" width="17.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1137.6" y="830.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.36%)</title><rect x="1134.6" y="803.0" width="4.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1137.6" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 1.08%)</title><rect x="1138.9" y="803.0" width="12.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1141.9" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.72%)</title><rect x="1143.1" y="787.0" width="8.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1146.1" y="798.0"></text>
</g>
<g>
<title>__recv (9 samples, 3.25%)</title><rect x="1151.7" y="819.0" width="38.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1154.7" y="830.0">__r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 3.25%)</title><rect x="1151.7" y="803.0" width="38.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.7" y="814.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 3.25%)</title><rect x="1151.7" y="787.0" width="38.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1154.7" y="798.0">do_..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.36%)</title><rect x="1155.9" y="771.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1158.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 2.53%)</title><rect x="1160.2" y="771.0" width="29.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1163.2" y="782.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 2.53%)</title><rect x="1160.2" y="755.0" width="29.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1163.2" y="766.0">__..</text>
</g>
<g>
<title>sock_recvmsg (6 samples, 2.17%)</title><rect x="1164.4" y="739.0" width="25.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1167.4" y="750.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (6 samples, 2.17%)</title><rect x="1164.4" y="723.0" width="25.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1167.4" y="734.0">i..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.36%)</title><rect x="1168.7" y="707.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1171.7" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.44%)</title><rect x="1173.0" y="707.0" width="17.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1176.0" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.36%)</title><rect x="1177.2" y="691.0" width="4.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.2" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.36%)</title><rect x="1177.2" y="675.0" width="4.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.2" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.36%)</title><rect x="1177.2" y="659.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.2" y="670.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.36%)</title><rect x="1177.2" y="643.0" width="4.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1180.2" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.36%)</title><rect x="1181.5" y="691.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1184.5" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.36%)</title><rect x="1181.5" y="675.0" width="4.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.5" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.36%)</title><rect x="1181.5" y="659.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.5" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.36%)</title><rect x="1181.5" y="643.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1184.5" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.36%)</title><rect x="1181.5" y="627.0" width="4.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1184.5" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.36%)</title><rect x="1185.7" y="691.0" width="4.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
</g>
</svg>
