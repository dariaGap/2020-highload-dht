<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (433 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.92%)</title><rect x="10.0" y="899.0" width="10.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.92%)</title><rect x="10.0" y="883.0" width="10.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.46%)</title><rect x="15.5" y="867.0" width="5.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="18.5" y="878.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.23%)</title><rect x="15.5" y="851.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="18.5" y="862.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.23%)</title><rect x="18.2" y="851.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="21.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.23%)</title><rect x="18.2" y="835.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="21.2" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="18.2" y="819.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="21.2" y="830.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.23%)</title><rect x="20.9" y="899.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="23.9" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.23%)</title><rect x="20.9" y="883.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 4.39%)</title><rect x="23.6" y="899.0" width="51.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="26.6" y="910.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.23%)</title><rect x="23.6" y="883.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="26.6" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.23%)</title><rect x="23.6" y="867.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="23.6" y="851.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="26.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.23%)</title><rect x="23.6" y="835.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.6" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.23%)</title><rect x="23.6" y="819.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="26.6" y="830.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.23%)</title><rect x="23.6" y="803.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="26.6" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.23%)</title><rect x="23.6" y="787.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="26.6" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="23.6" y="771.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="26.6" y="782.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.23%)</title><rect x="23.6" y="755.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="26.6" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.23%)</title><rect x="23.6" y="739.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="26.6" y="750.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (18 samples, 4.16%)</title><rect x="26.4" y="883.0" width="49.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="29.4" y="894.0">pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 4.16%)</title><rect x="26.4" y="867.0" width="49.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.4" y="878.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 4.16%)</title><rect x="26.4" y="851.0" width="49.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="29.4" y="862.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 3.93%)</title><rect x="29.1" y="835.0" width="46.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="32.1" y="846.0">__x6..</text>
</g>
<g>
<title>do_futex (17 samples, 3.93%)</title><rect x="29.1" y="819.0" width="46.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.1" y="830.0">do_f..</text>
</g>
<g>
<title>futex_wait (17 samples, 3.93%)</title><rect x="29.1" y="803.0" width="46.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="32.1" y="814.0">fute..</text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 3.23%)</title><rect x="31.8" y="787.0" width="38.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.8" y="798.0">fut..</text>
</g>
<g>
<title>schedule (13 samples, 3.00%)</title><rect x="34.5" y="771.0" width="35.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="37.5" y="782.0">sch..</text>
</g>
<g>
<title>__schedule (13 samples, 3.00%)</title><rect x="34.5" y="755.0" width="35.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.5" y="766.0">__s..</text>
</g>
<g>
<title>finish_task_switch (12 samples, 2.77%)</title><rect x="37.3" y="739.0" width="32.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="40.3" y="750.0">fi..</text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.46%)</title><rect x="70.0" y="787.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="73.0" y="798.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.23%)</title><rect x="72.7" y="771.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="75.7" y="782.0"></text>
</g>
<g>
<title>[unknown_Java] (19 samples, 4.39%)</title><rect x="75.4" y="899.0" width="51.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="78.4" y="910.0">[unkn..</text>
</g>
<g>
<title>__pthread_cond_signal (19 samples, 4.39%)</title><rect x="75.4" y="883.0" width="51.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="78.4" y="894.0">__pth..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 4.39%)</title><rect x="75.4" y="867.0" width="51.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.4" y="878.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 4.39%)</title><rect x="75.4" y="851.0" width="51.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="78.4" y="862.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.46%)</title><rect x="75.4" y="835.0" width="5.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="78.4" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.46%)</title><rect x="75.4" y="819.0" width="5.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="78.4" y="830.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.46%)</title><rect x="75.4" y="803.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.4" y="814.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.46%)</title><rect x="75.4" y="787.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.4" y="798.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.46%)</title><rect x="75.4" y="771.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.4" y="782.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.46%)</title><rect x="75.4" y="755.0" width="5.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="78.4" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (16 samples, 3.70%)</title><rect x="80.9" y="835.0" width="43.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="83.9" y="846.0">exit..</text>
</g>
<g>
<title>schedule (16 samples, 3.70%)</title><rect x="80.9" y="819.0" width="43.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="83.9" y="830.0">sche..</text>
</g>
<g>
<title>__schedule (16 samples, 3.70%)</title><rect x="80.9" y="803.0" width="43.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="83.9" y="814.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (15 samples, 3.46%)</title><rect x="83.6" y="787.0" width="40.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="86.6" y="798.0">fin..</text>
</g>
<g>
<title>schedule (1 samples, 0.23%)</title><rect x="124.5" y="835.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="127.5" y="846.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.23%)</title><rect x="127.2" y="899.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="130.2" y="910.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.23%)</title><rect x="127.2" y="883.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="130.2" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (298 samples, 68.82%)</title><rect x="129.9" y="899.0" width="812.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.9" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (298 samples, 68.82%)</title><rect x="129.9" y="883.0" width="812.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (298 samples, 68.82%)</title><rect x="129.9" y="867.0" width="812.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="132.9" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (290 samples, 66.97%)</title><rect x="129.9" y="851.0" width="790.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.9" y="862.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (289 samples, 66.74%)</title><rect x="129.9" y="835.0" width="787.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="132.9" y="846.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$65/302282871.run (288 samples, 66.51%)</title><rect x="132.6" y="819.0" width="784.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.6" y="830.0">ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$65/302282871.run</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$entity$1 (288 samples, 66.51%)</title><rect x="132.6" y="803.0" width="784.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.6" y="814.0">ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$entity$1</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.getSync (288 samples, 66.51%)</title><rect x="132.6" y="787.0" width="784.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.6" y="798.0">ru/mail/polis/service/dariagap/AsyncServiceImpl.getSync</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.46%)</title><rect x="132.6" y="771.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="135.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.46%)</title><rect x="132.6" y="755.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.46%)</title><rect x="132.6" y="739.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (106 samples, 24.48%)</title><rect x="138.1" y="771.0" width="288.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="141.1" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (105 samples, 24.25%)</title><rect x="138.1" y="755.0" width="286.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.1" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 24.25%)</title><rect x="138.1" y="739.0" width="286.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="141.1" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (105 samples, 24.25%)</title><rect x="138.1" y="723.0" width="286.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.1" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.23%)</title><rect x="140.8" y="707.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="143.8" y="718.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.23%)</title><rect x="140.8" y="691.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="143.8" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (103 samples, 23.79%)</title><rect x="143.5" y="707.0" width="280.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.5" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (102 samples, 23.56%)</title><rect x="146.3" y="691.0" width="277.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.3" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>send (101 samples, 23.33%)</title><rect x="149.0" y="675.0" width="275.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="152.0" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 23.09%)</title><rect x="151.7" y="659.0" width="272.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="154.7" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 23.09%)</title><rect x="151.7" y="643.0" width="272.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="154.7" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (59 samples, 13.63%)</title><rect x="154.4" y="627.0" width="160.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.4" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (59 samples, 13.63%)</title><rect x="154.4" y="611.0" width="160.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="157.4" y="622.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.23%)</title><rect x="159.9" y="595.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="162.9" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.23%)</title><rect x="162.6" y="595.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="165.6" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (53 samples, 12.24%)</title><rect x="165.3" y="595.0" width="144.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="168.3" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (52 samples, 12.01%)</title><rect x="165.3" y="579.0" width="141.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="168.3" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (51 samples, 11.78%)</title><rect x="168.1" y="563.0" width="138.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="171.1" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.23%)</title><rect x="170.8" y="547.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="173.8" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (49 samples, 11.32%)</title><rect x="173.5" y="547.0" width="133.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.5" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.46%)</title><rect x="173.5" y="531.0" width="5.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.5" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.46%)</title><rect x="173.5" y="515.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="176.5" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.92%)</title><rect x="179.0" y="531.0" width="10.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.0" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.92%)</title><rect x="179.0" y="515.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="182.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (2 samples, 0.46%)</title><rect x="179.0" y="499.0" width="5.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="182.0" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.46%)</title><rect x="179.0" y="483.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.0" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.23%)</title><rect x="181.7" y="467.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="184.7" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.23%)</title><rect x="184.4" y="499.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="187.4" y="510.0"></text>
</g>
<g>
<title>memset (1 samples, 0.23%)</title><rect x="187.1" y="499.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="190.1" y="510.0"></text>
</g>
<g>
<title>tcp_push (43 samples, 9.93%)</title><rect x="189.9" y="531.0" width="117.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.9" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (43 samples, 9.93%)</title><rect x="189.9" y="515.0" width="117.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="192.9" y="526.0">__tcp_push_pen..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.46%)</title><rect x="192.6" y="499.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="195.6" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (40 samples, 9.24%)</title><rect x="198.0" y="499.0" width="109.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.0" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (37 samples, 8.55%)</title><rect x="200.8" y="483.0" width="100.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.8" y="494.0">__tcp_transm..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.46%)</title><rect x="203.5" y="467.0" width="5.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="206.5" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (34 samples, 7.85%)</title><rect x="208.9" y="467.0" width="92.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="211.9" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (33 samples, 7.62%)</title><rect x="208.9" y="451.0" width="90.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="211.9" y="462.0">__ip_queue..</text>
</g>
<g>
<title>ip_local_out (32 samples, 7.39%)</title><rect x="211.7" y="435.0" width="87.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="214.7" y="446.0">ip_local_out</text>
</g>
<g>
<title>ip_output (32 samples, 7.39%)</title><rect x="211.7" y="419.0" width="87.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="214.7" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (32 samples, 7.39%)</title><rect x="211.7" y="403.0" width="87.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="214.7" y="414.0">ip_finish_..</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.23%)</title><rect x="211.7" y="387.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="214.7" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (31 samples, 7.16%)</title><rect x="214.4" y="387.0" width="84.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.4" y="398.0">__ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (31 samples, 7.16%)</title><rect x="214.4" y="371.0" width="84.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="217.4" y="382.0">ip_finish_..</text>
</g>
<g>
<title>__local_bh_enable_ip (29 samples, 6.70%)</title><rect x="217.1" y="355.0" width="79.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.1" y="366.0">__local_b..</text>
</g>
<g>
<title>do_softirq.part.0 (29 samples, 6.70%)</title><rect x="217.1" y="339.0" width="79.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="220.1" y="350.0">do_softir..</text>
</g>
<g>
<title>do_softirq_own_stack (28 samples, 6.47%)</title><rect x="219.8" y="323.0" width="76.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="222.8" y="334.0">do_softi..</text>
</g>
<g>
<title>__softirqentry_text_start (28 samples, 6.47%)</title><rect x="219.8" y="307.0" width="76.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="222.8" y="318.0">__softir..</text>
</g>
<g>
<title>net_rx_action (25 samples, 5.77%)</title><rect x="228.0" y="291.0" width="68.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="231.0" y="302.0">net_rx_..</text>
</g>
<g>
<title>process_backlog (25 samples, 5.77%)</title><rect x="228.0" y="275.0" width="68.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="231.0" y="286.0">process..</text>
</g>
<g>
<title>__netif_receive_skb (24 samples, 5.54%)</title><rect x="230.7" y="259.0" width="65.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.7" y="270.0">__netif..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (24 samples, 5.54%)</title><rect x="230.7" y="243.0" width="65.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="233.7" y="254.0">__netif..</text>
</g>
<g>
<title>ip_rcv (24 samples, 5.54%)</title><rect x="230.7" y="227.0" width="65.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="233.7" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.0 (1 samples, 0.23%)</title><rect x="230.7" y="211.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="233.7" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 5.31%)</title><rect x="233.5" y="211.0" width="62.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="236.5" y="222.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 5.31%)</title><rect x="233.5" y="195.0" width="62.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="236.5" y="206.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 4.85%)</title><rect x="236.2" y="179.0" width="57.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.2" y="190.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 4.85%)</title><rect x="236.2" y="163.0" width="57.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="239.2" y="174.0">ip_pro..</text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 4.85%)</title><rect x="236.2" y="147.0" width="57.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="239.2" y="158.0">tcp_v4..</text>
</g>
<g>
<title>tcp_v4_do_rcv (21 samples, 4.85%)</title><rect x="236.2" y="131.0" width="57.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="239.2" y="142.0">tcp_v4..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.23%)</title><rect x="238.9" y="115.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.9" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (19 samples, 4.39%)</title><rect x="241.6" y="115.0" width="51.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="244.6" y="126.0">tcp_r..</text>
</g>
<g>
<title>tcp_ack (2 samples, 0.46%)</title><rect x="241.6" y="99.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="244.6" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.46%)</title><rect x="241.6" y="83.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="244.6" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.23%)</title><rect x="244.4" y="67.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="247.4" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.23%)</title><rect x="244.4" y="51.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="247.4" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.23%)</title><rect x="244.4" y="35.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.4" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (16 samples, 3.70%)</title><rect x="247.1" y="99.0" width="43.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="250.1" y="110.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (16 samples, 3.70%)</title><rect x="247.1" y="83.0" width="43.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.1" y="94.0">sock..</text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.23%)</title><rect x="247.1" y="67.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="250.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_sync_key (15 samples, 3.46%)</title><rect x="249.8" y="67.0" width="40.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.8" y="78.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (15 samples, 3.46%)</title><rect x="249.8" y="51.0" width="40.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.8" y="62.0">__w..</text>
</g>
<g>
<title>__lock_text_start (15 samples, 3.46%)</title><rect x="249.8" y="35.0" width="40.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="252.8" y="46.0">__l..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.23%)</title><rect x="290.7" y="99.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="293.7" y="110.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.23%)</title><rect x="290.7" y="83.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="293.7" y="94.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.23%)</title><rect x="293.4" y="179.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="296.4" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.23%)</title><rect x="296.1" y="355.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.1" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.23%)</title><rect x="296.1" y="339.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="299.1" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.23%)</title><rect x="296.1" y="323.0" width="2.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="299.1" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.23%)</title><rect x="296.1" y="307.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="299.1" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.23%)</title><rect x="296.1" y="291.0" width="2.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="299.1" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.23%)</title><rect x="296.1" y="275.0" width="2.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="299.1" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.23%)</title><rect x="296.1" y="259.0" width="2.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="299.1" y="270.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.23%)</title><rect x="298.9" y="451.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="301.9" y="462.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.23%)</title><rect x="301.6" y="483.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="304.6" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.23%)</title><rect x="304.3" y="483.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.3" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.23%)</title><rect x="307.0" y="579.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="310.0" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.46%)</title><rect x="309.8" y="595.0" width="5.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="312.8" y="606.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.46%)</title><rect x="309.8" y="579.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.8" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.46%)</title><rect x="309.8" y="563.0" width="5.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="312.8" y="574.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.46%)</title><rect x="309.8" y="547.0" width="5.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="312.8" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (40 samples, 9.24%)</title><rect x="315.2" y="627.0" width="109.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="318.2" y="638.0">exit_to_userm..</text>
</g>
<g>
<title>schedule (40 samples, 9.24%)</title><rect x="315.2" y="611.0" width="109.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="318.2" y="622.0">schedule</text>
</g>
<g>
<title>__schedule (40 samples, 9.24%)</title><rect x="315.2" y="595.0" width="109.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="318.2" y="606.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (40 samples, 9.24%)</title><rect x="315.2" y="579.0" width="109.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="318.2" y="590.0">finish_task_s..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="424.2" y="755.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.23%)</title><rect x="424.2" y="739.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.23%)</title><rect x="424.2" y="723.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="427.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (180 samples, 41.57%)</title><rect x="427.0" y="771.0" width="490.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.0" y="782.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (3 samples, 0.69%)</title><rect x="427.0" y="755.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.0" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.69%)</title><rect x="427.0" y="739.0" width="8.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.69%)</title><rect x="427.0" y="723.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.0" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.69%)</title><rect x="427.0" y="707.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.0" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.69%)</title><rect x="427.0" y="691.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.69%)</title><rect x="427.0" y="675.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.0" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.69%)</title><rect x="427.0" y="659.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.69%)</title><rect x="427.0" y="643.0" width="8.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="430.0" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.69%)</title><rect x="427.0" y="627.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.0" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (2 samples, 0.46%)</title><rect x="427.0" y="611.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.0" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (1 samples, 0.23%)</title><rect x="432.4" y="611.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.hasNext (1 samples, 0.23%)</title><rect x="435.1" y="755.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.1" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.23%)</title><rect x="435.1" y="739.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.23%)</title><rect x="435.1" y="723.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.1" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_isValid0 (1 samples, 0.23%)</title><rect x="435.1" y="707.0" width="2.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="438.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (23 samples, 5.31%)</title><rect x="437.9" y="755.0" width="62.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.9" y="766.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (23 samples, 5.31%)</title><rect x="437.9" y="739.0" width="62.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="440.9" y="750.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (17 samples, 3.93%)</title><rect x="437.9" y="723.0" width="46.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.9" y="734.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (17 samples, 3.93%)</title><rect x="437.9" y="707.0" width="46.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.9" y="718.0">org/..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="437.9" y="691.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="440.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (16 samples, 3.70%)</title><rect x="440.6" y="691.0" width="43.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="443.6" y="702.0">rock..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="440.6" y="675.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="443.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (13 samples, 3.00%)</title><rect x="443.3" y="675.0" width="35.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="446.3" y="686.0">roc..</text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (13 samples, 3.00%)</title><rect x="443.3" y="659.0" width="35.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="446.3" y="670.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.23%)</title><rect x="448.8" y="643.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="451.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (10 samples, 2.31%)</title><rect x="451.5" y="643.0" width="27.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="454.5" y="654.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="459.7" y="627.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="462.7" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="462.4" y="627.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="465.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (3 samples, 0.69%)</title><rect x="465.1" y="627.0" width="8.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="468.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Next() (1 samples, 0.23%)</title><rect x="467.8" y="611.0" width="2.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="470.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.23%)</title><rect x="467.8" y="595.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="470.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() [clone .plt] (1 samples, 0.23%)</title><rect x="470.6" y="611.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="473.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (2 samples, 0.46%)</title><rect x="473.3" y="627.0" width="5.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="476.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (2 samples, 0.46%)</title><rect x="473.3" y="611.0" width="5.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="476.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (2 samples, 0.46%)</title><rect x="478.7" y="675.0" width="5.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="481.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="481.5" y="659.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="484.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (4 samples, 0.92%)</title><rect x="484.2" y="723.0" width="10.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="487.2" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (4 samples, 0.92%)</title><rect x="484.2" y="707.0" width="10.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="487.2" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (4 samples, 0.92%)</title><rect x="484.2" y="691.0" width="10.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="487.2" y="702.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.23%)</title><rect x="484.2" y="675.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="487.2" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.46%)</title><rect x="486.9" y="675.0" width="5.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="489.9" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.23%)</title><rect x="486.9" y="659.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="489.9" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.23%)</title><rect x="489.6" y="659.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="492.6" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="492.4" y="675.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="495.4" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.23%)</title><rect x="492.4" y="659.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="495.4" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (1 samples, 0.23%)</title><rect x="495.1" y="723.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="498.1" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.23%)</title><rect x="495.1" y="707.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (1 samples, 0.23%)</title><rect x="495.1" y="691.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="498.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (1 samples, 0.23%)</title><rect x="497.8" y="723.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="500.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (153 samples, 35.33%)</title><rect x="500.5" y="755.0" width="417.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="503.5" y="766.0">ru/mail/polis/dao/dariagap/RocksDBStorage.iterator</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (89 samples, 20.55%)</title><rect x="500.5" y="739.0" width="242.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.5" y="750.0">org/rocksdb/AbstractRocksIterato..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (89 samples, 20.55%)</title><rect x="500.5" y="723.0" width="242.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.5" y="734.0">org/rocksdb/RocksIterator.seek0</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="500.5" y="707.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="503.5" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (87 samples, 20.09%)</title><rect x="503.3" y="707.0" width="237.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="506.3" y="718.0">Java_org_rocksdb_RocksIterator_..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.23%)</title><rect x="503.3" y="691.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="506.3" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.23%)</title><rect x="506.0" y="691.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="509.0" y="702.0"></text>
</g>
<g>
<title>cfree (1 samples, 0.23%)</title><rect x="508.7" y="691.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="511.7" y="702.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.23%)</title><rect x="511.4" y="691.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="514.4" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (3 samples, 0.69%)</title><rect x="514.2" y="691.0" width="8.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="517.2" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.23%)</title><rect x="519.6" y="675.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="522.6" y="686.0"></text>
</g>
<g>
<title>jni_ReleaseByteArrayElements (1 samples, 0.23%)</title><rect x="522.3" y="691.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="525.3" y="702.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.23%)</title><rect x="525.1" y="691.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="528.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (77 samples, 17.78%)</title><rect x="527.8" y="691.0" width="209.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="530.8" y="702.0">rocksdb::DBIter::Seek(rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="533.2" y="675.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="536.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (2 samples, 0.46%)</title><rect x="536.0" y="675.0" width="5.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="539.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (2 samples, 0.46%)</title><rect x="541.4" y="675.0" width="5.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="544.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (2 samples, 0.46%)</title><rect x="541.4" y="659.0" width="5.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="544.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::SetSavedKeyToSeekTarget(rocksdb::Slice const&amp;) (3 samples, 0.69%)</title><rect x="546.9" y="675.0" width="8.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="549.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.23%)</title><rect x="555.0" y="675.0" width="2.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="558.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (65 samples, 15.01%)</title><rect x="557.8" y="675.0" width="177.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="560.8" y="686.0">rocksdb::MergingIterato..</text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (1 samples, 0.23%)</title><rect x="557.8" y="659.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="560.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (1 samples, 0.23%)</title><rect x="560.5" y="659.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="563.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (41 samples, 9.47%)</title><rect x="563.2" y="659.0" width="111.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="566.2" y="670.0">rocksdb::Bloc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (9 samples, 2.08%)</title><rect x="568.7" y="643.0" width="24.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="571.7" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (8 samples, 1.85%)</title><rect x="568.7" y="627.0" width="21.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="571.7" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::BlockBasedTable::Rep const*, rocksdb::Block*, rocksdb::BlockType, rocksdb::DataBlockIter*, bool) (2 samples, 0.46%)</title><rect x="568.7" y="611.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::Block::NewDataIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::DataBlockIter*, rocksdb::Statistics*, bool) (2 samples, 0.46%)</title><rect x="568.7" y="595.0" width="5.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="571.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (6 samples, 1.39%)</title><rect x="574.1" y="611.0" width="16.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="577.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (6 samples, 1.39%)</title><rect x="574.1" y="595.0" width="16.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="577.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockFetcher::ReadBlockContents() (2 samples, 0.46%)</title><rect x="576.8" y="579.0" width="5.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="579.8" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (1 samples, 0.23%)</title><rect x="576.8" y="563.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="579.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, bool) const (1 samples, 0.23%)</title><rect x="579.6" y="563.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="582.6" y="574.0"></text>
</g>
<g>
<title>__libc_pread (1 samples, 0.23%)</title><rect x="579.6" y="547.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="582.6" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.23%)</title><rect x="579.6" y="531.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="582.6" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="579.6" y="515.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.6" y="526.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.23%)</title><rect x="579.6" y="499.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.6" y="510.0"></text>
</g>
<g>
<title>ksys_pread64 (1 samples, 0.23%)</title><rect x="579.6" y="483.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.6" y="494.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.23%)</title><rect x="579.6" y="467.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="582.6" y="478.0"></text>
</g>
<g>
<title>__vfs_read (1 samples, 0.23%)</title><rect x="579.6" y="451.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="582.6" y="462.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.23%)</title><rect x="579.6" y="435.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="582.6" y="446.0"></text>
</g>
<g>
<title>ext4_file_read_iter (1 samples, 0.23%)</title><rect x="579.6" y="419.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="582.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.69%)</title><rect x="582.3" y="579.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="585.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (3 samples, 0.69%)</title><rect x="582.3" y="563.0" width="8.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="585.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.46%)</title><rect x="585.0" y="547.0" width="5.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="588.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.46%)</title><rect x="585.0" y="531.0" width="5.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="588.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.46%)</title><rect x="585.0" y="515.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="588.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (1 samples, 0.23%)</title><rect x="590.5" y="627.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (19 samples, 4.39%)</title><rect x="593.2" y="643.0" width="51.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="596.2" y="654.0">rocks..</text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (13 samples, 3.00%)</title><rect x="606.8" y="627.0" width="35.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="609.8" y="638.0">roc..</text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.23%)</title><rect x="615.0" y="611.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="618.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (4 samples, 0.92%)</title><rect x="617.7" y="611.0" width="10.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="620.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.15%)</title><rect x="628.6" y="611.0" width="13.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="631.6" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="636.8" y="595.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="639.8" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="639.5" y="595.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="642.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="642.2" y="627.0" width="2.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="645.2" y="638.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="642.2" y="611.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="645.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (10 samples, 2.31%)</title><rect x="645.0" y="643.0" width="27.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="648.0" y="654.0">r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="664.0" y="627.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="667.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.23%)</title><rect x="666.8" y="627.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="669.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockHandle::DecodeFrom(rocksdb::Slice*) (1 samples, 0.23%)</title><rect x="666.8" y="611.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="669.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="669.5" y="627.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="672.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.23%)</title><rect x="672.2" y="643.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="675.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.46%)</title><rect x="674.9" y="659.0" width="5.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="677.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (20 samples, 4.62%)</title><rect x="680.4" y="659.0" width="54.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="683.4" y="670.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (18 samples, 4.16%)</title><rect x="680.4" y="643.0" width="49.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="683.4" y="654.0">/tmp/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (17 samples, 3.93%)</title><rect x="680.4" y="627.0" width="46.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="683.4" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.46%)</title><rect x="721.3" y="611.0" width="5.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="724.3" y="622.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.23%)</title><rect x="721.3" y="595.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="724.3" y="606.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.23%)</title><rect x="724.0" y="595.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="727.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.23%)</title><rect x="726.7" y="627.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="729.7" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.23%)</title><rect x="729.4" y="643.0" width="2.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="732.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) [clone .plt] (1 samples, 0.23%)</title><rect x="732.2" y="643.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="735.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.23%)</title><rect x="734.9" y="675.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="737.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::value() const (1 samples, 0.23%)</title><rect x="734.9" y="659.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="737.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::SetSavedKeyToSeekTarget(rocksdb::Slice const&amp;) (1 samples, 0.23%)</title><rect x="737.6" y="691.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="740.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.23%)</title><rect x="740.3" y="707.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="743.3" y="718.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.23%)</title><rect x="740.3" y="691.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="743.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (63 samples, 14.55%)</title><rect x="743.1" y="739.0" width="171.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="746.1" y="750.0">org/rocksdb/RocksDB.ne..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (54 samples, 12.47%)</title><rect x="743.1" y="723.0" width="147.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="746.1" y="734.0">org/rocksdb/RocksDB..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (10 samples, 2.31%)</title><rect x="743.1" y="707.0" width="27.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="746.1" y="718.0">/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (37 samples, 8.55%)</title><rect x="770.3" y="707.0" width="100.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="773.3" y="718.0">Java_org_roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.23%)</title><rect x="770.3" y="691.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="773.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (36 samples, 8.31%)</title><rect x="773.0" y="691.0" width="98.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="776.0" y="702.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) [clone .plt] (1 samples, 0.23%)</title><rect x="773.0" y="675.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="776.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (35 samples, 8.08%)</title><rect x="775.8" y="675.0" width="95.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="778.8" y="686.0">rocksdb::DB..</text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.23%)</title><rect x="781.2" y="659.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="784.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.46%)</title><rect x="783.9" y="659.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="786.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (1 samples, 0.23%)</title><rect x="789.4" y="659.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="792.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (1 samples, 0.23%)</title><rect x="789.4" y="643.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="792.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.23%)</title><rect x="789.4" y="627.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="792.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) [clone .plt] (1 samples, 0.23%)</title><rect x="792.1" y="659.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="795.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (18 samples, 4.16%)</title><rect x="794.8" y="659.0" width="49.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="797.8" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (16 samples, 3.70%)</title><rect x="797.6" y="643.0" width="43.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="800.6" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (16 samples, 3.70%)</title><rect x="797.6" y="627.0" width="43.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="800.6" y="638.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (1 samples, 0.23%)</title><rect x="800.3" y="611.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="803.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.23%)</title><rect x="803.0" y="611.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="806.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.23%)</title><rect x="803.0" y="595.0" width="2.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="806.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (2 samples, 0.46%)</title><rect x="805.8" y="611.0" width="5.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="808.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (11 samples, 2.54%)</title><rect x="811.2" y="611.0" width="30.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.2" y="622.0">ro..</text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.23%)</title><rect x="816.7" y="595.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="819.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIndexIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) const (1 samples, 0.23%)</title><rect x="819.4" y="595.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="822.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (5 samples, 1.15%)</title><rect x="822.1" y="595.0" width="13.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="825.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (2 samples, 0.46%)</title><rect x="824.8" y="579.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="827.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.23%)</title><rect x="827.6" y="563.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.23%)</title><rect x="830.3" y="579.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="833.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (1 samples, 0.23%)</title><rect x="833.0" y="579.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="836.0" y="590.0"></text>
</g>
<g>
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (2 samples, 0.46%)</title><rect x="835.7" y="595.0" width="5.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="838.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (1 samples, 0.23%)</title><rect x="841.2" y="643.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="844.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*) (1 samples, 0.23%)</title><rect x="843.9" y="659.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="846.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) [clone .plt] (1 samples, 0.23%)</title><rect x="846.6" y="659.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="849.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::AddRangeTombstoneIterators(rocksdb::ReadOptions const&amp;, rocksdb::Arena*, rocksdb::RangeDelAggregator*) [clone .plt] (1 samples, 0.23%)</title><rect x="849.4" y="659.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (6 samples, 1.39%)</title><rect x="852.1" y="659.0" width="16.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="855.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.46%)</title><rect x="860.3" y="643.0" width="5.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="863.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (2 samples, 0.46%)</title><rect x="860.3" y="627.0" width="5.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="863.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (1 samples, 0.23%)</title><rect x="865.7" y="643.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (1 samples, 0.23%)</title><rect x="868.4" y="659.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="871.4" y="670.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.92%)</title><rect x="871.2" y="707.0" width="10.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="874.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.23%)</title><rect x="882.1" y="707.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="885.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.23%)</title><rect x="884.8" y="707.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="887.8" y="718.0"></text>
</g>
<g>
<title>rocksdb_iterator_helper(rocksdb::DB*, rocksdb::ReadOptions, rocksdb::ColumnFamilyHandle*) (1 samples, 0.23%)</title><rect x="887.5" y="707.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="890.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (9 samples, 2.08%)</title><rect x="890.2" y="723.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.2" y="734.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (9 samples, 2.08%)</title><rect x="890.2" y="707.0" width="24.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="893.2" y="718.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (9 samples, 2.08%)</title><rect x="890.2" y="691.0" width="24.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.2" y="702.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (9 samples, 2.08%)</title><rect x="890.2" y="675.0" width="24.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.2" y="686.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (9 samples, 2.08%)</title><rect x="890.2" y="659.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.2" y="670.0">o..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (9 samples, 2.08%)</title><rect x="890.2" y="643.0" width="24.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="893.2" y="654.0">j..</text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.23%)</title><rect x="890.2" y="627.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="893.2" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (8 samples, 1.85%)</title><rect x="893.0" y="627.0" width="21.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="896.0" y="638.0">O..</text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.23%)</title><rect x="895.7" y="611.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="898.7" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (6 samples, 1.39%)</title><rect x="898.4" y="611.0" width="16.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="901.4" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.92%)</title><rect x="903.9" y="595.0" width="10.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="906.9" y="606.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.23%)</title><rect x="906.6" y="579.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="909.6" y="590.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.46%)</title><rect x="909.3" y="579.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="912.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (1 samples, 0.23%)</title><rect x="914.8" y="739.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.23%)</title><rect x="914.8" y="723.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.23%)</title><rect x="914.8" y="707.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="917.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (1 samples, 0.23%)</title><rect x="917.5" y="835.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.5" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.23%)</title><rect x="917.5" y="819.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="920.5" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.23%)</title><rect x="917.5" y="803.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 1.85%)</title><rect x="920.2" y="851.0" width="21.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="923.2" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 1.15%)</title><rect x="928.4" y="835.0" width="13.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="931.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 1.15%)</title><rect x="928.4" y="819.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="931.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.15%)</title><rect x="928.4" y="803.0" width="13.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="931.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.15%)</title><rect x="928.4" y="787.0" width="13.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.15%)</title><rect x="928.4" y="771.0" width="13.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="931.4" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 1.15%)</title><rect x="928.4" y="755.0" width="13.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="931.4" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.15%)</title><rect x="928.4" y="739.0" width="13.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.4" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.15%)</title><rect x="928.4" y="723.0" width="13.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="931.4" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.15%)</title><rect x="928.4" y="707.0" width="13.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="931.4" y="718.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.15%)</title><rect x="928.4" y="691.0" width="13.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.4" y="702.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 1.15%)</title><rect x="928.4" y="675.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="931.4" y="686.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 1.15%)</title><rect x="928.4" y="659.0" width="13.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.4" y="670.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.15%)</title><rect x="928.4" y="643.0" width="13.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.4" y="654.0"></text>
</g>
<g>
<title>__schedule (5 samples, 1.15%)</title><rect x="928.4" y="627.0" width="13.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.4" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.15%)</title><rect x="928.4" y="611.0" width="13.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="931.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (16 samples, 3.70%)</title><rect x="942.0" y="899.0" width="43.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.0" y="910.0">java..</text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (14 samples, 3.23%)</title><rect x="942.0" y="883.0" width="38.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.0" y="894.0">jav..</text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (14 samples, 3.23%)</title><rect x="942.0" y="867.0" width="38.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.0" y="878.0">jav..</text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (14 samples, 3.23%)</title><rect x="942.0" y="851.0" width="38.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.0" y="862.0">org..</text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (14 samples, 3.23%)</title><rect x="942.0" y="835.0" width="38.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.0" y="846.0">org..</text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (14 samples, 3.23%)</title><rect x="942.0" y="819.0" width="38.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.0" y="830.0">org..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (14 samples, 3.23%)</title><rect x="942.0" y="803.0" width="38.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.0" y="814.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (14 samples, 3.23%)</title><rect x="942.0" y="787.0" width="38.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.0" y="798.0">org..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.92%)</title><rect x="942.0" y="771.0" width="10.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="945.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.92%)</title><rect x="942.0" y="755.0" width="10.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="945.0" y="766.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (10 samples, 2.31%)</title><rect x="952.9" y="771.0" width="27.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="955.9" y="782.0">r..</text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (10 samples, 2.31%)</title><rect x="952.9" y="755.0" width="27.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="955.9" y="766.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.23%)</title><rect x="952.9" y="739.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="955.9" y="750.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni13738503519124648784.so (1 samples, 0.23%)</title><rect x="952.9" y="723.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="955.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::~MergingIterator() (9 samples, 2.08%)</title><rect x="955.6" y="739.0" width="24.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="958.6" y="750.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::~BlockBasedTableIterator() (6 samples, 1.39%)</title><rect x="963.8" y="723.0" width="16.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="966.8" y="734.0"></text>
</g>
<g>
<title>cfree (2 samples, 0.46%)</title><rect x="974.7" y="707.0" width="5.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="977.7" y="718.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (2 samples, 0.46%)</title><rect x="980.2" y="883.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="983.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (2 samples, 0.46%)</title><rect x="980.2" y="867.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="983.2" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (2 samples, 0.46%)</title><rect x="980.2" y="851.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.addFinalRefCount (1 samples, 0.23%)</title><rect x="982.9" y="835.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="985.9" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (72 samples, 16.63%)</title><rect x="985.6" y="899.0" width="196.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="988.6" y="910.0">one/nio/server/SelectorThr..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (40 samples, 9.24%)</title><rect x="988.3" y="883.0" width="109.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="991.3" y="894.0">one/nio/net/N..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (40 samples, 9.24%)</title><rect x="988.3" y="867.0" width="109.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="991.3" y="878.0">one/nio/net/N..</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.46%)</title><rect x="988.3" y="851.0" width="5.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="991.3" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.23%)</title><rect x="991.1" y="835.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="994.1" y="846.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.23%)</title><rect x="991.1" y="819.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="994.1" y="830.0"></text>
</g>
<g>
<title>epoll_wait (38 samples, 8.78%)</title><rect x="993.8" y="851.0" width="103.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="996.8" y="862.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 8.78%)</title><rect x="993.8" y="835.0" width="103.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="996.8" y="846.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 8.78%)</title><rect x="993.8" y="819.0" width="103.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.8" y="830.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (38 samples, 8.78%)</title><rect x="993.8" y="803.0" width="103.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="996.8" y="814.0">__x64_sys_ep..</text>
</g>
<g>
<title>do_epoll_wait (38 samples, 8.78%)</title><rect x="993.8" y="787.0" width="103.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="996.8" y="798.0">do_epoll_wait</text>
</g>
<g>
<title>ep_poll (37 samples, 8.55%)</title><rect x="993.8" y="771.0" width="100.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="996.8" y="782.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.69%)</title><rect x="996.5" y="755.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="999.5" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (3 samples, 0.69%)</title><rect x="996.5" y="739.0" width="8.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="999.5" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (3 samples, 0.69%)</title><rect x="996.5" y="723.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="999.5" y="734.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.46%)</title><rect x="999.2" y="707.0" width="5.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1002.2" y="718.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.23%)</title><rect x="1002.0" y="691.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1005.0" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (33 samples, 7.62%)</title><rect x="1004.7" y="755.0" width="89.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1007.7" y="766.0">schedule_h..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (33 samples, 7.62%)</title><rect x="1004.7" y="739.0" width="89.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1007.7" y="750.0">schedule_h..</text>
</g>
<g>
<title>schedule (33 samples, 7.62%)</title><rect x="1004.7" y="723.0" width="89.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.7" y="734.0">schedule</text>
</g>
<g>
<title>__schedule (33 samples, 7.62%)</title><rect x="1004.7" y="707.0" width="89.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1007.7" y="718.0">__schedule</text>
</g>
<g>
<title>finish_task_switch (32 samples, 7.39%)</title><rect x="1007.4" y="691.0" width="87.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1010.4" y="702.0">finish_tas..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.23%)</title><rect x="1094.6" y="771.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1097.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (30 samples, 6.93%)</title><rect x="1097.3" y="883.0" width="81.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1100.3" y="894.0">one/nio/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.92%)</title><rect x="1100.1" y="867.0" width="10.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.1" y="878.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.23%)</title><rect x="1100.1" y="851.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1103.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.69%)</title><rect x="1102.8" y="851.0" width="8.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1105.8" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.23%)</title><rect x="1102.8" y="835.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1105.8" y="846.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.46%)</title><rect x="1105.5" y="835.0" width="5.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1108.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (25 samples, 5.77%)</title><rect x="1111.0" y="867.0" width="68.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.0" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (14 samples, 3.23%)</title><rect x="1111.0" y="851.0" width="38.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1114.0" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (6 samples, 1.39%)</title><rect x="1113.7" y="835.0" width="16.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1116.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 1.15%)</title><rect x="1116.4" y="819.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1119.4" y="830.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.46%)</title><rect x="1121.9" y="803.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1124.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.entity (2 samples, 0.46%)</title><rect x="1121.9" y="787.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1124.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (2 samples, 0.46%)</title><rect x="1121.9" y="771.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.46%)</title><rect x="1121.9" y="755.0" width="5.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1124.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.46%)</title><rect x="1121.9" y="739.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1124.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.46%)</title><rect x="1121.9" y="723.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.46%)</title><rect x="1121.9" y="707.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1124.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.46%)</title><rect x="1121.9" y="691.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.46%)</title><rect x="1121.9" y="675.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.46%)</title><rect x="1121.9" y="659.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1124.9" y="670.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.23%)</title><rect x="1121.9" y="643.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1124.9" y="654.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.23%)</title><rect x="1121.9" y="627.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.9" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.23%)</title><rect x="1124.6" y="643.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1127.6" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.23%)</title><rect x="1124.6" y="627.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1127.6" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.23%)</title><rect x="1124.6" y="611.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1127.6" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.23%)</title><rect x="1127.3" y="803.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1130.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.23%)</title><rect x="1127.3" y="787.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.23%)</title><rect x="1127.3" y="771.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1130.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.23%)</title><rect x="1127.3" y="755.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1130.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.69%)</title><rect x="1130.0" y="835.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.0" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.23%)</title><rect x="1132.8" y="819.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.8" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.23%)</title><rect x="1132.8" y="803.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.8" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.23%)</title><rect x="1132.8" y="787.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1135.8" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.23%)</title><rect x="1132.8" y="771.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1135.8" y="782.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.23%)</title><rect x="1132.8" y="755.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1135.8" y="766.0"></text>
</g>
<g>
<title>GenCollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.23%)</title><rect x="1132.8" y="739.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.23%)</title><rect x="1135.5" y="819.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1138.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.23%)</title><rect x="1135.5" y="803.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1138.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.23%)</title><rect x="1135.5" y="787.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1138.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.23%)</title><rect x="1135.5" y="771.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1138.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.23%)</title><rect x="1135.5" y="755.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1138.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.23%)</title><rect x="1138.2" y="835.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1141.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.23%)</title><rect x="1138.2" y="819.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1141.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.23%)</title><rect x="1138.2" y="803.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1141.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.69%)</title><rect x="1140.9" y="835.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1143.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.69%)</title><rect x="1140.9" y="819.0" width="8.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1143.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 2.54%)</title><rect x="1149.1" y="851.0" width="30.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1152.1" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 2.54%)</title><rect x="1149.1" y="835.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.1" y="846.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.23%)</title><rect x="1149.1" y="819.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1152.1" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.23%)</title><rect x="1149.1" y="803.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1152.1" y="814.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.23%)</title><rect x="1149.1" y="787.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1152.1" y="798.0"></text>
</g>
<g>
<title>__recv (10 samples, 2.31%)</title><rect x="1151.8" y="819.0" width="27.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1154.8" y="830.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 2.31%)</title><rect x="1151.8" y="803.0" width="27.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1154.8" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.31%)</title><rect x="1151.8" y="787.0" width="27.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1154.8" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (10 samples, 2.31%)</title><rect x="1151.8" y="771.0" width="27.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1154.8" y="782.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (10 samples, 2.31%)</title><rect x="1151.8" y="755.0" width="27.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1154.8" y="766.0">_..</text>
</g>
<g>
<title>sock_recvmsg (9 samples, 2.08%)</title><rect x="1151.8" y="739.0" width="24.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.8" y="750.0">s..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.23%)</title><rect x="1151.8" y="723.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1154.8" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (8 samples, 1.85%)</title><rect x="1154.6" y="723.0" width="21.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1157.6" y="734.0">i..</text>
</g>
<g>
<title>tcp_recvmsg (8 samples, 1.85%)</title><rect x="1154.6" y="707.0" width="21.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.6" y="718.0">t..</text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.23%)</title><rect x="1162.7" y="691.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1165.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.23%)</title><rect x="1162.7" y="675.0" width="2.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1165.7" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.23%)</title><rect x="1162.7" y="659.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1165.7" y="670.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.23%)</title><rect x="1162.7" y="643.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.7" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.46%)</title><rect x="1165.5" y="691.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1168.5" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.46%)</title><rect x="1165.5" y="675.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1168.5" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.23%)</title><rect x="1168.2" y="659.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.2" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.23%)</title><rect x="1168.2" y="643.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1171.2" y="654.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.23%)</title><rect x="1168.2" y="627.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1171.2" y="638.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.46%)</title><rect x="1170.9" y="691.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1173.9" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.23%)</title><rect x="1176.4" y="739.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1179.4" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.23%)</title><rect x="1176.4" y="723.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1179.4" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.23%)</title><rect x="1179.1" y="883.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.1" y="894.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.69%)</title><rect x="1181.8" y="899.0" width="8.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1184.8" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.69%)</title><rect x="1181.8" y="883.0" width="8.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1184.8" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.69%)</title><rect x="1181.8" y="867.0" width="8.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.8" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.69%)</title><rect x="1181.8" y="851.0" width="8.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.8" y="862.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.69%)</title><rect x="1181.8" y="835.0" width="8.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.8" y="846.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (3 samples, 0.69%)</title><rect x="1181.8" y="819.0" width="8.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.8" y="830.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (3 samples, 0.69%)</title><rect x="1181.8" y="803.0" width="8.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.8" y="814.0"></text>
</g>
<g>
<title>VM_GenCollectForAllocation::doit() (3 samples, 0.69%)</title><rect x="1181.8" y="787.0" width="8.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.8" y="798.0"></text>
</g>
<g>
<title>GenCollectedHeap::satisfy_failed_allocation(unsigned long, bool) (3 samples, 0.69%)</title><rect x="1181.8" y="771.0" width="8.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.8" y="782.0"></text>
</g>
<g>
<title>GenCollectedHeap::do_collection(bool, bool, unsigned long, bool, GenCollectedHeap::GenerationType) (3 samples, 0.69%)</title><rect x="1181.8" y="755.0" width="8.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>GenCollectedHeap::collect_generation(Generation*, bool, unsigned long, bool, bool, bool, bool) (3 samples, 0.69%)</title><rect x="1181.8" y="739.0" width="8.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.8" y="750.0"></text>
</g>
<g>
<title>DefNewGeneration::collect(bool, bool, unsigned long, bool) (3 samples, 0.69%)</title><rect x="1181.8" y="723.0" width="8.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>DefNewGeneration::FastEvacuateFollowersClosure::do_void() (2 samples, 0.46%)</title><rect x="1181.8" y="707.0" width="5.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>void ContiguousSpace::oop_since_save_marks_iterate&lt;FastScanClosure&gt;(FastScanClosure*) (2 samples, 0.46%)</title><rect x="1181.8" y="691.0" width="5.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;FastScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(FastScanClosure*, oopDesc*, Klass*) (2 samples, 0.46%)</title><rect x="1181.8" y="675.0" width="5.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>ContiguousSpace::allocate_aligned(unsigned long) (1 samples, 0.23%)</title><rect x="1184.5" y="659.0" width="2.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.5" y="670.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.23%)</title><rect x="1187.3" y="707.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.3" y="718.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive(OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.23%)</title><rect x="1187.3" y="691.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.3" y="702.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.23%)</title><rect x="1187.3" y="675.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.3" y="686.0"></text>
</g>
<g>
<title>DefNewGeneration::FastKeepAliveClosure::do_oop(unsigned int*) (1 samples, 0.23%)</title><rect x="1187.3" y="659.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.3" y="670.0"></text>
</g>
<g>
<title>DefNewGeneration::copy_to_survivor_space(oopDesc*) (1 samples, 0.23%)</title><rect x="1187.3" y="643.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.3" y="654.0"></text>
</g>
</g>
</svg>
