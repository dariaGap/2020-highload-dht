<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (496 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[Executor-0 tid=10478] (194 samples, 39.11%)</title><rect x="10.0" y="899.0" width="461.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="910.0">[Executor-0 tid=10478]</text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.81%)</title><rect x="10.0" y="883.0" width="9.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (2 samples, 0.40%)</title><rect x="10.0" y="867.0" width="4.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.40%)</title><rect x="10.0" y="851.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.40%)</title><rect x="10.0" y="835.0" width="4.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.40%)</title><rect x="10.0" y="819.0" width="4.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.40%)</title><rect x="14.8" y="867.0" width="4.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="17.8" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="17.1" y="851.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="20.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="17.1" y="835.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="20.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="17.1" y="819.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="20.1" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.20%)</title><rect x="19.5" y="883.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="22.5" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.20%)</title><rect x="19.5" y="867.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="22.5" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.20%)</title><rect x="19.5" y="851.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="22.5" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.20%)</title><rect x="19.5" y="835.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.5" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (186 samples, 37.50%)</title><rect x="21.9" y="883.0" width="442.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.9" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (186 samples, 37.50%)</title><rect x="21.9" y="867.0" width="442.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (186 samples, 37.50%)</title><rect x="21.9" y="851.0" width="442.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.9" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (170 samples, 34.27%)</title><rect x="21.9" y="835.0" width="404.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.9" y="846.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (170 samples, 34.27%)</title><rect x="21.9" y="819.0" width="404.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.9" y="830.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$68/246240756.run (170 samples, 34.27%)</title><rect x="21.9" y="803.0" width="404.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.9" y="814.0">ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$get$1 (170 samples, 34.27%)</title><rect x="21.9" y="787.0" width="404.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.9" y="798.0">ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.20%)</title><rect x="21.9" y="771.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.20%)</title><rect x="21.9" y="755.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="24.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.20%)</title><rect x="21.9" y="739.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.9" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.20%)</title><rect x="21.9" y="723.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="21.9" y="707.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="24.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="21.9" y="691.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="24.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="21.9" y="675.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="24.9" y="686.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.20%)</title><rect x="21.9" y="659.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="24.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (67 samples, 13.51%)</title><rect x="24.3" y="771.0" width="159.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="27.3" y="782.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.20%)</title><rect x="24.3" y="755.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="24.3" y="739.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="27.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.20%)</title><rect x="24.3" y="723.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (66 samples, 13.31%)</title><rect x="26.7" y="755.0" width="157.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="29.7" y="766.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.81%)</title><rect x="26.7" y="739.0" width="9.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.60%)</title><rect x="29.0" y="723.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.60%)</title><rect x="29.0" y="707.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="32.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.60%)</title><rect x="29.0" y="691.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.0" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.20%)</title><rect x="31.4" y="675.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="34.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="33.8" y="675.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="33.8" y="659.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="33.8" y="643.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.8" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 12.50%)</title><rect x="36.2" y="739.0" width="147.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.2" y="750.0">one/nio/net/Session..</text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 12.50%)</title><rect x="36.2" y="723.0" width="147.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="39.2" y="734.0">one/nio/net/Session..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="36.2" y="707.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="39.2" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="36.2" y="691.0" width="2.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="39.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (61 samples, 12.30%)</title><rect x="38.5" y="707.0" width="145.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="718.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (61 samples, 12.30%)</title><rect x="38.5" y="691.0" width="145.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.5" y="702.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.40%)</title><rect x="38.5" y="675.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="41.5" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.20%)</title><rect x="40.9" y="659.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.9" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.20%)</title><rect x="40.9" y="643.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="43.9" y="654.0"></text>
</g>
<g>
<title>send (59 samples, 11.90%)</title><rect x="43.3" y="675.0" width="140.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="46.3" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 11.69%)</title><rect x="45.7" y="659.0" width="138.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="48.7" y="670.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (58 samples, 11.69%)</title><rect x="45.7" y="643.0" width="138.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="48.7" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (55 samples, 11.09%)</title><rect x="45.7" y="627.0" width="130.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.7" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (54 samples, 10.89%)</title><rect x="45.7" y="611.0" width="128.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.7" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (49 samples, 9.88%)</title><rect x="48.1" y="595.0" width="116.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="51.1" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (48 samples, 9.68%)</title><rect x="50.4" y="579.0" width="114.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="53.4" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (48 samples, 9.68%)</title><rect x="50.4" y="563.0" width="114.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="53.4" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.40%)</title><rect x="50.4" y="547.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="53.4" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.20%)</title><rect x="55.2" y="547.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.40%)</title><rect x="57.6" y="547.0" width="4.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="60.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (43 samples, 8.67%)</title><rect x="62.3" y="547.0" width="102.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="65.3" y="558.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.20%)</title><rect x="62.3" y="531.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="65.3" y="542.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.20%)</title><rect x="64.7" y="531.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="67.7" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.20%)</title><rect x="64.7" y="515.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="67.7" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.81%)</title><rect x="67.1" y="531.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="70.1" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.60%)</title><rect x="69.5" y="515.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="72.5" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.20%)</title><rect x="69.5" y="499.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.5" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.20%)</title><rect x="69.5" y="483.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.5" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.20%)</title><rect x="69.5" y="467.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="72.5" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.40%)</title><rect x="71.9" y="499.0" width="4.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="74.9" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.20%)</title><rect x="74.2" y="483.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="77.2" y="494.0"></text>
</g>
<g>
<title>tcp_push (34 samples, 6.85%)</title><rect x="76.6" y="531.0" width="80.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.6" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (34 samples, 6.85%)</title><rect x="76.6" y="515.0" width="80.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="79.6" y="526.0">__tcp_pus..</text>
</g>
<g>
<title>tcp_write_xmit (34 samples, 6.85%)</title><rect x="76.6" y="499.0" width="80.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="79.6" y="510.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (34 samples, 6.85%)</title><rect x="76.6" y="483.0" width="80.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="79.6" y="494.0">__tcp_tra..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.20%)</title><rect x="79.0" y="467.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="82.0" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (32 samples, 6.45%)</title><rect x="81.4" y="467.0" width="76.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.4" y="478.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (31 samples, 6.25%)</title><rect x="81.4" y="451.0" width="73.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.4" y="462.0">__ip_que..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.20%)</title><rect x="81.4" y="435.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="84.4" y="446.0"></text>
</g>
<g>
<title>ip_local_out (29 samples, 5.85%)</title><rect x="83.7" y="435.0" width="69.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="86.7" y="446.0">ip_loca..</text>
</g>
<g>
<title>ip_output (29 samples, 5.85%)</title><rect x="83.7" y="419.0" width="69.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.7" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (29 samples, 5.85%)</title><rect x="83.7" y="403.0" width="69.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="86.7" y="414.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (29 samples, 5.85%)</title><rect x="83.7" y="387.0" width="69.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.7" y="398.0">__ip_fi..</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.20%)</title><rect x="83.7" y="371.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="86.7" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (28 samples, 5.65%)</title><rect x="86.1" y="371.0" width="66.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="89.1" y="382.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (25 samples, 5.04%)</title><rect x="88.5" y="355.0" width="59.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.5" y="366.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.0 (25 samples, 5.04%)</title><rect x="88.5" y="339.0" width="59.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.5" y="350.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (25 samples, 5.04%)</title><rect x="88.5" y="323.0" width="59.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.5" y="334.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (25 samples, 5.04%)</title><rect x="88.5" y="307.0" width="59.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="91.5" y="318.0">__soft..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.20%)</title><rect x="88.5" y="291.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="91.5" y="302.0"></text>
</g>
<g>
<title>net_rx_action (24 samples, 4.84%)</title><rect x="90.9" y="291.0" width="57.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="93.9" y="302.0">net_rx..</text>
</g>
<g>
<title>process_backlog (24 samples, 4.84%)</title><rect x="90.9" y="275.0" width="57.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.9" y="286.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (21 samples, 4.23%)</title><rect x="98.0" y="259.0" width="50.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="101.0" y="270.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (21 samples, 4.23%)</title><rect x="98.0" y="243.0" width="50.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.0" y="254.0">__net..</text>
</g>
<g>
<title>ip_rcv (21 samples, 4.23%)</title><rect x="98.0" y="227.0" width="50.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="101.0" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (21 samples, 4.23%)</title><rect x="98.0" y="211.0" width="50.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="101.0" y="222.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (21 samples, 4.23%)</title><rect x="98.0" y="195.0" width="50.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.0" y="206.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (21 samples, 4.23%)</title><rect x="98.0" y="179.0" width="50.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.0" y="190.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 4.23%)</title><rect x="98.0" y="163.0" width="50.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="101.0" y="174.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (19 samples, 3.83%)</title><rect x="102.8" y="147.0" width="45.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="105.8" y="158.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.20%)</title><rect x="102.8" y="131.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 3.63%)</title><rect x="105.2" y="131.0" width="42.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="108.2" y="142.0">tcp_..</text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 3.63%)</title><rect x="105.2" y="115.0" width="42.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="108.2" y="126.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.20%)</title><rect x="109.9" y="99.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="112.9" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.20%)</title><rect x="109.9" y="83.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="112.9" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.20%)</title><rect x="109.9" y="67.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.9" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.20%)</title><rect x="109.9" y="51.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="112.9" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="109.9" y="35.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="112.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.60%)</title><rect x="112.3" y="99.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.3" y="110.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.20%)</title><rect x="112.3" y="83.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="115.3" y="94.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.40%)</title><rect x="114.7" y="83.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="117.7" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.40%)</title><rect x="114.7" y="67.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="117.7" y="78.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.40%)</title><rect x="114.7" y="51.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.7" y="62.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.40%)</title><rect x="114.7" y="35.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="117.7" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (12 samples, 2.42%)</title><rect x="119.4" y="99.0" width="28.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.4" y="110.0">tc..</text>
</g>
<g>
<title>sock_def_readable (12 samples, 2.42%)</title><rect x="119.4" y="83.0" width="28.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="122.4" y="94.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (12 samples, 2.42%)</title><rect x="119.4" y="67.0" width="28.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.4" y="78.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 2.42%)</title><rect x="119.4" y="51.0" width="28.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.4" y="62.0">__..</text>
</g>
<g>
<title>__lock_text_start (12 samples, 2.42%)</title><rect x="119.4" y="35.0" width="28.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.4" y="46.0">__..</text>
</g>
<g>
<title>dev_queue_xmit (2 samples, 0.40%)</title><rect x="148.0" y="355.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="151.0" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.40%)</title><rect x="148.0" y="339.0" width="4.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="151.0" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.40%)</title><rect x="148.0" y="323.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="151.0" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.20%)</title><rect x="148.0" y="307.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="151.0" y="318.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.20%)</title><rect x="148.0" y="291.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="151.0" y="302.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.20%)</title><rect x="148.0" y="275.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="151.0" y="286.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.20%)</title><rect x="148.0" y="259.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.0" y="270.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.20%)</title><rect x="150.4" y="307.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="153.4" y="318.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.20%)</title><rect x="152.7" y="435.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="155.7" y="446.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.20%)</title><rect x="155.1" y="451.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.1" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.60%)</title><rect x="157.5" y="531.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="160.5" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.20%)</title><rect x="157.5" y="515.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="160.5" y="526.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.40%)</title><rect x="159.9" y="515.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="162.9" y="526.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.20%)</title><rect x="162.3" y="499.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.3" y="510.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.81%)</title><rect x="164.6" y="595.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.6" y="606.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.81%)</title><rect x="164.6" y="579.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="167.6" y="590.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.81%)</title><rect x="164.6" y="563.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.6" y="574.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.81%)</title><rect x="164.6" y="547.0" width="9.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="167.6" y="558.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.20%)</title><rect x="174.2" y="611.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="177.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.60%)</title><rect x="176.5" y="627.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="179.5" y="638.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.60%)</title><rect x="176.5" y="611.0" width="7.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="179.5" y="622.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.60%)</title><rect x="176.5" y="595.0" width="7.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.60%)</title><rect x="176.5" y="579.0" width="7.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="179.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (102 samples, 20.56%)</title><rect x="183.7" y="771.0" width="242.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.7" y="782.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.20%)</title><rect x="183.7" y="755.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (16 samples, 3.23%)</title><rect x="186.0" y="755.0" width="38.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.0" y="766.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (16 samples, 3.23%)</title><rect x="186.0" y="739.0" width="38.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="189.0" y="750.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="186.0" y="723.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="186.0" y="707.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="189.0" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.20%)</title><rect x="186.0" y="691.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="189.0" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (6 samples, 1.21%)</title><rect x="188.4" y="723.0" width="14.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="191.4" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (6 samples, 1.21%)</title><rect x="188.4" y="707.0" width="14.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (6 samples, 1.21%)</title><rect x="188.4" y="691.0" width="14.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="191.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (6 samples, 1.21%)</title><rect x="188.4" y="675.0" width="14.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="191.4" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.20%)</title><rect x="188.4" y="659.0" width="2.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="191.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="188.4" y="643.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.4" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="188.4" y="627.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="191.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="188.4" y="611.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="191.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (5 samples, 1.01%)</title><rect x="190.8" y="659.0" width="11.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="193.8" y="670.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.20%)</title><rect x="190.8" y="643.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="193.8" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="193.2" y="643.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="196.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (3 samples, 0.60%)</title><rect x="195.6" y="643.0" width="7.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="198.6" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.20%)</title><rect x="195.6" y="627.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="198.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::CheckOutOfBound() [clone .plt] (1 samples, 0.20%)</title><rect x="197.9" y="627.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="200.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (1 samples, 0.20%)</title><rect x="200.3" y="627.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="203.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::key() const (1 samples, 0.20%)</title><rect x="200.3" y="611.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="203.3" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (6 samples, 1.21%)</title><rect x="202.7" y="723.0" width="14.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.7" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (6 samples, 1.21%)</title><rect x="202.7" y="707.0" width="14.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.7" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (6 samples, 1.21%)</title><rect x="202.7" y="691.0" width="14.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="205.7" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 0.81%)</title><rect x="202.7" y="675.0" width="9.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="205.7" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.20%)</title><rect x="205.1" y="659.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="208.1" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.40%)</title><rect x="207.5" y="659.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="210.5" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="212.2" y="675.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="215.2" y="686.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.20%)</title><rect x="212.2" y="659.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="215.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="212.2" y="643.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="212.2" y="627.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="212.2" y="611.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.2" y="622.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.20%)</title><rect x="214.6" y="675.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="217.6" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (1 samples, 0.20%)</title><rect x="217.0" y="723.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="220.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.20%)</title><rect x="217.0" y="707.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (2 samples, 0.40%)</title><rect x="219.4" y="723.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.40%)</title><rect x="219.4" y="707.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.40%)</title><rect x="219.4" y="691.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.4" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.40%)</title><rect x="219.4" y="675.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="222.4" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.20%)</title><rect x="219.4" y="659.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="222.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="219.4" y="643.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="222.4" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="219.4" y="627.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="222.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="219.4" y="611.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="222.4" y="622.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.20%)</title><rect x="219.4" y="595.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="222.4" y="606.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.20%)</title><rect x="219.4" y="579.0" width="2.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.4" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.20%)</title><rect x="219.4" y="563.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="222.4" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="221.7" y="659.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.7" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="221.7" y="643.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.20%)</title><rect x="221.7" y="627.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.20%)</title><rect x="221.7" y="611.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.7" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.20%)</title><rect x="221.7" y="595.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.7" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="221.7" y="579.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="224.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="221.7" y="563.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="224.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="221.7" y="547.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="224.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (83 samples, 16.73%)</title><rect x="224.1" y="755.0" width="197.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.1" y="766.0">ru/mail/polis/dao/dariagap..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (46 samples, 9.27%)</title><rect x="224.1" y="739.0" width="109.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.1" y="750.0">org/rocksdb/A..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (46 samples, 9.27%)</title><rect x="224.1" y="723.0" width="109.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.1" y="734.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (44 samples, 8.87%)</title><rect x="224.1" y="707.0" width="104.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="227.1" y="718.0">Java_org_roc..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.20%)</title><rect x="224.1" y="691.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="227.1" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayElements (2 samples, 0.40%)</title><rect x="226.5" y="691.0" width="4.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="229.5" y="702.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.20%)</title><rect x="226.5" y="675.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="229.5" y="686.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.20%)</title><rect x="226.5" y="659.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="229.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.20%)</title><rect x="228.9" y="675.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="231.9" y="686.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.20%)</title><rect x="231.2" y="691.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="234.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (40 samples, 8.06%)</title><rect x="233.6" y="691.0" width="95.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="236.6" y="702.0">rocksdb::DB..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="233.6" y="675.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="236.6" y="686.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.20%)</title><rect x="236.0" y="675.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="239.0" y="686.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (1 samples, 0.20%)</title><rect x="238.4" y="675.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="241.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="238.4" y="659.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="241.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="238.4" y="643.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="241.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="238.4" y="627.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="241.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (1 samples, 0.20%)</title><rect x="240.8" y="675.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="243.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (1 samples, 0.20%)</title><rect x="240.8" y="659.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="243.8" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="240.8" y="643.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="243.8" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="240.8" y="627.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.8" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="240.8" y="611.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (2 samples, 0.40%)</title><rect x="243.1" y="675.0" width="4.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="246.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (31 samples, 6.25%)</title><rect x="247.9" y="675.0" width="73.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="250.9" y="686.0">rocksdb:..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.20%)</title><rect x="247.9" y="659.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="250.9" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="250.3" y="659.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="253.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (16 samples, 3.23%)</title><rect x="252.7" y="659.0" width="38.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="255.7" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (7 samples, 1.41%)</title><rect x="257.4" y="643.0" width="16.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="260.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (6 samples, 1.21%)</title><rect x="257.4" y="627.0" width="14.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="260.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (1 samples, 0.20%)</title><rect x="259.8" y="611.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="262.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (4 samples, 0.81%)</title><rect x="262.2" y="611.0" width="9.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="265.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetCacheKey(char const*, unsigned long, rocksdb::BlockHandle const&amp;, char*) (1 samples, 0.20%)</title><rect x="262.2" y="595.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="265.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (3 samples, 0.60%)</title><rect x="264.6" y="595.0" width="7.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="267.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (2 samples, 0.40%)</title><rect x="266.9" y="579.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="269.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (1 samples, 0.20%)</title><rect x="266.9" y="563.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="269.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.20%)</title><rect x="266.9" y="547.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="269.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (1 samples, 0.20%)</title><rect x="269.3" y="563.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="272.3" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="271.7" y="627.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="271.7" y="611.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="274.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="271.7" y="595.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (3 samples, 0.60%)</title><rect x="274.1" y="643.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="277.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (2 samples, 0.40%)</title><rect x="276.5" y="627.0" width="4.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="279.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.40%)</title><rect x="276.5" y="611.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="279.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.81%)</title><rect x="281.2" y="643.0" width="9.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="284.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.20%)</title><rect x="283.6" y="627.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="286.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetVarint64Ptr(char const*, char const*, unsigned long*) (1 samples, 0.20%)</title><rect x="283.6" y="611.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="286.6" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="283.6" y="595.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="286.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="283.6" y="579.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="286.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="283.6" y="563.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="286.6" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="286.0" y="627.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="289.0" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="286.0" y="611.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="289.0" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="286.0" y="595.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="289.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (12 samples, 2.42%)</title><rect x="290.7" y="659.0" width="28.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="293.7" y="670.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni5802508841256906671.so (11 samples, 2.22%)</title><rect x="290.7" y="643.0" width="26.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="293.7" y="654.0">/..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (10 samples, 2.02%)</title><rect x="290.7" y="627.0" width="23.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="293.7" y="638.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="297.9" y="611.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="300.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.40%)</title><rect x="300.2" y="611.0" width="4.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="303.2" y="622.0"></text>
</g>
<g>
<title>memcmp@plt (1 samples, 0.20%)</title><rect x="302.6" y="595.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="305.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (4 samples, 0.81%)</title><rect x="305.0" y="611.0" width="9.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="308.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (4 samples, 0.81%)</title><rect x="305.0" y="595.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.81%)</title><rect x="305.0" y="579.0" width="9.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.0" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.20%)</title><rect x="314.5" y="627.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="317.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="316.9" y="643.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="319.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="316.9" y="627.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="319.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="316.9" y="611.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="319.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="316.9" y="595.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.20%)</title><rect x="319.3" y="659.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="322.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="319.3" y="643.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="319.3" y="627.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="322.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="319.3" y="611.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="322.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (2 samples, 0.40%)</title><rect x="321.7" y="675.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="324.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::value() const (1 samples, 0.20%)</title><rect x="324.0" y="659.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="327.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.20%)</title><rect x="326.4" y="675.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="329.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.40%)</title><rect x="328.8" y="707.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="331.8" y="718.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28 (1 samples, 0.20%)</title><rect x="328.8" y="691.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="331.8" y="702.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.20%)</title><rect x="331.2" y="691.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="334.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="331.2" y="675.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="334.2" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="331.2" y="659.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="334.2" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="331.2" y="643.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.2" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (37 samples, 7.46%)</title><rect x="333.5" y="739.0" width="88.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.5" y="750.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (30 samples, 6.05%)</title><rect x="333.5" y="723.0" width="71.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.5" y="734.0">org/rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (4 samples, 0.81%)</title><rect x="333.5" y="707.0" width="9.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="336.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="340.7" y="691.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.7" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="340.7" y="675.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.7" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="340.7" y="659.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="343.7" y="670.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (23 samples, 4.64%)</title><rect x="343.1" y="707.0" width="54.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="346.1" y="718.0">Java_..</text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.20%)</title><rect x="343.1" y="691.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="346.1" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="343.1" y="675.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.1" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="343.1" y="659.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.1" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="343.1" y="643.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="346.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (21 samples, 4.23%)</title><rect x="345.4" y="691.0" width="50.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="348.4" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (1 samples, 0.20%)</title><rect x="345.4" y="675.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="348.4" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="345.4" y="659.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="348.4" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="345.4" y="643.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="348.4" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="345.4" y="627.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="348.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (19 samples, 3.83%)</title><rect x="347.8" y="675.0" width="45.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="350.8" y="686.0">rock..</text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.60%)</title><rect x="350.2" y="659.0" width="7.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="353.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="352.6" y="643.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="355.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="352.6" y="627.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="355.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="352.6" y="611.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="355.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (3 samples, 0.60%)</title><rect x="357.3" y="659.0" width="7.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="360.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (2 samples, 0.40%)</title><rect x="357.3" y="643.0" width="4.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="360.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.40%)</title><rect x="357.3" y="627.0" width="4.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="360.3" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="359.7" y="611.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="362.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="359.7" y="595.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="362.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="359.7" y="579.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="362.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="359.7" y="563.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="362.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.20%)</title><rect x="362.1" y="643.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="365.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="362.1" y="627.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="362.1" y="611.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="365.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="362.1" y="595.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="365.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (8 samples, 1.61%)</title><rect x="364.5" y="659.0" width="19.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="367.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.20%)</title><rect x="366.9" y="643.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="369.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::~MergeIteratorBuilder() (1 samples, 0.20%)</title><rect x="369.2" y="643.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="372.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (5 samples, 1.01%)</title><rect x="371.6" y="643.0" width="11.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="374.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (5 samples, 1.01%)</title><rect x="371.6" y="627.0" width="11.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="374.6" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.20%)</title><rect x="371.6" y="611.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="374.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.20%)</title><rect x="374.0" y="611.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="377.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (3 samples, 0.60%)</title><rect x="376.4" y="611.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="379.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (2 samples, 0.40%)</title><rect x="376.4" y="595.0" width="4.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="379.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.20%)</title><rect x="378.7" y="579.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="381.7" y="590.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.20%)</title><rect x="378.7" y="563.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="381.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="378.7" y="547.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="381.7" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="378.7" y="531.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="381.7" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="378.7" y="515.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="381.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions(rocksdb::ReadOptions const&amp;) (1 samples, 0.20%)</title><rect x="381.1" y="595.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="384.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (4 samples, 0.81%)</title><rect x="383.5" y="659.0" width="9.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="386.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (4 samples, 0.81%)</title><rect x="383.5" y="643.0" width="9.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="386.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (2 samples, 0.40%)</title><rect x="385.9" y="627.0" width="4.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="388.9" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="385.9" y="611.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.9" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="385.9" y="595.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="388.9" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="385.9" y="579.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="388.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::ForwardRangeDelIterator::ForwardRangeDelIterator(rocksdb::InternalKeyComparator const*) (1 samples, 0.20%)</title><rect x="390.6" y="627.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="393.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.20%)</title><rect x="393.0" y="675.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="396.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="393.0" y="659.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="396.0" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="393.0" y="643.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.0" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="393.0" y="627.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="396.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) [clone .plt] (1 samples, 0.20%)</title><rect x="395.4" y="691.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="398.4" y="702.0"></text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.40%)</title><rect x="397.8" y="707.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="400.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="400.2" y="691.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="403.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="400.2" y="675.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="403.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="400.2" y="659.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="403.2" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="400.2" y="643.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="403.2" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.20%)</title><rect x="400.2" y="627.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="403.2" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.20%)</title><rect x="400.2" y="611.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="403.2" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.20%)</title><rect x="400.2" y="595.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="403.2" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="400.2" y="579.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="403.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::DB::NewIterator(rocksdb::ReadOptions const&amp;) (1 samples, 0.20%)</title><rect x="402.5" y="707.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="405.5" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="402.5" y="691.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="405.5" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="402.5" y="675.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="405.5" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="402.5" y="659.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="405.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (6 samples, 1.21%)</title><rect x="404.9" y="723.0" width="14.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="407.9" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (6 samples, 1.21%)</title><rect x="404.9" y="707.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="407.9" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.20%)</title><rect x="404.9" y="691.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (5 samples, 1.01%)</title><rect x="407.3" y="691.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="410.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (5 samples, 1.01%)</title><rect x="407.3" y="675.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.3" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (4 samples, 0.81%)</title><rect x="409.7" y="659.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="412.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.81%)</title><rect x="409.7" y="643.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.7" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.20%)</title><rect x="409.7" y="627.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="409.7" y="611.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="409.7" y="595.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="412.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="409.7" y="579.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="412.7" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (3 samples, 0.60%)</title><rect x="412.1" y="627.0" width="7.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="415.1" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.20%)</title><rect x="412.1" y="611.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="415.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.40%)</title><rect x="414.4" y="611.0" width="4.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="417.4" y="622.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.20%)</title><rect x="414.4" y="595.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="417.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="414.4" y="579.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="417.4" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="414.4" y="563.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="417.4" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="414.4" y="547.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.4" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.20%)</title><rect x="416.8" y="595.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="419.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="416.8" y="579.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="419.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="416.8" y="563.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="419.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="416.8" y="547.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="419.8" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="419.2" y="723.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="422.2" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="419.2" y="707.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="422.2" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="419.2" y="691.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="422.2" y="702.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.40%)</title><rect x="421.6" y="755.0" width="4.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="424.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="424.0" y="739.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="427.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="424.0" y="723.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="427.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="424.0" y="707.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="427.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.20%)</title><rect x="426.3" y="835.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.20%)</title><rect x="426.3" y="819.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.20%)</title><rect x="426.3" y="803.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.20%)</title><rect x="426.3" y="787.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.20%)</title><rect x="426.3" y="771.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 3.02%)</title><rect x="428.7" y="835.0" width="35.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.7" y="846.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (15 samples, 3.02%)</title><rect x="428.7" y="819.0" width="35.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.7" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 2.22%)</title><rect x="428.7" y="803.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.7" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 1.61%)</title><rect x="431.1" y="787.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="434.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 1.61%)</title><rect x="431.1" y="771.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.1" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.20%)</title><rect x="431.1" y="755.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="434.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.40%)</title><rect x="433.5" y="755.0" width="4.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="436.5" y="766.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.20%)</title><rect x="433.5" y="739.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="436.5" y="750.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.20%)</title><rect x="435.8" y="739.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="438.8" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="435.8" y="723.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="438.8" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="435.8" y="707.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.8" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="435.8" y="691.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.01%)</title><rect x="438.2" y="755.0" width="11.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="441.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 1.01%)</title><rect x="438.2" y="739.0" width="11.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="441.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.01%)</title><rect x="438.2" y="723.0" width="11.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="441.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.01%)</title><rect x="438.2" y="707.0" width="11.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.01%)</title><rect x="438.2" y="691.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="441.2" y="702.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.01%)</title><rect x="438.2" y="675.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.2" y="686.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 1.01%)</title><rect x="438.2" y="659.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="441.2" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 1.01%)</title><rect x="438.2" y="643.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="441.2" y="654.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.01%)</title><rect x="438.2" y="627.0" width="11.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.2" y="638.0"></text>
</g>
<g>
<title>__schedule (5 samples, 1.01%)</title><rect x="438.2" y="611.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="441.2" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.01%)</title><rect x="438.2" y="595.0" width="11.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="441.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.20%)</title><rect x="450.1" y="787.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="453.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="452.5" y="787.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.20%)</title><rect x="454.9" y="803.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.20%)</title><rect x="454.9" y="787.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.20%)</title><rect x="454.9" y="771.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.20%)</title><rect x="454.9" y="755.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="457.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.20%)</title><rect x="454.9" y="739.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.20%)</title><rect x="454.9" y="723.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="454.9" y="707.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="457.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.20%)</title><rect x="454.9" y="691.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="457.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="454.9" y="675.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="457.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="454.9" y="659.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="457.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.60%)</title><rect x="457.3" y="803.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.60%)</title><rect x="457.3" y="787.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.60%)</title><rect x="457.3" y="771.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.60%)</title><rect x="457.3" y="755.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="460.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.60%)</title><rect x="457.3" y="739.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="460.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.60%)</title><rect x="457.3" y="723.0" width="7.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="460.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.60%)</title><rect x="457.3" y="707.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="460.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.60%)</title><rect x="457.3" y="691.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="460.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.60%)</title><rect x="457.3" y="675.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.3" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.60%)</title><rect x="457.3" y="659.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="460.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.60%)</title><rect x="457.3" y="643.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="460.3" y="654.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.60%)</title><rect x="457.3" y="627.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="460.3" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.60%)</title><rect x="457.3" y="611.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="460.3" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.60%)</title><rect x="457.3" y="595.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="460.3" y="606.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (3 samples, 0.60%)</title><rect x="464.4" y="883.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.4" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (2 samples, 0.40%)</title><rect x="466.8" y="867.0" width="4.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.8" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/FinalReference.&lt;init&gt; (1 samples, 0.20%)</title><rect x="466.8" y="851.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.8" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.20%)</title><rect x="466.8" y="835.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.8" y="846.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="466.8" y="819.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.8" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="466.8" y="803.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="469.8" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="466.8" y="787.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="469.8" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="469.2" y="851.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="472.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="469.2" y="835.0" width="2.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="472.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="469.2" y="819.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="472.2" y="830.0"></text>
</g>
<g>
<title>[Executor-1 tid=10479] (204 samples, 41.13%)</title><rect x="471.5" y="899.0" width="485.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="474.5" y="910.0">[Executor-1 tid=10479]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="471.5" y="883.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="474.5" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.20%)</title><rect x="471.5" y="867.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="474.5" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.20%)</title><rect x="471.5" y="851.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="474.5" y="862.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.20%)</title><rect x="471.5" y="835.0" width="2.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="474.5" y="846.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.20%)</title><rect x="473.9" y="883.0" width="2.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="476.9" y="894.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.20%)</title><rect x="473.9" y="867.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="476.9" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="473.9" y="851.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="476.9" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="473.9" y="835.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="476.9" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="473.9" y="819.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.9" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.40%)</title><rect x="476.3" y="883.0" width="4.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="479.3" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.20%)</title><rect x="476.3" y="867.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="479.3" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.20%)</title><rect x="476.3" y="851.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="479.3" y="862.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.20%)</title><rect x="476.3" y="835.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="479.3" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="478.7" y="867.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="481.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="478.7" y="851.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="478.7" y="835.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="478.7" y="819.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.7" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="478.7" y="803.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="481.7" y="814.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.20%)</title><rect x="478.7" y="787.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="481.7" y="798.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.20%)</title><rect x="478.7" y="771.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="481.7" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.20%)</title><rect x="478.7" y="755.0" width="2.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="481.7" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="478.7" y="739.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="481.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (200 samples, 40.32%)</title><rect x="481.0" y="883.0" width="475.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.0" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (200 samples, 40.32%)</title><rect x="481.0" y="867.0" width="475.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.0" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (200 samples, 40.32%)</title><rect x="481.0" y="851.0" width="475.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.0" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (187 samples, 37.70%)</title><rect x="483.4" y="835.0" width="444.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.4" y="846.0">java/util/concurrent/FutureTask.run</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (187 samples, 37.70%)</title><rect x="483.4" y="819.0" width="444.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.4" y="830.0">java/util/concurrent/Executors$RunnableAdapter.call</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$68/246240756.run (187 samples, 37.70%)</title><rect x="483.4" y="803.0" width="444.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.4" y="814.0">ru/mail/polis/service/dariagap/AsyncServiceImpl$$Lambda$68/24..</text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$get$1 (187 samples, 37.70%)</title><rect x="483.4" y="787.0" width="444.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.4" y="798.0">ru/mail/polis/service/dariagap/AsyncServiceImpl.lambda$get$1</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="483.4" y="771.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="483.4" y="755.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="483.4" y="739.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="483.4" y="723.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="483.4" y="707.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="483.4" y="691.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="486.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="483.4" y="675.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="486.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="483.4" y="659.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 18.35%)</title><rect x="485.8" y="771.0" width="216.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.8" y="782.0">one/nio/http/HttpSession.sen..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.20%)</title><rect x="485.8" y="755.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.20%)</title><rect x="485.8" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.20%)</title><rect x="485.8" y="723.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (90 samples, 18.15%)</title><rect x="488.2" y="755.0" width="214.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.2" y="766.0">one/nio/http/HttpSession.wri..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.40%)</title><rect x="488.2" y="739.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.20%)</title><rect x="490.6" y="723.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.6" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.20%)</title><rect x="490.6" y="707.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="490.6" y="691.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 17.74%)</title><rect x="492.9" y="739.0" width="209.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.9" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 17.74%)</title><rect x="492.9" y="723.0" width="209.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.9" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (88 samples, 17.74%)</title><rect x="492.9" y="707.0" width="209.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="495.9" y="718.0">one/nio/net/Session$ArrayQu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (88 samples, 17.74%)</title><rect x="492.9" y="691.0" width="209.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="495.9" y="702.0">one/nio/net/NativeSocket.wr..</text>
</g>
<g>
<title>send (88 samples, 17.74%)</title><rect x="492.9" y="675.0" width="209.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="495.9" y="686.0">send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (86 samples, 17.34%)</title><rect x="492.9" y="659.0" width="204.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.9" y="670.0">entry_SYSCALL_64_after_hwfr..</text>
</g>
<g>
<title>do_syscall_64 (86 samples, 17.34%)</title><rect x="492.9" y="643.0" width="204.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="495.9" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (79 samples, 15.93%)</title><rect x="495.3" y="627.0" width="188.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="498.3" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (79 samples, 15.93%)</title><rect x="495.3" y="611.0" width="188.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.3" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (78 samples, 15.73%)</title><rect x="497.7" y="595.0" width="185.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.7" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (77 samples, 15.52%)</title><rect x="497.7" y="579.0" width="183.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="500.7" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (77 samples, 15.52%)</title><rect x="497.7" y="563.0" width="183.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.7" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.20%)</title><rect x="497.7" y="547.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="500.7" y="558.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.20%)</title><rect x="497.7" y="531.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="500.7" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.20%)</title><rect x="500.1" y="547.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="503.1" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (75 samples, 15.12%)</title><rect x="502.5" y="547.0" width="178.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="505.5" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.20%)</title><rect x="507.2" y="531.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.2" y="542.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.20%)</title><rect x="507.2" y="515.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.2" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 1.21%)</title><rect x="509.6" y="531.0" width="14.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.6" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 1.01%)</title><rect x="512.0" y="515.0" width="11.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.0 (1 samples, 0.20%)</title><rect x="512.0" y="499.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.0" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.20%)</title><rect x="512.0" y="483.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="515.0" y="494.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.20%)</title><rect x="512.0" y="467.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="515.0" y="478.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.40%)</title><rect x="514.4" y="499.0" width="4.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.4" y="510.0"></text>
</g>
<g>
<title>memset (2 samples, 0.40%)</title><rect x="519.1" y="499.0" width="4.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="522.1" y="510.0"></text>
</g>
<g>
<title>tcp_push (66 samples, 13.31%)</title><rect x="523.9" y="531.0" width="157.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.9" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (66 samples, 13.31%)</title><rect x="523.9" y="515.0" width="157.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.9" y="526.0">__tcp_push_pending_f..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.20%)</title><rect x="523.9" y="499.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.9" y="510.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.20%)</title><rect x="526.2" y="499.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="529.2" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (64 samples, 12.90%)</title><rect x="528.6" y="499.0" width="152.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.6" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (58 samples, 11.69%)</title><rect x="528.6" y="483.0" width="138.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="531.6" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.20%)</title><rect x="528.6" y="467.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="531.6" y="478.0"></text>
</g>
<g>
<title>ip_queue_xmit (55 samples, 11.09%)</title><rect x="531.0" y="467.0" width="130.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="534.0" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (55 samples, 11.09%)</title><rect x="531.0" y="451.0" width="130.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="534.0" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.20%)</title><rect x="533.4" y="435.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="536.4" y="446.0"></text>
</g>
<g>
<title>ip_local_out (53 samples, 10.69%)</title><rect x="535.8" y="435.0" width="126.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="538.8" y="446.0">ip_local_out</text>
</g>
<g>
<title>ip_output (53 samples, 10.69%)</title><rect x="535.8" y="419.0" width="126.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="538.8" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (52 samples, 10.48%)</title><rect x="538.1" y="403.0" width="123.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.1" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.20%)</title><rect x="538.1" y="387.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="541.1" y="398.0"></text>
</g>
<g>
<title>__ip_finish_output (51 samples, 10.28%)</title><rect x="540.5" y="387.0" width="121.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="543.5" y="398.0">__ip_finish_out..</text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 9.88%)</title><rect x="545.3" y="371.0" width="116.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="548.3" y="382.0">ip_finish_outp..</text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 9.27%)</title><rect x="545.3" y="355.0" width="109.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="548.3" y="366.0">__local_bh_en..</text>
</g>
<g>
<title>do_softirq.part.0 (46 samples, 9.27%)</title><rect x="545.3" y="339.0" width="109.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="548.3" y="350.0">do_softirq.pa..</text>
</g>
<g>
<title>do_softirq_own_stack (45 samples, 9.07%)</title><rect x="547.7" y="323.0" width="107.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="550.7" y="334.0">do_softirq_ow..</text>
</g>
<g>
<title>__softirqentry_text_start (44 samples, 8.87%)</title><rect x="547.7" y="307.0" width="104.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="550.7" y="318.0">__softirqent..</text>
</g>
<g>
<title>net_rx_action (43 samples, 8.67%)</title><rect x="550.0" y="291.0" width="102.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.0" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (43 samples, 8.67%)</title><rect x="550.0" y="275.0" width="102.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="553.0" y="286.0">process_back..</text>
</g>
<g>
<title>__netif_receive_skb (43 samples, 8.67%)</title><rect x="550.0" y="259.0" width="102.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="553.0" y="270.0">__netif_rece..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (43 samples, 8.67%)</title><rect x="550.0" y="243.0" width="102.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="553.0" y="254.0">__netif_rece..</text>
</g>
<g>
<title>ip_rcv (43 samples, 8.67%)</title><rect x="550.0" y="227.0" width="102.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="553.0" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (43 samples, 8.67%)</title><rect x="550.0" y="211.0" width="102.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="553.0" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (43 samples, 8.67%)</title><rect x="550.0" y="195.0" width="102.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="553.0" y="206.0">ip_local_del..</text>
</g>
<g>
<title>ip_local_deliver_finish (43 samples, 8.67%)</title><rect x="550.0" y="179.0" width="102.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="553.0" y="190.0">ip_local_del..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (43 samples, 8.67%)</title><rect x="550.0" y="163.0" width="102.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="553.0" y="174.0">ip_protocol_..</text>
</g>
<g>
<title>sock_put (1 samples, 0.20%)</title><rect x="552.4" y="147.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.20%)</title><rect x="554.8" y="147.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="557.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.20%)</title><rect x="557.2" y="147.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="560.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_rcv (39 samples, 7.86%)</title><rect x="559.6" y="147.0" width="92.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.6" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.81%)</title><rect x="559.6" y="131.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="562.6" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.40%)</title><rect x="569.1" y="131.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="572.1" y="142.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.40%)</title><rect x="569.1" y="115.0" width="4.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="572.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (33 samples, 6.65%)</title><rect x="573.8" y="131.0" width="78.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.8" y="142.0">tcp_v4_do..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.20%)</title><rect x="573.8" y="115.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.8" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.20%)</title><rect x="576.2" y="115.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="579.2" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 6.25%)</title><rect x="578.6" y="115.0" width="73.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="581.6" y="126.0">tcp_rcv_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.20%)</title><rect x="581.0" y="99.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="584.0" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.20%)</title><rect x="581.0" y="83.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="584.0" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.20%)</title><rect x="581.0" y="67.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="584.0" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.20%)</title><rect x="581.0" y="51.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="584.0" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="581.0" y="35.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="584.0" y="46.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.20%)</title><rect x="583.3" y="99.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.3" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (27 samples, 5.44%)</title><rect x="585.7" y="99.0" width="64.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="588.7" y="110.0">tcp_dat..</text>
</g>
<g>
<title>sock_def_readable (27 samples, 5.44%)</title><rect x="585.7" y="83.0" width="64.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="588.7" y="94.0">sock_de..</text>
</g>
<g>
<title>__wake_up_sync_key (27 samples, 5.44%)</title><rect x="585.7" y="67.0" width="64.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="588.7" y="78.0">__wake_..</text>
</g>
<g>
<title>__wake_up_common_lock (27 samples, 5.44%)</title><rect x="585.7" y="51.0" width="64.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="588.7" y="62.0">__wake_..</text>
</g>
<g>
<title>__lock_text_start (27 samples, 5.44%)</title><rect x="585.7" y="35.0" width="64.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="588.7" y="46.0">__lock_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.20%)</title><rect x="650.0" y="99.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="653.0" y="110.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.20%)</title><rect x="652.3" y="307.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="655.3" y="318.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.60%)</title><rect x="654.7" y="355.0" width="7.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="657.7" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.60%)</title><rect x="654.7" y="339.0" width="7.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="657.7" y="350.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.20%)</title><rect x="661.9" y="467.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="664.9" y="478.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.20%)</title><rect x="661.9" y="451.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.9" y="462.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.20%)</title><rect x="661.9" y="435.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="664.9" y="446.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.20%)</title><rect x="664.2" y="467.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="667.2" y="478.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.20%)</title><rect x="664.2" y="451.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="667.2" y="462.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.20%)</title><rect x="666.6" y="483.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="669.6" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.60%)</title><rect x="669.0" y="483.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="672.0" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.40%)</title><rect x="671.4" y="467.0" width="4.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="674.4" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.40%)</title><rect x="671.4" y="451.0" width="4.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="674.4" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.40%)</title><rect x="671.4" y="435.0" width="4.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="674.4" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.40%)</title><rect x="671.4" y="419.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="674.4" y="430.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.20%)</title><rect x="676.1" y="483.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="679.1" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.20%)</title><rect x="678.5" y="483.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="681.5" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.20%)</title><rect x="680.9" y="579.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="683.9" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.20%)</title><rect x="680.9" y="563.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (6 samples, 1.21%)</title><rect x="683.3" y="627.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="686.3" y="638.0"></text>
</g>
<g>
<title>schedule (6 samples, 1.21%)</title><rect x="683.3" y="611.0" width="14.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="686.3" y="622.0"></text>
</g>
<g>
<title>__schedule (6 samples, 1.21%)</title><rect x="683.3" y="595.0" width="14.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="686.3" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 1.21%)</title><rect x="683.3" y="579.0" width="14.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="686.3" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="697.5" y="659.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="700.5" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="697.5" y="643.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="700.5" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="697.5" y="627.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="700.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (95 samples, 19.15%)</title><rect x="702.3" y="771.0" width="226.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.3" y="782.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.20%)</title><rect x="702.3" y="755.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getKey (1 samples, 0.20%)</title><rect x="704.7" y="755.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.20%)</title><rect x="704.7" y="739.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.hasNext (1 samples, 0.20%)</title><rect x="707.1" y="755.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.1" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.isValid (1 samples, 0.20%)</title><rect x="707.1" y="739.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.1" y="750.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.isValid0 (1 samples, 0.20%)</title><rect x="707.1" y="723.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (11 samples, 2.22%)</title><rect x="709.4" y="755.0" width="26.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.4" y="766.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RecordIterator.next (11 samples, 2.22%)</title><rect x="709.4" y="739.0" width="26.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.4" y="750.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="709.4" y="723.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="709.4" y="707.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="709.4" y="691.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="709.4" y="675.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.4" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (1 samples, 0.20%)</title><rect x="709.4" y="659.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.4" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="709.4" y="643.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.4" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="709.4" y="627.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="712.4" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="709.4" y="611.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.4" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (3 samples, 0.60%)</title><rect x="711.8" y="723.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.8" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (3 samples, 0.60%)</title><rect x="711.8" y="707.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() (2 samples, 0.40%)</title><rect x="711.8" y="691.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="714.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (2 samples, 0.40%)</title><rect x="711.8" y="675.0" width="4.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="714.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (2 samples, 0.40%)</title><rect x="711.8" y="659.0" width="4.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="714.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::NextAndGetResult(rocksdb::IterateResult*) (2 samples, 0.40%)</title><rect x="711.8" y="643.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="714.8" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.20%)</title><rect x="711.8" y="627.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="714.8" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="714.2" y="627.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="717.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="714.2" y="611.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="717.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="714.2" y="595.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="717.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Next() [clone .plt] (1 samples, 0.20%)</title><rect x="716.6" y="691.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="719.6" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="716.6" y="675.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="719.6" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="716.6" y="659.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="719.6" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="716.6" y="643.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="719.6" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (3 samples, 0.60%)</title><rect x="719.0" y="723.0" width="7.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.0" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (3 samples, 0.60%)</title><rect x="719.0" y="707.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.0" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (3 samples, 0.60%)</title><rect x="719.0" y="691.0" width="7.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="722.0" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.40%)</title><rect x="719.0" y="675.0" width="4.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="722.0" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.20%)</title><rect x="719.0" y="659.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="722.0" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="719.0" y="643.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="722.0" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="719.0" y="627.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="722.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="719.0" y="611.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="722.0" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.20%)</title><rect x="721.3" y="659.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="724.3" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.20%)</title><rect x="721.3" y="643.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="724.3" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.20%)</title><rect x="721.3" y="627.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.3" y="638.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.20%)</title><rect x="721.3" y="611.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="724.3" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="721.3" y="595.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="721.3" y="579.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="724.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="721.3" y="563.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="724.3" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="723.7" y="675.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="726.7" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="723.7" y="659.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="726.7" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="723.7" y="643.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="726.7" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="723.7" y="627.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="726.7" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (3 samples, 0.60%)</title><rect x="726.1" y="723.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="729.1" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (3 samples, 0.60%)</title><rect x="726.1" y="707.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.1" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_value0 (3 samples, 0.60%)</title><rect x="726.1" y="691.0" width="7.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="729.1" y="702.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.20%)</title><rect x="726.1" y="675.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="729.1" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="728.5" y="675.0" width="2.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="731.5" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.20%)</title><rect x="728.5" y="659.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="731.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::value() const (1 samples, 0.20%)</title><rect x="730.8" y="675.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="733.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::value() const (1 samples, 0.20%)</title><rect x="730.8" y="659.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="733.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::value() const (1 samples, 0.20%)</title><rect x="730.8" y="643.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="733.8" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.unpack (1 samples, 0.20%)</title><rect x="733.2" y="723.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="736.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="733.2" y="707.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.20%)</title><rect x="733.2" y="691.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="736.2" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.20%)</title><rect x="733.2" y="675.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.20%)</title><rect x="733.2" y="659.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/dariagap/RocksDBStorage.iterator (81 samples, 16.33%)</title><rect x="735.6" y="755.0" width="192.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="738.6" y="766.0">ru/mail/polis/dao/dariaga..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (38 samples, 7.66%)</title><rect x="735.6" y="739.0" width="90.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="738.6" y="750.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (38 samples, 7.66%)</title><rect x="735.6" y="723.0" width="90.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="738.6" y="734.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (38 samples, 7.66%)</title><rect x="735.6" y="707.0" width="90.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="738.6" y="718.0">Java_org_r..</text>
</g>
<g>
<title>jni_GetByteArrayElements (1 samples, 0.20%)</title><rect x="735.6" y="691.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="738.6" y="702.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.20%)</title><rect x="735.6" y="675.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="738.6" y="686.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.20%)</title><rect x="735.6" y="659.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="738.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="735.6" y="643.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="735.6" y="627.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="735.6" y="611.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="738.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (37 samples, 7.46%)</title><rect x="738.0" y="691.0" width="88.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="741.0" y="702.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntry(bool, rocksdb::Slice const*) (4 samples, 0.81%)</title><rect x="740.4" y="675.0" width="9.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="743.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, rocksdb::Slice const*) (3 samples, 0.60%)</title><rect x="740.4" y="659.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="743.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::PrepareValue() (1 samples, 0.20%)</title><rect x="742.7" y="643.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="745.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="745.1" y="643.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="745.1" y="627.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="748.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="745.1" y="611.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="748.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBIter::TooManyInternalKeysSkipped(bool) (1 samples, 0.20%)</title><rect x="747.5" y="659.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="750.5" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="747.5" y="643.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="750.5" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="747.5" y="627.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.5" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="747.5" y="611.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::Seek(rocksdb::Slice const&amp;) (32 samples, 6.45%)</title><rect x="749.9" y="675.0" width="76.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="752.9" y="686.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (1 samples, 0.20%)</title><rect x="749.9" y="659.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="752.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SeekImpl(rocksdb::Slice const*) (19 samples, 3.83%)</title><rect x="752.3" y="659.0" width="45.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="755.3" y="670.0">rock..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::InitDataBlock() (10 samples, 2.02%)</title><rect x="754.6" y="643.0" width="23.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="757.6" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::Status, rocksdb::FilePrefetchBuffer*, bool) const (10 samples, 2.02%)</title><rect x="754.6" y="627.0" width="23.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="757.6" y="638.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.20%)</title><rect x="754.6" y="611.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="757.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool) const (9 samples, 1.81%)</title><rect x="757.0" y="611.0" width="21.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="760.0" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*) const (8 samples, 1.61%)</title><rect x="759.4" y="595.0" width="19.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="762.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseResource() (1 samples, 0.20%)</title><rect x="761.8" y="579.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="764.8" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="761.8" y="563.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="764.8" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="761.8" y="547.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="764.8" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="761.8" y="531.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="764.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (6 samples, 1.21%)</title><rect x="764.2" y="579.0" width="14.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="767.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, rocksdb::GetContext*) const (6 samples, 1.21%)</title><rect x="764.2" y="563.0" width="14.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="767.2" y="574.0"></text>
</g>
<g>
<title>ROCKSDB_XXH3p_64bits (1 samples, 0.20%)</title><rect x="764.2" y="547.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="767.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int) (5 samples, 1.01%)</title><rect x="766.5" y="547.0" width="11.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="769.5" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.40%)</title><rect x="766.5" y="531.0" width="4.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="769.5" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="768.9" y="515.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="771.9" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="768.9" y="499.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="771.9" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="768.9" y="483.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="771.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::Lookup(rocksdb::Slice const&amp;, unsigned int) (3 samples, 0.60%)</title><rect x="771.3" y="531.0" width="7.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="774.3" y="542.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.20%)</title><rect x="771.3" y="515.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="774.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::LRUHandleTable::FindPointer(rocksdb::Slice const&amp;, unsigned int) (2 samples, 0.40%)</title><rect x="773.7" y="515.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="776.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Seek(rocksdb::Slice const&amp;) (2 samples, 0.40%)</title><rect x="778.4" y="643.0" width="4.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="781.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::FindKeyAfterBinarySeek(rocksdb::Slice const&amp;, unsigned int, bool, rocksdb::Comparator const*) (1 samples, 0.20%)</title><rect x="780.8" y="627.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="783.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DataBlockIter::Next() (1 samples, 0.20%)</title><rect x="780.8" y="611.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="783.8" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="780.8" y="595.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="783.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="780.8" y="579.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="783.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="780.8" y="563.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="783.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&amp;) (4 samples, 0.81%)</title><rect x="783.2" y="643.0" width="9.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="786.2" y="654.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.20%)</title><rect x="785.6" y="627.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="788.6" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="787.9" y="627.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="790.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::IndexValue::DecodeFrom(rocksdb::Slice*, bool, rocksdb::BlockHandle const*) (1 samples, 0.20%)</title><rect x="790.3" y="627.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="793.3" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="790.3" y="611.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="790.3" y="595.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="793.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="790.3" y="579.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="793.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.40%)</title><rect x="792.7" y="643.0" width="4.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="795.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (10 samples, 2.02%)</title><rect x="797.5" y="659.0" width="23.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="800.5" y="670.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni5802508841256906671.so (10 samples, 2.02%)</title><rect x="797.5" y="643.0" width="23.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="800.5" y="654.0">/..</text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.20%)</title><rect x="797.5" y="627.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="800.5" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="797.5" y="611.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="800.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="797.5" y="595.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="797.5" y="579.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (9 samples, 1.81%)</title><rect x="799.8" y="627.0" width="21.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="802.8" y="638.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="804.6" y="611.0" width="2.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="807.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.60%)</title><rect x="807.0" y="611.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="810.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr@plt (1 samples, 0.20%)</title><rect x="809.4" y="595.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="812.4" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="811.7" y="595.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="811.7" y="579.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="814.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="811.7" y="563.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="814.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.60%)</title><rect x="814.1" y="611.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="817.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (3 samples, 0.60%)</title><rect x="814.1" y="595.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="817.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (3 samples, 0.60%)</title><rect x="814.1" y="579.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="817.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.20%)</title><rect x="821.2" y="659.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="824.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="823.6" y="659.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="826.6" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="823.6" y="643.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="826.6" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="823.6" y="627.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="826.6" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (42 samples, 8.47%)</title><rect x="826.0" y="739.0" width="99.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.0" y="750.0">org/rocksdb/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (36 samples, 7.26%)</title><rect x="826.0" y="723.0" width="85.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.0" y="734.0">org/rocksd..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (5 samples, 1.01%)</title><rect x="826.0" y="707.0" width="11.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="829.0" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="833.1" y="691.0" width="4.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="836.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="833.1" y="675.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="833.1" y="659.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.1" y="670.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (26 samples, 5.24%)</title><rect x="837.9" y="707.0" width="61.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="840.9" y="718.0">Java_o..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (25 samples, 5.04%)</title><rect x="837.9" y="691.0" width="59.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="840.9" y="702.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (24 samples, 4.84%)</title><rect x="837.9" y="675.0" width="57.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="840.9" y="686.0">rocksd..</text>
</g>
<g>
<title>__libc_malloc (2 samples, 0.40%)</title><rect x="837.9" y="659.0" width="4.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="840.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::SetPinnedItersMgr(rocksdb::PinnedIteratorsManager*) (1 samples, 0.20%)</title><rect x="842.7" y="659.0" width="2.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="845.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::DBImpl*) (5 samples, 1.01%)</title><rect x="845.0" y="659.0" width="11.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="848.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::DBImpl*) (4 samples, 0.81%)</title><rect x="845.0" y="643.0" width="9.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="848.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.60%)</title><rect x="847.4" y="627.0" width="7.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="850.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.20%)</title><rect x="847.4" y="611.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="850.4" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="847.4" y="595.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="850.4" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="847.4" y="579.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="850.4" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="847.4" y="563.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="850.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.20%)</title><rect x="849.8" y="611.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="852.8" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="849.8" y="595.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="852.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="849.8" y="579.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="852.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="849.8" y="563.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="852.8" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="852.2" y="611.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="855.2" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="852.2" y="595.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="855.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="852.2" y="579.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="855.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.20%)</title><rect x="854.6" y="643.0" width="2.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="857.6" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="854.6" y="627.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="857.6" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="854.6" y="611.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="857.6" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="854.6" y="595.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="857.6" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.20%)</title><rect x="854.6" y="579.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="857.6" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.20%)</title><rect x="854.6" y="563.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="857.6" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.20%)</title><rect x="854.6" y="547.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="857.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long, bool) (11 samples, 2.22%)</title><rect x="856.9" y="659.0" width="26.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="859.9" y="670.0">r..</text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.20%)</title><rect x="856.9" y="643.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="859.9" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="856.9" y="627.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="859.9" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="856.9" y="611.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="859.9" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="856.9" y="595.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="859.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.20%)</title><rect x="859.3" y="643.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="862.3" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="859.3" y="627.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="862.3" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="859.3" y="611.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="862.3" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="859.3" y="595.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="862.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Version::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, rocksdb::RangeDelAggregator*, bool) (9 samples, 1.81%)</title><rect x="861.7" y="643.0" width="21.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="864.7" y="654.0">r..</text>
</g>
<g>
<title>rocksdb::Version::AddIteratorsForLevel(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::MergeIteratorBuilder*, int, rocksdb::RangeDelAggregator*, bool) (9 samples, 1.81%)</title><rect x="861.7" y="627.0" width="21.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="864.7" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::Valid() const (2 samples, 0.40%)</title><rect x="861.7" y="611.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="864.7" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="861.7" y="595.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="864.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="861.7" y="579.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="864.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="861.7" y="563.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="864.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.20%)</title><rect x="866.5" y="611.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="869.5" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="866.5" y="595.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="866.5" y="579.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="869.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="866.5" y="563.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="869.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::AddIterator(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (3 samples, 0.60%)</title><rect x="868.8" y="611.0" width="7.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="871.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::status() const (1 samples, 0.20%)</title><rect x="868.8" y="595.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="871.8" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="868.8" y="579.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.8" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="868.8" y="563.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="871.8" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="868.8" y="547.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="871.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::AddToMinHeapOrCheckStatus(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.20%)</title><rect x="871.2" y="595.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="874.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::status() const (1 samples, 0.20%)</title><rect x="871.2" y="579.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="874.2" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="871.2" y="563.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="874.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="871.2" y="547.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.2" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="871.2" y="531.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="874.2" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="873.6" y="595.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="876.6" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="873.6" y="579.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="876.6" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="873.6" y="563.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="876.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (3 samples, 0.60%)</title><rect x="876.0" y="611.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="879.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::SliceTransform const*, rocksdb::Arena*, bool, rocksdb::TableReaderCaller, unsigned long, bool) (2 samples, 0.40%)</title><rect x="876.0" y="595.0" width="4.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="879.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateFallback(unsigned long, bool) (1 samples, 0.20%)</title><rect x="876.0" y="579.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="879.0" y="590.0"></text>
</g>
<g>
<title>malloc_usable_size (1 samples, 0.20%)</title><rect x="876.0" y="563.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="879.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::BinarySearchIndexReader::NewIterator(rocksdb::ReadOptions const&amp;, bool, rocksdb::IndexBlockIter*, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*) (1 samples, 0.20%)</title><rect x="878.3" y="579.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="881.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::Block::NewIndexIterator(rocksdb::Comparator const*, rocksdb::Comparator const*, unsigned long, rocksdb::IndexBlockIter*, rocksdb::Statistics*, bool, bool, bool, bool, bool, rocksdb::BlockPrefixIndex*) (1 samples, 0.20%)</title><rect x="878.3" y="563.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="881.3" y="574.0"></text>
</g>
<g>
<title>std::pair&lt;std::_Rb_tree_iterator&lt;unsigned long&gt;, bool&gt; std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt;(unsigned long const&amp;) (1 samples, 0.20%)</title><rect x="880.7" y="595.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="883.7" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="880.7" y="579.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="880.7" y="563.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="880.7" y="547.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="883.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::~MergeIteratorBuilder() (1 samples, 0.20%)</title><rect x="883.1" y="659.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="886.1" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="883.1" y="643.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="886.1" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="883.1" y="627.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.1" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="883.1" y="611.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="886.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (4 samples, 0.81%)</title><rect x="885.5" y="659.0" width="9.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="888.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.20%)</title><rect x="887.9" y="643.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="890.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, unsigned long, bool, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool) (1 samples, 0.20%)</title><rect x="890.2" y="643.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="893.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="890.2" y="627.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="893.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="890.2" y="611.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="890.2" y="595.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="892.6" y="643.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="895.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="892.6" y="627.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="895.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="892.6" y="611.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="895.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.20%)</title><rect x="895.0" y="675.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="898.0" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="897.4" y="691.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="900.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="897.4" y="675.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="900.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="897.4" y="659.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.4" y="670.0"></text>
</g>
<g>
<title>__libc_malloc (4 samples, 0.81%)</title><rect x="899.8" y="707.0" width="9.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="902.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="904.5" y="691.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="907.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="904.5" y="675.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="907.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="904.5" y="659.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="907.5" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="904.5" y="643.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="907.5" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.20%)</title><rect x="904.5" y="627.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="907.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.20%)</title><rect x="904.5" y="611.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.5" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.20%)</title><rect x="904.5" y="595.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.5" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="904.5" y="579.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="907.5" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="906.9" y="691.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="909.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="906.9" y="675.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="909.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="906.9" y="659.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="909.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() [clone .plt] (1 samples, 0.20%)</title><rect x="909.3" y="707.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="912.3" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (6 samples, 1.21%)</title><rect x="911.7" y="723.0" width="14.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="914.7" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (6 samples, 1.21%)</title><rect x="911.7" y="707.0" width="14.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.7" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (6 samples, 1.21%)</title><rect x="911.7" y="691.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.7" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (6 samples, 1.21%)</title><rect x="911.7" y="675.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="914.7" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (6 samples, 1.21%)</title><rect x="911.7" y="659.0" width="14.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.7" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (6 samples, 1.21%)</title><rect x="911.7" y="643.0" width="14.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="914.7" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (6 samples, 1.21%)</title><rect x="911.7" y="627.0" width="14.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="914.7" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.20%)</title><rect x="914.0" y="611.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="917.0" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.40%)</title><rect x="916.4" y="611.0" width="4.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="919.4" y="622.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.40%)</title><rect x="916.4" y="595.0" width="4.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="919.4" y="606.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.40%)</title><rect x="916.4" y="579.0" width="4.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="919.4" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="916.4" y="563.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="919.4" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="916.4" y="547.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.4" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="916.4" y="531.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="919.4" y="542.0"></text>
</g>
<g>
<title>LatestMethodCache::get_method() (2 samples, 0.40%)</title><rect x="921.2" y="611.0" width="4.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="924.2" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="923.5" y="595.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="926.5" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="923.5" y="579.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="926.5" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="923.5" y="563.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="926.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.pack (1 samples, 0.20%)</title><rect x="925.9" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="928.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.byteBufferToBytes (1 samples, 0.20%)</title><rect x="925.9" y="723.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.20%)</title><rect x="925.9" y="707.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="928.9" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.20%)</title><rect x="925.9" y="691.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="928.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 2.02%)</title><rect x="928.3" y="835.0" width="23.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="931.3" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (10 samples, 2.02%)</title><rect x="928.3" y="819.0" width="23.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.3" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 1.01%)</title><rect x="928.3" y="803.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="931.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 1.01%)</title><rect x="928.3" y="787.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="931.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 1.01%)</title><rect x="928.3" y="771.0" width="11.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.3" y="782.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.20%)</title><rect x="928.3" y="755.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="931.3" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.20%)</title><rect x="928.3" y="739.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="931.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="928.3" y="723.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="931.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="928.3" y="707.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="931.3" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="928.3" y="691.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.3" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="928.3" y="675.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="931.3" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.20%)</title><rect x="928.3" y="659.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.81%)</title><rect x="930.7" y="755.0" width="9.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="933.7" y="766.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.20%)</title><rect x="930.7" y="739.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="933.7" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="930.7" y="723.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="930.7" y="707.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="930.7" y="691.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="933.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.60%)</title><rect x="933.1" y="739.0" width="7.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="936.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.60%)</title><rect x="933.1" y="723.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.60%)</title><rect x="933.1" y="707.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.60%)</title><rect x="933.1" y="691.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.1" y="702.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.60%)</title><rect x="933.1" y="675.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="936.1" y="686.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.60%)</title><rect x="933.1" y="659.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="936.1" y="670.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.60%)</title><rect x="933.1" y="643.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.1" y="654.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.40%)</title><rect x="935.4" y="627.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.4" y="638.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.40%)</title><rect x="935.4" y="611.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="938.4" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.40%)</title><rect x="935.4" y="595.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 1.01%)</title><rect x="940.2" y="803.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 1.01%)</title><rect x="940.2" y="787.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 1.01%)</title><rect x="940.2" y="771.0" width="11.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 1.01%)</title><rect x="940.2" y="755.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="943.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 1.01%)</title><rect x="940.2" y="739.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="943.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="940.2" y="723.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="943.2" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="940.2" y="707.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="943.2" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="940.2" y="691.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="943.2" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="940.2" y="675.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="943.2" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="940.2" y="659.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="943.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.81%)</title><rect x="942.6" y="723.0" width="9.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="945.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.81%)</title><rect x="942.6" y="707.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="945.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.81%)</title><rect x="942.6" y="691.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.81%)</title><rect x="942.6" y="675.0" width="9.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="945.6" y="686.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.81%)</title><rect x="942.6" y="659.0" width="9.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.6" y="670.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.81%)</title><rect x="942.6" y="643.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="945.6" y="654.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.81%)</title><rect x="942.6" y="627.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="945.6" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.81%)</title><rect x="942.6" y="611.0" width="9.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="945.6" y="622.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.81%)</title><rect x="942.6" y="595.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.40%)</title><rect x="952.1" y="835.0" width="4.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="955.1" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.40%)</title><rect x="952.1" y="819.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="955.1" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.40%)</title><rect x="952.1" y="803.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="955.1" y="814.0"></text>
</g>
<g>
<title>[Finalizer tid=10428] (12 samples, 2.42%)</title><rect x="956.9" y="899.0" width="28.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="959.9" y="910.0">[F..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.40%)</title><rect x="956.9" y="883.0" width="4.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="959.9" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.40%)</title><rect x="956.9" y="867.0" width="4.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="959.9" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.40%)</title><rect x="956.9" y="851.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="959.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.40%)</title><rect x="956.9" y="835.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="959.9" y="846.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.20%)</title><rect x="961.6" y="883.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="964.6" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (9 samples, 1.81%)</title><rect x="964.0" y="883.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.0" y="894.0">j..</text>
</g>
<g>
<title>java/lang/ref/Finalizer.runFinalizer (8 samples, 1.61%)</title><rect x="964.0" y="867.0" width="19.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.0" y="878.0"></text>
</g>
<g>
<title>java/lang/System$2.invokeFinalize (8 samples, 1.61%)</title><rect x="964.0" y="851.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="967.0" y="862.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.finalize (8 samples, 1.61%)</title><rect x="964.0" y="835.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="967.0" y="846.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.dispose (8 samples, 1.61%)</title><rect x="964.0" y="819.0" width="19.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.0" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (8 samples, 1.61%)</title><rect x="964.0" y="803.0" width="19.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.0" y="814.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (8 samples, 1.61%)</title><rect x="964.0" y="787.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="967.0" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (8 samples, 1.61%)</title><rect x="964.0" y="771.0" width="19.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="967.0" y="782.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (1 samples, 0.20%)</title><rect x="964.0" y="755.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="967.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="966.4" y="755.0" width="2.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="969.4" y="766.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.20%)</title><rect x="966.4" y="739.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="969.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (6 samples, 1.21%)</title><rect x="968.7" y="755.0" width="14.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="971.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (6 samples, 1.21%)</title><rect x="968.7" y="739.0" width="14.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="971.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::MergingIterator::~MergingIterator() (3 samples, 0.60%)</title><rect x="975.9" y="723.0" width="7.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="978.9" y="734.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5802508841256906671.so (1 samples, 0.20%)</title><rect x="975.9" y="707.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="978.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="975.9" y="691.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="975.9" y="675.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="978.9" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="975.9" y="659.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="978.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::BlockBasedTableIterator::~BlockBasedTableIterator() (2 samples, 0.40%)</title><rect x="978.3" y="707.0" width="4.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.20%)</title><rect x="978.3" y="691.0" width="2.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="981.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.20%)</title><rect x="978.3" y="675.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="981.3" y="686.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.20%)</title><rect x="978.3" y="659.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="981.3" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="978.3" y="643.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="981.3" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="978.3" y="627.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="981.3" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="978.3" y="611.0" width="2.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (1 samples, 0.20%)</title><rect x="980.6" y="691.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="983.6" y="702.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.20%)</title><rect x="983.0" y="867.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="986.0" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.20%)</title><rect x="983.0" y="851.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="986.0" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.20%)</title><rect x="983.0" y="835.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="986.0" y="846.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=10421] (2 samples, 0.40%)</title><rect x="985.4" y="899.0" width="4.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="988.4" y="910.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.40%)</title><rect x="985.4" y="883.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="988.4" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.40%)</title><rect x="985.4" y="867.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="988.4" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.40%)</title><rect x="985.4" y="851.0" width="4.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.4" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.40%)</title><rect x="985.4" y="835.0" width="4.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="988.4" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.20%)</title><rect x="985.4" y="819.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="988.4" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="985.4" y="803.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="988.4" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.20%)</title><rect x="985.4" y="787.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="988.4" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.20%)</title><rect x="985.4" y="771.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="988.4" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.20%)</title><rect x="985.4" y="755.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="988.4" y="766.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (1 samples, 0.20%)</title><rect x="985.4" y="739.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="988.4" y="750.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.20%)</title><rect x="987.8" y="819.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="990.8" y="830.0"></text>
</g>
<g>
<title>RefProcPhase2Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.20%)</title><rect x="987.8" y="803.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="990.8" y="814.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="987.8" y="787.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="990.8" y="798.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.20%)</title><rect x="987.8" y="771.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="990.8" y="782.0"></text>
</g>
<g>
<title>[GC Thread#1 tid=10465] (2 samples, 0.40%)</title><rect x="990.2" y="899.0" width="4.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="993.2" y="910.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.40%)</title><rect x="990.2" y="883.0" width="4.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="993.2" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.40%)</title><rect x="990.2" y="867.0" width="4.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="993.2" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.40%)</title><rect x="990.2" y="851.0" width="4.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="993.2" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.40%)</title><rect x="990.2" y="835.0" width="4.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="993.2" y="846.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.20%)</title><rect x="990.2" y="819.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="993.2" y="830.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="990.2" y="803.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="993.2" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.20%)</title><rect x="990.2" y="787.0" width="2.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="993.2" y="798.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.20%)</title><rect x="992.5" y="819.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="995.5" y="830.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.20%)</title><rect x="992.5" y="803.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="995.5" y="814.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.20%)</title><rect x="992.5" y="787.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="995.5" y="798.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.20%)</title><rect x="992.5" y="771.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="995.5" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.20%)</title><rect x="992.5" y="755.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="995.5" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=10468] (39 samples, 7.86%)</title><rect x="994.9" y="899.0" width="92.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="997.9" y="910.0">[NIO Select..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="994.9" y="883.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="997.9" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.20%)</title><rect x="994.9" y="867.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="997.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="994.9" y="851.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="997.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="994.9" y="835.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="994.9" y="819.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="997.9" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="994.9" y="803.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="997.9" y="814.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.20%)</title><rect x="994.9" y="787.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.9" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.20%)</title><rect x="994.9" y="771.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="997.9" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.20%)</title><rect x="994.9" y="755.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="997.9" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.20%)</title><rect x="994.9" y="739.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="997.9" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.20%)</title><rect x="994.9" y="723.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.9" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 7.66%)</title><rect x="997.3" y="883.0" width="90.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.3" y="894.0">one/nio/se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 1.81%)</title><rect x="997.3" y="867.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.3" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 1.81%)</title><rect x="997.3" y="851.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.3" y="862.0">o..</text>
</g>
<g>
<title>epoll_wait (9 samples, 1.81%)</title><rect x="997.3" y="835.0" width="21.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1000.3" y="846.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.41%)</title><rect x="1002.1" y="819.0" width="16.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.41%)</title><rect x="1002.1" y="803.0" width="16.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 1.41%)</title><rect x="1002.1" y="787.0" width="16.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1005.1" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (7 samples, 1.41%)</title><rect x="1002.1" y="771.0" width="16.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1005.1" y="782.0"></text>
</g>
<g>
<title>ep_poll (7 samples, 1.41%)</title><rect x="1002.1" y="755.0" width="16.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.1" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.40%)</title><rect x="1002.1" y="739.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1005.1" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.40%)</title><rect x="1002.1" y="723.0" width="4.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.1" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.0 (1 samples, 0.20%)</title><rect x="1002.1" y="707.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1005.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.20%)</title><rect x="1002.1" y="691.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1005.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.20%)</title><rect x="1004.4" y="707.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1007.4" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 1.01%)</title><rect x="1006.8" y="739.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1009.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 1.01%)</title><rect x="1006.8" y="723.0" width="11.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1009.8" y="734.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.01%)</title><rect x="1006.8" y="707.0" width="11.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1009.8" y="718.0"></text>
</g>
<g>
<title>__schedule (5 samples, 1.01%)</title><rect x="1006.8" y="691.0" width="11.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1009.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.01%)</title><rect x="1006.8" y="675.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1009.8" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (29 samples, 5.85%)</title><rect x="1018.7" y="867.0" width="69.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.7" y="878.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (28 samples, 5.65%)</title><rect x="1021.1" y="851.0" width="66.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.1" y="862.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13 samples, 2.62%)</title><rect x="1021.1" y="835.0" width="30.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.1" y="846.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7 samples, 1.41%)</title><rect x="1021.1" y="819.0" width="16.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7 samples, 1.41%)</title><rect x="1021.1" y="803.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1024.1" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (7 samples, 1.41%)</title><rect x="1021.1" y="787.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1024.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.get (7 samples, 1.41%)</title><rect x="1021.1" y="771.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (7 samples, 1.41%)</title><rect x="1021.1" y="755.0" width="16.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 1.41%)</title><rect x="1021.1" y="739.0" width="16.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1024.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 1.21%)</title><rect x="1023.5" y="723.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1026.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.20%)</title><rect x="1025.8" y="707.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1028.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.20%)</title><rect x="1025.8" y="691.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1028.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.20%)</title><rect x="1025.8" y="675.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.20%)</title><rect x="1025.8" y="659.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.81%)</title><rect x="1028.2" y="707.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1031.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.81%)</title><rect x="1028.2" y="691.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1031.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.81%)</title><rect x="1028.2" y="675.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.81%)</title><rect x="1028.2" y="659.0" width="9.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1031.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.81%)</title><rect x="1028.2" y="643.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1031.2" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.81%)</title><rect x="1028.2" y="627.0" width="9.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1031.2" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.81%)</title><rect x="1028.2" y="611.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1031.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.81%)</title><rect x="1028.2" y="595.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1031.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.81%)</title><rect x="1028.2" y="579.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1031.2" y="590.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.81%)</title><rect x="1028.2" y="563.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1031.2" y="574.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.81%)</title><rect x="1028.2" y="547.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1031.2" y="558.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.81%)</title><rect x="1028.2" y="531.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1031.2" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.81%)</title><rect x="1028.2" y="515.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1031.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.81%)</title><rect x="1028.2" y="499.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1031.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.40%)</title><rect x="1037.7" y="819.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1040.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.20%)</title><rect x="1037.7" y="803.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1040.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="1037.7" y="787.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1040.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="1037.7" y="771.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1040.7" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.20%)</title><rect x="1037.7" y="755.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.20%)</title><rect x="1040.1" y="803.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1043.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.20%)</title><rect x="1042.5" y="819.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="1042.5" y="803.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.20%)</title><rect x="1042.5" y="787.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1045.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.20%)</title><rect x="1042.5" y="771.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.5" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.20%)</title><rect x="1044.9" y="819.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1044.9" y="803.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1047.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.20%)</title><rect x="1047.3" y="819.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="1047.3" y="803.0" width="2.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1050.3" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="1047.3" y="787.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1050.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="1047.3" y="771.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1050.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1049.6" y="819.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1052.6" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1049.6" y="803.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1052.6" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.20%)</title><rect x="1052.0" y="835.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1055.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 2.82%)</title><rect x="1054.4" y="835.0" width="33.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.4" y="846.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 2.42%)</title><rect x="1054.4" y="819.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.4" y="830.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.20%)</title><rect x="1054.4" y="803.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1057.4" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.20%)</title><rect x="1054.4" y="787.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.4" y="798.0"></text>
</g>
<g>
<title>__recv (11 samples, 2.22%)</title><rect x="1056.8" y="803.0" width="26.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.8" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.81%)</title><rect x="1059.2" y="787.0" width="21.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1062.2" y="798.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.81%)</title><rect x="1059.2" y="771.0" width="21.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1062.2" y="782.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (8 samples, 1.61%)</title><rect x="1061.5" y="755.0" width="19.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1064.5" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (8 samples, 1.61%)</title><rect x="1061.5" y="739.0" width="19.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.5" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (7 samples, 1.41%)</title><rect x="1061.5" y="723.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.5" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 1.41%)</title><rect x="1061.5" y="707.0" width="16.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1064.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 1.41%)</title><rect x="1061.5" y="691.0" width="16.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1064.5" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.40%)</title><rect x="1063.9" y="675.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1066.9" y="686.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.20%)</title><rect x="1063.9" y="659.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1066.9" y="670.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.20%)</title><rect x="1066.3" y="659.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1069.3" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.20%)</title><rect x="1066.3" y="643.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1069.3" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.81%)</title><rect x="1068.7" y="675.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1071.7" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.81%)</title><rect x="1068.7" y="659.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1071.7" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.20%)</title><rect x="1071.0" y="643.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1074.0" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.40%)</title><rect x="1073.4" y="643.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1076.4" y="654.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.20%)</title><rect x="1075.8" y="627.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1078.8" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.20%)</title><rect x="1078.2" y="723.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1081.2" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.20%)</title><rect x="1078.2" y="707.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1081.2" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.20%)</title><rect x="1078.2" y="691.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1081.2" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.20%)</title><rect x="1078.2" y="675.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1081.2" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="1080.6" y="787.0" width="2.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1083.6" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="1080.6" y="771.0" width="2.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1083.6" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="1080.6" y="755.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1083.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.40%)</title><rect x="1082.9" y="819.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1085.9" y="830.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=10469] (42 samples, 8.47%)</title><rect x="1087.7" y="899.0" width="99.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1090.7" y="910.0">[NIO Selecto..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.20%)</title><rect x="1087.7" y="883.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1090.7" y="894.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.20%)</title><rect x="1087.7" y="867.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1090.7" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="1087.7" y="851.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1090.7" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="1087.7" y="835.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1090.7" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="1087.7" y="819.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1090.7" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="1087.7" y="803.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1090.7" y="814.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.20%)</title><rect x="1087.7" y="787.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1090.7" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.20%)</title><rect x="1087.7" y="771.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1090.7" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.20%)</title><rect x="1087.7" y="755.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1090.7" y="766.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.20%)</title><rect x="1087.7" y="739.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1090.7" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.20%)</title><rect x="1087.7" y="723.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1090.7" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41 samples, 8.27%)</title><rect x="1090.1" y="883.0" width="97.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1093.1" y="894.0">one/nio/ser..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.20%)</title><rect x="1090.1" y="867.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.20%)</title><rect x="1090.1" y="851.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1093.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.20%)</title><rect x="1090.1" y="835.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1093.1" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.20%)</title><rect x="1090.1" y="819.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.1" y="830.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.20%)</title><rect x="1090.1" y="803.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1093.1" y="814.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.20%)</title><rect x="1090.1" y="787.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1093.1" y="798.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.20%)</title><rect x="1090.1" y="771.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1093.1" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 3.83%)</title><rect x="1092.5" y="867.0" width="45.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1095.5" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 3.83%)</title><rect x="1092.5" y="851.0" width="45.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1095.5" y="862.0">one/..</text>
</g>
<g>
<title>epoll_wait (19 samples, 3.83%)</title><rect x="1092.5" y="835.0" width="45.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1095.5" y="846.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 3.43%)</title><rect x="1094.8" y="819.0" width="40.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1097.8" y="830.0">ent..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.20%)</title><rect x="1094.8" y="803.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1097.8" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 3.23%)</title><rect x="1097.2" y="803.0" width="38.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1100.2" y="814.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (15 samples, 3.02%)</title><rect x="1099.6" y="787.0" width="35.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1102.6" y="798.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (15 samples, 3.02%)</title><rect x="1099.6" y="771.0" width="35.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1102.6" y="782.0">do_..</text>
</g>
<g>
<title>ep_poll (15 samples, 3.02%)</title><rect x="1099.6" y="755.0" width="35.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1102.6" y="766.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (1 samples, 0.20%)</title><rect x="1102.0" y="739.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1105.0" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.20%)</title><rect x="1102.0" y="723.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1105.0" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.20%)</title><rect x="1104.4" y="739.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.4" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 2.42%)</title><rect x="1106.7" y="739.0" width="28.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1109.7" y="750.0">sc..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 2.42%)</title><rect x="1106.7" y="723.0" width="28.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1109.7" y="734.0">sc..</text>
</g>
<g>
<title>schedule (12 samples, 2.42%)</title><rect x="1106.7" y="707.0" width="28.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1109.7" y="718.0">sc..</text>
</g>
<g>
<title>__schedule (11 samples, 2.22%)</title><rect x="1109.1" y="691.0" width="26.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1112.1" y="702.0">_..</text>
</g>
<g>
<title>finish_task_switch (10 samples, 2.02%)</title><rect x="1111.5" y="675.0" width="23.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1114.5" y="686.0">f..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="1135.3" y="819.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1138.3" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="1135.3" y="803.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.3" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="1135.3" y="787.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1138.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (21 samples, 4.23%)</title><rect x="1137.7" y="867.0" width="49.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1140.7" y="878.0">one/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.20%)</title><rect x="1137.7" y="851.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1140.7" y="862.0"></text>
</g>
<g>
<title>gettimeofday@plt (1 samples, 0.20%)</title><rect x="1140.0" y="851.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1143.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (18 samples, 3.63%)</title><rect x="1142.4" y="851.0" width="42.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.4" y="862.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (7 samples, 1.41%)</title><rect x="1142.4" y="835.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1145.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.60%)</title><rect x="1142.4" y="819.0" width="7.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1145.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.60%)</title><rect x="1142.4" y="803.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.4" y="814.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (3 samples, 0.60%)</title><rect x="1142.4" y="787.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1145.4" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/dariagap/AsyncServiceImpl.get (3 samples, 0.60%)</title><rect x="1142.4" y="771.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1145.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.submit (3 samples, 0.60%)</title><rect x="1142.4" y="755.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1145.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.60%)</title><rect x="1142.4" y="739.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.60%)</title><rect x="1142.4" y="723.0" width="7.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1145.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.60%)</title><rect x="1142.4" y="707.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1145.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.60%)</title><rect x="1142.4" y="691.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1145.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.40%)</title><rect x="1144.8" y="675.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1147.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.40%)</title><rect x="1144.8" y="659.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1147.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.40%)</title><rect x="1144.8" y="643.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1147.8" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.20%)</title><rect x="1144.8" y="627.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1147.8" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.20%)</title><rect x="1144.8" y="611.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1147.8" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.20%)</title><rect x="1147.2" y="627.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1150.2" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="1147.2" y="611.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1150.2" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="1147.2" y="595.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1150.2" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.20%)</title><rect x="1147.2" y="579.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1150.2" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.20%)</title><rect x="1147.2" y="563.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.2" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.20%)</title><rect x="1147.2" y="547.0" width="2.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1150.2" y="558.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.20%)</title><rect x="1147.2" y="531.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.2" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.20%)</title><rect x="1147.2" y="515.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1150.2" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="1147.2" y="499.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1150.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (3 samples, 0.60%)</title><rect x="1149.6" y="819.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1152.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.40%)</title><rect x="1149.6" y="803.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1152.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="1151.9" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1154.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.20%)</title><rect x="1151.9" y="771.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1154.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.20%)</title><rect x="1151.9" y="755.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1154.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1154.3" y="803.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.20%)</title><rect x="1154.3" y="787.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.20%)</title><rect x="1156.7" y="819.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.7" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 2.22%)</title><rect x="1159.1" y="835.0" width="26.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1162.1" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 2.22%)</title><rect x="1159.1" y="819.0" width="26.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1162.1" y="830.0">o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libc-2.31.so (1 samples, 0.20%)</title><rect x="1159.1" y="803.0" width="2.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1162.1" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.20%)</title><rect x="1159.1" y="787.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.1" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.20%)</title><rect x="1159.1" y="771.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1162.1" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.20%)</title><rect x="1159.1" y="755.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1162.1" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.20%)</title><rect x="1159.1" y="739.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1162.1" y="750.0"></text>
</g>
<g>
<title>rcu_core_si (1 samples, 0.20%)</title><rect x="1159.1" y="723.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1162.1" y="734.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.20%)</title><rect x="1159.1" y="707.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.1" y="718.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.20%)</title><rect x="1159.1" y="691.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1162.1" y="702.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.20%)</title><rect x="1159.1" y="675.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.1" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.40%)</title><rect x="1161.5" y="803.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1164.5" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.20%)</title><rect x="1161.5" y="787.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="1161.5" y="771.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1164.5" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="1161.5" y="755.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="1161.5" y="739.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1164.5" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.20%)</title><rect x="1163.8" y="787.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1166.8" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.20%)</title><rect x="1163.8" y="771.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1166.8" y="782.0"></text>
</g>
<g>
<title>__recv (8 samples, 1.61%)</title><rect x="1166.2" y="803.0" width="19.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1169.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.61%)</title><rect x="1166.2" y="787.0" width="19.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1169.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.61%)</title><rect x="1166.2" y="771.0" width="19.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 1.41%)</title><rect x="1166.2" y="755.0" width="16.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 1.41%)</title><rect x="1166.2" y="739.0" width="16.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 1.01%)</title><rect x="1166.2" y="723.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 1.01%)</title><rect x="1166.2" y="707.0" width="11.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1169.2" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 1.01%)</title><rect x="1166.2" y="691.0" width="11.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1169.2" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.20%)</title><rect x="1168.6" y="675.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1171.6" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.20%)</title><rect x="1168.6" y="659.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.6" y="670.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.20%)</title><rect x="1168.6" y="643.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1171.6" y="654.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.20%)</title><rect x="1168.6" y="627.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1171.6" y="638.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.20%)</title><rect x="1171.0" y="675.0" width="2.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1174.0" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.20%)</title><rect x="1173.3" y="675.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1176.3" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.20%)</title><rect x="1173.3" y="659.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1176.3" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.20%)</title><rect x="1173.3" y="643.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1176.3" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.20%)</title><rect x="1173.3" y="627.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1176.3" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.20%)</title><rect x="1173.3" y="611.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1176.3" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.20%)</title><rect x="1175.7" y="675.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.7" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.20%)</title><rect x="1175.7" y="659.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1178.7" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.20%)</title><rect x="1175.7" y="643.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1178.7" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.40%)</title><rect x="1178.1" y="723.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.40%)</title><rect x="1178.1" y="707.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.40%)</title><rect x="1178.1" y="691.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.40%)</title><rect x="1178.1" y="675.0" width="4.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1181.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="1182.9" y="755.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1185.9" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.20%)</title><rect x="1182.9" y="739.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1185.9" y="750.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.20%)</title><rect x="1182.9" y="723.0" width="2.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1185.9" y="734.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.20%)</title><rect x="1182.9" y="707.0" width="2.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1185.9" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.20%)</title><rect x="1185.2" y="851.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1188.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.20%)</title><rect x="1185.2" y="835.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1188.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.20%)</title><rect x="1185.2" y="819.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.2" y="830.0"></text>
</g>
<g>
<title>[Reference Handler tid=10427] (1 samples, 0.20%)</title><rect x="1187.6" y="899.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1190.6" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.20%)</title><rect x="1187.6" y="883.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.6" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1 samples, 0.20%)</title><rect x="1187.6" y="867.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.6" y="878.0"></text>
</g>
</g>
</svg>
